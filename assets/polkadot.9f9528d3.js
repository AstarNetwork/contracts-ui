var Os=Object.defineProperty,Hs=Object.defineProperties;var Us=Object.getOwnPropertyDescriptors;var Vs=Object.getOwnPropertySymbols;var Rs=Object.prototype.hasOwnProperty,Fs=Object.prototype.propertyIsEnumerable;var xs=(r,e,t)=>e in r?Os(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,Ve=(r,e)=>{for(var t in e||(e={}))Rs.call(e,t)&&xs(r,t,e[t]);if(Vs)for(var t of Vs(e))Fs.call(e,t)&&xs(r,t,e[t]);return r},Je=(r,e)=>Hs(r,Us(e));var Ae=(r,e,t)=>(xs(r,typeof e!="symbol"?e+"":e,t),t),Bs=(r,e,t)=>{if(!e.has(r))throw TypeError("Cannot "+t)};var b=(r,e,t)=>(Bs(r,e,"read from private field"),t?t.call(r):e.get(r)),_=(r,e,t)=>{if(e.has(r))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(r):e.set(r,t)},Q=(r,e,t,n)=>(Bs(r,e,"write to private field"),n?n.call(r,t):e.set(r,t),t),Ns=(r,e,t,n)=>({set _(s){Q(r,e,s,t)},get _(){return b(r,e,n)}});const ns={};var commonjsGlobal=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};function getAugmentedNamespace(r){if(r.__esModule)return r;var e=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(r).forEach(function(t){var n=Object.getOwnPropertyDescriptor(r,t);Object.defineProperty(e,t,n.get?n:{enumerable:!0,get:function(){return r[t]}})}),e}function commonjsRequire(r){throw new Error('Could not dynamically require "'+r+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}function evaluateThis$5(r){return r("return this")}const xglobal$5=typeof globalThis!="undefined"?globalThis:typeof global!="undefined"?global:typeof self!="undefined"?self:typeof window!="undefined"?window:evaluateThis$5(Function);function extractGlobal$1(r,e){return typeof xglobal$5[r]=="undefined"?e:xglobal$5[r]}class TextDecoder$2{constructor(e){}decode(e){let t="";for(let n=0;n<e.length;n++)t+=String.fromCharCode(e[n]);return t}}const TextDecoder$1=extractGlobal$1("TextDecoder",TextDecoder$2);function evaluateThis$4(r){return r("return this")}const xglobal$4=typeof globalThis!="undefined"?globalThis:typeof global!="undefined"?global:typeof self!="undefined"?self:typeof window!="undefined"?window:evaluateThis$4(Function);function extractGlobal(r,e){return typeof xglobal$4[r]=="undefined"?e:xglobal$4[r]}class TextEncoder$2{encode(e){const t=new Uint8Array(e.length);for(let n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}}const TextEncoder$1=extractGlobal("TextEncoder",TextEncoder$2);function isFunction$3(r){return typeof r=="function"}function arrayChunk(r,e){const t=Math.ceil(r.length/e);if(t===1)return[r];const n=Array(t);for(let s=0;s<t;s++){const i=s*e;n[s]=r.slice(i,i+e)}return n}function arrayFlatten(r){if(r.length===1)return r[0];let e=0;for(let s=0;s<r.length;s++)e+=r[s].length;const t=new Array(e);let n=-1;for(let s=0;s<r.length;s++){const i=r[s];for(let a=0;a<i.length;a++)t[++n]=i[a]}return t}function assert$1(r,e){if(!r)throw new Error(isFunction$3(e)?e():e)}function assertReturn(r,e){return assert$1(r!=null,e),r}function assertUnreachable(r){throw new Error(`This codepath should be unreachable. Unhandled input: ${r}`)}function evaluateThis$3(r){return r("return this")}const xglobal$3=typeof globalThis!="undefined"?globalThis:typeof global!="undefined"?global:typeof self!="undefined"?self:typeof window!="undefined"?window:evaluateThis$3(Function),BigInt$1=typeof xglobal$3.BigInt=="function"&&typeof xglobal$3.BigInt.asIntN=="function"?xglobal$3.BigInt:()=>Number.NaN,_0n$2=BigInt$1(0),_1n$2=BigInt$1(1);BigInt$1(1e6);BigInt$1(1e9);BigInt$1(Number.MAX_SAFE_INTEGER);function objectSpread(r,...e){for(let t=0;t<e.length;t++){const n=e[t];n&&Object.assign(r,n)}return r}const U8_MAX=BigInt$1(256),U16_MAX=BigInt$1(256*256);function u8aToBigInt(r,{isLe:e=!0,isNegative:t=!1}={}){if(!r||!r.length)return BigInt$1(0);const n=e?r:r.reverse(),s=new DataView(n.buffer,n.byteOffset),i=n.length%2;let a=BigInt$1(0);if(t){for(let o=n.length-2;o>=i;o-=2)a=a*U16_MAX+BigInt$1(s.getUint16(o,!0)^65535);i&&(a=a*U8_MAX+BigInt$1(s.getUint8(0)^255))}else{for(let o=n.length-2;o>=i;o-=2)a=a*U16_MAX+BigInt$1(s.getUint16(o,!0));i&&(a=a*U8_MAX+BigInt$1(s.getUint8(0)))}return t?a*-_1n$2-_1n$2:a}const REGEX_HEX_PREFIXED=/^0x[\da-fA-F]+$/,REGEX_HEX_NOPREFIX=/^[\da-fA-F]+$/;function isHex(r,e=-1,t){return typeof r=="string"&&(r==="0x"||REGEX_HEX_PREFIXED.test(r))&&(e===-1?t||r.length%2===0:r.length===2+Math.ceil(e/4))}const CHARS="0123456789abcdef",UNHEX=new Array(256);for(let r=0;r<CHARS.length;r++)UNHEX[CHARS[r].charCodeAt(0)]=r,r>9&&(UNHEX[CHARS[r].toUpperCase().charCodeAt(0)]=r);function hexToU8a(r,e=-1){if(!r||r==="0x")return new Uint8Array;let t=0;if(REGEX_HEX_PREFIXED.test(r))t=2;else if(!REGEX_HEX_NOPREFIX.test(r))throw new Error(`Expected hex value to convert, found '${r}'`);const n=(r.length-t)/2,s=Math.ceil(e===-1?n:e/8),i=new Uint8Array(s),a=s>n?s-n:0;for(let o=a;o<s;o++,t+=2)i[o]=(UNHEX[r.charCodeAt(t)]<<4)+UNHEX[r.charCodeAt(t+1)];return i}function hexToBigInt(r,e={}){return!r||r==="0x"?BigInt$1(0):u8aToBigInt(hexToU8a(r),objectSpread({isLe:!1,isNegative:!1},e))}var bn={exports:{}};(function(r){(function(e,t){function n(T,d){if(!T)throw new Error(d||"Assertion failed")}function s(T,d){T.super_=d;var g=function(){};g.prototype=d.prototype,T.prototype=new g,T.prototype.constructor=T}function i(T,d,g){if(i.isBN(T))return T;this.negative=0,this.words=null,this.length=0,this.red=null,T!==null&&((d==="le"||d==="be")&&(g=d,d=10),this._init(T||0,d||10,g||"be"))}typeof e=="object"?e.exports=i:t.BN=i,i.BN=i,i.wordSize=26;var a;try{typeof window!="undefined"&&typeof window.Buffer!="undefined"?a=window.Buffer:a=require("buffer").Buffer}catch{}i.isBN=function(d){return d instanceof i?!0:d!==null&&typeof d=="object"&&d.constructor.wordSize===i.wordSize&&Array.isArray(d.words)},i.max=function(d,g){return d.cmp(g)>0?d:g},i.min=function(d,g){return d.cmp(g)<0?d:g},i.prototype._init=function(d,g,P){if(typeof d=="number")return this._initNumber(d,g,P);if(typeof d=="object")return this._initArray(d,g,P);g==="hex"&&(g=16),n(g===(g|0)&&g>=2&&g<=36),d=d.toString().replace(/\s+/g,"");var I=0;d[0]==="-"&&(I++,this.negative=1),I<d.length&&(g===16?this._parseHex(d,I,P):(this._parseBase(d,g,I),P==="le"&&this._initArray(this.toArray(),g,P)))},i.prototype._initNumber=function(d,g,P){d<0&&(this.negative=1,d=-d),d<67108864?(this.words=[d&67108863],this.length=1):d<4503599627370496?(this.words=[d&67108863,d/67108864&67108863],this.length=2):(n(d<9007199254740992),this.words=[d&67108863,d/67108864&67108863,1],this.length=3),P==="le"&&this._initArray(this.toArray(),g,P)},i.prototype._initArray=function(d,g,P){if(n(typeof d.length=="number"),d.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(d.length/3),this.words=new Array(this.length);for(var I=0;I<this.length;I++)this.words[I]=0;var B,H,z=0;if(P==="be")for(I=d.length-1,B=0;I>=0;I-=3)H=d[I]|d[I-1]<<8|d[I-2]<<16,this.words[B]|=H<<z&67108863,this.words[B+1]=H>>>26-z&67108863,z+=24,z>=26&&(z-=26,B++);else if(P==="le")for(I=0,B=0;I<d.length;I+=3)H=d[I]|d[I+1]<<8|d[I+2]<<16,this.words[B]|=H<<z&67108863,this.words[B+1]=H>>>26-z&67108863,z+=24,z>=26&&(z-=26,B++);return this._strip()};function o(T,d){var g=T.charCodeAt(d);if(g>=48&&g<=57)return g-48;if(g>=65&&g<=70)return g-55;if(g>=97&&g<=102)return g-87;n(!1,"Invalid character in "+T)}function c(T,d,g){var P=o(T,g);return g-1>=d&&(P|=o(T,g-1)<<4),P}i.prototype._parseHex=function(d,g,P){this.length=Math.ceil((d.length-g)/6),this.words=new Array(this.length);for(var I=0;I<this.length;I++)this.words[I]=0;var B=0,H=0,z;if(P==="be")for(I=d.length-1;I>=g;I-=2)z=c(d,g,I)<<B,this.words[H]|=z&67108863,B>=18?(B-=18,H+=1,this.words[H]|=z>>>26):B+=8;else{var M=d.length-g;for(I=M%2===0?g+1:g;I<d.length;I+=2)z=c(d,g,I)<<B,this.words[H]|=z&67108863,B>=18?(B-=18,H+=1,this.words[H]|=z>>>26):B+=8}this._strip()};function h(T,d,g,P){for(var I=0,B=0,H=Math.min(T.length,g),z=d;z<H;z++){var M=T.charCodeAt(z)-48;I*=P,M>=49?B=M-49+10:M>=17?B=M-17+10:B=M,n(M>=0&&B<P,"Invalid character"),I+=B}return I}i.prototype._parseBase=function(d,g,P){this.words=[0],this.length=1;for(var I=0,B=1;B<=67108863;B*=g)I++;I--,B=B/g|0;for(var H=d.length-P,z=H%I,M=Math.min(H,H-z)+P,m=0,V=P;V<M;V+=I)m=h(d,V,V+I,g),this.imuln(B),this.words[0]+m<67108864?this.words[0]+=m:this._iaddn(m);if(z!==0){var xe=1;for(m=h(d,V,d.length,g),V=0;V<z;V++)xe*=g;this.imuln(xe),this.words[0]+m<67108864?this.words[0]+=m:this._iaddn(m)}this._strip()},i.prototype.copy=function(d){d.words=new Array(this.length);for(var g=0;g<this.length;g++)d.words[g]=this.words[g];d.length=this.length,d.negative=this.negative,d.red=this.red};function p(T,d){T.words=d.words,T.length=d.length,T.negative=d.negative,T.red=d.red}if(i.prototype._move=function(d){p(d,this)},i.prototype.clone=function(){var d=new i(null);return this.copy(d),d},i.prototype._expand=function(d){for(;this.length<d;)this.words[this.length++]=0;return this},i.prototype._strip=function(){for(;this.length>1&&this.words[this.length-1]===0;)this.length--;return this._normSign()},i.prototype._normSign=function(){return this.length===1&&this.words[0]===0&&(this.negative=0),this},typeof Symbol!="undefined"&&typeof Symbol.for=="function")try{i.prototype[Symbol.for("nodejs.util.inspect.custom")]=x}catch{i.prototype.inspect=x}else i.prototype.inspect=x;function x(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var A=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],k=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],U=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];i.prototype.toString=function(d,g){d=d||10,g=g|0||1;var P;if(d===16||d==="hex"){P="";for(var I=0,B=0,H=0;H<this.length;H++){var z=this.words[H],M=((z<<I|B)&16777215).toString(16);B=z>>>24-I&16777215,I+=2,I>=26&&(I-=26,H--),B!==0||H!==this.length-1?P=A[6-M.length]+M+P:P=M+P}for(B!==0&&(P=B.toString(16)+P);P.length%g!==0;)P="0"+P;return this.negative!==0&&(P="-"+P),P}if(d===(d|0)&&d>=2&&d<=36){var m=k[d],V=U[d];P="";var xe=this.clone();for(xe.negative=0;!xe.isZero();){var oe=xe.modrn(V).toString(d);xe=xe.idivn(V),xe.isZero()?P=oe+P:P=A[m-oe.length]+oe+P}for(this.isZero()&&(P="0"+P);P.length%g!==0;)P="0"+P;return this.negative!==0&&(P="-"+P),P}n(!1,"Base should be between 2 and 36")},i.prototype.toNumber=function(){var d=this.words[0];return this.length===2?d+=this.words[1]*67108864:this.length===3&&this.words[2]===1?d+=4503599627370496+this.words[1]*67108864:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),this.negative!==0?-d:d},i.prototype.toJSON=function(){return this.toString(16,2)},a&&(i.prototype.toBuffer=function(d,g){return this.toArrayLike(a,d,g)}),i.prototype.toArray=function(d,g){return this.toArrayLike(Array,d,g)};var D=function(d,g){return d.allocUnsafe?d.allocUnsafe(g):new d(g)};i.prototype.toArrayLike=function(d,g,P){this._strip();var I=this.byteLength(),B=P||Math.max(1,I);n(I<=B,"byte array longer than desired length"),n(B>0,"Requested array length <= 0");var H=D(d,B),z=g==="le"?"LE":"BE";return this["_toArrayLike"+z](H,I),H},i.prototype._toArrayLikeLE=function(d,g){for(var P=0,I=0,B=0,H=0;B<this.length;B++){var z=this.words[B]<<H|I;d[P++]=z&255,P<d.length&&(d[P++]=z>>8&255),P<d.length&&(d[P++]=z>>16&255),H===6?(P<d.length&&(d[P++]=z>>24&255),I=0,H=0):(I=z>>>24,H+=2)}if(P<d.length)for(d[P++]=I;P<d.length;)d[P++]=0},i.prototype._toArrayLikeBE=function(d,g){for(var P=d.length-1,I=0,B=0,H=0;B<this.length;B++){var z=this.words[B]<<H|I;d[P--]=z&255,P>=0&&(d[P--]=z>>8&255),P>=0&&(d[P--]=z>>16&255),H===6?(P>=0&&(d[P--]=z>>24&255),I=0,H=0):(I=z>>>24,H+=2)}if(P>=0)for(d[P--]=I;P>=0;)d[P--]=0},Math.clz32?i.prototype._countBits=function(d){return 32-Math.clz32(d)}:i.prototype._countBits=function(d){var g=d,P=0;return g>=4096&&(P+=13,g>>>=13),g>=64&&(P+=7,g>>>=7),g>=8&&(P+=4,g>>>=4),g>=2&&(P+=2,g>>>=2),P+g},i.prototype._zeroBits=function(d){if(d===0)return 26;var g=d,P=0;return(g&8191)===0&&(P+=13,g>>>=13),(g&127)===0&&(P+=7,g>>>=7),(g&15)===0&&(P+=4,g>>>=4),(g&3)===0&&(P+=2,g>>>=2),(g&1)===0&&P++,P},i.prototype.bitLength=function(){var d=this.words[this.length-1],g=this._countBits(d);return(this.length-1)*26+g};function F(T){for(var d=new Array(T.bitLength()),g=0;g<d.length;g++){var P=g/26|0,I=g%26;d[g]=T.words[P]>>>I&1}return d}i.prototype.zeroBits=function(){if(this.isZero())return 0;for(var d=0,g=0;g<this.length;g++){var P=this._zeroBits(this.words[g]);if(d+=P,P!==26)break}return d},i.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},i.prototype.toTwos=function(d){return this.negative!==0?this.abs().inotn(d).iaddn(1):this.clone()},i.prototype.fromTwos=function(d){return this.testn(d-1)?this.notn(d).iaddn(1).ineg():this.clone()},i.prototype.isNeg=function(){return this.negative!==0},i.prototype.neg=function(){return this.clone().ineg()},i.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},i.prototype.iuor=function(d){for(;this.length<d.length;)this.words[this.length++]=0;for(var g=0;g<d.length;g++)this.words[g]=this.words[g]|d.words[g];return this._strip()},i.prototype.ior=function(d){return n((this.negative|d.negative)===0),this.iuor(d)},i.prototype.or=function(d){return this.length>d.length?this.clone().ior(d):d.clone().ior(this)},i.prototype.uor=function(d){return this.length>d.length?this.clone().iuor(d):d.clone().iuor(this)},i.prototype.iuand=function(d){var g;this.length>d.length?g=d:g=this;for(var P=0;P<g.length;P++)this.words[P]=this.words[P]&d.words[P];return this.length=g.length,this._strip()},i.prototype.iand=function(d){return n((this.negative|d.negative)===0),this.iuand(d)},i.prototype.and=function(d){return this.length>d.length?this.clone().iand(d):d.clone().iand(this)},i.prototype.uand=function(d){return this.length>d.length?this.clone().iuand(d):d.clone().iuand(this)},i.prototype.iuxor=function(d){var g,P;this.length>d.length?(g=this,P=d):(g=d,P=this);for(var I=0;I<P.length;I++)this.words[I]=g.words[I]^P.words[I];if(this!==g)for(;I<g.length;I++)this.words[I]=g.words[I];return this.length=g.length,this._strip()},i.prototype.ixor=function(d){return n((this.negative|d.negative)===0),this.iuxor(d)},i.prototype.xor=function(d){return this.length>d.length?this.clone().ixor(d):d.clone().ixor(this)},i.prototype.uxor=function(d){return this.length>d.length?this.clone().iuxor(d):d.clone().iuxor(this)},i.prototype.inotn=function(d){n(typeof d=="number"&&d>=0);var g=Math.ceil(d/26)|0,P=d%26;this._expand(g),P>0&&g--;for(var I=0;I<g;I++)this.words[I]=~this.words[I]&67108863;return P>0&&(this.words[I]=~this.words[I]&67108863>>26-P),this._strip()},i.prototype.notn=function(d){return this.clone().inotn(d)},i.prototype.setn=function(d,g){n(typeof d=="number"&&d>=0);var P=d/26|0,I=d%26;return this._expand(P+1),g?this.words[P]=this.words[P]|1<<I:this.words[P]=this.words[P]&~(1<<I),this._strip()},i.prototype.iadd=function(d){var g;if(this.negative!==0&&d.negative===0)return this.negative=0,g=this.isub(d),this.negative^=1,this._normSign();if(this.negative===0&&d.negative!==0)return d.negative=0,g=this.isub(d),d.negative=1,g._normSign();var P,I;this.length>d.length?(P=this,I=d):(P=d,I=this);for(var B=0,H=0;H<I.length;H++)g=(P.words[H]|0)+(I.words[H]|0)+B,this.words[H]=g&67108863,B=g>>>26;for(;B!==0&&H<P.length;H++)g=(P.words[H]|0)+B,this.words[H]=g&67108863,B=g>>>26;if(this.length=P.length,B!==0)this.words[this.length]=B,this.length++;else if(P!==this)for(;H<P.length;H++)this.words[H]=P.words[H];return this},i.prototype.add=function(d){var g;return d.negative!==0&&this.negative===0?(d.negative=0,g=this.sub(d),d.negative^=1,g):d.negative===0&&this.negative!==0?(this.negative=0,g=d.sub(this),this.negative=1,g):this.length>d.length?this.clone().iadd(d):d.clone().iadd(this)},i.prototype.isub=function(d){if(d.negative!==0){d.negative=0;var g=this.iadd(d);return d.negative=1,g._normSign()}else if(this.negative!==0)return this.negative=0,this.iadd(d),this.negative=1,this._normSign();var P=this.cmp(d);if(P===0)return this.negative=0,this.length=1,this.words[0]=0,this;var I,B;P>0?(I=this,B=d):(I=d,B=this);for(var H=0,z=0;z<B.length;z++)g=(I.words[z]|0)-(B.words[z]|0)+H,H=g>>26,this.words[z]=g&67108863;for(;H!==0&&z<I.length;z++)g=(I.words[z]|0)+H,H=g>>26,this.words[z]=g&67108863;if(H===0&&z<I.length&&I!==this)for(;z<I.length;z++)this.words[z]=I.words[z];return this.length=Math.max(this.length,z),I!==this&&(this.negative=1),this._strip()},i.prototype.sub=function(d){return this.clone().isub(d)};function q(T,d,g){g.negative=d.negative^T.negative;var P=T.length+d.length|0;g.length=P,P=P-1|0;var I=T.words[0]|0,B=d.words[0]|0,H=I*B,z=H&67108863,M=H/67108864|0;g.words[0]=z;for(var m=1;m<P;m++){for(var V=M>>>26,xe=M&67108863,oe=Math.min(m,d.length-1),ve=Math.max(0,m-T.length+1);ve<=oe;ve++){var At=m-ve|0;I=T.words[At]|0,B=d.words[ve]|0,H=I*B+xe,V+=H/67108864|0,xe=H&67108863}g.words[m]=xe|0,M=V|0}return M!==0?g.words[m]=M|0:g.length--,g._strip()}var ae=function(d,g,P){var I=d.words,B=g.words,H=P.words,z=0,M,m,V,xe=I[0]|0,oe=xe&8191,ve=xe>>>13,At=I[1]|0,Ge=At&8191,Ke=At>>>13,ur=I[2]|0,dt=ur&8191,tt=ur>>>13,yn=I[3]|0,gt=yn&8191,bt=yn>>>13,ts=I[4]|0,ft=ts&8191,ht=ts>>>13,_t=I[5]|0,rt=_t&8191,pt=_t>>>13,Cr=I[6]|0,at=Cr&8191,nt=Cr>>>13,kr=I[7]|0,st=kr&8191,ot=kr>>>13,Ir=I[8]|0,mt=Ir&8191,xt=Ir>>>13,Mr=I[9]|0,ct=Mr&8191,it=Mr>>>13,$t=B[0]|0,Ye=$t&8191,Qe=$t>>>13,lr=B[1]|0,$e=lr&8191,et=lr>>>13,Vr=B[2]|0,yt=Vr&8191,vt=Vr>>>13,rs=B[3]|0,We=rs&8191,Ze=rs>>>13,Zt=B[4]|0,ut=Zt&8191,lt=Zt>>>13,gn=B[5]|0,wt=gn&8191,De=gn>>>13,xn=B[6]|0,y=xn&8191,v=xn>>>13,w=B[7]|0,u=w&8191,E=w>>>13,L=B[8]|0,R=L&8191,G=L>>>13,se=B[9]|0,ce=se&8191,ie=se>>>13;P.negative=d.negative^g.negative,P.length=19,M=Math.imul(oe,Ye),m=Math.imul(oe,Qe),m=m+Math.imul(ve,Ye)|0,V=Math.imul(ve,Qe);var Le=(z+M|0)+((m&8191)<<13)|0;z=(V+(m>>>13)|0)+(Le>>>26)|0,Le&=67108863,M=Math.imul(Ge,Ye),m=Math.imul(Ge,Qe),m=m+Math.imul(Ke,Ye)|0,V=Math.imul(Ke,Qe),M=M+Math.imul(oe,$e)|0,m=m+Math.imul(oe,et)|0,m=m+Math.imul(ve,$e)|0,V=V+Math.imul(ve,et)|0;var he=(z+M|0)+((m&8191)<<13)|0;z=(V+(m>>>13)|0)+(he>>>26)|0,he&=67108863,M=Math.imul(dt,Ye),m=Math.imul(dt,Qe),m=m+Math.imul(tt,Ye)|0,V=Math.imul(tt,Qe),M=M+Math.imul(Ge,$e)|0,m=m+Math.imul(Ge,et)|0,m=m+Math.imul(Ke,$e)|0,V=V+Math.imul(Ke,et)|0,M=M+Math.imul(oe,yt)|0,m=m+Math.imul(oe,vt)|0,m=m+Math.imul(ve,yt)|0,V=V+Math.imul(ve,vt)|0;var Se=(z+M|0)+((m&8191)<<13)|0;z=(V+(m>>>13)|0)+(Se>>>26)|0,Se&=67108863,M=Math.imul(gt,Ye),m=Math.imul(gt,Qe),m=m+Math.imul(bt,Ye)|0,V=Math.imul(bt,Qe),M=M+Math.imul(dt,$e)|0,m=m+Math.imul(dt,et)|0,m=m+Math.imul(tt,$e)|0,V=V+Math.imul(tt,et)|0,M=M+Math.imul(Ge,yt)|0,m=m+Math.imul(Ge,vt)|0,m=m+Math.imul(Ke,yt)|0,V=V+Math.imul(Ke,vt)|0,M=M+Math.imul(oe,We)|0,m=m+Math.imul(oe,Ze)|0,m=m+Math.imul(ve,We)|0,V=V+Math.imul(ve,Ze)|0;var Te=(z+M|0)+((m&8191)<<13)|0;z=(V+(m>>>13)|0)+(Te>>>26)|0,Te&=67108863,M=Math.imul(ft,Ye),m=Math.imul(ft,Qe),m=m+Math.imul(ht,Ye)|0,V=Math.imul(ht,Qe),M=M+Math.imul(gt,$e)|0,m=m+Math.imul(gt,et)|0,m=m+Math.imul(bt,$e)|0,V=V+Math.imul(bt,et)|0,M=M+Math.imul(dt,yt)|0,m=m+Math.imul(dt,vt)|0,m=m+Math.imul(tt,yt)|0,V=V+Math.imul(tt,vt)|0,M=M+Math.imul(Ge,We)|0,m=m+Math.imul(Ge,Ze)|0,m=m+Math.imul(Ke,We)|0,V=V+Math.imul(Ke,Ze)|0,M=M+Math.imul(oe,ut)|0,m=m+Math.imul(oe,lt)|0,m=m+Math.imul(ve,ut)|0,V=V+Math.imul(ve,lt)|0;var Me=(z+M|0)+((m&8191)<<13)|0;z=(V+(m>>>13)|0)+(Me>>>26)|0,Me&=67108863,M=Math.imul(rt,Ye),m=Math.imul(rt,Qe),m=m+Math.imul(pt,Ye)|0,V=Math.imul(pt,Qe),M=M+Math.imul(ft,$e)|0,m=m+Math.imul(ft,et)|0,m=m+Math.imul(ht,$e)|0,V=V+Math.imul(ht,et)|0,M=M+Math.imul(gt,yt)|0,m=m+Math.imul(gt,vt)|0,m=m+Math.imul(bt,yt)|0,V=V+Math.imul(bt,vt)|0,M=M+Math.imul(dt,We)|0,m=m+Math.imul(dt,Ze)|0,m=m+Math.imul(tt,We)|0,V=V+Math.imul(tt,Ze)|0,M=M+Math.imul(Ge,ut)|0,m=m+Math.imul(Ge,lt)|0,m=m+Math.imul(Ke,ut)|0,V=V+Math.imul(Ke,lt)|0,M=M+Math.imul(oe,wt)|0,m=m+Math.imul(oe,De)|0,m=m+Math.imul(ve,wt)|0,V=V+Math.imul(ve,De)|0;var ke=(z+M|0)+((m&8191)<<13)|0;z=(V+(m>>>13)|0)+(ke>>>26)|0,ke&=67108863,M=Math.imul(at,Ye),m=Math.imul(at,Qe),m=m+Math.imul(nt,Ye)|0,V=Math.imul(nt,Qe),M=M+Math.imul(rt,$e)|0,m=m+Math.imul(rt,et)|0,m=m+Math.imul(pt,$e)|0,V=V+Math.imul(pt,et)|0,M=M+Math.imul(ft,yt)|0,m=m+Math.imul(ft,vt)|0,m=m+Math.imul(ht,yt)|0,V=V+Math.imul(ht,vt)|0,M=M+Math.imul(gt,We)|0,m=m+Math.imul(gt,Ze)|0,m=m+Math.imul(bt,We)|0,V=V+Math.imul(bt,Ze)|0,M=M+Math.imul(dt,ut)|0,m=m+Math.imul(dt,lt)|0,m=m+Math.imul(tt,ut)|0,V=V+Math.imul(tt,lt)|0,M=M+Math.imul(Ge,wt)|0,m=m+Math.imul(Ge,De)|0,m=m+Math.imul(Ke,wt)|0,V=V+Math.imul(Ke,De)|0,M=M+Math.imul(oe,y)|0,m=m+Math.imul(oe,v)|0,m=m+Math.imul(ve,y)|0,V=V+Math.imul(ve,v)|0;var Pe=(z+M|0)+((m&8191)<<13)|0;z=(V+(m>>>13)|0)+(Pe>>>26)|0,Pe&=67108863,M=Math.imul(st,Ye),m=Math.imul(st,Qe),m=m+Math.imul(ot,Ye)|0,V=Math.imul(ot,Qe),M=M+Math.imul(at,$e)|0,m=m+Math.imul(at,et)|0,m=m+Math.imul(nt,$e)|0,V=V+Math.imul(nt,et)|0,M=M+Math.imul(rt,yt)|0,m=m+Math.imul(rt,vt)|0,m=m+Math.imul(pt,yt)|0,V=V+Math.imul(pt,vt)|0,M=M+Math.imul(ft,We)|0,m=m+Math.imul(ft,Ze)|0,m=m+Math.imul(ht,We)|0,V=V+Math.imul(ht,Ze)|0,M=M+Math.imul(gt,ut)|0,m=m+Math.imul(gt,lt)|0,m=m+Math.imul(bt,ut)|0,V=V+Math.imul(bt,lt)|0,M=M+Math.imul(dt,wt)|0,m=m+Math.imul(dt,De)|0,m=m+Math.imul(tt,wt)|0,V=V+Math.imul(tt,De)|0,M=M+Math.imul(Ge,y)|0,m=m+Math.imul(Ge,v)|0,m=m+Math.imul(Ke,y)|0,V=V+Math.imul(Ke,v)|0,M=M+Math.imul(oe,u)|0,m=m+Math.imul(oe,E)|0,m=m+Math.imul(ve,u)|0,V=V+Math.imul(ve,E)|0;var Ce=(z+M|0)+((m&8191)<<13)|0;z=(V+(m>>>13)|0)+(Ce>>>26)|0,Ce&=67108863,M=Math.imul(mt,Ye),m=Math.imul(mt,Qe),m=m+Math.imul(xt,Ye)|0,V=Math.imul(xt,Qe),M=M+Math.imul(st,$e)|0,m=m+Math.imul(st,et)|0,m=m+Math.imul(ot,$e)|0,V=V+Math.imul(ot,et)|0,M=M+Math.imul(at,yt)|0,m=m+Math.imul(at,vt)|0,m=m+Math.imul(nt,yt)|0,V=V+Math.imul(nt,vt)|0,M=M+Math.imul(rt,We)|0,m=m+Math.imul(rt,Ze)|0,m=m+Math.imul(pt,We)|0,V=V+Math.imul(pt,Ze)|0,M=M+Math.imul(ft,ut)|0,m=m+Math.imul(ft,lt)|0,m=m+Math.imul(ht,ut)|0,V=V+Math.imul(ht,lt)|0,M=M+Math.imul(gt,wt)|0,m=m+Math.imul(gt,De)|0,m=m+Math.imul(bt,wt)|0,V=V+Math.imul(bt,De)|0,M=M+Math.imul(dt,y)|0,m=m+Math.imul(dt,v)|0,m=m+Math.imul(tt,y)|0,V=V+Math.imul(tt,v)|0,M=M+Math.imul(Ge,u)|0,m=m+Math.imul(Ge,E)|0,m=m+Math.imul(Ke,u)|0,V=V+Math.imul(Ke,E)|0,M=M+Math.imul(oe,R)|0,m=m+Math.imul(oe,G)|0,m=m+Math.imul(ve,R)|0,V=V+Math.imul(ve,G)|0;var Ee=(z+M|0)+((m&8191)<<13)|0;z=(V+(m>>>13)|0)+(Ee>>>26)|0,Ee&=67108863,M=Math.imul(ct,Ye),m=Math.imul(ct,Qe),m=m+Math.imul(it,Ye)|0,V=Math.imul(it,Qe),M=M+Math.imul(mt,$e)|0,m=m+Math.imul(mt,et)|0,m=m+Math.imul(xt,$e)|0,V=V+Math.imul(xt,et)|0,M=M+Math.imul(st,yt)|0,m=m+Math.imul(st,vt)|0,m=m+Math.imul(ot,yt)|0,V=V+Math.imul(ot,vt)|0,M=M+Math.imul(at,We)|0,m=m+Math.imul(at,Ze)|0,m=m+Math.imul(nt,We)|0,V=V+Math.imul(nt,Ze)|0,M=M+Math.imul(rt,ut)|0,m=m+Math.imul(rt,lt)|0,m=m+Math.imul(pt,ut)|0,V=V+Math.imul(pt,lt)|0,M=M+Math.imul(ft,wt)|0,m=m+Math.imul(ft,De)|0,m=m+Math.imul(ht,wt)|0,V=V+Math.imul(ht,De)|0,M=M+Math.imul(gt,y)|0,m=m+Math.imul(gt,v)|0,m=m+Math.imul(bt,y)|0,V=V+Math.imul(bt,v)|0,M=M+Math.imul(dt,u)|0,m=m+Math.imul(dt,E)|0,m=m+Math.imul(tt,u)|0,V=V+Math.imul(tt,E)|0,M=M+Math.imul(Ge,R)|0,m=m+Math.imul(Ge,G)|0,m=m+Math.imul(Ke,R)|0,V=V+Math.imul(Ke,G)|0,M=M+Math.imul(oe,ce)|0,m=m+Math.imul(oe,ie)|0,m=m+Math.imul(ve,ce)|0,V=V+Math.imul(ve,ie)|0;var pe=(z+M|0)+((m&8191)<<13)|0;z=(V+(m>>>13)|0)+(pe>>>26)|0,pe&=67108863,M=Math.imul(ct,$e),m=Math.imul(ct,et),m=m+Math.imul(it,$e)|0,V=Math.imul(it,et),M=M+Math.imul(mt,yt)|0,m=m+Math.imul(mt,vt)|0,m=m+Math.imul(xt,yt)|0,V=V+Math.imul(xt,vt)|0,M=M+Math.imul(st,We)|0,m=m+Math.imul(st,Ze)|0,m=m+Math.imul(ot,We)|0,V=V+Math.imul(ot,Ze)|0,M=M+Math.imul(at,ut)|0,m=m+Math.imul(at,lt)|0,m=m+Math.imul(nt,ut)|0,V=V+Math.imul(nt,lt)|0,M=M+Math.imul(rt,wt)|0,m=m+Math.imul(rt,De)|0,m=m+Math.imul(pt,wt)|0,V=V+Math.imul(pt,De)|0,M=M+Math.imul(ft,y)|0,m=m+Math.imul(ft,v)|0,m=m+Math.imul(ht,y)|0,V=V+Math.imul(ht,v)|0,M=M+Math.imul(gt,u)|0,m=m+Math.imul(gt,E)|0,m=m+Math.imul(bt,u)|0,V=V+Math.imul(bt,E)|0,M=M+Math.imul(dt,R)|0,m=m+Math.imul(dt,G)|0,m=m+Math.imul(tt,R)|0,V=V+Math.imul(tt,G)|0,M=M+Math.imul(Ge,ce)|0,m=m+Math.imul(Ge,ie)|0,m=m+Math.imul(Ke,ce)|0,V=V+Math.imul(Ke,ie)|0;var ge=(z+M|0)+((m&8191)<<13)|0;z=(V+(m>>>13)|0)+(ge>>>26)|0,ge&=67108863,M=Math.imul(ct,yt),m=Math.imul(ct,vt),m=m+Math.imul(it,yt)|0,V=Math.imul(it,vt),M=M+Math.imul(mt,We)|0,m=m+Math.imul(mt,Ze)|0,m=m+Math.imul(xt,We)|0,V=V+Math.imul(xt,Ze)|0,M=M+Math.imul(st,ut)|0,m=m+Math.imul(st,lt)|0,m=m+Math.imul(ot,ut)|0,V=V+Math.imul(ot,lt)|0,M=M+Math.imul(at,wt)|0,m=m+Math.imul(at,De)|0,m=m+Math.imul(nt,wt)|0,V=V+Math.imul(nt,De)|0,M=M+Math.imul(rt,y)|0,m=m+Math.imul(rt,v)|0,m=m+Math.imul(pt,y)|0,V=V+Math.imul(pt,v)|0,M=M+Math.imul(ft,u)|0,m=m+Math.imul(ft,E)|0,m=m+Math.imul(ht,u)|0,V=V+Math.imul(ht,E)|0,M=M+Math.imul(gt,R)|0,m=m+Math.imul(gt,G)|0,m=m+Math.imul(bt,R)|0,V=V+Math.imul(bt,G)|0,M=M+Math.imul(dt,ce)|0,m=m+Math.imul(dt,ie)|0,m=m+Math.imul(tt,ce)|0,V=V+Math.imul(tt,ie)|0;var le=(z+M|0)+((m&8191)<<13)|0;z=(V+(m>>>13)|0)+(le>>>26)|0,le&=67108863,M=Math.imul(ct,We),m=Math.imul(ct,Ze),m=m+Math.imul(it,We)|0,V=Math.imul(it,Ze),M=M+Math.imul(mt,ut)|0,m=m+Math.imul(mt,lt)|0,m=m+Math.imul(xt,ut)|0,V=V+Math.imul(xt,lt)|0,M=M+Math.imul(st,wt)|0,m=m+Math.imul(st,De)|0,m=m+Math.imul(ot,wt)|0,V=V+Math.imul(ot,De)|0,M=M+Math.imul(at,y)|0,m=m+Math.imul(at,v)|0,m=m+Math.imul(nt,y)|0,V=V+Math.imul(nt,v)|0,M=M+Math.imul(rt,u)|0,m=m+Math.imul(rt,E)|0,m=m+Math.imul(pt,u)|0,V=V+Math.imul(pt,E)|0,M=M+Math.imul(ft,R)|0,m=m+Math.imul(ft,G)|0,m=m+Math.imul(ht,R)|0,V=V+Math.imul(ht,G)|0,M=M+Math.imul(gt,ce)|0,m=m+Math.imul(gt,ie)|0,m=m+Math.imul(bt,ce)|0,V=V+Math.imul(bt,ie)|0;var me=(z+M|0)+((m&8191)<<13)|0;z=(V+(m>>>13)|0)+(me>>>26)|0,me&=67108863,M=Math.imul(ct,ut),m=Math.imul(ct,lt),m=m+Math.imul(it,ut)|0,V=Math.imul(it,lt),M=M+Math.imul(mt,wt)|0,m=m+Math.imul(mt,De)|0,m=m+Math.imul(xt,wt)|0,V=V+Math.imul(xt,De)|0,M=M+Math.imul(st,y)|0,m=m+Math.imul(st,v)|0,m=m+Math.imul(ot,y)|0,V=V+Math.imul(ot,v)|0,M=M+Math.imul(at,u)|0,m=m+Math.imul(at,E)|0,m=m+Math.imul(nt,u)|0,V=V+Math.imul(nt,E)|0,M=M+Math.imul(rt,R)|0,m=m+Math.imul(rt,G)|0,m=m+Math.imul(pt,R)|0,V=V+Math.imul(pt,G)|0,M=M+Math.imul(ft,ce)|0,m=m+Math.imul(ft,ie)|0,m=m+Math.imul(ht,ce)|0,V=V+Math.imul(ht,ie)|0;var ye=(z+M|0)+((m&8191)<<13)|0;z=(V+(m>>>13)|0)+(ye>>>26)|0,ye&=67108863,M=Math.imul(ct,wt),m=Math.imul(ct,De),m=m+Math.imul(it,wt)|0,V=Math.imul(it,De),M=M+Math.imul(mt,y)|0,m=m+Math.imul(mt,v)|0,m=m+Math.imul(xt,y)|0,V=V+Math.imul(xt,v)|0,M=M+Math.imul(st,u)|0,m=m+Math.imul(st,E)|0,m=m+Math.imul(ot,u)|0,V=V+Math.imul(ot,E)|0,M=M+Math.imul(at,R)|0,m=m+Math.imul(at,G)|0,m=m+Math.imul(nt,R)|0,V=V+Math.imul(nt,G)|0,M=M+Math.imul(rt,ce)|0,m=m+Math.imul(rt,ie)|0,m=m+Math.imul(pt,ce)|0,V=V+Math.imul(pt,ie)|0;var ue=(z+M|0)+((m&8191)<<13)|0;z=(V+(m>>>13)|0)+(ue>>>26)|0,ue&=67108863,M=Math.imul(ct,y),m=Math.imul(ct,v),m=m+Math.imul(it,y)|0,V=Math.imul(it,v),M=M+Math.imul(mt,u)|0,m=m+Math.imul(mt,E)|0,m=m+Math.imul(xt,u)|0,V=V+Math.imul(xt,E)|0,M=M+Math.imul(st,R)|0,m=m+Math.imul(st,G)|0,m=m+Math.imul(ot,R)|0,V=V+Math.imul(ot,G)|0,M=M+Math.imul(at,ce)|0,m=m+Math.imul(at,ie)|0,m=m+Math.imul(nt,ce)|0,V=V+Math.imul(nt,ie)|0;var X=(z+M|0)+((m&8191)<<13)|0;z=(V+(m>>>13)|0)+(X>>>26)|0,X&=67108863,M=Math.imul(ct,u),m=Math.imul(ct,E),m=m+Math.imul(it,u)|0,V=Math.imul(it,E),M=M+Math.imul(mt,R)|0,m=m+Math.imul(mt,G)|0,m=m+Math.imul(xt,R)|0,V=V+Math.imul(xt,G)|0,M=M+Math.imul(st,ce)|0,m=m+Math.imul(st,ie)|0,m=m+Math.imul(ot,ce)|0,V=V+Math.imul(ot,ie)|0;var W=(z+M|0)+((m&8191)<<13)|0;z=(V+(m>>>13)|0)+(W>>>26)|0,W&=67108863,M=Math.imul(ct,R),m=Math.imul(ct,G),m=m+Math.imul(it,R)|0,V=Math.imul(it,G),M=M+Math.imul(mt,ce)|0,m=m+Math.imul(mt,ie)|0,m=m+Math.imul(xt,ce)|0,V=V+Math.imul(xt,ie)|0;var te=(z+M|0)+((m&8191)<<13)|0;z=(V+(m>>>13)|0)+(te>>>26)|0,te&=67108863,M=Math.imul(ct,ce),m=Math.imul(ct,ie),m=m+Math.imul(it,ce)|0,V=Math.imul(it,ie);var J=(z+M|0)+((m&8191)<<13)|0;return z=(V+(m>>>13)|0)+(J>>>26)|0,J&=67108863,H[0]=Le,H[1]=he,H[2]=Se,H[3]=Te,H[4]=Me,H[5]=ke,H[6]=Pe,H[7]=Ce,H[8]=Ee,H[9]=pe,H[10]=ge,H[11]=le,H[12]=me,H[13]=ye,H[14]=ue,H[15]=X,H[16]=W,H[17]=te,H[18]=J,z!==0&&(H[19]=z,P.length++),P};Math.imul||(ae=q);function Y(T,d,g){g.negative=d.negative^T.negative,g.length=T.length+d.length;for(var P=0,I=0,B=0;B<g.length-1;B++){var H=I;I=0;for(var z=P&67108863,M=Math.min(B,d.length-1),m=Math.max(0,B-T.length+1);m<=M;m++){var V=B-m,xe=T.words[V]|0,oe=d.words[m]|0,ve=xe*oe,At=ve&67108863;H=H+(ve/67108864|0)|0,At=At+z|0,z=At&67108863,H=H+(At>>>26)|0,I+=H>>>26,H&=67108863}g.words[B]=z,P=H,H=I}return P!==0?g.words[B]=P:g.length--,g._strip()}function de(T,d,g){return Y(T,d,g)}i.prototype.mulTo=function(d,g){var P,I=this.length+d.length;return this.length===10&&d.length===10?P=ae(this,d,g):I<63?P=q(this,d,g):I<1024?P=Y(this,d,g):P=de(this,d,g),P},i.prototype.mul=function(d){var g=new i(null);return g.words=new Array(this.length+d.length),this.mulTo(d,g)},i.prototype.mulf=function(d){var g=new i(null);return g.words=new Array(this.length+d.length),de(this,d,g)},i.prototype.imul=function(d){return this.clone().mulTo(d,this)},i.prototype.imuln=function(d){var g=d<0;g&&(d=-d),n(typeof d=="number"),n(d<67108864);for(var P=0,I=0;I<this.length;I++){var B=(this.words[I]|0)*d,H=(B&67108863)+(P&67108863);P>>=26,P+=B/67108864|0,P+=H>>>26,this.words[I]=H&67108863}return P!==0&&(this.words[I]=P,this.length++),g?this.ineg():this},i.prototype.muln=function(d){return this.clone().imuln(d)},i.prototype.sqr=function(){return this.mul(this)},i.prototype.isqr=function(){return this.imul(this.clone())},i.prototype.pow=function(d){var g=F(d);if(g.length===0)return new i(1);for(var P=this,I=0;I<g.length&&g[I]===0;I++,P=P.sqr());if(++I<g.length)for(var B=P.sqr();I<g.length;I++,B=B.sqr())g[I]!==0&&(P=P.mul(B));return P},i.prototype.iushln=function(d){n(typeof d=="number"&&d>=0);var g=d%26,P=(d-g)/26,I=67108863>>>26-g<<26-g,B;if(g!==0){var H=0;for(B=0;B<this.length;B++){var z=this.words[B]&I,M=(this.words[B]|0)-z<<g;this.words[B]=M|H,H=z>>>26-g}H&&(this.words[B]=H,this.length++)}if(P!==0){for(B=this.length-1;B>=0;B--)this.words[B+P]=this.words[B];for(B=0;B<P;B++)this.words[B]=0;this.length+=P}return this._strip()},i.prototype.ishln=function(d){return n(this.negative===0),this.iushln(d)},i.prototype.iushrn=function(d,g,P){n(typeof d=="number"&&d>=0);var I;g?I=(g-g%26)/26:I=0;var B=d%26,H=Math.min((d-B)/26,this.length),z=67108863^67108863>>>B<<B,M=P;if(I-=H,I=Math.max(0,I),M){for(var m=0;m<H;m++)M.words[m]=this.words[m];M.length=H}if(H!==0)if(this.length>H)for(this.length-=H,m=0;m<this.length;m++)this.words[m]=this.words[m+H];else this.words[0]=0,this.length=1;var V=0;for(m=this.length-1;m>=0&&(V!==0||m>=I);m--){var xe=this.words[m]|0;this.words[m]=V<<26-B|xe>>>B,V=xe&z}return M&&V!==0&&(M.words[M.length++]=V),this.length===0&&(this.words[0]=0,this.length=1),this._strip()},i.prototype.ishrn=function(d,g,P){return n(this.negative===0),this.iushrn(d,g,P)},i.prototype.shln=function(d){return this.clone().ishln(d)},i.prototype.ushln=function(d){return this.clone().iushln(d)},i.prototype.shrn=function(d){return this.clone().ishrn(d)},i.prototype.ushrn=function(d){return this.clone().iushrn(d)},i.prototype.testn=function(d){n(typeof d=="number"&&d>=0);var g=d%26,P=(d-g)/26,I=1<<g;if(this.length<=P)return!1;var B=this.words[P];return!!(B&I)},i.prototype.imaskn=function(d){n(typeof d=="number"&&d>=0);var g=d%26,P=(d-g)/26;if(n(this.negative===0,"imaskn works only with positive numbers"),this.length<=P)return this;if(g!==0&&P++,this.length=Math.min(P,this.length),g!==0){var I=67108863^67108863>>>g<<g;this.words[this.length-1]&=I}return this._strip()},i.prototype.maskn=function(d){return this.clone().imaskn(d)},i.prototype.iaddn=function(d){return n(typeof d=="number"),n(d<67108864),d<0?this.isubn(-d):this.negative!==0?this.length===1&&(this.words[0]|0)<=d?(this.words[0]=d-(this.words[0]|0),this.negative=0,this):(this.negative=0,this.isubn(d),this.negative=1,this):this._iaddn(d)},i.prototype._iaddn=function(d){this.words[0]+=d;for(var g=0;g<this.length&&this.words[g]>=67108864;g++)this.words[g]-=67108864,g===this.length-1?this.words[g+1]=1:this.words[g+1]++;return this.length=Math.max(this.length,g+1),this},i.prototype.isubn=function(d){if(n(typeof d=="number"),n(d<67108864),d<0)return this.iaddn(-d);if(this.negative!==0)return this.negative=0,this.iaddn(d),this.negative=1,this;if(this.words[0]-=d,this.length===1&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var g=0;g<this.length&&this.words[g]<0;g++)this.words[g]+=67108864,this.words[g+1]-=1;return this._strip()},i.prototype.addn=function(d){return this.clone().iaddn(d)},i.prototype.subn=function(d){return this.clone().isubn(d)},i.prototype.iabs=function(){return this.negative=0,this},i.prototype.abs=function(){return this.clone().iabs()},i.prototype._ishlnsubmul=function(d,g,P){var I=d.length+P,B;this._expand(I);var H,z=0;for(B=0;B<d.length;B++){H=(this.words[B+P]|0)+z;var M=(d.words[B]|0)*g;H-=M&67108863,z=(H>>26)-(M/67108864|0),this.words[B+P]=H&67108863}for(;B<this.length-P;B++)H=(this.words[B+P]|0)+z,z=H>>26,this.words[B+P]=H&67108863;if(z===0)return this._strip();for(n(z===-1),z=0,B=0;B<this.length;B++)H=-(this.words[B]|0)+z,z=H>>26,this.words[B]=H&67108863;return this.negative=1,this._strip()},i.prototype._wordDiv=function(d,g){var P=this.length-d.length,I=this.clone(),B=d,H=B.words[B.length-1]|0,z=this._countBits(H);P=26-z,P!==0&&(B=B.ushln(P),I.iushln(P),H=B.words[B.length-1]|0);var M=I.length-B.length,m;if(g!=="mod"){m=new i(null),m.length=M+1,m.words=new Array(m.length);for(var V=0;V<m.length;V++)m.words[V]=0}var xe=I.clone()._ishlnsubmul(B,1,M);xe.negative===0&&(I=xe,m&&(m.words[M]=1));for(var oe=M-1;oe>=0;oe--){var ve=(I.words[B.length+oe]|0)*67108864+(I.words[B.length+oe-1]|0);for(ve=Math.min(ve/H|0,67108863),I._ishlnsubmul(B,ve,oe);I.negative!==0;)ve--,I.negative=0,I._ishlnsubmul(B,1,oe),I.isZero()||(I.negative^=1);m&&(m.words[oe]=ve)}return m&&m._strip(),I._strip(),g!=="div"&&P!==0&&I.iushrn(P),{div:m||null,mod:I}},i.prototype.divmod=function(d,g,P){if(n(!d.isZero()),this.isZero())return{div:new i(0),mod:new i(0)};var I,B,H;return this.negative!==0&&d.negative===0?(H=this.neg().divmod(d,g),g!=="mod"&&(I=H.div.neg()),g!=="div"&&(B=H.mod.neg(),P&&B.negative!==0&&B.iadd(d)),{div:I,mod:B}):this.negative===0&&d.negative!==0?(H=this.divmod(d.neg(),g),g!=="mod"&&(I=H.div.neg()),{div:I,mod:H.mod}):(this.negative&d.negative)!==0?(H=this.neg().divmod(d.neg(),g),g!=="div"&&(B=H.mod.neg(),P&&B.negative!==0&&B.isub(d)),{div:H.div,mod:B}):d.length>this.length||this.cmp(d)<0?{div:new i(0),mod:this}:d.length===1?g==="div"?{div:this.divn(d.words[0]),mod:null}:g==="mod"?{div:null,mod:new i(this.modrn(d.words[0]))}:{div:this.divn(d.words[0]),mod:new i(this.modrn(d.words[0]))}:this._wordDiv(d,g)},i.prototype.div=function(d){return this.divmod(d,"div",!1).div},i.prototype.mod=function(d){return this.divmod(d,"mod",!1).mod},i.prototype.umod=function(d){return this.divmod(d,"mod",!0).mod},i.prototype.divRound=function(d){var g=this.divmod(d);if(g.mod.isZero())return g.div;var P=g.div.negative!==0?g.mod.isub(d):g.mod,I=d.ushrn(1),B=d.andln(1),H=P.cmp(I);return H<0||B===1&&H===0?g.div:g.div.negative!==0?g.div.isubn(1):g.div.iaddn(1)},i.prototype.modrn=function(d){var g=d<0;g&&(d=-d),n(d<=67108863);for(var P=(1<<26)%d,I=0,B=this.length-1;B>=0;B--)I=(P*I+(this.words[B]|0))%d;return g?-I:I},i.prototype.modn=function(d){return this.modrn(d)},i.prototype.idivn=function(d){var g=d<0;g&&(d=-d),n(d<=67108863);for(var P=0,I=this.length-1;I>=0;I--){var B=(this.words[I]|0)+P*67108864;this.words[I]=B/d|0,P=B%d}return this._strip(),g?this.ineg():this},i.prototype.divn=function(d){return this.clone().idivn(d)},i.prototype.egcd=function(d){n(d.negative===0),n(!d.isZero());var g=this,P=d.clone();g.negative!==0?g=g.umod(d):g=g.clone();for(var I=new i(1),B=new i(0),H=new i(0),z=new i(1),M=0;g.isEven()&&P.isEven();)g.iushrn(1),P.iushrn(1),++M;for(var m=P.clone(),V=g.clone();!g.isZero();){for(var xe=0,oe=1;(g.words[0]&oe)===0&&xe<26;++xe,oe<<=1);if(xe>0)for(g.iushrn(xe);xe-- >0;)(I.isOdd()||B.isOdd())&&(I.iadd(m),B.isub(V)),I.iushrn(1),B.iushrn(1);for(var ve=0,At=1;(P.words[0]&At)===0&&ve<26;++ve,At<<=1);if(ve>0)for(P.iushrn(ve);ve-- >0;)(H.isOdd()||z.isOdd())&&(H.iadd(m),z.isub(V)),H.iushrn(1),z.iushrn(1);g.cmp(P)>=0?(g.isub(P),I.isub(H),B.isub(z)):(P.isub(g),H.isub(I),z.isub(B))}return{a:H,b:z,gcd:P.iushln(M)}},i.prototype._invmp=function(d){n(d.negative===0),n(!d.isZero());var g=this,P=d.clone();g.negative!==0?g=g.umod(d):g=g.clone();for(var I=new i(1),B=new i(0),H=P.clone();g.cmpn(1)>0&&P.cmpn(1)>0;){for(var z=0,M=1;(g.words[0]&M)===0&&z<26;++z,M<<=1);if(z>0)for(g.iushrn(z);z-- >0;)I.isOdd()&&I.iadd(H),I.iushrn(1);for(var m=0,V=1;(P.words[0]&V)===0&&m<26;++m,V<<=1);if(m>0)for(P.iushrn(m);m-- >0;)B.isOdd()&&B.iadd(H),B.iushrn(1);g.cmp(P)>=0?(g.isub(P),I.isub(B)):(P.isub(g),B.isub(I))}var xe;return g.cmpn(1)===0?xe=I:xe=B,xe.cmpn(0)<0&&xe.iadd(d),xe},i.prototype.gcd=function(d){if(this.isZero())return d.abs();if(d.isZero())return this.abs();var g=this.clone(),P=d.clone();g.negative=0,P.negative=0;for(var I=0;g.isEven()&&P.isEven();I++)g.iushrn(1),P.iushrn(1);do{for(;g.isEven();)g.iushrn(1);for(;P.isEven();)P.iushrn(1);var B=g.cmp(P);if(B<0){var H=g;g=P,P=H}else if(B===0||P.cmpn(1)===0)break;g.isub(P)}while(!0);return P.iushln(I)},i.prototype.invm=function(d){return this.egcd(d).a.umod(d)},i.prototype.isEven=function(){return(this.words[0]&1)===0},i.prototype.isOdd=function(){return(this.words[0]&1)===1},i.prototype.andln=function(d){return this.words[0]&d},i.prototype.bincn=function(d){n(typeof d=="number");var g=d%26,P=(d-g)/26,I=1<<g;if(this.length<=P)return this._expand(P+1),this.words[P]|=I,this;for(var B=I,H=P;B!==0&&H<this.length;H++){var z=this.words[H]|0;z+=B,B=z>>>26,z&=67108863,this.words[H]=z}return B!==0&&(this.words[H]=B,this.length++),this},i.prototype.isZero=function(){return this.length===1&&this.words[0]===0},i.prototype.cmpn=function(d){var g=d<0;if(this.negative!==0&&!g)return-1;if(this.negative===0&&g)return 1;this._strip();var P;if(this.length>1)P=1;else{g&&(d=-d),n(d<=67108863,"Number is too big");var I=this.words[0]|0;P=I===d?0:I<d?-1:1}return this.negative!==0?-P|0:P},i.prototype.cmp=function(d){if(this.negative!==0&&d.negative===0)return-1;if(this.negative===0&&d.negative!==0)return 1;var g=this.ucmp(d);return this.negative!==0?-g|0:g},i.prototype.ucmp=function(d){if(this.length>d.length)return 1;if(this.length<d.length)return-1;for(var g=0,P=this.length-1;P>=0;P--){var I=this.words[P]|0,B=d.words[P]|0;if(I!==B){I<B?g=-1:I>B&&(g=1);break}}return g},i.prototype.gtn=function(d){return this.cmpn(d)===1},i.prototype.gt=function(d){return this.cmp(d)===1},i.prototype.gten=function(d){return this.cmpn(d)>=0},i.prototype.gte=function(d){return this.cmp(d)>=0},i.prototype.ltn=function(d){return this.cmpn(d)===-1},i.prototype.lt=function(d){return this.cmp(d)===-1},i.prototype.lten=function(d){return this.cmpn(d)<=0},i.prototype.lte=function(d){return this.cmp(d)<=0},i.prototype.eqn=function(d){return this.cmpn(d)===0},i.prototype.eq=function(d){return this.cmp(d)===0},i.red=function(d){return new ee(d)},i.prototype.toRed=function(d){return n(!this.red,"Already a number in reduction context"),n(this.negative===0,"red works only with positives"),d.convertTo(this)._forceRed(d)},i.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},i.prototype._forceRed=function(d){return this.red=d,this},i.prototype.forceRed=function(d){return n(!this.red,"Already a number in reduction context"),this._forceRed(d)},i.prototype.redAdd=function(d){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,d)},i.prototype.redIAdd=function(d){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,d)},i.prototype.redSub=function(d){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,d)},i.prototype.redISub=function(d){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,d)},i.prototype.redShl=function(d){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,d)},i.prototype.redMul=function(d){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,d),this.red.mul(this,d)},i.prototype.redIMul=function(d){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,d),this.red.imul(this,d)},i.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},i.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},i.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},i.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},i.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},i.prototype.redPow=function(d){return n(this.red&&!d.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,d)};var fe={k256:null,p224:null,p192:null,p25519:null};function be(T,d){this.name=T,this.p=new i(d,16),this.n=this.p.bitLength(),this.k=new i(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}be.prototype._tmp=function(){var d=new i(null);return d.words=new Array(Math.ceil(this.n/13)),d},be.prototype.ireduce=function(d){var g=d,P;do this.split(g,this.tmp),g=this.imulK(g),g=g.iadd(this.tmp),P=g.bitLength();while(P>this.n);var I=P<this.n?-1:g.ucmp(this.p);return I===0?(g.words[0]=0,g.length=1):I>0?g.isub(this.p):g.strip!==void 0?g.strip():g._strip(),g},be.prototype.split=function(d,g){d.iushrn(this.n,0,g)},be.prototype.imulK=function(d){return d.imul(this.k)};function Ie(){be.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}s(Ie,be),Ie.prototype.split=function(d,g){for(var P=4194303,I=Math.min(d.length,9),B=0;B<I;B++)g.words[B]=d.words[B];if(g.length=I,d.length<=9){d.words[0]=0,d.length=1;return}var H=d.words[9];for(g.words[g.length++]=H&P,B=10;B<d.length;B++){var z=d.words[B]|0;d.words[B-10]=(z&P)<<4|H>>>22,H=z}H>>>=22,d.words[B-10]=H,H===0&&d.length>10?d.length-=10:d.length-=9},Ie.prototype.imulK=function(d){d.words[d.length]=0,d.words[d.length+1]=0,d.length+=2;for(var g=0,P=0;P<d.length;P++){var I=d.words[P]|0;g+=I*977,d.words[P]=g&67108863,g=I*64+(g/67108864|0)}return d.words[d.length-1]===0&&(d.length--,d.words[d.length-1]===0&&d.length--),d};function Be(){be.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}s(Be,be);function Ue(){be.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}s(Ue,be);function re(){be.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}s(re,be),re.prototype.imulK=function(d){for(var g=0,P=0;P<d.length;P++){var I=(d.words[P]|0)*19+g,B=I&67108863;I>>>=26,d.words[P]=B,g=I}return g!==0&&(d.words[d.length++]=g),d},i._prime=function(d){if(fe[d])return fe[d];var g;if(d==="k256")g=new Ie;else if(d==="p224")g=new Be;else if(d==="p192")g=new Ue;else if(d==="p25519")g=new re;else throw new Error("Unknown prime "+d);return fe[d]=g,g};function ee(T){if(typeof T=="string"){var d=i._prime(T);this.m=d.p,this.prime=d}else n(T.gtn(1),"modulus must be greater than 1"),this.m=T,this.prime=null}ee.prototype._verify1=function(d){n(d.negative===0,"red works only with positives"),n(d.red,"red works only with red numbers")},ee.prototype._verify2=function(d,g){n((d.negative|g.negative)===0,"red works only with positives"),n(d.red&&d.red===g.red,"red works only with red numbers")},ee.prototype.imod=function(d){return this.prime?this.prime.ireduce(d)._forceRed(this):(p(d,d.umod(this.m)._forceRed(this)),d)},ee.prototype.neg=function(d){return d.isZero()?d.clone():this.m.sub(d)._forceRed(this)},ee.prototype.add=function(d,g){this._verify2(d,g);var P=d.add(g);return P.cmp(this.m)>=0&&P.isub(this.m),P._forceRed(this)},ee.prototype.iadd=function(d,g){this._verify2(d,g);var P=d.iadd(g);return P.cmp(this.m)>=0&&P.isub(this.m),P},ee.prototype.sub=function(d,g){this._verify2(d,g);var P=d.sub(g);return P.cmpn(0)<0&&P.iadd(this.m),P._forceRed(this)},ee.prototype.isub=function(d,g){this._verify2(d,g);var P=d.isub(g);return P.cmpn(0)<0&&P.iadd(this.m),P},ee.prototype.shl=function(d,g){return this._verify1(d),this.imod(d.ushln(g))},ee.prototype.imul=function(d,g){return this._verify2(d,g),this.imod(d.imul(g))},ee.prototype.mul=function(d,g){return this._verify2(d,g),this.imod(d.mul(g))},ee.prototype.isqr=function(d){return this.imul(d,d.clone())},ee.prototype.sqr=function(d){return this.mul(d,d)},ee.prototype.sqrt=function(d){if(d.isZero())return d.clone();var g=this.m.andln(3);if(n(g%2===1),g===3){var P=this.m.add(new i(1)).iushrn(2);return this.pow(d,P)}for(var I=this.m.subn(1),B=0;!I.isZero()&&I.andln(1)===0;)B++,I.iushrn(1);n(!I.isZero());var H=new i(1).toRed(this),z=H.redNeg(),M=this.m.subn(1).iushrn(1),m=this.m.bitLength();for(m=new i(2*m*m).toRed(this);this.pow(m,M).cmp(z)!==0;)m.redIAdd(z);for(var V=this.pow(m,I),xe=this.pow(d,I.addn(1).iushrn(1)),oe=this.pow(d,I),ve=B;oe.cmp(H)!==0;){for(var At=oe,Ge=0;At.cmp(H)!==0;Ge++)At=At.redSqr();n(Ge<ve);var Ke=this.pow(V,new i(1).iushln(ve-Ge-1));xe=xe.redMul(Ke),V=Ke.redSqr(),oe=oe.redMul(V),ve=Ge}return xe},ee.prototype.invm=function(d){var g=d._invmp(this.m);return g.negative!==0?(g.negative=0,this.imod(g).redNeg()):this.imod(g)},ee.prototype.pow=function(d,g){if(g.isZero())return new i(1).toRed(this);if(g.cmpn(1)===0)return d.clone();var P=4,I=new Array(1<<P);I[0]=new i(1).toRed(this),I[1]=d;for(var B=2;B<I.length;B++)I[B]=this.mul(I[B-1],d);var H=I[0],z=0,M=0,m=g.bitLength()%26;for(m===0&&(m=26),B=g.length-1;B>=0;B--){for(var V=g.words[B],xe=m-1;xe>=0;xe--){var oe=V>>xe&1;if(H!==I[0]&&(H=this.sqr(H)),oe===0&&z===0){M=0;continue}z<<=1,z|=oe,M++,!(M!==P&&(B!==0||xe!==0))&&(H=this.mul(H,I[z]),M=0,z=0)}m=26}return H},ee.prototype.convertTo=function(d){var g=d.umod(this.m);return g===d?g.clone():g},ee.prototype.convertFrom=function(d){var g=d.clone();return g.red=null,g},i.mont=function(d){return new K(d)};function K(T){ee.call(this,T),this.shift=this.m.bitLength(),this.shift%26!==0&&(this.shift+=26-this.shift%26),this.r=new i(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}s(K,ee),K.prototype.convertTo=function(d){return this.imod(d.ushln(this.shift))},K.prototype.convertFrom=function(d){var g=this.imod(d.mul(this.rinv));return g.red=null,g},K.prototype.imul=function(d,g){if(d.isZero()||g.isZero())return d.words[0]=0,d.length=1,d;var P=d.imul(g),I=P.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),B=P.isub(I).iushrn(this.shift),H=B;return B.cmp(this.m)>=0?H=B.isub(this.m):B.cmpn(0)<0&&(H=B.iadd(this.m)),H._forceRed(this)},K.prototype.mul=function(d,g){if(d.isZero()||g.isZero())return new i(0)._forceRed(this);var P=d.mul(g),I=P.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),B=P.isub(I).iushrn(this.shift),H=B;return B.cmp(this.m)>=0?H=B.isub(this.m):B.cmpn(0)<0&&(H=B.iadd(this.m)),H._forceRed(this)},K.prototype.invm=function(d){var g=this.imod(d._invmp(this.m).mul(this.r2));return g._forceRed(this)}})(r,commonjsGlobal)})(bn);var BN=bn.exports;function isBn(r){return BN.isBN(r)}function isObject$2(r){return!!r&&typeof r=="object"}function isOn(...r){return e=>(isObject$2(e)||isFunction$3(e))&&r.every(t=>isFunction$3(e[t]))}function isOnObject(...r){return e=>isObject$2(e)&&r.every(t=>isFunction$3(e[t]))}const isToBigInt=isOn("toBigInt"),isToBn=isOn("toBn");function nToBigInt(r){return typeof r=="bigint"?r:r?isHex(r)?hexToBigInt(r.toString()):isBn(r)?BigInt$1(r.toString()):isToBigInt(r)?r.toBigInt():isToBn(r)?BigInt$1(r.toBn().toString()):BigInt$1(r):BigInt$1(0)}function createCmp(r){return(...e)=>{if(e.length===0)throw new Error("Must provide one or more arguments");let t=e[0];for(let n=1;n<e.length;n++)r(e[n],t)&&(t=e[n]);return t}}const hasBigInt=typeof BigInt$1=="function"&&typeof BigInt$1.asIntN=="function",hasBuffer=typeof Buffer!="undefined",hasProcess=typeof process=="object";function isBuffer(r){return hasBuffer&&isFunction$3(r&&r.readDoubleLE)&&Buffer.isBuffer(r)}function isU8a(r){return(r&&r.constructor)===Uint8Array||r instanceof Uint8Array}const encoder=new TextEncoder$1;function stringToU8a(r){return r?encoder.encode(r.toString()):new Uint8Array}function u8aToU8a(r){return isU8a(r)?r:isHex(r)?hexToU8a(r):isBuffer(r)||Array.isArray(r)?new Uint8Array(r):stringToU8a(r)}function u8aCmp(r,e){const t=u8aToU8a(r),n=u8aToU8a(e);let s=0;for(;;){const i=s>=t.length,a=s>=n.length;if(i&&a)return 0;if(i)return-1;if(a)return 1;if(t[s]!==n[s])return t[s]>n[s]?1:-1;s++}}function u8aConcat(...r){const e=new Array(r.length);let t=0;for(let n=0;n<r.length;n++)e[n]=u8aToU8a(r[n]),t+=e[n].length;return u8aConcatStrict(e,t)}function u8aConcatStrict(r,e=0){let t=0;if(!e)for(let s=0;s<r.length;s++)e+=r[s].length;const n=new Uint8Array(e);for(let s=0;s<r.length;s++)n.set(r[s],t),t+=r[s].length;return n}function u8aEmpty(r){const e=r.length;for(let t=0;t<e;t++)if(r[t])return!1;return!0}function u8aEq(r,e){const t=u8aToU8a(r),n=u8aToU8a(e);if(t.length===n.length){const s=new DataView(t.buffer,t.byteOffset),i=new DataView(n.buffer,n.byteOffset),a=t.length%4,o=t.length-a;for(let c=0;c<o;c+=4)if(s.getUint32(c)!==i.getUint32(c))return!1;for(let c=o;c<t.length;c++)if(t[c]!==n[c])return!1;return!0}return!1}function u8aFixLength(r,e=-1,t=!1){const n=Math.ceil(e/8);if(e===-1||r.length===n)return r;if(r.length>n)return r.subarray(0,n);const s=new Uint8Array(n);return s.set(r,t?0:n-r.length),s}function u8aToFloat(r,{bitLength:e=32,isLe:t=!0}={}){if(e!==32&&e!==64)throw new Error("Invalid bitLength provided, expected 32 or 64");if(r.length<e/8)throw new Error(`Invalid input buffer provided, expected at least ${e/8} bytes, found ${r.length}`);const n=new DataView(r.buffer,r.byteOffset);return e===32?n.getFloat32(0,t):n.getFloat64(0,t)}function u8aSorted(r){return r.sort(u8aCmp)}function isBoolean(r){return typeof r=="boolean"}function u8aToBn(r,e={}){const{isLe:t=!0,isNegative:n=!1}=isBoolean(e)?{isLe:e}:e,s=r.length;if(s<=6)if(n){let i=0;if(t)switch(s){case 0:return new BN(0);case 1:i=r[0]^255;break;case 2:i=r[0]+(r[1]<<8)^65535;break;case 3:i=r[0]+(r[1]<<8)+(r[2]<<16)^16777215;break;case 4:i=r[0]+(r[1]<<8)+(r[2]<<16)+r[3]*16777216^4294967295;break;case 5:i=(r[0]+(r[1]<<8)+(r[2]<<16)+r[3]*16777216^4294967295)+(r[4]^255)*4294967296;break;default:i=(r[0]+(r[1]<<8)+(r[2]<<16)+r[3]*16777216^4294967295)+(r[4]+(r[5]<<8)^65535)*4294967296;break}else for(let a=0;a<s;a++)i=i*256+(r[a]^255);return s?new BN(i*-1-1):new BN(0)}else if(t)switch(s){case 0:return new BN(0);case 1:return new BN(r[0]);case 2:return new BN(r[0]+(r[1]<<8));case 3:return new BN(r[0]+(r[1]<<8)+(r[2]<<16));case 4:return new BN(r[0]+(r[1]<<8)+(r[2]<<16)+r[3]*16777216);case 5:return new BN(r[0]+(r[1]<<8)+(r[2]<<16)+(r[3]+(r[4]<<8))*16777216);default:return new BN(r[0]+(r[1]<<8)+(r[2]<<16)+(r[3]+(r[4]<<8)+(r[5]<<16))*16777216)}else{let i=0;for(let a=0;a<s;a++)i=i*256+r[a];return new BN(i)}return n?new BN(r,t?"le":"be").fromTwos(r.length*8):new BN(r,t?"le":"be")}const U8=new Array(256),U16=new Array(256*256);for(let r=0;r<256;r++)U8[r]=r.toString(16).padStart(2,"0");for(let r=0;r<256;r++){const e=r<<8;for(let t=0;t<256;t++)U16[e|t]=U8[r]+U8[t]}function hex$1(r){const e=r.length%2,t=r.length-e,n=new DataView(r.buffer,r.byteOffset);let s="";for(let i=0;i<t;i+=2)s+=U16[n.getUint16(i)];return e&&(s+=U8[n.getUint8(t)]),s}function u8aToHex(r,e=-1,t=!0){const n=Math.ceil(e/8);return`${t?"0x":""}${!r||!r.length?"":e>0&&r.length>n?`${hex$1(r.subarray(0,n/2))}\u2026${hex$1(r.subarray(r.length-n/2))}`:hex$1(r)}`}function u8aToNumber(r,{isNegative:e=!1}={}){const t=r.length;if(e){let n=0;switch(t){case 0:return 0;case 1:n=r[0]^255;break;case 2:n=r[0]+(r[1]<<8)^65535;break;case 3:n=r[0]+(r[1]<<8)+(r[2]<<16)^16777215;break;case 4:n=r[0]+(r[1]<<8)+(r[2]<<16)+r[3]*16777216^4294967295;break;case 5:n=(r[0]+(r[1]<<8)+(r[2]<<16)+r[3]*16777216^4294967295)+(r[4]^255)*4294967296;break;case 6:n=(r[0]+(r[1]<<8)+(r[2]<<16)+r[3]*16777216^4294967295)+(r[4]+(r[5]<<8)^65535)*4294967296;break;default:throw new Error("Value more than 48-bits cannot be reliably converted")}return n*-1-1}switch(t){case 0:return 0;case 1:return r[0];case 2:return r[0]+(r[1]<<8);case 3:return r[0]+(r[1]<<8)+(r[2]<<16);case 4:return r[0]+(r[1]<<8)+(r[2]<<16)+r[3]*16777216;case 5:return r[0]+(r[1]<<8)+(r[2]<<16)+(r[3]+(r[4]<<8))*16777216;case 6:return r[0]+(r[1]<<8)+(r[2]<<16)+(r[3]+(r[4]<<8)+(r[5]<<16))*16777216;default:throw new Error("Value more than 48-bits cannot be reliably converted")}}const decoder=new TextDecoder$1("utf-8");function u8aToString(r){return r?decoder.decode(r):""}const U8A_WRAP_ETHEREUM=u8aToU8a(`Ethereum Signed Message:
`),U8A_WRAP_PREFIX=u8aToU8a("<Bytes>"),U8A_WRAP_POSTFIX=u8aToU8a("</Bytes>"),WRAP_LEN=U8A_WRAP_PREFIX.length+U8A_WRAP_POSTFIX.length;function u8aIsWrapped(r,e){return r.length>=WRAP_LEN&&u8aEq(r.subarray(0,U8A_WRAP_PREFIX.length),U8A_WRAP_PREFIX)&&u8aEq(r.slice(-U8A_WRAP_POSTFIX.length),U8A_WRAP_POSTFIX)||e&&r.length>=U8A_WRAP_ETHEREUM.length&&u8aEq(r.subarray(0,U8A_WRAP_ETHEREUM.length),U8A_WRAP_ETHEREUM)}function u8aUnwrapBytes(r){const e=u8aToU8a(r);return u8aIsWrapped(e,!1)?e.subarray(U8A_WRAP_PREFIX.length,e.length-U8A_WRAP_POSTFIX.length):e}function u8aWrapBytes(r){const e=u8aToU8a(r);return u8aIsWrapped(e,!0)?e:u8aConcatStrict([U8A_WRAP_PREFIX,e,U8A_WRAP_POSTFIX])}const DIV=BigInt$1(256),NEG_MASK=BigInt$1(255);function toU8a$1(r,{isLe:e,isNegative:t}){const n=[];for(t&&(r=(r+_1n$2)*-_1n$2);r!==_0n$2;){const s=r%DIV,i=Number(t?s^NEG_MASK:s);e?n.push(i):n.unshift(i),r=(r-s)/DIV}return Uint8Array.from(n)}function nToU8a(r,e){const t=objectSpread({bitLength:-1,isLe:!0,isNegative:!1},e),n=nToBigInt(r);if(n===_0n$2)return t.bitLength===-1?new Uint8Array:new Uint8Array(Math.ceil((t.bitLength||0)/8));const s=toU8a$1(n,t);if(t.bitLength===-1)return s;const i=Math.ceil((t.bitLength||0)/8),a=new Uint8Array(i);return t.isNegative&&a.fill(255),a.set(s,t.isLe?0:i-s.length),a}const BN_ZERO=new BN(0),BN_ONE=new BN(1),BN_TWO=new BN(2);new BN(3);new BN(4);new BN(5);new BN(6);new BN(7);new BN(8);new BN(9);const BN_TEN=new BN(10),BN_HUNDRED=new BN(100),BN_THOUSAND=new BN(1e3),BN_MILLION=new BN(1e6),BN_BILLION=new BN(1e9),BN_QUINTILL=BN_BILLION.mul(BN_BILLION),BN_MAX_INTEGER=new BN(Number.MAX_SAFE_INTEGER);function hexStripPrefix(r){if(!r||r==="0x")return"";if(REGEX_HEX_PREFIXED.test(r))return r.substring(2);if(REGEX_HEX_NOPREFIX.test(r))return r;throw new Error(`Expected hex value to convert, found '${r}'`)}function hexToBn(r,e={}){if(!r||r==="0x")return new BN(0);const{isLe:t=!1,isNegative:n=!1}=isBoolean(e)?{isLe:e}:e,s=hexStripPrefix(r),i=new BN(s,16,t?"le":"be");return n?i.fromTwos(s.length*4):i}const bnMax=createCmp((r,e)=>r.gt(e)),bnMin=createCmp((r,e)=>r.lt(e));function isBigInt(r){return typeof r=="bigint"}function bnToBn(r){return r?BN.isBN(r)?r:isHex(r)?hexToBn(r.toString()):isBigInt(r)?new BN(r.toString()):isToBn(r)?r.toBn():isToBigInt(r)?new BN(r.toBigInt().toString()):new BN(r):new BN(0)}const SQRT_MAX_SAFE_INTEGER=new BN(94906265);function bnSqrt(r){const e=bnToBn(r);if(e.isNeg())throw new Error("square root of negative numbers is not supported");if(e.lte(BN_MAX_INTEGER))return new BN(~~Math.sqrt(e.toNumber()));let t=SQRT_MAX_SAFE_INTEGER.clone();for(;;){const n=e.div(t).iadd(t).ishrn(1);if(t.eq(n)||t.eq(n.sub(BN_ONE)))return t;t=n}}function isNumber(r){return typeof r=="number"}const DEFAULT_OPTS$1={bitLength:-1,isLe:!0,isNegative:!1};function bnToU8a(r,e=DEFAULT_OPTS$1,t=!0){const{bitLength:n=-1,isLe:s=!0,isNegative:i=!1}=isNumber(e)?{bitLength:e,isLe:t}:e,a=bnToBn(r),o=Math.ceil(n===-1?a.bitLength()/8:(n||0)/8);if(!r)return n===-1?new Uint8Array:new Uint8Array(o);const c=new Uint8Array(o),h=i?a.toTwos(o*8):a;return c.set(h.toArray(s?"le":"be",o),0),c}const ZERO_STR="0x00",DEFAULT_OPTS={bitLength:-1,isLe:!1,isNegative:!1};function bnToHex(r,e=DEFAULT_OPTS,t=!1){return r?u8aToHex(bnToU8a(r,objectSpread({isLe:!1,isNegative:!1},isNumber(e)?{bitLength:e,isLe:t}:e))):ZERO_STR}const MAX_U8=BN_TWO.pow(new BN(8-2)).isub(BN_ONE),MAX_U16=BN_TWO.pow(new BN(16-2)).isub(BN_ONE),MAX_U32=BN_TWO.pow(new BN(32-2)).isub(BN_ONE),BL_16={bitLength:16},BL_32={bitLength:32};function compactToU8a(r){const e=bnToBn(r);if(e.lte(MAX_U8))return new Uint8Array([e.toNumber()<<2]);if(e.lte(MAX_U16))return bnToU8a(e.shln(2).iadd(BN_ONE),BL_16);if(e.lte(MAX_U32))return bnToU8a(e.shln(2).iadd(BN_TWO),BL_32);const t=bnToU8a(e);let n=t.length;for(;t[n-1]===0;)n--;if(n<4)throw new Error("Invalid length, previous checks match anything less than 2^30");return u8aConcatStrict([new Uint8Array([(n-4<<2)+3]),t.subarray(0,n)])}function compactAddLength(r){return u8aConcatStrict([compactToU8a(r.length),r])}function compactFromU8a(r){const e=u8aToU8a(r);switch(e[0]&3){case 0:return[1,new BN(e[0]>>>2)];case 1:return[2,new BN(e[0]+(e[1]<<8)>>>2)];case 2:return[4,new BN(e[0]+(e[1]<<8)+(e[2]<<16)+e[3]*16777216>>>2)];default:{const t=(e[0]>>>2)+5;switch(t){case 5:return[5,new BN(e[1]+(e[2]<<8)+(e[3]<<16)+e[4]*16777216)];case 6:return[6,new BN(e[1]+(e[2]<<8)+(e[3]<<16)+(e[4]+(e[5]<<8))*16777216)];case 7:return[7,new BN(e[1]+(e[2]<<8)+(e[3]<<16)+(e[4]+(e[5]<<8)+(e[6]<<16))*16777216)];default:return[t,u8aToBn(e.subarray(1,t))]}}}}function compactFromU8aLim(r){switch(r[0]&3){case 0:return[1,r[0]>>>2];case 1:return[2,r[0]+(r[1]<<8)>>>2];case 2:return[4,r[0]+(r[1]<<8)+(r[2]<<16)+r[3]*16777216>>>2];default:switch((r[0]>>>2)+5){case 5:return[5,r[1]+(r[2]<<8)+(r[3]<<16)+r[4]*16777216];case 6:return[6,r[1]+(r[2]<<8)+(r[3]<<16)+(r[4]+(r[5]<<8))*16777216];case 7:return[7,r[1]+(r[2]<<8)+(r[3]<<16)+(r[4]+(r[5]<<8)+(r[6]<<16))*16777216];default:throw new Error("Compact input is > Number.MAX_SAFE_INTEGER")}}}function compactStripLength(r){const[e,t]=compactFromU8a(r),n=e+t.toNumber();return[n,r.subarray(e,n)]}const MIN_MS=60*1e3,HR_MS=MIN_MS*60,DAY_MS=HR_MS*24,ZERO={days:0,hours:0,milliseconds:0,minutes:0,seconds:0};function add$1(r,e){return{days:(r.days||0)+e.days,hours:(r.hours||0)+e.hours,milliseconds:(r.milliseconds||0)+e.milliseconds,minutes:(r.minutes||0)+e.minutes,seconds:(r.seconds||0)+e.seconds}}function extractSecs(r){const e=r/1e3;if(e<60){const i=~~e;return add$1({seconds:i},extractTime(r-i*1e3))}const t=e/60;if(t<60){const i=~~t;return add$1({minutes:i},extractTime(r-i*MIN_MS))}const n=t/60;if(n<24){const i=~~n;return add$1({hours:i},extractTime(r-i*HR_MS))}const s=~~(n/24);return add$1({days:s},extractTime(r-s*DAY_MS))}function extractTime(r){return r?r<1e3?add$1({milliseconds:r},ZERO):extractSecs(r):ZERO}function floatToU8a(r=0,{bitLength:e=32,isLe:t=!0}={}){if(e!==32&&e!==64)throw new Error("Invalid bitLength provided, expected 32 or 64");const n=new Uint8Array(e/8),s=new DataView(n.buffer,n.byteOffset);return e===32?s.setFloat32(0,Number(r),t):s.setFloat64(0,Number(r),t),n}const NUMBER_REGEX=new RegExp("(\\d+?)(?=(\\d{3})+(?!\\d)|$)","g");function formatDecimal(r){const e=r[0].startsWith("-"),t=e?r.substring(1).match(NUMBER_REGEX):r.match(NUMBER_REGEX);return t?`${e?"-":""}${t.join(",")}`:r}const SI_MID=8,SI=[{power:-24,text:"yocto",value:"y"},{power:-21,text:"zepto",value:"z"},{power:-18,text:"atto",value:"a"},{power:-15,text:"femto",value:"f"},{power:-12,text:"pico",value:"p"},{power:-9,text:"nano",value:"n"},{power:-6,text:"micro",value:"\xB5"},{power:-3,text:"milli",value:"m"},{power:0,text:"Unit",value:"-"},{power:3,text:"Kilo",value:"k"},{power:6,text:"Mill",value:"M"},{power:9,text:"Bill",value:"B"},{power:12,text:"Tril",value:"T"},{power:15,text:"Peta",value:"P"},{power:18,text:"Exa",value:"E"},{power:21,text:"Zeta",value:"Z"},{power:24,text:"Yotta",value:"Y"}];function findSi(r){for(let e=0;e<SI.length;e++)if(SI[e].value===r)return SI[e];return SI[SI_MID]}function calcSi(r,e,t){if(t)return findSi(t);const n=SI_MID-1+Math.ceil((r.length-e)/3);return SI[n]||SI[n<0?0:SI.length-1]}const DEFAULT_DECIMALS=0,DEFAULT_UNIT=SI[SI_MID].text;let defaultDecimals=DEFAULT_DECIMALS,defaultUnit=DEFAULT_UNIT;function getUnits(r,e,t,n){const s=isBoolean(n)?SI[SI_MID].text:n;return e||t?r.value==="-"?n?` ${s}`:"":` ${t?`${r.text}${n?" ":""}`:r.value}${n?s:""}`:""}function getPrePost(r,e,t){const n=calcSi(r,e,t),s=r.length-(e+n.power),i=r.substring(0,s),a=s<0?0-s:0,o=`${`${new Array(a+1).join("0")}${r}`.substring(s<0?0:s)}0000`.substring(0,4);return[n,i||"0",o]}function _formatBalance(r,e=!0,t=defaultDecimals){let n=bnToBn(r).toString();if(n.length===0||n==="0")return"0";const{decimals:s=t,forceUnit:i=void 0,withSi:a=!0,withSiFull:o=!1,withUnit:c=!0}=isBoolean(e)?{withSi:e}:e;let h="";n[0].startsWith("-")&&(h="-",n=n.substring(1));const[p,x,A]=getPrePost(n,s,i),k=getUnits(p,a,o,c);return`${h}${formatDecimal(x)}.${A}${k}`}const formatBalance=_formatBalance;formatBalance.calcSi=(r,e=defaultDecimals)=>calcSi(r,e);formatBalance.findSi=findSi;formatBalance.getDefaults=()=>({decimals:defaultDecimals,unit:defaultUnit});formatBalance.getOptions=(r=defaultDecimals)=>SI.filter(({power:e})=>e<0?r+e>=0:!0);formatBalance.setDefaults=({decimals:r,unit:e})=>{defaultDecimals=r===void 0?defaultDecimals:Array.isArray(r)?r[0]:r,defaultUnit=e===void 0?defaultUnit:Array.isArray(e)?e[0]:e,SI[SI_MID].text=defaultUnit};function zeroPad(r){return r.toString().padStart(2,"0")}function formatDate(r){const e=r.getFullYear().toString(),t=zeroPad(r.getMonth()+1),n=zeroPad(r.getDate()),s=zeroPad(r.getHours()),i=zeroPad(r.getMinutes()),a=zeroPad(r.getSeconds());return`${e}-${t}-${n} ${s}:${i}:${a}`}function formatNumber(r){return formatDecimal(bnToBn(r).toString())}function isString(r){return typeof r=="string"||r instanceof String}function isAsciiStr(r){const e=r.length;for(let t=0;t<e;t++){const n=r.charCodeAt(t);if(!(n<127&&(n>=32||n===10||n===9||n===13)))return!1}return!0}function isAsciiBytes(r){const e=r.length;for(let t=0;t<e;t++){const n=r[t];if(!(n<127&&(n>=32||n===10||n===9||n===13)))return!1}return!0}function isAscii(r){return isString(r)?isHex(r)?isAsciiBytes(u8aToU8a(r)):isAsciiStr(r):r?isAsciiBytes(r):!1}function isChildClass(r,e){return e?r===e||r.isPrototypeOf(e):!1}const checkCodec=isOnObject("toHex","toU8a"),checkRegistry=isOnObject("get");function isCodec$1(r){return checkCodec(r)&&checkRegistry(r.registry)}function replacer(r,e){return isBigInt(e)?e.toString():e}function stringify(r,e){return JSON.stringify(r,replacer,e)}function isNull(r){return r===null}const REGEX_DEV=/(Development|Local Testnet)$/;function isTestChain(r){return r?!!REGEX_DEV.test(r.toString()):!1}function isUndefined(r){return r===void 0}function isUtf8(r){if(!r)return isString(r);const e=u8aToU8a(r),t=e.length;let n=0;for(;n<t;)if(e[n]<=127)n+=1;else if(e[n]>=194&&e[n]<=223){if(n+1<t){if(e[n+1]<128||e[n+1]>191)return!1}else return!1;n+=2}else if(e[n]===224){if(n+2<t){if(e[n+1]<160||e[n+1]>191||e[n+2]<128||e[n+2]>191)return!1}else return!1;n+=3}else if(e[n]>=225&&e[n]<=236){if(n+2<t){if(e[n+1]<128||e[n+1]>191||e[n+2]<128||e[n+2]>191)return!1}else return!1;n+=3}else if(e[n]===237){if(n+2<t){if(e[n+1]<128||e[n+1]>159||e[n+2]<128||e[n+2]>191)return!1}else return!1;n+=3}else if(e[n]>=238&&e[n]<=239){if(n+2<t){if(e[n+1]<128||e[n+1]>191||e[n+2]<128||e[n+2]>191)return!1}else return!1;n+=3}else if(e[n]===240){if(n+3<t){if(e[n+1]<144||e[n+1]>191||e[n+2]<128||e[n+2]>191||e[n+3]<128||e[n+3]>191)return!1}else return!1;n+=4}else if(e[n]>=241&&e[n]<=243){if(n+3<t){if(e[n+1]<128||e[n+1]>191||e[n+2]<128||e[n+2]>191||e[n+3]<128||e[n+3]>191)return!1}else return!1;n+=4}else if(e[n]===244){if(n+3<t){if(e[n+1]<128||e[n+1]>143||e[n+2]<128||e[n+2]>191||e[n+3]<128||e[n+3]>191)return!1}else return!1;n+=4}else return!1;return!0}const WASM_MAGIC=new Uint8Array([0,97,115,109]);function isWasm(r){return isU8a(r)&&u8aEq(r.subarray(0,4),WASM_MAGIC)}function lazyMethod(r,e,t,n){const s=n?n(e):e.toString();let i;Object.defineProperty(r,s,{configurable:!0,enumerable:!0,get:function(){if(i===void 0){i=t(e);try{Object.defineProperty(this,s,{value:i})}catch{}}return i}})}function lazyMethods(r,e,t,n){for(let s=0;s<e.length;s++)lazyMethod(r,e[s],t,n);return r}const logTo={debug:"log",error:"error",log:"log",warn:"warn"};function formatOther(r){if(r&&isObject$2(r)&&r.constructor===Object){const e={};for(const t of Object.keys(r))e[t]=loggerFormat(r[t]);return e}return r}function loggerFormat(r){return Array.isArray(r)?r.map(loggerFormat):isBn(r)?r.toString():isU8a(r)||isBuffer(r)?u8aToHex(u8aToU8a(r)):formatOther(r)}function formatWithLength(r){return e=>{if(r<=0)return e;const t=`${e}`;return t.length<r?e:`${t.substring(0,r)} ...`}}function apply(r,e,t,n=-1){if(t.length===1&&isFunction$3(t[0])){const s=t[0]();return apply(r,e,Array.isArray(s)?s:[s],n)}console[logTo[r]](formatDate(new Date),e,...t.map(loggerFormat).map(formatWithLength(n)))}function noop$1(){}function isDebugOn(r,e){return!!r&&(r==="*"||e===r||r.endsWith("*")&&e.startsWith(r.slice(0,-1)))}function isDebugOff(r,e){return!!r&&r.startsWith("-")&&(e===r.slice(1)||r.endsWith("*")&&e.startsWith(r.slice(1,-1)))}function getDebugFlag(r,e){let t=!1;for(const n of r)isDebugOn(n,e)?t=!0:isDebugOff(n,e)&&(t=!1);return t}function parseEnv(r){const e=(hasProcess?process:{}).env||{},t=parseInt(e.DEBUG_MAX||"-1",10);return[getDebugFlag((e.DEBUG||"").toLowerCase().split(","),r),isNaN(t)?-1:t]}function logger(r){const e=`${r.toUpperCase()}:`.padStart(16),[t,n]=parseEnv(r.toLowerCase());return{debug:t?(...s)=>apply("debug",e,s,n):noop$1,error:(...s)=>apply("error",e,s),log:(...s)=>apply("log",e,s),noop:noop$1,warn:(...s)=>apply("warn",e,s)}}function defaultGetId(){return"none"}function memoize(r,{getInstanceId:e=defaultGetId}={}){const t={},n=(...s)=>{const i=stringify(s),a=e();return t[a]||(t[a]={}),t[a][i]===void 0&&(t[a][i]=r(...s)),t[a][i]};return n.unmemoize=(...s)=>{const i=stringify(s),a=e();t[a]&&t[a][i]!==void 0&&delete t[a][i]},n}function nextTick(r,e){Promise.resolve().then(()=>{r()}).catch(t=>{e?e(t):console.error(t)})}function objectClear(r){const e=Object.keys(r);for(let t=0;t<e.length;t++)delete r[e[t]];return r}function objectCopy(r){return objectSpread({},r)}function objectProperty(r,e,t){e in r||Object.defineProperty(r,e,{enumerable:!0,get:()=>t(e)})}function objectProperties(r,e,t){for(let n=0;n<e.length;n++)objectProperty(r,e[n],s=>t(s,n))}const CC_TO_UP=new Array(256),CC_TO_LO=new Array(256);for(let r=0;r<CC_TO_UP.length;r++)CC_TO_LO[r]=String.fromCharCode(r).toLowerCase(),CC_TO_UP[r]=String.fromCharCode(r).toUpperCase();function formatAllCaps(r){return r.slice(0,r.length-1).toLowerCase()+CC_TO_UP[r.charCodeAt(r.length-1)]}function converter$1(r){return e=>{const t=e.replace(/[-_., ]+/g," ").trim().split(" "),n=t.length;let s="";for(let i=0;i<n;i++){const a=t[i];s+=r(/^[\dA-Z]+$/.test(a)?a.toLowerCase():a.replace(/^[\dA-Z]{2,}[^a-z]/,formatAllCaps),i)}return s}}const stringCamelCase=converter$1((r,e)=>(e?CC_TO_UP[r.charCodeAt(0)]:CC_TO_LO[r.charCodeAt(0)])+r.slice(1)),stringPascalCase=converter$1(r=>CC_TO_UP[r.charCodeAt(0)]+r.slice(1));function converter(r){return e=>e?r[e.charCodeAt(0)]+e.slice(1):""}const stringUpperFirst=converter(CC_TO_UP);function stringToHex(r){return u8aToHex(stringToU8a(r))}function evaluateThis$2(r){return r("return this")}const xglobal$2=typeof globalThis!="undefined"?globalThis:typeof global!="undefined"?global:typeof self!="undefined"?self:typeof window!="undefined"?window:evaluateThis$2(Function);function getRandomValues(r){return xglobal$2.crypto.getRandomValues(r)}var __viteBrowserExternal={},__viteBrowserExternal$1=Object.freeze(Object.defineProperty({__proto__:null,default:__viteBrowserExternal},Symbol.toStringTag,{value:"Module"}));/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */const _0n$1=BigInt(0),_1n$1=BigInt(1),_2n$1=BigInt(2),_3n=BigInt(3),_8n=BigInt(8),POW_2_256=_2n$1**BigInt(256),CURVE={a:_0n$1,b:BigInt(7),P:POW_2_256-_2n$1**BigInt(32)-BigInt(977),n:POW_2_256-BigInt("432420386565659656852420866394968145599"),h:_1n$1,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee")};function weistrass(r){const{a:e,b:t}=CURVE,n=mod(r*r),s=mod(n*r);return mod(s+e*r+t)}const USE_ENDOMORPHISM=CURVE.a===_0n$1;class JacobianPoint{constructor(e,t,n){this.x=e,this.y=t,this.z=n}static fromAffine(e){if(!(e instanceof Point))throw new TypeError("JacobianPoint#fromAffine: expected Point");return new JacobianPoint(e.x,e.y,_1n$1)}static toAffineBatch(e){const t=invertBatch(e.map(n=>n.z));return e.map((n,s)=>n.toAffine(t[s]))}static normalizeZ(e){return JacobianPoint.toAffineBatch(e).map(JacobianPoint.fromAffine)}equals(e){if(!(e instanceof JacobianPoint))throw new TypeError("JacobianPoint expected");const{x:t,y:n,z:s}=this,{x:i,y:a,z:o}=e,c=mod(s**_2n$1),h=mod(o**_2n$1),p=mod(t*h),x=mod(i*c),A=mod(mod(n*o)*h),k=mod(mod(a*s)*c);return p===x&&A===k}negate(){return new JacobianPoint(this.x,mod(-this.y),this.z)}double(){const{x:e,y:t,z:n}=this,s=mod(e**_2n$1),i=mod(t**_2n$1),a=mod(i**_2n$1),o=mod(_2n$1*(mod((e+i)**_2n$1)-s-a)),c=mod(_3n*s),h=mod(c**_2n$1),p=mod(h-_2n$1*o),x=mod(c*(o-p)-_8n*a),A=mod(_2n$1*t*n);return new JacobianPoint(p,x,A)}add(e){if(!(e instanceof JacobianPoint))throw new TypeError("JacobianPoint expected");const{x:t,y:n,z:s}=this,{x:i,y:a,z:o}=e;if(i===_0n$1||a===_0n$1)return this;if(t===_0n$1||n===_0n$1)return e;const c=mod(s**_2n$1),h=mod(o**_2n$1),p=mod(t*h),x=mod(i*c),A=mod(mod(n*o)*h),k=mod(mod(a*s)*c),U=mod(x-p),D=mod(k-A);if(U===_0n$1)return D===_0n$1?this.double():JacobianPoint.ZERO;const F=mod(U**_2n$1),q=mod(U*F),ae=mod(p*F),Y=mod(D**_2n$1-q-_2n$1*ae),de=mod(D*(ae-Y)-A*q),fe=mod(s*o*U);return new JacobianPoint(Y,de,fe)}subtract(e){return this.add(e.negate())}multiplyUnsafe(e){let t=normalizeScalar(e);JacobianPoint.BASE;const n=JacobianPoint.ZERO;if(t===_0n$1)return n;if(t===_1n$1)return this;if(!USE_ENDOMORPHISM){let x=n,A=this;for(;t>_0n$1;)t&_1n$1&&(x=x.add(A)),A=A.double(),t>>=_1n$1;return x}let{k1neg:s,k1:i,k2neg:a,k2:o}=splitScalarEndo(t),c=n,h=n,p=this;for(;i>_0n$1||o>_0n$1;)i&_1n$1&&(c=c.add(p)),o&_1n$1&&(h=h.add(p)),p=p.double(),i>>=_1n$1,o>>=_1n$1;return s&&(c=c.negate()),a&&(h=h.negate()),h=new JacobianPoint(mod(h.x*CURVE.beta),h.y,h.z),c.add(h)}precomputeWindow(e){const t=USE_ENDOMORPHISM?128/e+1:256/e+1,n=[];let s=this,i=s;for(let a=0;a<t;a++){i=s,n.push(i);for(let o=1;o<2**(e-1);o++)i=i.add(s),n.push(i);s=i.double()}return n}wNAF(e,t){!t&&this.equals(JacobianPoint.BASE)&&(t=Point.BASE);const n=t&&t._WINDOW_SIZE||1;if(256%n)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let s=t&&pointPrecomputes.get(t);s||(s=this.precomputeWindow(n),t&&n!==1&&(s=JacobianPoint.normalizeZ(s),pointPrecomputes.set(t,s)));let i=JacobianPoint.ZERO,a=JacobianPoint.ZERO;const o=1+(USE_ENDOMORPHISM?128/n:256/n),c=2**(n-1),h=BigInt(2**n-1),p=2**n,x=BigInt(n);for(let A=0;A<o;A++){const k=A*c;let U=Number(e&h);if(e>>=x,U>c&&(U-=p,e+=_1n$1),U===0){let D=s[k];A%2&&(D=D.negate()),a=a.add(D)}else{let D=s[k+Math.abs(U)-1];U<0&&(D=D.negate()),i=i.add(D)}}return{p:i,f:a}}multiply(e,t){let n=normalizeScalar(e),s,i;if(USE_ENDOMORPHISM){const{k1neg:a,k1:o,k2neg:c,k2:h}=splitScalarEndo(n);let{p,f:x}=this.wNAF(o,t),{p:A,f:k}=this.wNAF(h,t);a&&(p=p.negate()),c&&(A=A.negate()),A=new JacobianPoint(mod(A.x*CURVE.beta),A.y,A.z),s=p.add(A),i=x.add(k)}else{const{p:a,f:o}=this.wNAF(n,t);s=a,i=o}return JacobianPoint.normalizeZ([s,i])[0]}toAffine(e=invert(this.z)){const{x:t,y:n,z:s}=this,i=e,a=mod(i*i),o=mod(a*i),c=mod(t*a),h=mod(n*o);if(mod(s*i)!==_1n$1)throw new Error("invZ was invalid");return new Point(c,h)}}JacobianPoint.BASE=new JacobianPoint(CURVE.Gx,CURVE.Gy,_1n$1);JacobianPoint.ZERO=new JacobianPoint(_0n$1,_1n$1,_0n$1);const pointPrecomputes=new WeakMap;class Point{constructor(e,t){this.x=e,this.y=t}_setWindowSize(e){this._WINDOW_SIZE=e,pointPrecomputes.delete(this)}static fromCompressedHex(e){const t=e.length===32,n=bytesToNumber(t?e:e.subarray(1));if(!isValidFieldElement(n))throw new Error("Point is not on curve");const s=weistrass(n);let i=sqrtMod(s);const a=(i&_1n$1)===_1n$1;t?a&&(i=mod(-i)):(e[0]&1)===1!==a&&(i=mod(-i));const o=new Point(n,i);return o.assertValidity(),o}static fromUncompressedHex(e){const t=bytesToNumber(e.subarray(1,33)),n=bytesToNumber(e.subarray(33,65)),s=new Point(t,n);return s.assertValidity(),s}static fromHex(e){const t=ensureBytes(e),n=t.length,s=t[0];if(n===32||n===33&&(s===2||s===3))return this.fromCompressedHex(t);if(n===65&&s===4)return this.fromUncompressedHex(t);throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${n}`)}static fromPrivateKey(e){return Point.BASE.multiply(normalizePrivateKey(e))}static fromSignature(e,t,n){e=ensureBytes(e);const s=truncateHash(e),{r:i,s:a}=normalizeSignature(t);if(n!==0&&n!==1)throw new Error("Cannot recover signature: invalid recovery bit");if(s===_0n$1)throw new Error("Cannot recover signature: msgHash cannot be 0");const o=n&1?"03":"02",c=Point.fromHex(o+numTo32bStr(i)),{n:h}=CURVE,p=invert(i,h),x=mod(-s*p,h),A=mod(a*p,h),k=Point.BASE.multiplyAndAddUnsafe(c,x,A);if(!k)throw new Error("Cannot recover signature: point at infinify");return k.assertValidity(),k}toRawBytes(e=!1){return hexToBytes(this.toHex(e))}toHex(e=!1){const t=numTo32bStr(this.x);return e?`${this.y&_1n$1?"03":"02"}${t}`:`04${t}${numTo32bStr(this.y)}`}toHexX(){return this.toHex(!0).slice(2)}toRawX(){return this.toRawBytes(!0).slice(1)}assertValidity(){const e="Point is not on elliptic curve",{x:t,y:n}=this;if(!isValidFieldElement(t)||!isValidFieldElement(n))throw new Error(e);const s=mod(n*n),i=weistrass(t);if(mod(s-i)!==_0n$1)throw new Error(e)}equals(e){return this.x===e.x&&this.y===e.y}negate(){return new Point(this.x,mod(-this.y))}double(){return JacobianPoint.fromAffine(this).double().toAffine()}add(e){return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(e)).toAffine()}subtract(e){return this.add(e.negate())}multiply(e){return JacobianPoint.fromAffine(this).multiply(e,this).toAffine()}multiplyAndAddUnsafe(e,t,n){const s=JacobianPoint.fromAffine(this),i=t===_0n$1||t===_1n$1||this!==Point.BASE?s.multiplyUnsafe(t):s.multiply(t),a=JacobianPoint.fromAffine(e).multiplyUnsafe(n),o=i.add(a);return o.equals(JacobianPoint.ZERO)?void 0:o.toAffine()}}Point.BASE=new Point(CURVE.Gx,CURVE.Gy);Point.ZERO=new Point(_0n$1,_0n$1);function sliceDER(r){return Number.parseInt(r[0],16)>=8?"00"+r:r}function parseDERInt(r){if(r.length<2||r[0]!==2)throw new Error(`Invalid signature integer tag: ${bytesToHex(r)}`);const e=r[1],t=r.subarray(2,e+2);if(!e||t.length!==e)throw new Error("Invalid signature integer: wrong length");if(t[0]===0&&t[1]<=127)throw new Error("Invalid signature integer: trailing length");return{data:bytesToNumber(t),left:r.subarray(e+2)}}function parseDERSignature(r){if(r.length<2||r[0]!=48)throw new Error(`Invalid signature tag: ${bytesToHex(r)}`);if(r[1]!==r.length-2)throw new Error("Invalid signature: incorrect length");const{data:e,left:t}=parseDERInt(r.subarray(2)),{data:n,left:s}=parseDERInt(t);if(s.length)throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(s)}`);return{r:e,s:n}}class Signature{constructor(e,t){this.r=e,this.s=t,this.assertValidity()}static fromCompact(e){const t=isUint8a(e),n="Signature.fromCompact";if(typeof e!="string"&&!t)throw new TypeError(`${n}: Expected string or Uint8Array`);const s=t?bytesToHex(e):e;if(s.length!==128)throw new Error(`${n}: Expected 64-byte hex`);return new Signature(hexToNumber(s.slice(0,64)),hexToNumber(s.slice(64,128)))}static fromDER(e){const t=isUint8a(e);if(typeof e!="string"&&!t)throw new TypeError("Signature.fromDER: Expected string or Uint8Array");const{r:n,s}=parseDERSignature(t?e:hexToBytes(e));return new Signature(n,s)}static fromHex(e){return this.fromDER(e)}assertValidity(){const{r:e,s:t}=this;if(!isWithinCurveOrder(e))throw new Error("Invalid Signature: r must be 0 < r < n");if(!isWithinCurveOrder(t))throw new Error("Invalid Signature: s must be 0 < s < n")}hasHighS(){const e=CURVE.n>>_1n$1;return this.s>e}normalizeS(){return this.hasHighS()?new Signature(this.r,CURVE.n-this.s):this}toDERRawBytes(e=!1){return hexToBytes(this.toDERHex(e))}toDERHex(e=!1){const t=sliceDER(numberToHexUnpadded(this.s));if(e)return t;const n=sliceDER(numberToHexUnpadded(this.r)),s=numberToHexUnpadded(n.length/2),i=numberToHexUnpadded(t.length/2);return`30${numberToHexUnpadded(n.length/2+t.length/2+4)}02${s}${n}02${i}${t}`}toRawBytes(){return this.toDERRawBytes()}toHex(){return this.toDERHex()}toCompactRawBytes(){return hexToBytes(this.toCompactHex())}toCompactHex(){return numTo32bStr(this.r)+numTo32bStr(this.s)}}function concatBytes(...r){if(!r.every(isUint8a))throw new Error("Uint8Array list expected");if(r.length===1)return r[0];const e=r.reduce((n,s)=>n+s.length,0),t=new Uint8Array(e);for(let n=0,s=0;n<r.length;n++){const i=r[n];t.set(i,s),s+=i.length}return t}function isUint8a(r){return r instanceof Uint8Array}const hexes=Array.from({length:256},(r,e)=>e.toString(16).padStart(2,"0"));function bytesToHex(r){if(!(r instanceof Uint8Array))throw new Error("Expected Uint8Array");let e="";for(let t=0;t<r.length;t++)e+=hexes[r[t]];return e}function numTo32bStr(r){if(r>POW_2_256)throw new Error("Expected number < 2^256");return r.toString(16).padStart(64,"0")}function numTo32b(r){return hexToBytes(numTo32bStr(r))}function numberToHexUnpadded(r){const e=r.toString(16);return e.length&1?`0${e}`:e}function hexToNumber(r){if(typeof r!="string")throw new TypeError("hexToNumber: expected string, got "+typeof r);return BigInt(`0x${r}`)}function hexToBytes(r){if(typeof r!="string")throw new TypeError("hexToBytes: expected string, got "+typeof r);if(r.length%2)throw new Error("hexToBytes: received invalid unpadded hex"+r.length);const e=new Uint8Array(r.length/2);for(let t=0;t<e.length;t++){const n=t*2,s=r.slice(n,n+2),i=Number.parseInt(s,16);if(Number.isNaN(i)||i<0)throw new Error("Invalid byte sequence");e[t]=i}return e}function bytesToNumber(r){return hexToNumber(bytesToHex(r))}function ensureBytes(r){return r instanceof Uint8Array?Uint8Array.from(r):hexToBytes(r)}function normalizeScalar(r){if(typeof r=="number"&&Number.isSafeInteger(r)&&r>0)return BigInt(r);if(typeof r=="bigint"&&isWithinCurveOrder(r))return r;throw new TypeError("Expected valid private scalar: 0 < scalar < curve.n")}function mod(r,e=CURVE.P){const t=r%e;return t>=_0n$1?t:e+t}function pow2(r,e){const{P:t}=CURVE;let n=r;for(;e-- >_0n$1;)n*=n,n%=t;return n}function sqrtMod(r){const{P:e}=CURVE,t=BigInt(6),n=BigInt(11),s=BigInt(22),i=BigInt(23),a=BigInt(44),o=BigInt(88),c=r*r*r%e,h=c*c*r%e,p=pow2(h,_3n)*h%e,x=pow2(p,_3n)*h%e,A=pow2(x,_2n$1)*c%e,k=pow2(A,n)*A%e,U=pow2(k,s)*k%e,D=pow2(U,a)*U%e,F=pow2(D,o)*D%e,q=pow2(F,a)*U%e,ae=pow2(q,_3n)*h%e,Y=pow2(ae,i)*k%e,de=pow2(Y,t)*c%e;return pow2(de,_2n$1)}function invert(r,e=CURVE.P){if(r===_0n$1||e<=_0n$1)throw new Error(`invert: expected positive integers, got n=${r} mod=${e}`);let t=mod(r,e),n=e,s=_0n$1,i=_1n$1;for(;t!==_0n$1;){const o=n/t,c=n%t,h=s-i*o;n=t,t=c,s=i,i=h}if(n!==_1n$1)throw new Error("invert: does not exist");return mod(s,e)}function invertBatch(r,e=CURVE.P){const t=new Array(r.length),n=r.reduce((i,a,o)=>a===_0n$1?i:(t[o]=i,mod(i*a,e)),_1n$1),s=invert(n,e);return r.reduceRight((i,a,o)=>a===_0n$1?i:(t[o]=mod(i*t[o],e),mod(i*a,e)),s),t}const divNearest=(r,e)=>(r+e/_2n$1)/e,POW_2_128=_2n$1**BigInt(128);function splitScalarEndo(r){const{n:e}=CURVE,t=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-_1n$1*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),s=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),i=t,a=divNearest(i*r,e),o=divNearest(-n*r,e);let c=mod(r-a*t-o*s,e),h=mod(-a*n-o*i,e);const p=c>POW_2_128,x=h>POW_2_128;if(p&&(c=e-c),x&&(h=e-h),c>POW_2_128||h>POW_2_128)throw new Error("splitScalarEndo: Endomorphism failed, k="+r);return{k1neg:p,k1:c,k2neg:x,k2:h}}function truncateHash(r){const{n:e}=CURVE,n=r.length*8-256;let s=bytesToNumber(r);return n>0&&(s=s>>BigInt(n)),s>=e&&(s-=e),s}class HmacDrbg{constructor(){this.v=new Uint8Array(32).fill(1),this.k=new Uint8Array(32).fill(0),this.counter=0}hmac(...e){return utils.hmacSha256(this.k,...e)}hmacSync(...e){throw new Error("utils.hmacSha256Sync is undefined, you need to set it")}incr(){if(this.counter>=1e3)throw new Error("Tried 1,000 k values for sign(), all were invalid");this.counter+=1}async reseed(e=new Uint8Array){this.k=await this.hmac(this.v,Uint8Array.from([0]),e),this.v=await this.hmac(this.v),e.length!==0&&(this.k=await this.hmac(this.v,Uint8Array.from([1]),e),this.v=await this.hmac(this.v))}reseedSync(e=new Uint8Array){this.k=this.hmacSync(this.v,Uint8Array.from([0]),e),this.v=this.hmacSync(this.v),e.length!==0&&(this.k=this.hmacSync(this.v,Uint8Array.from([1]),e),this.v=this.hmacSync(this.v))}async generate(){return this.incr(),this.v=await this.hmac(this.v),this.v}generateSync(){return this.incr(),this.v=this.hmacSync(this.v),this.v}}function isWithinCurveOrder(r){return _0n$1<r&&r<CURVE.n}function isValidFieldElement(r){return _0n$1<r&&r<CURVE.P}function kmdToSig(r,e,t){const n=bytesToNumber(r);if(!isWithinCurveOrder(n))return;const{n:s}=CURVE,i=Point.BASE.multiply(n),a=mod(i.x,s);if(a===_0n$1)return;const o=mod(invert(n,s)*mod(e+t*a,s),s);if(o===_0n$1)return;const c=new Signature(a,o),h=(i.x===c.r?0:2)|Number(i.y&_1n$1);return{sig:c,recovery:h}}function normalizePrivateKey(r){let e;if(typeof r=="bigint")e=r;else if(typeof r=="number"&&Number.isSafeInteger(r)&&r>0)e=BigInt(r);else if(typeof r=="string"){if(r.length!==64)throw new Error("Expected 32 bytes of private key");e=hexToNumber(r)}else if(isUint8a(r)){if(r.length!==32)throw new Error("Expected 32 bytes of private key");e=bytesToNumber(r)}else throw new TypeError("Expected valid private key");if(!isWithinCurveOrder(e))throw new Error("Expected private key: 0 < key < n");return e}function normalizeSignature(r){if(r instanceof Signature)return r.assertValidity(),r;try{return Signature.fromDER(r)}catch{return Signature.fromCompact(r)}}function getPublicKey(r,e=!1){return Point.fromPrivateKey(r).toRawBytes(e)}function recoverPublicKey(r,e,t,n=!1){return Point.fromSignature(r,e,t).toRawBytes(n)}function bits2int(r){const e=r.length>32?r.slice(0,32):r;return bytesToNumber(e)}function bits2octets(r){const e=bits2int(r),t=mod(e,CURVE.n);return int2octets(t<_0n$1?e:t)}function int2octets(r){if(typeof r!="bigint")throw new Error("Expected bigint");const e=numTo32bStr(r);return hexToBytes(e)}function initSigArgs(r,e,t){if(r==null)throw new Error(`sign: expected valid message hash, not "${r}"`);const n=ensureBytes(r),s=normalizePrivateKey(e),i=[int2octets(s),bits2octets(n)];if(t!=null){t===!0&&(t=utils.randomBytes(32));const c=ensureBytes(t);if(c.length!==32)throw new Error("sign: Expected 32 bytes of extra data");i.push(c)}const a=concatBytes(...i),o=bits2int(n);return{seed:a,m:o,d:s}}function finalizeSig(r,e){let{sig:t,recovery:n}=r;const{canonical:s,der:i,recovered:a}=Object.assign({canonical:!0,der:!0},e);s&&t.hasHighS()&&(t=t.normalizeS(),n^=1);const o=i?t.toDERRawBytes():t.toCompactRawBytes();return a?[o,n]:o}function signSync(r,e,t={}){const{seed:n,m:s,d:i}=initSigArgs(r,e,t.extraEntropy);let a;const o=new HmacDrbg;for(o.reseedSync(n);!(a=kmdToSig(o.generateSync(),s,i));)o.reseedSync();return finalizeSig(a,t)}Point.BASE._setWindowSize(8);const crypto={node:__viteBrowserExternal$1,web:typeof self=="object"&&"crypto"in self?self.crypto:void 0},TAGGED_HASH_PREFIXES={},utils={isValidPrivateKey(r){try{return normalizePrivateKey(r),!0}catch{return!1}},privateAdd:(r,e)=>{const t=normalizePrivateKey(r),n=bytesToNumber(ensureBytes(e));return numTo32b(mod(t+n,CURVE.n))},privateNegate:r=>{const e=normalizePrivateKey(r);return numTo32b(CURVE.n-e)},pointAddScalar:(r,e,t)=>{const n=Point.fromHex(r),s=bytesToNumber(ensureBytes(e)),i=Point.BASE.multiplyAndAddUnsafe(n,s,_1n$1);if(!i)throw new Error("Tweaked point at infinity");return i.toRawBytes(t)},pointMultiply:(r,e,t)=>{const n=Point.fromHex(r),s=bytesToNumber(ensureBytes(e));return n.multiply(s).toRawBytes(t)},hashToPrivateKey:r=>{if(r=ensureBytes(r),r.length<40||r.length>1024)throw new Error("Expected 40-1024 bytes of private key as per FIPS 186");const e=mod(bytesToNumber(r),CURVE.n-_1n$1)+_1n$1;return numTo32b(e)},randomBytes:(r=32)=>{if(crypto.web)return crypto.web.getRandomValues(new Uint8Array(r));if(crypto.node){const{randomBytes:e}=crypto.node;return Uint8Array.from(e(r))}else throw new Error("The environment doesn't have randomBytes function")},randomPrivateKey:()=>utils.hashToPrivateKey(utils.randomBytes(40)),bytesToHex,hexToBytes,concatBytes,mod,invert,sha256:async(...r)=>{if(crypto.web){const e=await crypto.web.subtle.digest("SHA-256",concatBytes(...r));return new Uint8Array(e)}else if(crypto.node){const{createHash:e}=crypto.node,t=e("sha256");return r.forEach(n=>t.update(n)),Uint8Array.from(t.digest())}else throw new Error("The environment doesn't have sha256 function")},hmacSha256:async(r,...e)=>{if(crypto.web){const t=await crypto.web.subtle.importKey("raw",r,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]),n=concatBytes(...e),s=await crypto.web.subtle.sign("HMAC",t,n);return new Uint8Array(s)}else if(crypto.node){const{createHmac:t}=crypto.node,n=t("sha256",r);return e.forEach(s=>n.update(s)),Uint8Array.from(n.digest())}else throw new Error("The environment doesn't have hmac-sha256 function")},sha256Sync:void 0,hmacSha256Sync:void 0,taggedHash:async(r,...e)=>{let t=TAGGED_HASH_PREFIXES[r];if(t===void 0){const n=await utils.sha256(Uint8Array.from(r,s=>s.charCodeAt(0)));t=concatBytes(n,n),TAGGED_HASH_PREFIXES[r]=t}return utils.sha256(t,...e)},taggedHashSync:(r,...e)=>{throw new Error("utils.sha256Sync is undefined, you need to set it")},precompute(r=8,e=Point.BASE){const t=e===Point.BASE?e:new Point(e.x,e.y);return t._setWindowSize(r),t.multiply(_3n),t}},DEFAULT_CRYPTO={getRandomValues},DEFAULT_SELF={crypto:DEFAULT_CRYPTO};var zt;class Wbg{constructor(e){_(this,zt,void 0);Ae(this,"abort",()=>{throw new Error("abort")});Ae(this,"__wbindgen_is_undefined",e=>b(this,zt).getObject(e)===void 0);Ae(this,"__wbindgen_throw",(e,t)=>{throw new Error(b(this,zt).getString(e,t))});Ae(this,"__wbg_self_1b7a39e3a92c949c",()=>b(this,zt).addObject(DEFAULT_SELF));Ae(this,"__wbg_require_604837428532a733",(e,t)=>{throw new Error(`Unable to require ${b(this,zt).getString(e,t)}`)});Ae(this,"__wbg_crypto_968f1772287e2df0",e=>b(this,zt).addObject(DEFAULT_CRYPTO));Ae(this,"__wbg_getRandomValues_a3d34b4fee3c2869",e=>b(this,zt).addObject(DEFAULT_CRYPTO.getRandomValues));Ae(this,"__wbg_getRandomValues_f5e14ab7ac8e995d",(e,t,n)=>{DEFAULT_CRYPTO.getRandomValues(b(this,zt).getU8a(t,n))});Ae(this,"__wbg_randomFillSync_d5bd2d655fdf256a",(e,t,n)=>{throw new Error("randomFillsync is not available")});Ae(this,"__wbindgen_object_drop_ref",e=>{b(this,zt).takeObject(e)});Q(this,zt,e)}}zt=new WeakMap;var er,tr,vn,jt,Yt,Dt,Br,dr,wn,Nr;class Bridge{constructor(e){_(this,er,void 0);_(this,tr,void 0);_(this,vn,void 0);_(this,jt,void 0);_(this,Yt,void 0);_(this,Dt,void 0);_(this,Br,void 0);_(this,dr,void 0);_(this,wn,void 0);_(this,Nr,void 0);Q(this,vn,e),Q(this,er,null),Q(this,tr,null),Q(this,jt,new Array(32).fill(void 0).concat(void 0,null,!0,!1)),Q(this,Yt,b(this,jt).length),Q(this,Nr,"none"),Q(this,Dt,null),Q(this,Br,null),Q(this,dr,null),Q(this,wn,Ve({},new Wbg(this)))}get error(){return b(this,Br)}get type(){return b(this,Nr)}get wasm(){return b(this,Dt)}async init(e){(!b(this,dr)||e)&&Q(this,dr,(e||b(this,vn))(b(this,wn)));const{error:t,type:n,wasm:s}=await b(this,dr);return Q(this,Nr,n),Q(this,Dt,s),Q(this,Br,t),b(this,Dt)}getObject(e){return b(this,jt)[e]}dropObject(e){e<36||(b(this,jt)[e]=b(this,Yt),Q(this,Yt,e))}takeObject(e){const t=this.getObject(e);return this.dropObject(e),t}addObject(e){b(this,Yt)===b(this,jt).length&&b(this,jt).push(b(this,jt).length+1);const t=b(this,Yt);return Q(this,Yt,b(this,jt)[t]),b(this,jt)[t]=e,t}getInt32(){return(b(this,er)===null||b(this,er).buffer!==b(this,Dt).memory.buffer)&&Q(this,er,new Int32Array(b(this,Dt).memory.buffer)),b(this,er)}getUint8(){return(b(this,tr)===null||b(this,tr).buffer!==b(this,Dt).memory.buffer)&&Q(this,tr,new Uint8Array(b(this,Dt).memory.buffer)),b(this,tr)}getU8a(e,t){return this.getUint8().subarray(e/1,e/1+t)}getString(e,t){return u8aToString(this.getU8a(e,t))}allocU8a(e){const t=b(this,Dt).__wbindgen_malloc(e.length*1);return this.getUint8().set(e,t/1),[t,e.length]}allocString(e){return this.allocU8a(stringToU8a(e))}resultU8a(){const e=this.getInt32()[2],t=this.getInt32()[8/4+1],n=this.getU8a(e,t).slice();return b(this,Dt).__wbindgen_free(e,t*1),n}resultString(){return u8aToString(this.resultU8a())}}er=new WeakMap,tr=new WeakMap,vn=new WeakMap,jt=new WeakMap,Yt=new WeakMap,Dt=new WeakMap,Br=new WeakMap,dr=new WeakMap,wn=new WeakMap,Nr=new WeakMap;function createWasmFn(r,e,t){return async n=>{const s={error:null,type:"none",wasm:null};try{if(!e||!e.length)throw new Error("No WebAssembly provided for initialization");if(typeof WebAssembly!="object"||typeof WebAssembly.instantiate!="function")throw new Error("WebAssembly is not available in your environment");const i=await WebAssembly.instantiate(e,{wbg:n});s.wasm=i.instance.exports,s.type="wasm"}catch(i){typeof t=="function"?(s.wasm=t(n),s.type="asm"):(s.error=`FATAL: Unable to initialize @polkadot/wasm-${r}:: ${i.message}`,console.error(s.error))}return s}}const chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";function base64Decode$1(r){const e=[];let t=0,n=0;for(let s=0;s<r.length&&r[s]!=="=";s++)t=t<<6|chars.indexOf(r[s]),(n+=6)>=8&&e.push(t>>>(n-=8)&255);return Uint8Array.from(e)}const u8$1=Uint8Array,u16$1=Uint16Array,u32$2=Uint32Array,clim=new u8$1([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),fleb=new u8$1([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),fdeb=new u8$1([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),freb=(r,e)=>{const t=new u16$1(31);for(let s=0;s<31;++s)t[s]=e+=1<<r[s-1];const n=new u32$2(t[30]);for(let s=1;s<30;++s)for(let i=t[s];i<t[s+1];++i)n[i]=i-t[s]<<5|s;return[t,n]},[fl,revfl]=freb(fleb,2);fl[28]=258,revfl[258]=28;const[fd]=freb(fdeb,0),rev=new u16$1(32768);for(let r=0;r<32768;++r){let e=(r&43690)>>>1|(r&21845)<<1;e=(e&52428)>>>2|(e&13107)<<2,e=(e&61680)>>>4|(e&3855)<<4,rev[r]=((e&65280)>>>8|(e&255)<<8)>>>1}const hMap=(r,e,t)=>{const n=r.length;let s=0;const i=new u16$1(e);for(;s<n;++s)++i[r[s]-1];const a=new u16$1(e);for(s=0;s<e;++s)a[s]=a[s-1]+i[s-1]<<1;let o;if(t){o=new u16$1(1<<e);const c=15-e;for(s=0;s<n;++s)if(r[s]){const h=s<<4|r[s],p=e-r[s];let x=a[r[s]-1]++<<p;for(const A=x|(1<<p)-1;x<=A;++x)o[rev[x]>>>c]=h}}else for(o=new u16$1(n),s=0;s<n;++s)o[s]=rev[a[r[s]-1]++]>>>15-r[s];return o},flt=new u8$1(288);for(let r=0;r<144;++r)flt[r]=8;for(let r=144;r<256;++r)flt[r]=9;for(let r=256;r<280;++r)flt[r]=7;for(let r=280;r<288;++r)flt[r]=8;const fdt=new u8$1(32);for(let r=0;r<32;++r)fdt[r]=5;const flrm=hMap(flt,9,1),fdrm=hMap(fdt,5,1),bits=(r,e,t)=>{const n=e>>>3;return(r[n]|r[n+1]<<8)>>>(e&7)&t},bits16=(r,e)=>{const t=e>>>3;return(r[t]|r[t+1]<<8|r[t+2]<<16)>>>(e&7)},shft=r=>(r>>>3)+(r&7&&1),slc=(r,e,t)=>{(e==null||e<0)&&(e=0),(t==null||t>r.length)&&(t=r.length);const n=new(r instanceof u16$1?u16$1:r instanceof u32$2?u32$2:u8$1)(t-e);return n.set(r.subarray(e,t)),n},max=r=>{let e=r[0];for(let t=1;t<r.length;++t)r[t]>e&&(e=r[t]);return e},inflt=(r,e,t)=>{const n=!t||t.i;t||(t={});const s=r.length,i=!e||!n;e||(e=new u8$1(s*3));const a=D=>{let F=e.length;if(D>F){const q=new u8$1(Math.max(F<<1,D));q.set(e),e=q}};let o=t.f||0,c=t.p||0,h=t.b||0,p=t.l,x=t.d,A=t.m,k=t.n;if(o&&!p)return e;const U=s<<3;do{if(!p){t.f=o=bits(r,c,1);const ae=bits(r,c+1,3);if(c+=3,ae)if(ae==1)p=flrm,x=fdrm,A=9,k=5;else if(ae==2){const Y=bits(r,c,31)+257,de=bits(r,c+10,15)+4,fe=Y+bits(r,c+5,31)+1;c+=14;const be=new u8$1(fe),Ie=new u8$1(19);for(let T=0;T<de;++T)Ie[clim[T]]=bits(r,c+T*3,7);c+=de*3;const Be=max(Ie),Ue=(1<<Be)-1;if(!n&&c+fe*(Be+7)>U)break;const re=hMap(Ie,Be,1);for(let T=0;T<fe;){const d=re[bits(r,c,Ue)];c+=d&15;const g=d>>>4;if(g<16)be[T++]=g;else{let P=0,I=0;for(g==16?(I=3+bits(r,c,3),c+=2,P=be[T-1]):g==17?(I=3+bits(r,c,7),c+=3):g==18&&(I=11+bits(r,c,127),c+=7);I--;)be[T++]=P}}const ee=be.subarray(0,Y),K=be.subarray(Y);A=max(ee),k=max(K),p=hMap(ee,A,1),x=hMap(K,k,1)}else throw"invalid block type";else{const Y=shft(c)+4,de=r[Y-4]|r[Y-3]<<8,fe=Y+de;if(fe>s){if(n)throw"unexpected EOF";break}i&&a(h+de),e.set(r.subarray(Y,fe),h),t.b=h+=de,t.p=c=fe<<3;continue}if(c>U)throw"unexpected EOF"}i&&a(h+131072);const D=(1<<A)-1,F=(1<<k)-1,q=A+k+18;for(;n||c+q<U;){const ae=p[bits16(r,c)&D],Y=ae>>>4;if(c+=ae&15,c>U)throw"unexpected EOF";if(!ae)throw"invalid length/literal";if(Y<256)e[h++]=Y;else if(Y==256){p=void 0;break}else{let de=Y-254;if(Y>264){const Ue=Y-257,re=fleb[Ue];de=bits(r,c,(1<<re)-1)+fl[Ue],c+=re}const fe=x[bits16(r,c)&F],be=fe>>>4;if(!fe)throw"invalid distance";c+=fe&15;let Ie=fd[be];if(be>3){const Ue=fdeb[be];Ie+=bits16(r,c)&(1<<Ue)-1,c+=Ue}if(c>U)throw"unexpected EOF";i&&a(h+131072);const Be=h+de;for(;h<Be;h+=4)e[h]=e[h-Ie],e[h+1]=e[h+1-Ie],e[h+2]=e[h+2-Ie],e[h+3]=e[h+3-Ie];h=Be}}t.l=p,t.p=c,t.b=h,p&&(o=1,t.m=A,t.d=x,t.n=k)}while(!o);return h==e.length?e:slc(e,0,h)},zlv=r=>{if((r[0]&15)!=8||r[0]>>>4>7||(r[0]<<8|r[1])%31)throw"invalid zlib data";if(r[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function unzlibSync(r,e){return inflt((zlv(r),r.subarray(2,-4)),e)}const sizeCompressed=171116,sizeUncompressed=339508,bytes$1="";var bytes_1={bytes:bytes$1,sizeCompressed,sizeUncompressed};const wasmBytes=unzlibSync(base64Decode$1(bytes_1.bytes),new Uint8Array(bytes_1.sizeUncompressed)),createWasm=createWasmFn("crypto",wasmBytes,null),bridge=new Bridge(createWasm);async function initBridge(r){return bridge.init(r)}function withWasm(r){return(...e)=>{if(!bridge.wasm)throw new Error("The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.");return r(bridge.wasm,...e)}}const bip39ToEntropy=withWasm((r,e)=>(r.ext_bip39_to_entropy(8,...bridge.allocString(e)),bridge.resultU8a())),bip39ToMiniSecret=withWasm((r,e,t)=>(r.ext_bip39_to_mini_secret(8,...bridge.allocString(e),...bridge.allocString(t)),bridge.resultU8a())),bip39ToSeed=withWasm((r,e,t)=>(r.ext_bip39_to_seed(8,...bridge.allocString(e),...bridge.allocString(t)),bridge.resultU8a())),bip39Validate=withWasm((r,e)=>r.ext_bip39_validate(...bridge.allocString(e))!==0),ed25519KeypairFromSeed=withWasm((r,e)=>(r.ext_ed_from_seed(8,...bridge.allocU8a(e)),bridge.resultU8a())),ed25519Sign$1=withWasm((r,e,t,n)=>(r.ext_ed_sign(8,...bridge.allocU8a(e),...bridge.allocU8a(t),...bridge.allocU8a(n)),bridge.resultU8a())),ed25519Verify$1=withWasm((r,e,t,n)=>r.ext_ed_verify(...bridge.allocU8a(e),...bridge.allocU8a(t),...bridge.allocU8a(n))!==0),secp256k1FromSeed=withWasm((r,e)=>(r.ext_secp_from_seed(8,...bridge.allocU8a(e)),bridge.resultU8a())),secp256k1Compress$1=withWasm((r,e)=>(r.ext_secp_pub_compress(8,...bridge.allocU8a(e)),bridge.resultU8a())),secp256k1Expand$1=withWasm((r,e)=>(r.ext_secp_pub_expand(8,...bridge.allocU8a(e)),bridge.resultU8a())),secp256k1Recover$1=withWasm((r,e,t,n)=>(r.ext_secp_recover(8,...bridge.allocU8a(e),...bridge.allocU8a(t),n),bridge.resultU8a())),secp256k1Sign$1=withWasm((r,e,t)=>(r.ext_secp_sign(8,...bridge.allocU8a(e),...bridge.allocU8a(t)),bridge.resultU8a())),sr25519DeriveKeypairHard=withWasm((r,e,t)=>(r.ext_sr_derive_keypair_hard(8,...bridge.allocU8a(e),...bridge.allocU8a(t)),bridge.resultU8a())),sr25519DeriveKeypairSoft=withWasm((r,e,t)=>(r.ext_sr_derive_keypair_soft(8,...bridge.allocU8a(e),...bridge.allocU8a(t)),bridge.resultU8a())),sr25519KeypairFromSeed=withWasm((r,e)=>(r.ext_sr_from_seed(8,...bridge.allocU8a(e)),bridge.resultU8a())),sr25519Sign$1=withWasm((r,e,t,n)=>(r.ext_sr_sign(8,...bridge.allocU8a(e),...bridge.allocU8a(t),...bridge.allocU8a(n)),bridge.resultU8a())),sr25519Verify$1=withWasm((r,e,t,n)=>r.ext_sr_verify(...bridge.allocU8a(e),...bridge.allocU8a(t),...bridge.allocU8a(n))!==0),vrfSign=withWasm((r,e,t,n,s)=>(r.ext_vrf_sign(8,...bridge.allocU8a(e),...bridge.allocU8a(t),...bridge.allocU8a(n),...bridge.allocU8a(s)),bridge.resultU8a())),vrfVerify=withWasm((r,e,t,n,s,i)=>r.ext_vrf_verify(...bridge.allocU8a(e),...bridge.allocU8a(t),...bridge.allocU8a(n),...bridge.allocU8a(s),...bridge.allocU8a(i))!==0),blake2b$1=withWasm((r,e,t,n)=>(r.ext_blake2b(8,...bridge.allocU8a(e),...bridge.allocU8a(t),n),bridge.resultU8a())),hmacSha256=withWasm((r,e,t)=>(r.ext_hmac_sha256(8,...bridge.allocU8a(e),...bridge.allocU8a(t)),bridge.resultU8a())),hmacSha512=withWasm((r,e,t)=>(r.ext_hmac_sha512(8,...bridge.allocU8a(e),...bridge.allocU8a(t)),bridge.resultU8a())),keccak256=withWasm((r,e)=>(r.ext_keccak256(8,...bridge.allocU8a(e)),bridge.resultU8a())),keccak512=withWasm((r,e)=>(r.ext_keccak512(8,...bridge.allocU8a(e)),bridge.resultU8a())),pbkdf2$1=withWasm((r,e,t,n)=>(r.ext_pbkdf2(8,...bridge.allocU8a(e),...bridge.allocU8a(t),n),bridge.resultU8a())),scrypt$1=withWasm((r,e,t,n,s,i)=>(r.ext_scrypt(8,...bridge.allocU8a(e),...bridge.allocU8a(t),n,s,i),bridge.resultU8a())),sha256$1=withWasm((r,e)=>(r.ext_sha256(8,...bridge.allocU8a(e)),bridge.resultU8a())),sha512$1=withWasm((r,e)=>(r.ext_sha512(8,...bridge.allocU8a(e)),bridge.resultU8a())),twox=withWasm((r,e,t)=>(r.ext_twox(8,...bridge.allocU8a(e),t),bridge.resultU8a()));function isReady(){return!!bridge.wasm}async function waitReady(){try{return!!await initBridge()}catch{return!1}}function cryptoWaitReady(){return waitReady().then(()=>(assert$1(isReady(),"Unable to initialize @polkadot/util-crypto"),!0)).catch(()=>!1)}function number(r){if(!Number.isSafeInteger(r)||r<0)throw new Error(`Wrong positive integer: ${r}`)}function bool$1(r){if(typeof r!="boolean")throw new Error(`Expected boolean, not ${r}`)}function bytes(r,...e){if(!(r instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(e.length>0&&!e.includes(r.length))throw new TypeError(`Expected Uint8Array of length ${e}, not of length=${r.length}`)}function hash(r){if(typeof r!="function"||typeof r.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");number(r.outputLen),number(r.blockLen)}function exists(r,e=!0){if(r.destroyed)throw new Error("Hash instance has been destroyed");if(e&&r.finished)throw new Error("Hash#digest() has already been called")}function output(r,e){bytes(r);const t=e.outputLen;if(r.length<t)throw new Error(`digestInto() expects output buffer of length at least ${t}`)}const assert={number,bool:bool$1,bytes,hash,exists,output};/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */const u32$1=r=>new Uint32Array(r.buffer,r.byteOffset,Math.floor(r.byteLength/4)),createView=r=>new DataView(r.buffer,r.byteOffset,r.byteLength),rotr=(r,e)=>r<<32-e|r>>>e,isLE=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;if(!isLE)throw new Error("Non little-endian hardware is not supported");Array.from({length:256},(r,e)=>e.toString(16).padStart(2,"0"));function utf8ToBytes(r){if(typeof r!="string")throw new TypeError(`utf8ToBytes expected string, got ${typeof r}`);return new TextEncoder().encode(r)}function toBytes(r){if(typeof r=="string"&&(r=utf8ToBytes(r)),!(r instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof r})`);return r}class Hash{clone(){return this._cloneInto()}}const isPlainObject=r=>Object.prototype.toString.call(r)==="[object Object]"&&r.constructor===Object;function checkOpts(r,e){if(e!==void 0&&(typeof e!="object"||!isPlainObject(e)))throw new TypeError("Options should be object or undefined");return Object.assign(r,e)}function wrapConstructor(r){const e=n=>r().update(toBytes(n)).digest(),t=r();return e.outputLen=t.outputLen,e.blockLen=t.blockLen,e.create=()=>r(),e}function wrapConstructorWithOpts(r){const e=(n,s)=>r(s).update(toBytes(n)).digest(),t=r({});return e.outputLen=t.outputLen,e.blockLen=t.blockLen,e.create=n=>r(n),e}class HMAC extends Hash{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,assert.hash(e);const n=toBytes(t);if(this.iHash=e.create(),!(this.iHash instanceof Hash))throw new TypeError("Expected instance of class which extends utils.Hash");const s=this.blockLen=this.iHash.blockLen;this.outputLen=this.iHash.outputLen;const i=new Uint8Array(s);i.set(n.length>this.iHash.blockLen?e.create().update(n).digest():n);for(let a=0;a<i.length;a++)i[a]^=54;this.iHash.update(i),this.oHash=e.create();for(let a=0;a<i.length;a++)i[a]^=106;this.oHash.update(i),i.fill(0)}update(e){return assert.exists(this),this.iHash.update(e),this}digestInto(e){assert.exists(this),assert.bytes(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:t,iHash:n,finished:s,destroyed:i,blockLen:a,outputLen:o}=this;return e=e,e.finished=s,e.destroyed=i,e.blockLen=a,e.outputLen=o,e.oHash=t._cloneInto(e.oHash),e.iHash=n._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const hmac=(r,e,t)=>new HMAC(r,e).update(t).digest();hmac.create=(r,e)=>new HMAC(r,e);function setBigUint64(r,e,t,n){if(typeof r.setBigUint64=="function")return r.setBigUint64(e,t,n);const s=BigInt(32),i=BigInt(4294967295),a=Number(t>>s&i),o=Number(t&i),c=n?4:0,h=n?0:4;r.setUint32(e+c,a,n),r.setUint32(e+h,o,n)}class SHA2 extends Hash{constructor(e,t,n,s){super(),this.blockLen=e,this.outputLen=t,this.padOffset=n,this.isLE=s,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=createView(this.buffer)}update(e){assert.exists(this);const{view:t,buffer:n,blockLen:s}=this;e=toBytes(e);const i=e.length;for(let a=0;a<i;){const o=Math.min(s-this.pos,i-a);if(o===s){const c=createView(e);for(;s<=i-a;a+=s)this.process(c,a);continue}n.set(e.subarray(a,a+o),this.pos),this.pos+=o,a+=o,this.pos===s&&(this.process(t,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){assert.exists(this),assert.output(e,this),this.finished=!0;const{buffer:t,view:n,blockLen:s,isLE:i}=this;let{pos:a}=this;t[a++]=128,this.buffer.subarray(a).fill(0),this.padOffset>s-a&&(this.process(n,0),a=0);for(let c=a;c<s;c++)t[c]=0;setBigUint64(n,s-8,BigInt(this.length*8),i),this.process(n,0);const o=createView(e);this.get().forEach((c,h)=>o.setUint32(4*h,c,i))}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const n=e.slice(0,t);return this.destroy(),n}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:t,buffer:n,length:s,finished:i,destroyed:a,pos:o}=this;return e.length=s,e.pos=o,e.finished=i,e.destroyed=a,s%t&&e.buffer.set(n),e}}const Chi=(r,e,t)=>r&e^~r&t,Maj=(r,e,t)=>r&e^r&t^e&t,SHA256_K=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),IV$1=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),SHA256_W=new Uint32Array(64);class SHA256 extends SHA2{constructor(){super(64,32,8,!1),this.A=IV$1[0]|0,this.B=IV$1[1]|0,this.C=IV$1[2]|0,this.D=IV$1[3]|0,this.E=IV$1[4]|0,this.F=IV$1[5]|0,this.G=IV$1[6]|0,this.H=IV$1[7]|0}get(){const{A:e,B:t,C:n,D:s,E:i,F:a,G:o,H:c}=this;return[e,t,n,s,i,a,o,c]}set(e,t,n,s,i,a,o,c){this.A=e|0,this.B=t|0,this.C=n|0,this.D=s|0,this.E=i|0,this.F=a|0,this.G=o|0,this.H=c|0}process(e,t){for(let x=0;x<16;x++,t+=4)SHA256_W[x]=e.getUint32(t,!1);for(let x=16;x<64;x++){const A=SHA256_W[x-15],k=SHA256_W[x-2],U=rotr(A,7)^rotr(A,18)^A>>>3,D=rotr(k,17)^rotr(k,19)^k>>>10;SHA256_W[x]=D+SHA256_W[x-7]+U+SHA256_W[x-16]|0}let{A:n,B:s,C:i,D:a,E:o,F:c,G:h,H:p}=this;for(let x=0;x<64;x++){const A=rotr(o,6)^rotr(o,11)^rotr(o,25),k=p+A+Chi(o,c,h)+SHA256_K[x]+SHA256_W[x]|0,D=(rotr(n,2)^rotr(n,13)^rotr(n,22))+Maj(n,s,i)|0;p=h,h=c,c=o,o=a+k|0,a=i,i=s,s=n,n=k+D|0}n=n+this.A|0,s=s+this.B|0,i=i+this.C|0,a=a+this.D|0,o=o+this.E|0,c=c+this.F|0,h=h+this.G|0,p=p+this.H|0,this.set(n,s,i,a,o,c,h,p)}roundClean(){SHA256_W.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}const sha256=wrapConstructor(()=>new SHA256),U32_MASK64=BigInt(2**32-1),_32n$1=BigInt(32);function fromBig(r,e=!1){return e?{h:Number(r&U32_MASK64),l:Number(r>>_32n$1&U32_MASK64)}:{h:Number(r>>_32n$1&U32_MASK64)|0,l:Number(r&U32_MASK64)|0}}function split(r,e=!1){let t=new Uint32Array(r.length),n=new Uint32Array(r.length);for(let s=0;s<r.length;s++){const{h:i,l:a}=fromBig(r[s],e);[t[s],n[s]]=[i,a]}return[t,n]}const toBig=(r,e)=>BigInt(r>>>0)<<_32n$1|BigInt(e>>>0),shrSH=(r,e,t)=>r>>>t,shrSL=(r,e,t)=>r<<32-t|e>>>t,rotrSH=(r,e,t)=>r>>>t|e<<32-t,rotrSL=(r,e,t)=>r<<32-t|e>>>t,rotrBH=(r,e,t)=>r<<64-t|e>>>t-32,rotrBL=(r,e,t)=>r>>>t-32|e<<64-t,rotr32H=(r,e)=>e,rotr32L=(r,e)=>r,rotlSH=(r,e,t)=>r<<t|e>>>32-t,rotlSL=(r,e,t)=>e<<t|r>>>32-t,rotlBH=(r,e,t)=>e<<t-32|r>>>64-t,rotlBL=(r,e,t)=>r<<t-32|e>>>64-t;function add(r,e,t,n){const s=(e>>>0)+(n>>>0);return{h:r+t+(s/2**32|0)|0,l:s|0}}const add3L=(r,e,t)=>(r>>>0)+(e>>>0)+(t>>>0),add3H=(r,e,t,n)=>e+t+n+(r/2**32|0)|0,add4L=(r,e,t,n)=>(r>>>0)+(e>>>0)+(t>>>0)+(n>>>0),add4H=(r,e,t,n,s)=>e+t+n+s+(r/2**32|0)|0,add5L=(r,e,t,n,s)=>(r>>>0)+(e>>>0)+(t>>>0)+(n>>>0)+(s>>>0),add5H=(r,e,t,n,s,i)=>e+t+n+s+i+(r/2**32|0)|0,u64$1={fromBig,split,toBig,shrSH,shrSL,rotrSH,rotrSL,rotrBH,rotrBL,rotr32H,rotr32L,rotlSH,rotlSL,rotlBH,rotlBL,add,add3L,add3H,add4L,add4H,add5H,add5L},[SHA512_Kh,SHA512_Kl]=u64$1.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(r=>BigInt(r))),SHA512_W_H=new Uint32Array(80),SHA512_W_L=new Uint32Array(80);class SHA512 extends SHA2{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:e,Al:t,Bh:n,Bl:s,Ch:i,Cl:a,Dh:o,Dl:c,Eh:h,El:p,Fh:x,Fl:A,Gh:k,Gl:U,Hh:D,Hl:F}=this;return[e,t,n,s,i,a,o,c,h,p,x,A,k,U,D,F]}set(e,t,n,s,i,a,o,c,h,p,x,A,k,U,D,F){this.Ah=e|0,this.Al=t|0,this.Bh=n|0,this.Bl=s|0,this.Ch=i|0,this.Cl=a|0,this.Dh=o|0,this.Dl=c|0,this.Eh=h|0,this.El=p|0,this.Fh=x|0,this.Fl=A|0,this.Gh=k|0,this.Gl=U|0,this.Hh=D|0,this.Hl=F|0}process(e,t){for(let Y=0;Y<16;Y++,t+=4)SHA512_W_H[Y]=e.getUint32(t),SHA512_W_L[Y]=e.getUint32(t+=4);for(let Y=16;Y<80;Y++){const de=SHA512_W_H[Y-15]|0,fe=SHA512_W_L[Y-15]|0,be=u64$1.rotrSH(de,fe,1)^u64$1.rotrSH(de,fe,8)^u64$1.shrSH(de,fe,7),Ie=u64$1.rotrSL(de,fe,1)^u64$1.rotrSL(de,fe,8)^u64$1.shrSL(de,fe,7),Be=SHA512_W_H[Y-2]|0,Ue=SHA512_W_L[Y-2]|0,re=u64$1.rotrSH(Be,Ue,19)^u64$1.rotrBH(Be,Ue,61)^u64$1.shrSH(Be,Ue,6),ee=u64$1.rotrSL(Be,Ue,19)^u64$1.rotrBL(Be,Ue,61)^u64$1.shrSL(Be,Ue,6),K=u64$1.add4L(Ie,ee,SHA512_W_L[Y-7],SHA512_W_L[Y-16]),T=u64$1.add4H(K,be,re,SHA512_W_H[Y-7],SHA512_W_H[Y-16]);SHA512_W_H[Y]=T|0,SHA512_W_L[Y]=K|0}let{Ah:n,Al:s,Bh:i,Bl:a,Ch:o,Cl:c,Dh:h,Dl:p,Eh:x,El:A,Fh:k,Fl:U,Gh:D,Gl:F,Hh:q,Hl:ae}=this;for(let Y=0;Y<80;Y++){const de=u64$1.rotrSH(x,A,14)^u64$1.rotrSH(x,A,18)^u64$1.rotrBH(x,A,41),fe=u64$1.rotrSL(x,A,14)^u64$1.rotrSL(x,A,18)^u64$1.rotrBL(x,A,41),be=x&k^~x&D,Ie=A&U^~A&F,Be=u64$1.add5L(ae,fe,Ie,SHA512_Kl[Y],SHA512_W_L[Y]),Ue=u64$1.add5H(Be,q,de,be,SHA512_Kh[Y],SHA512_W_H[Y]),re=Be|0,ee=u64$1.rotrSH(n,s,28)^u64$1.rotrBH(n,s,34)^u64$1.rotrBH(n,s,39),K=u64$1.rotrSL(n,s,28)^u64$1.rotrBL(n,s,34)^u64$1.rotrBL(n,s,39),T=n&i^n&o^i&o,d=s&a^s&c^a&c;q=D|0,ae=F|0,D=k|0,F=U|0,k=x|0,U=A|0,{h:x,l:A}=u64$1.add(h|0,p|0,Ue|0,re|0),h=o|0,p=c|0,o=i|0,c=a|0,i=n|0,a=s|0;const g=u64$1.add3L(re,K,d);n=u64$1.add3H(g,Ue,ee,T),s=g|0}({h:n,l:s}=u64$1.add(this.Ah|0,this.Al|0,n|0,s|0)),{h:i,l:a}=u64$1.add(this.Bh|0,this.Bl|0,i|0,a|0),{h:o,l:c}=u64$1.add(this.Ch|0,this.Cl|0,o|0,c|0),{h,l:p}=u64$1.add(this.Dh|0,this.Dl|0,h|0,p|0),{h:x,l:A}=u64$1.add(this.Eh|0,this.El|0,x|0,A|0),{h:k,l:U}=u64$1.add(this.Fh|0,this.Fl|0,k|0,U|0),{h:D,l:F}=u64$1.add(this.Gh|0,this.Gl|0,D|0,F|0),{h:q,l:ae}=u64$1.add(this.Hh|0,this.Hl|0,q|0,ae|0),this.set(n,s,i,a,o,c,h,p,x,A,k,U,D,F,q,ae)}roundClean(){SHA512_W_H.fill(0),SHA512_W_L.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}class SHA512_256 extends SHA512{constructor(){super(),this.Ah=573645204,this.Al=-64227540,this.Bh=-1621794909,this.Bl=-934517566,this.Ch=596883563,this.Cl=1867755857,this.Dh=-1774684391,this.Dl=1497426621,this.Eh=-1775747358,this.El=-1467023389,this.Fh=-1101128155,this.Fl=1401305490,this.Gh=721525244,this.Gl=746961066,this.Hh=246885852,this.Hl=-2117784414,this.outputLen=32}}class SHA384 extends SHA512{constructor(){super(),this.Ah=-876896931,this.Al=-1056596264,this.Bh=1654270250,this.Bl=914150663,this.Ch=-1856437926,this.Cl=812702999,this.Dh=355462360,this.Dl=-150054599,this.Eh=1731405415,this.El=-4191439,this.Fh=-1900787065,this.Fl=1750603025,this.Gh=-619958771,this.Gl=1694076839,this.Hh=1203062813,this.Hl=-1090891868,this.outputLen=48}}const sha512=wrapConstructor(()=>new SHA512);wrapConstructor(()=>new SHA512_256);wrapConstructor(()=>new SHA384);const JS_HASH={256:sha256,512:sha512},WA_MHAC={256:hmacSha256,512:hmacSha512};function hmacShaAsU8a(r,e,t=256,n){const s=u8aToU8a(r);return!hasBigInt||!n&&isReady()?WA_MHAC[t](s,e):hmac(JS_HASH[t],s,e)}/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */function assertNumber(r){if(!Number.isSafeInteger(r))throw new Error(`Wrong integer: ${r}`)}function chain$1(...r){const e=(s,i)=>a=>s(i(a)),t=Array.from(r).reverse().reduce((s,i)=>s?e(s,i.encode):i.encode,void 0),n=r.reduce((s,i)=>s?e(s,i.decode):i.decode,void 0);return{encode:t,decode:n}}function alphabet(r){return{encode:e=>{if(!Array.isArray(e)||e.length&&typeof e[0]!="number")throw new Error("alphabet.encode input should be an array of numbers");return e.map(t=>{if(assertNumber(t),t<0||t>=r.length)throw new Error(`Digit index outside alphabet: ${t} (alphabet: ${r.length})`);return r[t]})},decode:e=>{if(!Array.isArray(e)||e.length&&typeof e[0]!="string")throw new Error("alphabet.decode input should be array of strings");return e.map(t=>{if(typeof t!="string")throw new Error(`alphabet.decode: not string element=${t}`);const n=r.indexOf(t);if(n===-1)throw new Error(`Unknown letter: "${t}". Allowed: ${r}`);return n})}}}function join(r=""){if(typeof r!="string")throw new Error("join separator should be string");return{encode:e=>{if(!Array.isArray(e)||e.length&&typeof e[0]!="string")throw new Error("join.encode input should be array of strings");for(let t of e)if(typeof t!="string")throw new Error(`join.encode: non-string input=${t}`);return e.join(r)},decode:e=>{if(typeof e!="string")throw new Error("join.decode input should be string");return e.split(r)}}}function padding(r,e="="){if(assertNumber(r),typeof e!="string")throw new Error("padding chr should be string");return{encode(t){if(!Array.isArray(t)||t.length&&typeof t[0]!="string")throw new Error("padding.encode input should be array of strings");for(let n of t)if(typeof n!="string")throw new Error(`padding.encode: non-string input=${n}`);for(;t.length*r%8;)t.push(e);return t},decode(t){if(!Array.isArray(t)||t.length&&typeof t[0]!="string")throw new Error("padding.encode input should be array of strings");for(let s of t)if(typeof s!="string")throw new Error(`padding.decode: non-string input=${s}`);let n=t.length;if(n*r%8)throw new Error("Invalid padding: string should have whole number of bytes");for(;n>0&&t[n-1]===e;n--)if(!((n-1)*r%8))throw new Error("Invalid padding: string has too much padding");return t.slice(0,n)}}}function normalize$1(r){if(typeof r!="function")throw new Error("normalize fn should be function");return{encode:e=>e,decode:e=>r(e)}}function convertRadix(r,e,t){if(e<2)throw new Error(`convertRadix: wrong from=${e}, base cannot be less than 2`);if(t<2)throw new Error(`convertRadix: wrong to=${t}, base cannot be less than 2`);if(!Array.isArray(r))throw new Error("convertRadix: data should be array");if(!r.length)return[];let n=0;const s=[],i=Array.from(r);for(i.forEach(a=>{if(assertNumber(a),a<0||a>=e)throw new Error(`Wrong integer: ${a}`)});;){let a=0,o=!0;for(let c=n;c<i.length;c++){const h=i[c],p=e*a+h;if(!Number.isSafeInteger(p)||e*a/e!==a||p-h!==e*a)throw new Error("convertRadix: carry overflow");if(a=p%t,i[c]=Math.floor(p/t),!Number.isSafeInteger(i[c])||i[c]*t+a!==p)throw new Error("convertRadix: carry overflow");if(o)i[c]?o=!1:n=c;else continue}if(s.push(a),o)break}for(let a=0;a<r.length-1&&r[a]===0;a++)s.push(0);return s.reverse()}const gcd=(r,e)=>e?gcd(e,r%e):r,radix2carry=(r,e)=>r+(e-gcd(r,e));function convertRadix2(r,e,t,n){if(!Array.isArray(r))throw new Error("convertRadix2: data should be array");if(e<=0||e>32)throw new Error(`convertRadix2: wrong from=${e}`);if(t<=0||t>32)throw new Error(`convertRadix2: wrong to=${t}`);if(radix2carry(e,t)>32)throw new Error(`convertRadix2: carry overflow from=${e} to=${t} carryBits=${radix2carry(e,t)}`);let s=0,i=0;const a=2**t-1,o=[];for(const c of r){if(assertNumber(c),c>=2**e)throw new Error(`convertRadix2: invalid data word=${c} from=${e}`);if(s=s<<e|c,i+e>32)throw new Error(`convertRadix2: carry overflow pos=${i} from=${e}`);for(i+=e;i>=t;i-=t)o.push((s>>i-t&a)>>>0);s&=2**i-1}if(s=s<<t-i&a,!n&&i>=e)throw new Error("Excess padding");if(!n&&s)throw new Error(`Non-zero padding: ${s}`);return n&&i>0&&o.push(s>>>0),o}function radix(r){return assertNumber(r),{encode:e=>{if(!(e instanceof Uint8Array))throw new Error("radix.encode input should be Uint8Array");return convertRadix(Array.from(e),2**8,r)},decode:e=>{if(!Array.isArray(e)||e.length&&typeof e[0]!="number")throw new Error("radix.decode input should be array of strings");return Uint8Array.from(convertRadix(e,r,2**8))}}}function radix2(r,e=!1){if(assertNumber(r),r<=0||r>32)throw new Error("radix2: bits should be in (0..32]");if(radix2carry(8,r)>32||radix2carry(r,8)>32)throw new Error("radix2: carry overflow");return{encode:t=>{if(!(t instanceof Uint8Array))throw new Error("radix2.encode input should be Uint8Array");return convertRadix2(Array.from(t),8,r,!e)},decode:t=>{if(!Array.isArray(t)||t.length&&typeof t[0]!="number")throw new Error("radix2.decode input should be array of strings");return Uint8Array.from(convertRadix2(t,r,8,e))}}}function unsafeWrapper(r){if(typeof r!="function")throw new Error("unsafeWrapper fn should be function");return function(...e){try{return r.apply(null,e)}catch{}}}const base16=chain$1(radix2(4),alphabet("0123456789ABCDEF"),join("")),base32=chain$1(radix2(5),alphabet("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),padding(5),join(""));chain$1(radix2(5),alphabet("0123456789ABCDEFGHIJKLMNOPQRSTUV"),padding(5),join(""));chain$1(radix2(5),alphabet("0123456789ABCDEFGHJKMNPQRSTVWXYZ"),join(""),normalize$1(r=>r.toUpperCase().replace(/O/g,"0").replace(/[IL]/g,"1")));const base64=chain$1(radix2(6),alphabet("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),padding(6),join("")),base64url=chain$1(radix2(6),alphabet("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),padding(6),join("")),genBase58=r=>chain$1(radix(58),alphabet(r),join("")),base58=genBase58("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");genBase58("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ");genBase58("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz");const XMR_BLOCK_LEN=[0,2,3,5,6,7,9,10,11],base58xmr={encode(r){let e="";for(let t=0;t<r.length;t+=8){const n=r.subarray(t,t+8);e+=base58.encode(n).padStart(XMR_BLOCK_LEN[n.length],"1")}return e},decode(r){let e=[];for(let t=0;t<r.length;t+=11){const n=r.slice(t,t+11),s=XMR_BLOCK_LEN.indexOf(n.length),i=base58.decode(n);for(let a=0;a<i.length-s;a++)if(i[a]!==0)throw new Error("base58xmr: wrong padding");e=e.concat(Array.from(i.slice(i.length-s)))}return Uint8Array.from(e)}},BECH_ALPHABET=chain$1(alphabet("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),join("")),POLYMOD_GENERATORS=[996825010,642813549,513874426,1027748829,705979059];function bech32Polymod(r){const e=r>>25;let t=(r&33554431)<<5;for(let n=0;n<POLYMOD_GENERATORS.length;n++)(e>>n&1)===1&&(t^=POLYMOD_GENERATORS[n]);return t}function bechChecksum(r,e,t=1){const n=r.length;let s=1;for(let i=0;i<n;i++){const a=r.charCodeAt(i);if(a<33||a>126)throw new Error(`Invalid prefix (${r})`);s=bech32Polymod(s)^a>>5}s=bech32Polymod(s);for(let i=0;i<n;i++)s=bech32Polymod(s)^r.charCodeAt(i)&31;for(let i of e)s=bech32Polymod(s)^i;for(let i=0;i<6;i++)s=bech32Polymod(s);return s^=t,BECH_ALPHABET.encode(convertRadix2([s%2**30],30,5,!1))}function genBech32(r){const e=r==="bech32"?1:734539939,t=radix2(5),n=t.decode,s=t.encode,i=unsafeWrapper(n);function a(p,x,A=90){if(typeof p!="string")throw new Error(`bech32.encode prefix should be string, not ${typeof p}`);if(!Array.isArray(x)||x.length&&typeof x[0]!="number")throw new Error(`bech32.encode words should be array of numbers, not ${typeof x}`);const k=p.length+7+x.length;if(A!==!1&&k>A)throw new TypeError(`Length ${k} exceeds limit ${A}`);return p=p.toLowerCase(),`${p}1${BECH_ALPHABET.encode(x)}${bechChecksum(p,x,e)}`}function o(p,x=90){if(typeof p!="string")throw new Error(`bech32.decode input should be string, not ${typeof p}`);if(p.length<8||x!==!1&&p.length>x)throw new TypeError(`Wrong string length: ${p.length} (${p}). Expected (8..${x})`);const A=p.toLowerCase();if(p!==A&&p!==p.toUpperCase())throw new Error("String must be lowercase or uppercase");p=A;const k=p.lastIndexOf("1");if(k===0||k===-1)throw new Error('Letter "1" must be present between prefix and data only');const U=p.slice(0,k),D=p.slice(k+1);if(D.length<6)throw new Error("Data must be at least 6 characters long");const F=BECH_ALPHABET.decode(D).slice(0,-6),q=bechChecksum(U,F,e);if(!D.endsWith(q))throw new Error(`Invalid checksum in ${p}: expected "${q}"`);return{prefix:U,words:F}}const c=unsafeWrapper(o);function h(p){const{prefix:x,words:A}=o(p,!1);return{prefix:x,words:A,bytes:n(A)}}return{encode:a,decode:o,decodeToBytes:h,decodeUnsafe:c,fromWords:n,fromWordsUnsafe:i,toWords:s}}genBech32("bech32");genBech32("bech32m");const utf8={encode:r=>new TextDecoder().decode(r),decode:r=>new TextEncoder().encode(r)},hex=chain$1(radix2(4),alphabet("0123456789abcdef"),join(""),normalize$1(r=>{if(typeof r!="string"||r.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof r} with length ${r.length}`);return r.toLowerCase()})),CODERS={utf8,hex,base16,base32,base64,base64url,base58,base58xmr};`${Object.keys(CODERS).join(", ")}`;function createDecode({coder:r,ipfs:e},t){return(n,s)=>(t(n,s),r.decode(e&&s?n.substring(1):n))}function createEncode({coder:r,ipfs:e}){return(t,n)=>{const s=r.encode(u8aToU8a(t));return e&&n?`${e}${s}`:s}}function createValidate({chars:r,ipfs:e,type:t}){return(n,s)=>{assert$1(n&&typeof n=="string",()=>`Expected non-null, non-empty ${t} string input`),e&&s&&assert$1(n[0]===e,()=>`Expected ipfs-compatible ${t} to start with '${e}'`);for(let i=s?1:0;i<n.length;i++)assert$1(r.includes(n[i])||n[i]==="="&&(i===n.length-1||!r.includes(n[i+1])),()=>`Invalid ${t} character "${n[i]}" (0x${n.charCodeAt(i).toString(16)}) at index ${i}`);return!0}}const config$2={chars:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:base58,ipfs:"z",type:"base58"},base58Validate=createValidate(config$2),base58Decode=createDecode(config$2,base58Validate),base58Encode=createEncode(config$2),SIGMA=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3]);class BLAKE2 extends Hash{constructor(e,t,n={},s,i,a){if(super(),this.blockLen=e,this.outputLen=t,this.length=0,this.pos=0,this.finished=!1,this.destroyed=!1,assert.number(e),assert.number(t),assert.number(s),t<0||t>s)throw new Error("Blake2: outputLen bigger than keyLen");if(n.key!==void 0&&(n.key.length<1||n.key.length>s))throw new Error(`Key should be up 1..${s} byte long or undefined`);if(n.salt!==void 0&&n.salt.length!==i)throw new Error(`Salt should be ${i} byte long or undefined`);if(n.personalization!==void 0&&n.personalization.length!==a)throw new Error(`Personalization should be ${a} byte long or undefined`);this.buffer32=u32$1(this.buffer=new Uint8Array(e))}update(e){assert.exists(this);const{blockLen:t,buffer:n,buffer32:s}=this;e=toBytes(e);const i=e.length;for(let a=0;a<i;){this.pos===t&&(this.compress(s,0,!1),this.pos=0);const o=Math.min(t-this.pos,i-a),c=e.byteOffset+a;if(o===t&&!(c%4)&&a+o<i){const h=new Uint32Array(e.buffer,c,Math.floor((i-a)/4));for(let p=0;a+t<i;p+=s.length,a+=t)this.length+=t,this.compress(h,p,!1);continue}n.set(e.subarray(a,a+o),this.pos),this.pos+=o,this.length+=o,a+=o}return this}digestInto(e){assert.exists(this),assert.output(e,this);const{pos:t,buffer32:n}=this;this.finished=!0,this.buffer.subarray(t).fill(0),this.compress(n,0,!0);const s=u32$1(e);this.get().forEach((i,a)=>s[a]=i)}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const n=e.slice(0,t);return this.destroy(),n}_cloneInto(e){const{buffer:t,length:n,finished:s,destroyed:i,outputLen:a,pos:o}=this;return e||(e=new this.constructor({dkLen:a})),e.set(...this.get()),e.length=n,e.finished=s,e.destroyed=i,e.outputLen=a,e.buffer.set(t),e.pos=o,e}}const IV=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),BUF=new Uint32Array(32);function G1(r,e,t,n,s,i){const a=s[i],o=s[i+1];let c=BUF[2*r],h=BUF[2*r+1],p=BUF[2*e],x=BUF[2*e+1],A=BUF[2*t],k=BUF[2*t+1],U=BUF[2*n],D=BUF[2*n+1],F=u64$1.add3L(c,p,a);h=u64$1.add3H(F,h,x,o),c=F|0,{Dh:D,Dl:U}={Dh:D^h,Dl:U^c},{Dh:D,Dl:U}={Dh:u64$1.rotr32H(D,U),Dl:u64$1.rotr32L(D,U)},{h:k,l:A}=u64$1.add(k,A,D,U),{Bh:x,Bl:p}={Bh:x^k,Bl:p^A},{Bh:x,Bl:p}={Bh:u64$1.rotrSH(x,p,24),Bl:u64$1.rotrSL(x,p,24)},BUF[2*r]=c,BUF[2*r+1]=h,BUF[2*e]=p,BUF[2*e+1]=x,BUF[2*t]=A,BUF[2*t+1]=k,BUF[2*n]=U,BUF[2*n+1]=D}function G2(r,e,t,n,s,i){const a=s[i],o=s[i+1];let c=BUF[2*r],h=BUF[2*r+1],p=BUF[2*e],x=BUF[2*e+1],A=BUF[2*t],k=BUF[2*t+1],U=BUF[2*n],D=BUF[2*n+1],F=u64$1.add3L(c,p,a);h=u64$1.add3H(F,h,x,o),c=F|0,{Dh:D,Dl:U}={Dh:D^h,Dl:U^c},{Dh:D,Dl:U}={Dh:u64$1.rotrSH(D,U,16),Dl:u64$1.rotrSL(D,U,16)},{h:k,l:A}=u64$1.add(k,A,D,U),{Bh:x,Bl:p}={Bh:x^k,Bl:p^A},{Bh:x,Bl:p}={Bh:u64$1.rotrBH(x,p,63),Bl:u64$1.rotrBL(x,p,63)},BUF[2*r]=c,BUF[2*r+1]=h,BUF[2*e]=p,BUF[2*e+1]=x,BUF[2*t]=A,BUF[2*t+1]=k,BUF[2*n]=U,BUF[2*n+1]=D}class BLAKE2b extends BLAKE2{constructor(e={}){super(128,e.dkLen===void 0?64:e.dkLen,e,64,16,16),this.v0l=IV[0]|0,this.v0h=IV[1]|0,this.v1l=IV[2]|0,this.v1h=IV[3]|0,this.v2l=IV[4]|0,this.v2h=IV[5]|0,this.v3l=IV[6]|0,this.v3h=IV[7]|0,this.v4l=IV[8]|0,this.v4h=IV[9]|0,this.v5l=IV[10]|0,this.v5h=IV[11]|0,this.v6l=IV[12]|0,this.v6h=IV[13]|0,this.v7l=IV[14]|0,this.v7h=IV[15]|0;const t=e.key?e.key.length:0;if(this.v0l^=this.outputLen|t<<8|1<<16|1<<24,e.salt){const n=u32$1(toBytes(e.salt));this.v4l^=n[0],this.v4h^=n[1],this.v5l^=n[2],this.v5h^=n[3]}if(e.personalization){const n=u32$1(toBytes(e.personalization));this.v6l^=n[0],this.v6h^=n[1],this.v7l^=n[2],this.v7h^=n[3]}if(e.key){const n=new Uint8Array(this.blockLen);n.set(toBytes(e.key)),this.update(n)}}get(){let{v0l:e,v0h:t,v1l:n,v1h:s,v2l:i,v2h:a,v3l:o,v3h:c,v4l:h,v4h:p,v5l:x,v5h:A,v6l:k,v6h:U,v7l:D,v7h:F}=this;return[e,t,n,s,i,a,o,c,h,p,x,A,k,U,D,F]}set(e,t,n,s,i,a,o,c,h,p,x,A,k,U,D,F){this.v0l=e|0,this.v0h=t|0,this.v1l=n|0,this.v1h=s|0,this.v2l=i|0,this.v2h=a|0,this.v3l=o|0,this.v3h=c|0,this.v4l=h|0,this.v4h=p|0,this.v5l=x|0,this.v5h=A|0,this.v6l=k|0,this.v6h=U|0,this.v7l=D|0,this.v7h=F|0}compress(e,t,n){this.get().forEach((c,h)=>BUF[h]=c),BUF.set(IV,16);let{h:s,l:i}=u64$1.fromBig(BigInt(this.length));BUF[24]=IV[8]^i,BUF[25]=IV[9]^s,n&&(BUF[28]=~BUF[28],BUF[29]=~BUF[29]);let a=0;const o=SIGMA;for(let c=0;c<12;c++)G1(0,4,8,12,e,t+2*o[a++]),G2(0,4,8,12,e,t+2*o[a++]),G1(1,5,9,13,e,t+2*o[a++]),G2(1,5,9,13,e,t+2*o[a++]),G1(2,6,10,14,e,t+2*o[a++]),G2(2,6,10,14,e,t+2*o[a++]),G1(3,7,11,15,e,t+2*o[a++]),G2(3,7,11,15,e,t+2*o[a++]),G1(0,5,10,15,e,t+2*o[a++]),G2(0,5,10,15,e,t+2*o[a++]),G1(1,6,11,12,e,t+2*o[a++]),G2(1,6,11,12,e,t+2*o[a++]),G1(2,7,8,13,e,t+2*o[a++]),G2(2,7,8,13,e,t+2*o[a++]),G1(3,4,9,14,e,t+2*o[a++]),G2(3,4,9,14,e,t+2*o[a++]);this.v0l^=BUF[0]^BUF[16],this.v0h^=BUF[1]^BUF[17],this.v1l^=BUF[2]^BUF[18],this.v1h^=BUF[3]^BUF[19],this.v2l^=BUF[4]^BUF[20],this.v2h^=BUF[5]^BUF[21],this.v3l^=BUF[6]^BUF[22],this.v3h^=BUF[7]^BUF[23],this.v4l^=BUF[8]^BUF[24],this.v4h^=BUF[9]^BUF[25],this.v5l^=BUF[10]^BUF[26],this.v5h^=BUF[11]^BUF[27],this.v6l^=BUF[12]^BUF[28],this.v6h^=BUF[13]^BUF[29],this.v7l^=BUF[14]^BUF[30],this.v7h^=BUF[15]^BUF[31],BUF.fill(0)}destroy(){this.destroyed=!0,this.buffer32.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const blake2b=wrapConstructorWithOpts(r=>new BLAKE2b(r));function createAsHex(r){return(...e)=>u8aToHex(r(...e))}function createBitHasher(r,e){return(t,n)=>e(t,r,n)}function createDualHasher(r,e){return(t,n=256,s)=>{const i=u8aToU8a(t);return!hasBigInt||!s&&isReady()?r[n](i):e[n](i)}}function blake2AsU8a(r,e=256,t,n){const s=Math.ceil(e/8),i=u8aToU8a(r);return!hasBigInt||!n&&isReady()?blake2b$1(i,u8aToU8a(t),s):blake2b(i,{dkLen:s,key:t||void 0})}const blake2AsHex=createAsHex(blake2AsU8a),SS58_PREFIX=stringToU8a("SS58PRE");function sshash(r){return blake2AsU8a(u8aConcat(SS58_PREFIX,r),512)}function checkAddressChecksum(r){const e=r[0]&64?2:1,t=e===1?r[0]:(r[0]&63)<<2|r[1]>>6|(r[1]&63)<<8,n=[34+e,35+e].includes(r.length),s=r.length-(n?2:1),i=sshash(r.subarray(0,s));return[(r[0]&128)===0&&![46,47].includes(r[0])&&(n?r[r.length-2]===i[0]&&r[r.length-1]===i[1]:r[r.length-1]===i[0]),s,e,t]}var knownSubstrate=[{prefix:0,network:"polkadot",displayName:"Polkadot Relay Chain",symbols:["DOT"],decimals:[10],standardAccount:"*25519",website:"https://polkadot.network"},{prefix:1,network:"BareSr25519",displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",symbols:[],decimals:[],standardAccount:"Sr25519",website:null},{prefix:2,network:"kusama",displayName:"Kusama Relay Chain",symbols:["KSM"],decimals:[12],standardAccount:"*25519",website:"https://kusama.network"},{prefix:3,network:"BareEd25519",displayName:"Bare 32-bit Ed25519 public key.",symbols:[],decimals:[],standardAccount:"Ed25519",website:null},{prefix:4,network:"katalchain",displayName:"Katal Chain",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:5,network:"astar",displayName:"Astar Network",symbols:["ASTR"],decimals:[18],standardAccount:"*25519",website:"https://astar.network"},{prefix:6,network:"bifrost",displayName:"Bifrost",symbols:["BNC"],decimals:[12],standardAccount:"*25519",website:"https://bifrost.finance/"},{prefix:7,network:"edgeware",displayName:"Edgeware",symbols:["EDG"],decimals:[18],standardAccount:"*25519",website:"https://edgewa.re"},{prefix:8,network:"karura",displayName:"Karura",symbols:["KAR"],decimals:[12],standardAccount:"*25519",website:"https://karura.network/"},{prefix:9,network:"reynolds",displayName:"Laminar Reynolds Canary",symbols:["REY"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:10,network:"acala",displayName:"Acala",symbols:["ACA"],decimals:[12],standardAccount:"*25519",website:"https://acala.network/"},{prefix:11,network:"laminar",displayName:"Laminar",symbols:["LAMI"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:12,network:"polymesh",displayName:"Polymesh",symbols:["POLYX"],decimals:[6],standardAccount:"*25519",website:"https://polymath.network/"},{prefix:13,network:"integritee",displayName:"Integritee",symbols:["TEER"],decimals:[12],standardAccount:"*25519",website:"https://integritee.network"},{prefix:14,network:"totem",displayName:"Totem",symbols:["TOTEM"],decimals:[0],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:15,network:"synesthesia",displayName:"Synesthesia",symbols:["SYN"],decimals:[12],standardAccount:"*25519",website:"https://synesthesia.network/"},{prefix:16,network:"kulupu",displayName:"Kulupu",symbols:["KLP"],decimals:[12],standardAccount:"*25519",website:"https://kulupu.network/"},{prefix:17,network:"dark",displayName:"Dark Mainnet",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:18,network:"darwinia",displayName:"Darwinia Network",symbols:["RING","KTON"],decimals:[9,9],standardAccount:"*25519",website:"https://darwinia.network/"},{prefix:20,network:"stafi",displayName:"Stafi",symbols:["FIS"],decimals:[12],standardAccount:"*25519",website:"https://stafi.io"},{prefix:22,network:"dock-pos-mainnet",displayName:"Dock Mainnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:23,network:"shift",displayName:"ShiftNrg",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:24,network:"zero",displayName:"ZERO",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:25,network:"zero-alphaville",displayName:"ZERO Alphaville",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:26,network:"jupiter",displayName:"Jupiter",symbols:["jDOT"],decimals:[10],standardAccount:"*25519",website:"https://jupiter.patract.io"},{prefix:27,network:"kabocha",displayName:"Kabocha",symbols:["KAB"],decimals:[12],standardAccount:"*25519",website:"https://kabocha.network"},{prefix:28,network:"subsocial",displayName:"Subsocial",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:29,network:"cord",displayName:"CORD Network",symbols:["DHI","WAY"],decimals:[12,12],standardAccount:"*25519",website:"https://cord.network/"},{prefix:30,network:"phala",displayName:"Phala Network",symbols:["PHA"],decimals:[12],standardAccount:"*25519",website:"https://phala.network"},{prefix:31,network:"litentry",displayName:"Litentry Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:32,network:"robonomics",displayName:"Robonomics",symbols:["XRT"],decimals:[9],standardAccount:"*25519",website:"https://robonomics.network"},{prefix:33,network:"datahighway",displayName:"DataHighway",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:34,network:"ares",displayName:"Ares Protocol",symbols:["ARES"],decimals:[12],standardAccount:"*25519",website:"https://www.aresprotocol.com/"},{prefix:35,network:"vln",displayName:"Valiu Liquidity Network",symbols:["USDv"],decimals:[15],standardAccount:"*25519",website:"https://valiu.com/"},{prefix:36,network:"centrifuge",displayName:"Centrifuge Chain",symbols:["CFG"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:37,network:"nodle",displayName:"Nodle Chain",symbols:["NODL"],decimals:[11],standardAccount:"*25519",website:"https://nodle.io/"},{prefix:38,network:"kilt",displayName:"KILT Spiritnet",symbols:["KILT"],decimals:[15],standardAccount:"*25519",website:"https://kilt.io/"},{prefix:39,network:"mathchain",displayName:"MathChain mainnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:40,network:"mathchain-testnet",displayName:"MathChain testnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:41,network:"poli",displayName:"Polimec Chain",symbols:[],decimals:[],standardAccount:"*25519",website:"https://polimec.io/"},{prefix:42,network:"substrate",displayName:"Substrate",symbols:[],decimals:[],standardAccount:"*25519",website:"https://substrate.io/"},{prefix:43,network:"BareSecp256k1",displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",symbols:[],decimals:[],standardAccount:"secp256k1",website:null},{prefix:44,network:"chainx",displayName:"ChainX",symbols:["PCX"],decimals:[8],standardAccount:"*25519",website:"https://chainx.org/"},{prefix:45,network:"uniarts",displayName:"UniArts Network",symbols:["UART","UINK"],decimals:[12,12],standardAccount:"*25519",website:"https://uniarts.me"},{prefix:46,network:"reserved46",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:47,network:"reserved47",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:48,network:"neatcoin",displayName:"Neatcoin Mainnet",symbols:["NEAT"],decimals:[12],standardAccount:"*25519",website:"https://neatcoin.org"},{prefix:49,network:"picasso",displayName:"Picasso",symbols:["PICA"],decimals:[12],standardAccount:"*25519",website:"https://picasso.composable.finance"},{prefix:50,network:"composable",displayName:"Composable",symbols:["LAYR"],decimals:[12],standardAccount:"*25519",website:"https://composable.finance"},{prefix:51,network:"oak",displayName:"OAK Network",symbols:["OAK"],decimals:[10],standardAccount:"*25519",website:"https://oak.tech"},{prefix:52,network:"KICO",displayName:"KICO",symbols:["KICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:53,network:"DICO",displayName:"DICO",symbols:["DICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:54,network:"cere",displayName:"Cere Network",symbols:["CERE"],decimals:[10],standardAccount:"*25519",website:"https://cere.network"},{prefix:55,network:"xxnetwork",displayName:"xx network",symbols:["XX"],decimals:[9],standardAccount:"*25519",website:"https://xx.network"},{prefix:56,network:"pendulum",displayName:"Pendulum chain",symbols:["PEN"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:57,network:"amplitude",displayName:"Amplitude chain",symbols:["AMPE"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:63,network:"hydradx",displayName:"HydraDX",symbols:["HDX"],decimals:[12],standardAccount:"*25519",website:"https://hydradx.io"},{prefix:65,network:"aventus",displayName:"AvN Mainnet",symbols:["AVT"],decimals:[18],standardAccount:"*25519",website:"https://aventus.io"},{prefix:66,network:"crust",displayName:"Crust Network",symbols:["CRU"],decimals:[12],standardAccount:"*25519",website:"https://crust.network"},{prefix:67,network:"genshiro",displayName:"Genshiro Network",symbols:["GENS","EQD","LPT0"],decimals:[9,9,9],standardAccount:"*25519",website:"https://genshiro.equilibrium.io"},{prefix:68,network:"equilibrium",displayName:"Equilibrium Network",symbols:["EQ"],decimals:[9],standardAccount:"*25519",website:"https://equilibrium.io"},{prefix:69,network:"sora",displayName:"SORA Network",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:73,network:"zeitgeist",displayName:"Zeitgeist",symbols:["ZTG"],decimals:[10],standardAccount:"*25519",website:"https://zeitgeist.pm"},{prefix:77,network:"manta",displayName:"Manta network",symbols:["MANTA"],decimals:[18],standardAccount:"*25519",website:"https://manta.network"},{prefix:78,network:"calamari",displayName:"Calamari: Manta Canary Network",symbols:["KMA"],decimals:[12],standardAccount:"*25519",website:"https://manta.network"},{prefix:88,network:"polkadex",displayName:"Polkadex Mainnet",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:89,network:"polkadexparachain",displayName:"Polkadex Parachain",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:93,network:"fragnova",displayName:"Fragnova Network",symbols:["NOVA"],decimals:[12],standardAccount:"*25519",website:"https://fragnova.com"},{prefix:98,network:"polkasmith",displayName:"PolkaSmith Canary Network",symbols:["PKS"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:99,network:"polkafoundry",displayName:"PolkaFoundry Network",symbols:["PKF"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:101,network:"origintrail-parachain",displayName:"OriginTrail Parachain",symbols:["OTP"],decimals:[12],standardAccount:"*25519",website:"https://parachain.origintrail.io/"},{prefix:105,network:"pontem-network",displayName:"Pontem Network",symbols:["PONT"],decimals:[10],standardAccount:"*25519",website:"https://pontem.network"},{prefix:110,network:"heiko",displayName:"Heiko",symbols:["HKO"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:113,network:"integritee-incognito",displayName:"Integritee Incognito",symbols:[],decimals:[],standardAccount:"*25519",website:"https://integritee.network"},{prefix:117,network:"tinker",displayName:"Tinker",symbols:["TNKR"],decimals:[12],standardAccount:"*25519",website:"https://invarch.network"},{prefix:128,network:"clover",displayName:"Clover Finance",symbols:["CLV"],decimals:[18],standardAccount:"*25519",website:"https://clover.finance"},{prefix:131,network:"litmus",displayName:"Litmus Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:136,network:"altair",displayName:"Altair",symbols:["AIR"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:172,network:"parallel",displayName:"Parallel",symbols:["PARA"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:252,network:"social-network",displayName:"Social Network",symbols:["NET"],decimals:[18],standardAccount:"*25519",website:"https://social.network"},{prefix:255,network:"quartz_mainnet",displayName:"QUARTZ by UNIQUE",symbols:["QTZ"],decimals:[15],standardAccount:"*25519",website:"https://unique.network"},{prefix:268,network:"pioneer_network",displayName:"Pioneer Network by Bit.Country",symbols:["NEER"],decimals:[18],standardAccount:"*25519",website:"https://bit.country"},{prefix:420,network:"sora_kusama_para",displayName:"SORA Kusama Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:789,network:"geek",displayName:"GEEK Network",symbols:["GEEK"],decimals:[18],standardAccount:"*25519",website:"https://geek.gl"},{prefix:1110,network:"efinity",displayName:"Efinity",symbols:["EFI"],decimals:[18],standardAccount:"Sr25519",website:"https://efinity.io/"},{prefix:1221,network:"peaq",displayName:"Peaq Network",symbols:["PEAQ"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1222,network:"apex",displayName:"Apex Network",symbols:["APEX"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1284,network:"moonbeam",displayName:"Moonbeam",symbols:["GLMR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1285,network:"moonriver",displayName:"Moonriver",symbols:["MOVR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1328,network:"ajuna",displayName:"Ajuna Network",symbols:["AJUN"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1337,network:"bajun",displayName:"Bajun Network",symbols:["BAJU"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:2007,network:"kapex",displayName:"Kapex",symbols:["KAPEX"],decimals:[12],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:2032,network:"interlay",displayName:"Interlay",symbols:["INTR"],decimals:[10],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2092,network:"kintsugi",displayName:"Kintsugi",symbols:["KINT"],decimals:[12],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2254,network:"subspace_testnet",displayName:"Subspace testnet",symbols:["tSSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:6094,network:"subspace",displayName:"Subspace",symbols:["SSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:7007,network:"tidefi",displayName:"Tidefi",symbols:["TIFI"],decimals:[12],standardAccount:"*25519",website:"https://tidefi.com"},{prefix:7391,network:"unique_mainnet",displayName:"Unique Network",symbols:["UNQ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:9807,network:"dentnet",displayName:"DENTNet",symbols:["DENTX"],decimals:[18],standardAccount:"*25519",website:"https://www.dentnet.io"},{prefix:10041,network:"basilisk",displayName:"Basilisk",symbols:["BSX"],decimals:[12],standardAccount:"*25519",website:"https://bsx.fi"},{prefix:11330,network:"cess-testnet",displayName:"CESS Testnet",symbols:["TCESS"],decimals:[12],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11331,network:"cess",displayName:"CESS",symbols:["CESS"],decimals:[12],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11820,network:"contextfree",displayName:"Automata ContextFree",symbols:["CTX"],decimals:[18],standardAccount:"*25519",website:"https://ata.network"},{prefix:15253,network:"ice-network",displayName:"ICE Network",symbols:["ICX","ICY"],decimals:[18,18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:12191,network:"nftmart",displayName:"NFTMart",symbols:["NMT"],decimals:[12],standardAccount:"*25519",website:"https://nftmart.io"}];const knownGenesis={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],astar:["0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"],basilisk:["0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755"],bifrost:["0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b"],centrifuge:["0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82","0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],composable:["0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d"],"dock-mainnet":["0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae","0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],"nodle-para":["0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21"],parallel:["0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97"],picasso:["0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c"],polkadex:["0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],rococo:["0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e","0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897","0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770","0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff","0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a","0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9","0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779","0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215","0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9","0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147","0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd","0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299"],sora:["0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],statemint:["0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"],westend:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"],xxnetwork:["0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa"]},knownIcon={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",sora:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},knownLedger={acala:787,astar:810,bifrost:788,centrifuge:747,composable:354,"dock-mainnet":594,edgeware:523,equilibrium:99999997,genshiro:99999996,karura:686,kusama:434,"nodle-para":1003,parallel:354,polkadex:799,polkadot:354,polymesh:595,sora:617,statemine:434,statemint:354,xxnetwork:1955},knownTestnet={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,subspace_testnet:!0,"zero-alphaville":!0},UNSORTED=[0,2,42],TESTNETS=["testnet"];function toExpanded(r){const e=r.network||"",t=e.replace(/_/g,"-").split("-"),n=r;return n.slip44=knownLedger[e],n.hasLedgerSupport=!!n.slip44,n.genesisHash=knownGenesis[e]||[],n.icon=knownIcon[e]||"substrate",n.isTestnet=!!knownTestnet[e]||TESTNETS.includes(t[t.length-1]),n.isIgnored=n.isTestnet||!(r.standardAccount&&r.decimals&&r.decimals.length&&r.symbols&&r.symbols.length)&&r.prefix!==42,n}function filterSelectable({genesisHash:r,prefix:e}){return!!r.length||e===42}function filterAvailable(r){return!r.isIgnored&&!!r.network}function sortNetworks(r,e){const t=UNSORTED.includes(r.prefix),n=UNSORTED.includes(e.prefix);return t===n?t?0:r.displayName.localeCompare(e.displayName):t?-1:1}const allNetworks=knownSubstrate.map(toExpanded),availableNetworks=allNetworks.filter(filterAvailable).sort(sortNetworks),selectableNetworks=availableNetworks.filter(filterSelectable),defaults$1={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:availableNetworks.map(({prefix:r})=>r),prefix:42};function decodeAddress(r,e,t=-1){if(assert$1(r,"Invalid empty address passed"),isU8a(r)||isHex(r))return u8aToU8a(r);try{const n=base58Decode(r);assert$1(defaults$1.allowedEncodedLengths.includes(n.length),"Invalid decoded address length");const[s,i,a,o]=checkAddressChecksum(n);return assert$1(e||s,"Invalid decoded address checksum"),assert$1([-1,o].includes(t),()=>`Expected ss58Format ${t}, received ${o}`),n.slice(a,i)}catch(n){throw new Error(`Decoding ${r}: ${n.message}`)}}const BN_BE_OPTS={isLe:!1},BN_LE_OPTS={isLe:!0},BN_LE_16_OPTS={bitLength:16,isLe:!0},BN_BE_32_OPTS={bitLength:32,isLe:!1},BN_LE_32_OPTS={bitLength:32,isLe:!0},BN_BE_256_OPTS={bitLength:256,isLe:!1},BN_LE_256_OPTS={bitLength:256,isLe:!0};function addressToU8a(r){return decodeAddress(r)}const PREFIX=stringToU8a("modlpy/utilisuba");function createKeyMulti(r,e){return blake2AsU8a(u8aConcat(PREFIX,compactToU8a(r.length),...u8aSorted(r.map(addressToU8a)),bnToU8a(e,BN_LE_16_OPTS)))}const RE_NUMBER=/^\d+$/,JUNCTION_ID_LEN=32;var Or,fr;const vs=class{constructor(){_(this,Or,new Uint8Array(32));_(this,fr,!1)}static from(e){const t=new vs,[n,s]=e.startsWith("/")?[e.substring(1),!0]:[e,!1];return t.soft(RE_NUMBER.test(n)?new BN(n,10):n),s?t.harden():t}get chainCode(){return b(this,Or)}get isHard(){return b(this,fr)}get isSoft(){return!b(this,fr)}hard(e){return this.soft(e).harden()}harden(){return Q(this,fr,!0),this}soft(e){return isNumber(e)||isBn(e)||isBigInt(e)?this.soft(bnToU8a(e,BN_LE_256_OPTS)):isHex(e)?this.soft(hexToU8a(e)):isString(e)?this.soft(compactAddLength(stringToU8a(e))):e.length>JUNCTION_ID_LEN?this.soft(blake2AsU8a(e)):(b(this,Or).fill(0),b(this,Or).set(e,0),this)}soften(){return Q(this,fr,!1),this}};let DeriveJunction=vs;Or=new WeakMap,fr=new WeakMap;const RE_JUNCTION=/\/(\/?)([^/]+)/g;function keyExtractPath(r){const e=r.match(RE_JUNCTION),t=[];let n="";if(e){n=e.join("");for(const s of e)t.push(DeriveJunction.from(s.substring(1)))}return assert$1(n===r,()=>`Re-constructed path "${n}" does not match input`),{parts:e,path:t}}const RE_CAPTURE=/^(\w+( \w+)*)((\/\/?[^/]+)*)(\/\/\/(.*))?$/;function keyExtractSuri(r){const e=r.match(RE_CAPTURE);if(e===null)throw new Error("Unable to match provided value to a secret URI");const[,t,,n,,,s]=e,{path:i}=keyExtractPath(n);return{derivePath:n,password:s,path:i,phrase:t}}const HDKD$1=compactAddLength(stringToU8a("Secp256k1HDKD"));function secp256k1DeriveHard(r,e){if(!isU8a(e)||e.length!==32)throw new Error("Invalid chainCode passed to derive");return blake2AsU8a(u8aConcat(HDKD$1,r,e),256)}function secp256k1PairFromSeed(r,e){if(r.length!==32)throw new Error("Expected valid 32-byte private key as a seed");if(!hasBigInt||!e&&isReady()){const t=secp256k1FromSeed(r),n=t.slice(32);if(u8aEmpty(n))throw new Error("Invalid publicKey generated from WASM interface");return{publicKey:n,secretKey:t.slice(0,32)}}return{publicKey:getPublicKey(r,!0),secretKey:r}}function createSeedDeriveFn(r,e){return(t,{chainCode:n,isHard:s})=>(assert$1(s,"A soft key was found in the path and is not supported"),r(e(t.secretKey.subarray(0,32),n)))}const keyHdkdEcdsa=createSeedDeriveFn(secp256k1PairFromSeed,secp256k1DeriveHard);var ed2curve$1={exports:{}},naclFast={exports:{}},require$$0=getAugmentedNamespace(__viteBrowserExternal$1);(function(r){(function(e){var t=function(y){var v,w=new Float64Array(16);if(y)for(v=0;v<y.length;v++)w[v]=y[v];return w},n=function(){throw new Error("no PRNG")},s=new Uint8Array(16),i=new Uint8Array(32);i[0]=9;var a=t(),o=t([1]),c=t([56129,1]),h=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),p=t([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),x=t([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),A=t([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),k=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function U(y,v,w,u){y[v]=w>>24&255,y[v+1]=w>>16&255,y[v+2]=w>>8&255,y[v+3]=w&255,y[v+4]=u>>24&255,y[v+5]=u>>16&255,y[v+6]=u>>8&255,y[v+7]=u&255}function D(y,v,w,u,E){var L,R=0;for(L=0;L<E;L++)R|=y[v+L]^w[u+L];return(1&R-1>>>8)-1}function F(y,v,w,u){return D(y,v,w,u,16)}function q(y,v,w,u){return D(y,v,w,u,32)}function ae(y,v,w,u){for(var E=u[0]&255|(u[1]&255)<<8|(u[2]&255)<<16|(u[3]&255)<<24,L=w[0]&255|(w[1]&255)<<8|(w[2]&255)<<16|(w[3]&255)<<24,R=w[4]&255|(w[5]&255)<<8|(w[6]&255)<<16|(w[7]&255)<<24,G=w[8]&255|(w[9]&255)<<8|(w[10]&255)<<16|(w[11]&255)<<24,se=w[12]&255|(w[13]&255)<<8|(w[14]&255)<<16|(w[15]&255)<<24,ce=u[4]&255|(u[5]&255)<<8|(u[6]&255)<<16|(u[7]&255)<<24,ie=v[0]&255|(v[1]&255)<<8|(v[2]&255)<<16|(v[3]&255)<<24,Le=v[4]&255|(v[5]&255)<<8|(v[6]&255)<<16|(v[7]&255)<<24,he=v[8]&255|(v[9]&255)<<8|(v[10]&255)<<16|(v[11]&255)<<24,Se=v[12]&255|(v[13]&255)<<8|(v[14]&255)<<16|(v[15]&255)<<24,Te=u[8]&255|(u[9]&255)<<8|(u[10]&255)<<16|(u[11]&255)<<24,Me=w[16]&255|(w[17]&255)<<8|(w[18]&255)<<16|(w[19]&255)<<24,ke=w[20]&255|(w[21]&255)<<8|(w[22]&255)<<16|(w[23]&255)<<24,Pe=w[24]&255|(w[25]&255)<<8|(w[26]&255)<<16|(w[27]&255)<<24,Ce=w[28]&255|(w[29]&255)<<8|(w[30]&255)<<16|(w[31]&255)<<24,Ee=u[12]&255|(u[13]&255)<<8|(u[14]&255)<<16|(u[15]&255)<<24,pe=E,ge=L,le=R,me=G,ye=se,ue=ce,X=ie,W=Le,te=he,J=Se,$=Te,ne=Me,we=ke,Ne=Pe,He=Ce,Oe=Ee,O,Fe=0;Fe<20;Fe+=2)O=pe+we|0,ye^=O<<7|O>>>32-7,O=ye+pe|0,te^=O<<9|O>>>32-9,O=te+ye|0,we^=O<<13|O>>>32-13,O=we+te|0,pe^=O<<18|O>>>32-18,O=ue+ge|0,J^=O<<7|O>>>32-7,O=J+ue|0,Ne^=O<<9|O>>>32-9,O=Ne+J|0,ge^=O<<13|O>>>32-13,O=ge+Ne|0,ue^=O<<18|O>>>32-18,O=$+X|0,He^=O<<7|O>>>32-7,O=He+$|0,le^=O<<9|O>>>32-9,O=le+He|0,X^=O<<13|O>>>32-13,O=X+le|0,$^=O<<18|O>>>32-18,O=Oe+ne|0,me^=O<<7|O>>>32-7,O=me+Oe|0,W^=O<<9|O>>>32-9,O=W+me|0,ne^=O<<13|O>>>32-13,O=ne+W|0,Oe^=O<<18|O>>>32-18,O=pe+me|0,ge^=O<<7|O>>>32-7,O=ge+pe|0,le^=O<<9|O>>>32-9,O=le+ge|0,me^=O<<13|O>>>32-13,O=me+le|0,pe^=O<<18|O>>>32-18,O=ue+ye|0,X^=O<<7|O>>>32-7,O=X+ue|0,W^=O<<9|O>>>32-9,O=W+X|0,ye^=O<<13|O>>>32-13,O=ye+W|0,ue^=O<<18|O>>>32-18,O=$+J|0,ne^=O<<7|O>>>32-7,O=ne+$|0,te^=O<<9|O>>>32-9,O=te+ne|0,J^=O<<13|O>>>32-13,O=J+te|0,$^=O<<18|O>>>32-18,O=Oe+He|0,we^=O<<7|O>>>32-7,O=we+Oe|0,Ne^=O<<9|O>>>32-9,O=Ne+we|0,He^=O<<13|O>>>32-13,O=He+Ne|0,Oe^=O<<18|O>>>32-18;pe=pe+E|0,ge=ge+L|0,le=le+R|0,me=me+G|0,ye=ye+se|0,ue=ue+ce|0,X=X+ie|0,W=W+Le|0,te=te+he|0,J=J+Se|0,$=$+Te|0,ne=ne+Me|0,we=we+ke|0,Ne=Ne+Pe|0,He=He+Ce|0,Oe=Oe+Ee|0,y[0]=pe>>>0&255,y[1]=pe>>>8&255,y[2]=pe>>>16&255,y[3]=pe>>>24&255,y[4]=ge>>>0&255,y[5]=ge>>>8&255,y[6]=ge>>>16&255,y[7]=ge>>>24&255,y[8]=le>>>0&255,y[9]=le>>>8&255,y[10]=le>>>16&255,y[11]=le>>>24&255,y[12]=me>>>0&255,y[13]=me>>>8&255,y[14]=me>>>16&255,y[15]=me>>>24&255,y[16]=ye>>>0&255,y[17]=ye>>>8&255,y[18]=ye>>>16&255,y[19]=ye>>>24&255,y[20]=ue>>>0&255,y[21]=ue>>>8&255,y[22]=ue>>>16&255,y[23]=ue>>>24&255,y[24]=X>>>0&255,y[25]=X>>>8&255,y[26]=X>>>16&255,y[27]=X>>>24&255,y[28]=W>>>0&255,y[29]=W>>>8&255,y[30]=W>>>16&255,y[31]=W>>>24&255,y[32]=te>>>0&255,y[33]=te>>>8&255,y[34]=te>>>16&255,y[35]=te>>>24&255,y[36]=J>>>0&255,y[37]=J>>>8&255,y[38]=J>>>16&255,y[39]=J>>>24&255,y[40]=$>>>0&255,y[41]=$>>>8&255,y[42]=$>>>16&255,y[43]=$>>>24&255,y[44]=ne>>>0&255,y[45]=ne>>>8&255,y[46]=ne>>>16&255,y[47]=ne>>>24&255,y[48]=we>>>0&255,y[49]=we>>>8&255,y[50]=we>>>16&255,y[51]=we>>>24&255,y[52]=Ne>>>0&255,y[53]=Ne>>>8&255,y[54]=Ne>>>16&255,y[55]=Ne>>>24&255,y[56]=He>>>0&255,y[57]=He>>>8&255,y[58]=He>>>16&255,y[59]=He>>>24&255,y[60]=Oe>>>0&255,y[61]=Oe>>>8&255,y[62]=Oe>>>16&255,y[63]=Oe>>>24&255}function Y(y,v,w,u){for(var E=u[0]&255|(u[1]&255)<<8|(u[2]&255)<<16|(u[3]&255)<<24,L=w[0]&255|(w[1]&255)<<8|(w[2]&255)<<16|(w[3]&255)<<24,R=w[4]&255|(w[5]&255)<<8|(w[6]&255)<<16|(w[7]&255)<<24,G=w[8]&255|(w[9]&255)<<8|(w[10]&255)<<16|(w[11]&255)<<24,se=w[12]&255|(w[13]&255)<<8|(w[14]&255)<<16|(w[15]&255)<<24,ce=u[4]&255|(u[5]&255)<<8|(u[6]&255)<<16|(u[7]&255)<<24,ie=v[0]&255|(v[1]&255)<<8|(v[2]&255)<<16|(v[3]&255)<<24,Le=v[4]&255|(v[5]&255)<<8|(v[6]&255)<<16|(v[7]&255)<<24,he=v[8]&255|(v[9]&255)<<8|(v[10]&255)<<16|(v[11]&255)<<24,Se=v[12]&255|(v[13]&255)<<8|(v[14]&255)<<16|(v[15]&255)<<24,Te=u[8]&255|(u[9]&255)<<8|(u[10]&255)<<16|(u[11]&255)<<24,Me=w[16]&255|(w[17]&255)<<8|(w[18]&255)<<16|(w[19]&255)<<24,ke=w[20]&255|(w[21]&255)<<8|(w[22]&255)<<16|(w[23]&255)<<24,Pe=w[24]&255|(w[25]&255)<<8|(w[26]&255)<<16|(w[27]&255)<<24,Ce=w[28]&255|(w[29]&255)<<8|(w[30]&255)<<16|(w[31]&255)<<24,Ee=u[12]&255|(u[13]&255)<<8|(u[14]&255)<<16|(u[15]&255)<<24,pe=E,ge=L,le=R,me=G,ye=se,ue=ce,X=ie,W=Le,te=he,J=Se,$=Te,ne=Me,we=ke,Ne=Pe,He=Ce,Oe=Ee,O,Fe=0;Fe<20;Fe+=2)O=pe+we|0,ye^=O<<7|O>>>32-7,O=ye+pe|0,te^=O<<9|O>>>32-9,O=te+ye|0,we^=O<<13|O>>>32-13,O=we+te|0,pe^=O<<18|O>>>32-18,O=ue+ge|0,J^=O<<7|O>>>32-7,O=J+ue|0,Ne^=O<<9|O>>>32-9,O=Ne+J|0,ge^=O<<13|O>>>32-13,O=ge+Ne|0,ue^=O<<18|O>>>32-18,O=$+X|0,He^=O<<7|O>>>32-7,O=He+$|0,le^=O<<9|O>>>32-9,O=le+He|0,X^=O<<13|O>>>32-13,O=X+le|0,$^=O<<18|O>>>32-18,O=Oe+ne|0,me^=O<<7|O>>>32-7,O=me+Oe|0,W^=O<<9|O>>>32-9,O=W+me|0,ne^=O<<13|O>>>32-13,O=ne+W|0,Oe^=O<<18|O>>>32-18,O=pe+me|0,ge^=O<<7|O>>>32-7,O=ge+pe|0,le^=O<<9|O>>>32-9,O=le+ge|0,me^=O<<13|O>>>32-13,O=me+le|0,pe^=O<<18|O>>>32-18,O=ue+ye|0,X^=O<<7|O>>>32-7,O=X+ue|0,W^=O<<9|O>>>32-9,O=W+X|0,ye^=O<<13|O>>>32-13,O=ye+W|0,ue^=O<<18|O>>>32-18,O=$+J|0,ne^=O<<7|O>>>32-7,O=ne+$|0,te^=O<<9|O>>>32-9,O=te+ne|0,J^=O<<13|O>>>32-13,O=J+te|0,$^=O<<18|O>>>32-18,O=Oe+He|0,we^=O<<7|O>>>32-7,O=we+Oe|0,Ne^=O<<9|O>>>32-9,O=Ne+we|0,He^=O<<13|O>>>32-13,O=He+Ne|0,Oe^=O<<18|O>>>32-18;y[0]=pe>>>0&255,y[1]=pe>>>8&255,y[2]=pe>>>16&255,y[3]=pe>>>24&255,y[4]=ue>>>0&255,y[5]=ue>>>8&255,y[6]=ue>>>16&255,y[7]=ue>>>24&255,y[8]=$>>>0&255,y[9]=$>>>8&255,y[10]=$>>>16&255,y[11]=$>>>24&255,y[12]=Oe>>>0&255,y[13]=Oe>>>8&255,y[14]=Oe>>>16&255,y[15]=Oe>>>24&255,y[16]=X>>>0&255,y[17]=X>>>8&255,y[18]=X>>>16&255,y[19]=X>>>24&255,y[20]=W>>>0&255,y[21]=W>>>8&255,y[22]=W>>>16&255,y[23]=W>>>24&255,y[24]=te>>>0&255,y[25]=te>>>8&255,y[26]=te>>>16&255,y[27]=te>>>24&255,y[28]=J>>>0&255,y[29]=J>>>8&255,y[30]=J>>>16&255,y[31]=J>>>24&255}function de(y,v,w,u){ae(y,v,w,u)}function fe(y,v,w,u){Y(y,v,w,u)}var be=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function Ie(y,v,w,u,E,L,R){var G=new Uint8Array(16),se=new Uint8Array(64),ce,ie;for(ie=0;ie<16;ie++)G[ie]=0;for(ie=0;ie<8;ie++)G[ie]=L[ie];for(;E>=64;){for(de(se,G,R,be),ie=0;ie<64;ie++)y[v+ie]=w[u+ie]^se[ie];for(ce=1,ie=8;ie<16;ie++)ce=ce+(G[ie]&255)|0,G[ie]=ce&255,ce>>>=8;E-=64,v+=64,u+=64}if(E>0)for(de(se,G,R,be),ie=0;ie<E;ie++)y[v+ie]=w[u+ie]^se[ie];return 0}function Be(y,v,w,u,E){var L=new Uint8Array(16),R=new Uint8Array(64),G,se;for(se=0;se<16;se++)L[se]=0;for(se=0;se<8;se++)L[se]=u[se];for(;w>=64;){for(de(R,L,E,be),se=0;se<64;se++)y[v+se]=R[se];for(G=1,se=8;se<16;se++)G=G+(L[se]&255)|0,L[se]=G&255,G>>>=8;w-=64,v+=64}if(w>0)for(de(R,L,E,be),se=0;se<w;se++)y[v+se]=R[se];return 0}function Ue(y,v,w,u,E){var L=new Uint8Array(32);fe(L,u,E,be);for(var R=new Uint8Array(8),G=0;G<8;G++)R[G]=u[G+16];return Be(y,v,w,R,L)}function re(y,v,w,u,E,L,R){var G=new Uint8Array(32);fe(G,L,R,be);for(var se=new Uint8Array(8),ce=0;ce<8;ce++)se[ce]=L[ce+16];return Ie(y,v,w,u,E,se,G)}var ee=function(y){this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0;var v,w,u,E,L,R,G,se;v=y[0]&255|(y[1]&255)<<8,this.r[0]=v&8191,w=y[2]&255|(y[3]&255)<<8,this.r[1]=(v>>>13|w<<3)&8191,u=y[4]&255|(y[5]&255)<<8,this.r[2]=(w>>>10|u<<6)&7939,E=y[6]&255|(y[7]&255)<<8,this.r[3]=(u>>>7|E<<9)&8191,L=y[8]&255|(y[9]&255)<<8,this.r[4]=(E>>>4|L<<12)&255,this.r[5]=L>>>1&8190,R=y[10]&255|(y[11]&255)<<8,this.r[6]=(L>>>14|R<<2)&8191,G=y[12]&255|(y[13]&255)<<8,this.r[7]=(R>>>11|G<<5)&8065,se=y[14]&255|(y[15]&255)<<8,this.r[8]=(G>>>8|se<<8)&8191,this.r[9]=se>>>5&127,this.pad[0]=y[16]&255|(y[17]&255)<<8,this.pad[1]=y[18]&255|(y[19]&255)<<8,this.pad[2]=y[20]&255|(y[21]&255)<<8,this.pad[3]=y[22]&255|(y[23]&255)<<8,this.pad[4]=y[24]&255|(y[25]&255)<<8,this.pad[5]=y[26]&255|(y[27]&255)<<8,this.pad[6]=y[28]&255|(y[29]&255)<<8,this.pad[7]=y[30]&255|(y[31]&255)<<8};ee.prototype.blocks=function(y,v,w){for(var u=this.fin?0:2048,E,L,R,G,se,ce,ie,Le,he,Se,Te,Me,ke,Pe,Ce,Ee,pe,ge,le,me=this.h[0],ye=this.h[1],ue=this.h[2],X=this.h[3],W=this.h[4],te=this.h[5],J=this.h[6],$=this.h[7],ne=this.h[8],we=this.h[9],Ne=this.r[0],He=this.r[1],Oe=this.r[2],O=this.r[3],Fe=this.r[4],qe=this.r[5],Xe=this.r[6],Re=this.r[7],ze=this.r[8],je=this.r[9];w>=16;)E=y[v+0]&255|(y[v+1]&255)<<8,me+=E&8191,L=y[v+2]&255|(y[v+3]&255)<<8,ye+=(E>>>13|L<<3)&8191,R=y[v+4]&255|(y[v+5]&255)<<8,ue+=(L>>>10|R<<6)&8191,G=y[v+6]&255|(y[v+7]&255)<<8,X+=(R>>>7|G<<9)&8191,se=y[v+8]&255|(y[v+9]&255)<<8,W+=(G>>>4|se<<12)&8191,te+=se>>>1&8191,ce=y[v+10]&255|(y[v+11]&255)<<8,J+=(se>>>14|ce<<2)&8191,ie=y[v+12]&255|(y[v+13]&255)<<8,$+=(ce>>>11|ie<<5)&8191,Le=y[v+14]&255|(y[v+15]&255)<<8,ne+=(ie>>>8|Le<<8)&8191,we+=Le>>>5|u,he=0,Se=he,Se+=me*Ne,Se+=ye*(5*je),Se+=ue*(5*ze),Se+=X*(5*Re),Se+=W*(5*Xe),he=Se>>>13,Se&=8191,Se+=te*(5*qe),Se+=J*(5*Fe),Se+=$*(5*O),Se+=ne*(5*Oe),Se+=we*(5*He),he+=Se>>>13,Se&=8191,Te=he,Te+=me*He,Te+=ye*Ne,Te+=ue*(5*je),Te+=X*(5*ze),Te+=W*(5*Re),he=Te>>>13,Te&=8191,Te+=te*(5*Xe),Te+=J*(5*qe),Te+=$*(5*Fe),Te+=ne*(5*O),Te+=we*(5*Oe),he+=Te>>>13,Te&=8191,Me=he,Me+=me*Oe,Me+=ye*He,Me+=ue*Ne,Me+=X*(5*je),Me+=W*(5*ze),he=Me>>>13,Me&=8191,Me+=te*(5*Re),Me+=J*(5*Xe),Me+=$*(5*qe),Me+=ne*(5*Fe),Me+=we*(5*O),he+=Me>>>13,Me&=8191,ke=he,ke+=me*O,ke+=ye*Oe,ke+=ue*He,ke+=X*Ne,ke+=W*(5*je),he=ke>>>13,ke&=8191,ke+=te*(5*ze),ke+=J*(5*Re),ke+=$*(5*Xe),ke+=ne*(5*qe),ke+=we*(5*Fe),he+=ke>>>13,ke&=8191,Pe=he,Pe+=me*Fe,Pe+=ye*O,Pe+=ue*Oe,Pe+=X*He,Pe+=W*Ne,he=Pe>>>13,Pe&=8191,Pe+=te*(5*je),Pe+=J*(5*ze),Pe+=$*(5*Re),Pe+=ne*(5*Xe),Pe+=we*(5*qe),he+=Pe>>>13,Pe&=8191,Ce=he,Ce+=me*qe,Ce+=ye*Fe,Ce+=ue*O,Ce+=X*Oe,Ce+=W*He,he=Ce>>>13,Ce&=8191,Ce+=te*Ne,Ce+=J*(5*je),Ce+=$*(5*ze),Ce+=ne*(5*Re),Ce+=we*(5*Xe),he+=Ce>>>13,Ce&=8191,Ee=he,Ee+=me*Xe,Ee+=ye*qe,Ee+=ue*Fe,Ee+=X*O,Ee+=W*Oe,he=Ee>>>13,Ee&=8191,Ee+=te*He,Ee+=J*Ne,Ee+=$*(5*je),Ee+=ne*(5*ze),Ee+=we*(5*Re),he+=Ee>>>13,Ee&=8191,pe=he,pe+=me*Re,pe+=ye*Xe,pe+=ue*qe,pe+=X*Fe,pe+=W*O,he=pe>>>13,pe&=8191,pe+=te*Oe,pe+=J*He,pe+=$*Ne,pe+=ne*(5*je),pe+=we*(5*ze),he+=pe>>>13,pe&=8191,ge=he,ge+=me*ze,ge+=ye*Re,ge+=ue*Xe,ge+=X*qe,ge+=W*Fe,he=ge>>>13,ge&=8191,ge+=te*O,ge+=J*Oe,ge+=$*He,ge+=ne*Ne,ge+=we*(5*je),he+=ge>>>13,ge&=8191,le=he,le+=me*je,le+=ye*ze,le+=ue*Re,le+=X*Xe,le+=W*qe,he=le>>>13,le&=8191,le+=te*Fe,le+=J*O,le+=$*Oe,le+=ne*He,le+=we*Ne,he+=le>>>13,le&=8191,he=(he<<2)+he|0,he=he+Se|0,Se=he&8191,he=he>>>13,Te+=he,me=Se,ye=Te,ue=Me,X=ke,W=Pe,te=Ce,J=Ee,$=pe,ne=ge,we=le,v+=16,w-=16;this.h[0]=me,this.h[1]=ye,this.h[2]=ue,this.h[3]=X,this.h[4]=W,this.h[5]=te,this.h[6]=J,this.h[7]=$,this.h[8]=ne,this.h[9]=we},ee.prototype.finish=function(y,v){var w=new Uint16Array(10),u,E,L,R;if(this.leftover){for(R=this.leftover,this.buffer[R++]=1;R<16;R++)this.buffer[R]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(u=this.h[1]>>>13,this.h[1]&=8191,R=2;R<10;R++)this.h[R]+=u,u=this.h[R]>>>13,this.h[R]&=8191;for(this.h[0]+=u*5,u=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=u,u=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=u,w[0]=this.h[0]+5,u=w[0]>>>13,w[0]&=8191,R=1;R<10;R++)w[R]=this.h[R]+u,u=w[R]>>>13,w[R]&=8191;for(w[9]-=1<<13,E=(u^1)-1,R=0;R<10;R++)w[R]&=E;for(E=~E,R=0;R<10;R++)this.h[R]=this.h[R]&E|w[R];for(this.h[0]=(this.h[0]|this.h[1]<<13)&65535,this.h[1]=(this.h[1]>>>3|this.h[2]<<10)&65535,this.h[2]=(this.h[2]>>>6|this.h[3]<<7)&65535,this.h[3]=(this.h[3]>>>9|this.h[4]<<4)&65535,this.h[4]=(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14)&65535,this.h[5]=(this.h[6]>>>2|this.h[7]<<11)&65535,this.h[6]=(this.h[7]>>>5|this.h[8]<<8)&65535,this.h[7]=(this.h[8]>>>8|this.h[9]<<5)&65535,L=this.h[0]+this.pad[0],this.h[0]=L&65535,R=1;R<8;R++)L=(this.h[R]+this.pad[R]|0)+(L>>>16)|0,this.h[R]=L&65535;y[v+0]=this.h[0]>>>0&255,y[v+1]=this.h[0]>>>8&255,y[v+2]=this.h[1]>>>0&255,y[v+3]=this.h[1]>>>8&255,y[v+4]=this.h[2]>>>0&255,y[v+5]=this.h[2]>>>8&255,y[v+6]=this.h[3]>>>0&255,y[v+7]=this.h[3]>>>8&255,y[v+8]=this.h[4]>>>0&255,y[v+9]=this.h[4]>>>8&255,y[v+10]=this.h[5]>>>0&255,y[v+11]=this.h[5]>>>8&255,y[v+12]=this.h[6]>>>0&255,y[v+13]=this.h[6]>>>8&255,y[v+14]=this.h[7]>>>0&255,y[v+15]=this.h[7]>>>8&255},ee.prototype.update=function(y,v,w){var u,E;if(this.leftover){for(E=16-this.leftover,E>w&&(E=w),u=0;u<E;u++)this.buffer[this.leftover+u]=y[v+u];if(w-=E,v+=E,this.leftover+=E,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(w>=16&&(E=w-w%16,this.blocks(y,v,E),v+=E,w-=E),w){for(u=0;u<w;u++)this.buffer[this.leftover+u]=y[v+u];this.leftover+=w}};function K(y,v,w,u,E,L){var R=new ee(L);return R.update(w,u,E),R.finish(y,v),0}function T(y,v,w,u,E,L){var R=new Uint8Array(16);return K(R,0,w,u,E,L),F(y,v,R,0)}function d(y,v,w,u,E){var L;if(w<32)return-1;for(re(y,0,v,0,w,u,E),K(y,16,y,32,w-32,y),L=0;L<16;L++)y[L]=0;return 0}function g(y,v,w,u,E){var L,R=new Uint8Array(32);if(w<32||(Ue(R,0,32,u,E),T(v,16,v,32,w-32,R)!==0))return-1;for(re(y,0,v,0,w,u,E),L=0;L<32;L++)y[L]=0;return 0}function P(y,v){var w;for(w=0;w<16;w++)y[w]=v[w]|0}function I(y){var v,w,u=1;for(v=0;v<16;v++)w=y[v]+u+65535,u=Math.floor(w/65536),y[v]=w-u*65536;y[0]+=u-1+37*(u-1)}function B(y,v,w){for(var u,E=~(w-1),L=0;L<16;L++)u=E&(y[L]^v[L]),y[L]^=u,v[L]^=u}function H(y,v){var w,u,E,L=t(),R=t();for(w=0;w<16;w++)R[w]=v[w];for(I(R),I(R),I(R),u=0;u<2;u++){for(L[0]=R[0]-65517,w=1;w<15;w++)L[w]=R[w]-65535-(L[w-1]>>16&1),L[w-1]&=65535;L[15]=R[15]-32767-(L[14]>>16&1),E=L[15]>>16&1,L[14]&=65535,B(R,L,1-E)}for(w=0;w<16;w++)y[2*w]=R[w]&255,y[2*w+1]=R[w]>>8}function z(y,v){var w=new Uint8Array(32),u=new Uint8Array(32);return H(w,y),H(u,v),q(w,0,u,0)}function M(y){var v=new Uint8Array(32);return H(v,y),v[0]&1}function m(y,v){var w;for(w=0;w<16;w++)y[w]=v[2*w]+(v[2*w+1]<<8);y[15]&=32767}function V(y,v,w){for(var u=0;u<16;u++)y[u]=v[u]+w[u]}function xe(y,v,w){for(var u=0;u<16;u++)y[u]=v[u]-w[u]}function oe(y,v,w){var u,E,L=0,R=0,G=0,se=0,ce=0,ie=0,Le=0,he=0,Se=0,Te=0,Me=0,ke=0,Pe=0,Ce=0,Ee=0,pe=0,ge=0,le=0,me=0,ye=0,ue=0,X=0,W=0,te=0,J=0,$=0,ne=0,we=0,Ne=0,He=0,Oe=0,O=w[0],Fe=w[1],qe=w[2],Xe=w[3],Re=w[4],ze=w[5],je=w[6],Et=w[7],_e=w[8],St=w[9],Tt=w[10],Pt=w[11],Ct=w[12],It=w[13],Mt=w[14],Vt=w[15];u=v[0],L+=u*O,R+=u*Fe,G+=u*qe,se+=u*Xe,ce+=u*Re,ie+=u*ze,Le+=u*je,he+=u*Et,Se+=u*_e,Te+=u*St,Me+=u*Tt,ke+=u*Pt,Pe+=u*Ct,Ce+=u*It,Ee+=u*Mt,pe+=u*Vt,u=v[1],R+=u*O,G+=u*Fe,se+=u*qe,ce+=u*Xe,ie+=u*Re,Le+=u*ze,he+=u*je,Se+=u*Et,Te+=u*_e,Me+=u*St,ke+=u*Tt,Pe+=u*Pt,Ce+=u*Ct,Ee+=u*It,pe+=u*Mt,ge+=u*Vt,u=v[2],G+=u*O,se+=u*Fe,ce+=u*qe,ie+=u*Xe,Le+=u*Re,he+=u*ze,Se+=u*je,Te+=u*Et,Me+=u*_e,ke+=u*St,Pe+=u*Tt,Ce+=u*Pt,Ee+=u*Ct,pe+=u*It,ge+=u*Mt,le+=u*Vt,u=v[3],se+=u*O,ce+=u*Fe,ie+=u*qe,Le+=u*Xe,he+=u*Re,Se+=u*ze,Te+=u*je,Me+=u*Et,ke+=u*_e,Pe+=u*St,Ce+=u*Tt,Ee+=u*Pt,pe+=u*Ct,ge+=u*It,le+=u*Mt,me+=u*Vt,u=v[4],ce+=u*O,ie+=u*Fe,Le+=u*qe,he+=u*Xe,Se+=u*Re,Te+=u*ze,Me+=u*je,ke+=u*Et,Pe+=u*_e,Ce+=u*St,Ee+=u*Tt,pe+=u*Pt,ge+=u*Ct,le+=u*It,me+=u*Mt,ye+=u*Vt,u=v[5],ie+=u*O,Le+=u*Fe,he+=u*qe,Se+=u*Xe,Te+=u*Re,Me+=u*ze,ke+=u*je,Pe+=u*Et,Ce+=u*_e,Ee+=u*St,pe+=u*Tt,ge+=u*Pt,le+=u*Ct,me+=u*It,ye+=u*Mt,ue+=u*Vt,u=v[6],Le+=u*O,he+=u*Fe,Se+=u*qe,Te+=u*Xe,Me+=u*Re,ke+=u*ze,Pe+=u*je,Ce+=u*Et,Ee+=u*_e,pe+=u*St,ge+=u*Tt,le+=u*Pt,me+=u*Ct,ye+=u*It,ue+=u*Mt,X+=u*Vt,u=v[7],he+=u*O,Se+=u*Fe,Te+=u*qe,Me+=u*Xe,ke+=u*Re,Pe+=u*ze,Ce+=u*je,Ee+=u*Et,pe+=u*_e,ge+=u*St,le+=u*Tt,me+=u*Pt,ye+=u*Ct,ue+=u*It,X+=u*Mt,W+=u*Vt,u=v[8],Se+=u*O,Te+=u*Fe,Me+=u*qe,ke+=u*Xe,Pe+=u*Re,Ce+=u*ze,Ee+=u*je,pe+=u*Et,ge+=u*_e,le+=u*St,me+=u*Tt,ye+=u*Pt,ue+=u*Ct,X+=u*It,W+=u*Mt,te+=u*Vt,u=v[9],Te+=u*O,Me+=u*Fe,ke+=u*qe,Pe+=u*Xe,Ce+=u*Re,Ee+=u*ze,pe+=u*je,ge+=u*Et,le+=u*_e,me+=u*St,ye+=u*Tt,ue+=u*Pt,X+=u*Ct,W+=u*It,te+=u*Mt,J+=u*Vt,u=v[10],Me+=u*O,ke+=u*Fe,Pe+=u*qe,Ce+=u*Xe,Ee+=u*Re,pe+=u*ze,ge+=u*je,le+=u*Et,me+=u*_e,ye+=u*St,ue+=u*Tt,X+=u*Pt,W+=u*Ct,te+=u*It,J+=u*Mt,$+=u*Vt,u=v[11],ke+=u*O,Pe+=u*Fe,Ce+=u*qe,Ee+=u*Xe,pe+=u*Re,ge+=u*ze,le+=u*je,me+=u*Et,ye+=u*_e,ue+=u*St,X+=u*Tt,W+=u*Pt,te+=u*Ct,J+=u*It,$+=u*Mt,ne+=u*Vt,u=v[12],Pe+=u*O,Ce+=u*Fe,Ee+=u*qe,pe+=u*Xe,ge+=u*Re,le+=u*ze,me+=u*je,ye+=u*Et,ue+=u*_e,X+=u*St,W+=u*Tt,te+=u*Pt,J+=u*Ct,$+=u*It,ne+=u*Mt,we+=u*Vt,u=v[13],Ce+=u*O,Ee+=u*Fe,pe+=u*qe,ge+=u*Xe,le+=u*Re,me+=u*ze,ye+=u*je,ue+=u*Et,X+=u*_e,W+=u*St,te+=u*Tt,J+=u*Pt,$+=u*Ct,ne+=u*It,we+=u*Mt,Ne+=u*Vt,u=v[14],Ee+=u*O,pe+=u*Fe,ge+=u*qe,le+=u*Xe,me+=u*Re,ye+=u*ze,ue+=u*je,X+=u*Et,W+=u*_e,te+=u*St,J+=u*Tt,$+=u*Pt,ne+=u*Ct,we+=u*It,Ne+=u*Mt,He+=u*Vt,u=v[15],pe+=u*O,ge+=u*Fe,le+=u*qe,me+=u*Xe,ye+=u*Re,ue+=u*ze,X+=u*je,W+=u*Et,te+=u*_e,J+=u*St,$+=u*Tt,ne+=u*Pt,we+=u*Ct,Ne+=u*It,He+=u*Mt,Oe+=u*Vt,L+=38*ge,R+=38*le,G+=38*me,se+=38*ye,ce+=38*ue,ie+=38*X,Le+=38*W,he+=38*te,Se+=38*J,Te+=38*$,Me+=38*ne,ke+=38*we,Pe+=38*Ne,Ce+=38*He,Ee+=38*Oe,E=1,u=L+E+65535,E=Math.floor(u/65536),L=u-E*65536,u=R+E+65535,E=Math.floor(u/65536),R=u-E*65536,u=G+E+65535,E=Math.floor(u/65536),G=u-E*65536,u=se+E+65535,E=Math.floor(u/65536),se=u-E*65536,u=ce+E+65535,E=Math.floor(u/65536),ce=u-E*65536,u=ie+E+65535,E=Math.floor(u/65536),ie=u-E*65536,u=Le+E+65535,E=Math.floor(u/65536),Le=u-E*65536,u=he+E+65535,E=Math.floor(u/65536),he=u-E*65536,u=Se+E+65535,E=Math.floor(u/65536),Se=u-E*65536,u=Te+E+65535,E=Math.floor(u/65536),Te=u-E*65536,u=Me+E+65535,E=Math.floor(u/65536),Me=u-E*65536,u=ke+E+65535,E=Math.floor(u/65536),ke=u-E*65536,u=Pe+E+65535,E=Math.floor(u/65536),Pe=u-E*65536,u=Ce+E+65535,E=Math.floor(u/65536),Ce=u-E*65536,u=Ee+E+65535,E=Math.floor(u/65536),Ee=u-E*65536,u=pe+E+65535,E=Math.floor(u/65536),pe=u-E*65536,L+=E-1+37*(E-1),E=1,u=L+E+65535,E=Math.floor(u/65536),L=u-E*65536,u=R+E+65535,E=Math.floor(u/65536),R=u-E*65536,u=G+E+65535,E=Math.floor(u/65536),G=u-E*65536,u=se+E+65535,E=Math.floor(u/65536),se=u-E*65536,u=ce+E+65535,E=Math.floor(u/65536),ce=u-E*65536,u=ie+E+65535,E=Math.floor(u/65536),ie=u-E*65536,u=Le+E+65535,E=Math.floor(u/65536),Le=u-E*65536,u=he+E+65535,E=Math.floor(u/65536),he=u-E*65536,u=Se+E+65535,E=Math.floor(u/65536),Se=u-E*65536,u=Te+E+65535,E=Math.floor(u/65536),Te=u-E*65536,u=Me+E+65535,E=Math.floor(u/65536),Me=u-E*65536,u=ke+E+65535,E=Math.floor(u/65536),ke=u-E*65536,u=Pe+E+65535,E=Math.floor(u/65536),Pe=u-E*65536,u=Ce+E+65535,E=Math.floor(u/65536),Ce=u-E*65536,u=Ee+E+65535,E=Math.floor(u/65536),Ee=u-E*65536,u=pe+E+65535,E=Math.floor(u/65536),pe=u-E*65536,L+=E-1+37*(E-1),y[0]=L,y[1]=R,y[2]=G,y[3]=se,y[4]=ce,y[5]=ie,y[6]=Le,y[7]=he,y[8]=Se,y[9]=Te,y[10]=Me,y[11]=ke,y[12]=Pe,y[13]=Ce,y[14]=Ee,y[15]=pe}function ve(y,v){oe(y,v,v)}function At(y,v){var w=t(),u;for(u=0;u<16;u++)w[u]=v[u];for(u=253;u>=0;u--)ve(w,w),u!==2&&u!==4&&oe(w,w,v);for(u=0;u<16;u++)y[u]=w[u]}function Ge(y,v){var w=t(),u;for(u=0;u<16;u++)w[u]=v[u];for(u=250;u>=0;u--)ve(w,w),u!==1&&oe(w,w,v);for(u=0;u<16;u++)y[u]=w[u]}function Ke(y,v,w){var u=new Uint8Array(32),E=new Float64Array(80),L,R,G=t(),se=t(),ce=t(),ie=t(),Le=t(),he=t();for(R=0;R<31;R++)u[R]=v[R];for(u[31]=v[31]&127|64,u[0]&=248,m(E,w),R=0;R<16;R++)se[R]=E[R],ie[R]=G[R]=ce[R]=0;for(G[0]=ie[0]=1,R=254;R>=0;--R)L=u[R>>>3]>>>(R&7)&1,B(G,se,L),B(ce,ie,L),V(Le,G,ce),xe(G,G,ce),V(ce,se,ie),xe(se,se,ie),ve(ie,Le),ve(he,G),oe(G,ce,G),oe(ce,se,Le),V(Le,G,ce),xe(G,G,ce),ve(se,G),xe(ce,ie,he),oe(G,ce,c),V(G,G,ie),oe(ce,ce,G),oe(G,ie,he),oe(ie,se,E),ve(se,Le),B(G,se,L),B(ce,ie,L);for(R=0;R<16;R++)E[R+16]=G[R],E[R+32]=ce[R],E[R+48]=se[R],E[R+64]=ie[R];var Se=E.subarray(32),Te=E.subarray(16);return At(Se,Se),oe(Te,Te,Se),H(y,Te),0}function ur(y,v){return Ke(y,v,i)}function dt(y,v){return n(v,32),ur(y,v)}function tt(y,v,w){var u=new Uint8Array(32);return Ke(u,w,v),fe(y,s,u,be)}var yn=d,gt=g;function bt(y,v,w,u,E,L){var R=new Uint8Array(32);return tt(R,E,L),yn(y,v,w,u,R)}function ts(y,v,w,u,E,L){var R=new Uint8Array(32);return tt(R,E,L),gt(y,v,w,u,R)}var ft=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function ht(y,v,w,u){for(var E=new Int32Array(16),L=new Int32Array(16),R,G,se,ce,ie,Le,he,Se,Te,Me,ke,Pe,Ce,Ee,pe,ge,le,me,ye,ue,X,W,te,J,$,ne,we=y[0],Ne=y[1],He=y[2],Oe=y[3],O=y[4],Fe=y[5],qe=y[6],Xe=y[7],Re=v[0],ze=v[1],je=v[2],Et=v[3],_e=v[4],St=v[5],Tt=v[6],Pt=v[7],Ct=0;u>=128;){for(ye=0;ye<16;ye++)ue=8*ye+Ct,E[ye]=w[ue+0]<<24|w[ue+1]<<16|w[ue+2]<<8|w[ue+3],L[ye]=w[ue+4]<<24|w[ue+5]<<16|w[ue+6]<<8|w[ue+7];for(ye=0;ye<80;ye++)if(R=we,G=Ne,se=He,ce=Oe,ie=O,Le=Fe,he=qe,Se=Xe,Te=Re,Me=ze,ke=je,Pe=Et,Ce=_e,Ee=St,pe=Tt,ge=Pt,X=Xe,W=Pt,te=W&65535,J=W>>>16,$=X&65535,ne=X>>>16,X=(O>>>14|_e<<32-14)^(O>>>18|_e<<32-18)^(_e>>>41-32|O<<32-(41-32)),W=(_e>>>14|O<<32-14)^(_e>>>18|O<<32-18)^(O>>>41-32|_e<<32-(41-32)),te+=W&65535,J+=W>>>16,$+=X&65535,ne+=X>>>16,X=O&Fe^~O&qe,W=_e&St^~_e&Tt,te+=W&65535,J+=W>>>16,$+=X&65535,ne+=X>>>16,X=ft[ye*2],W=ft[ye*2+1],te+=W&65535,J+=W>>>16,$+=X&65535,ne+=X>>>16,X=E[ye%16],W=L[ye%16],te+=W&65535,J+=W>>>16,$+=X&65535,ne+=X>>>16,J+=te>>>16,$+=J>>>16,ne+=$>>>16,le=$&65535|ne<<16,me=te&65535|J<<16,X=le,W=me,te=W&65535,J=W>>>16,$=X&65535,ne=X>>>16,X=(we>>>28|Re<<32-28)^(Re>>>34-32|we<<32-(34-32))^(Re>>>39-32|we<<32-(39-32)),W=(Re>>>28|we<<32-28)^(we>>>34-32|Re<<32-(34-32))^(we>>>39-32|Re<<32-(39-32)),te+=W&65535,J+=W>>>16,$+=X&65535,ne+=X>>>16,X=we&Ne^we&He^Ne&He,W=Re&ze^Re&je^ze&je,te+=W&65535,J+=W>>>16,$+=X&65535,ne+=X>>>16,J+=te>>>16,$+=J>>>16,ne+=$>>>16,Se=$&65535|ne<<16,ge=te&65535|J<<16,X=ce,W=Pe,te=W&65535,J=W>>>16,$=X&65535,ne=X>>>16,X=le,W=me,te+=W&65535,J+=W>>>16,$+=X&65535,ne+=X>>>16,J+=te>>>16,$+=J>>>16,ne+=$>>>16,ce=$&65535|ne<<16,Pe=te&65535|J<<16,Ne=R,He=G,Oe=se,O=ce,Fe=ie,qe=Le,Xe=he,we=Se,ze=Te,je=Me,Et=ke,_e=Pe,St=Ce,Tt=Ee,Pt=pe,Re=ge,ye%16===15)for(ue=0;ue<16;ue++)X=E[ue],W=L[ue],te=W&65535,J=W>>>16,$=X&65535,ne=X>>>16,X=E[(ue+9)%16],W=L[(ue+9)%16],te+=W&65535,J+=W>>>16,$+=X&65535,ne+=X>>>16,le=E[(ue+1)%16],me=L[(ue+1)%16],X=(le>>>1|me<<32-1)^(le>>>8|me<<32-8)^le>>>7,W=(me>>>1|le<<32-1)^(me>>>8|le<<32-8)^(me>>>7|le<<32-7),te+=W&65535,J+=W>>>16,$+=X&65535,ne+=X>>>16,le=E[(ue+14)%16],me=L[(ue+14)%16],X=(le>>>19|me<<32-19)^(me>>>61-32|le<<32-(61-32))^le>>>6,W=(me>>>19|le<<32-19)^(le>>>61-32|me<<32-(61-32))^(me>>>6|le<<32-6),te+=W&65535,J+=W>>>16,$+=X&65535,ne+=X>>>16,J+=te>>>16,$+=J>>>16,ne+=$>>>16,E[ue]=$&65535|ne<<16,L[ue]=te&65535|J<<16;X=we,W=Re,te=W&65535,J=W>>>16,$=X&65535,ne=X>>>16,X=y[0],W=v[0],te+=W&65535,J+=W>>>16,$+=X&65535,ne+=X>>>16,J+=te>>>16,$+=J>>>16,ne+=$>>>16,y[0]=we=$&65535|ne<<16,v[0]=Re=te&65535|J<<16,X=Ne,W=ze,te=W&65535,J=W>>>16,$=X&65535,ne=X>>>16,X=y[1],W=v[1],te+=W&65535,J+=W>>>16,$+=X&65535,ne+=X>>>16,J+=te>>>16,$+=J>>>16,ne+=$>>>16,y[1]=Ne=$&65535|ne<<16,v[1]=ze=te&65535|J<<16,X=He,W=je,te=W&65535,J=W>>>16,$=X&65535,ne=X>>>16,X=y[2],W=v[2],te+=W&65535,J+=W>>>16,$+=X&65535,ne+=X>>>16,J+=te>>>16,$+=J>>>16,ne+=$>>>16,y[2]=He=$&65535|ne<<16,v[2]=je=te&65535|J<<16,X=Oe,W=Et,te=W&65535,J=W>>>16,$=X&65535,ne=X>>>16,X=y[3],W=v[3],te+=W&65535,J+=W>>>16,$+=X&65535,ne+=X>>>16,J+=te>>>16,$+=J>>>16,ne+=$>>>16,y[3]=Oe=$&65535|ne<<16,v[3]=Et=te&65535|J<<16,X=O,W=_e,te=W&65535,J=W>>>16,$=X&65535,ne=X>>>16,X=y[4],W=v[4],te+=W&65535,J+=W>>>16,$+=X&65535,ne+=X>>>16,J+=te>>>16,$+=J>>>16,ne+=$>>>16,y[4]=O=$&65535|ne<<16,v[4]=_e=te&65535|J<<16,X=Fe,W=St,te=W&65535,J=W>>>16,$=X&65535,ne=X>>>16,X=y[5],W=v[5],te+=W&65535,J+=W>>>16,$+=X&65535,ne+=X>>>16,J+=te>>>16,$+=J>>>16,ne+=$>>>16,y[5]=Fe=$&65535|ne<<16,v[5]=St=te&65535|J<<16,X=qe,W=Tt,te=W&65535,J=W>>>16,$=X&65535,ne=X>>>16,X=y[6],W=v[6],te+=W&65535,J+=W>>>16,$+=X&65535,ne+=X>>>16,J+=te>>>16,$+=J>>>16,ne+=$>>>16,y[6]=qe=$&65535|ne<<16,v[6]=Tt=te&65535|J<<16,X=Xe,W=Pt,te=W&65535,J=W>>>16,$=X&65535,ne=X>>>16,X=y[7],W=v[7],te+=W&65535,J+=W>>>16,$+=X&65535,ne+=X>>>16,J+=te>>>16,$+=J>>>16,ne+=$>>>16,y[7]=Xe=$&65535|ne<<16,v[7]=Pt=te&65535|J<<16,Ct+=128,u-=128}return u}function _t(y,v,w){var u=new Int32Array(8),E=new Int32Array(8),L=new Uint8Array(256),R,G=w;for(u[0]=1779033703,u[1]=3144134277,u[2]=1013904242,u[3]=2773480762,u[4]=1359893119,u[5]=2600822924,u[6]=528734635,u[7]=1541459225,E[0]=4089235720,E[1]=2227873595,E[2]=4271175723,E[3]=1595750129,E[4]=2917565137,E[5]=725511199,E[6]=4215389547,E[7]=327033209,ht(u,E,v,w),w%=128,R=0;R<w;R++)L[R]=v[G-w+R];for(L[w]=128,w=256-128*(w<112?1:0),L[w-9]=0,U(L,w-8,G/536870912|0,G<<3),ht(u,E,L,w),R=0;R<8;R++)U(y,8*R,u[R],E[R]);return 0}function rt(y,v){var w=t(),u=t(),E=t(),L=t(),R=t(),G=t(),se=t(),ce=t(),ie=t();xe(w,y[1],y[0]),xe(ie,v[1],v[0]),oe(w,w,ie),V(u,y[0],y[1]),V(ie,v[0],v[1]),oe(u,u,ie),oe(E,y[3],v[3]),oe(E,E,p),oe(L,y[2],v[2]),V(L,L,L),xe(R,u,w),xe(G,L,E),V(se,L,E),V(ce,u,w),oe(y[0],R,G),oe(y[1],ce,se),oe(y[2],se,G),oe(y[3],R,ce)}function pt(y,v,w){var u;for(u=0;u<4;u++)B(y[u],v[u],w)}function Cr(y,v){var w=t(),u=t(),E=t();At(E,v[2]),oe(w,v[0],E),oe(u,v[1],E),H(y,u),y[31]^=M(w)<<7}function at(y,v,w){var u,E;for(P(y[0],a),P(y[1],o),P(y[2],o),P(y[3],a),E=255;E>=0;--E)u=w[E/8|0]>>(E&7)&1,pt(y,v,u),rt(v,y),rt(y,y),pt(y,v,u)}function nt(y,v){var w=[t(),t(),t(),t()];P(w[0],x),P(w[1],A),P(w[2],o),oe(w[3],x,A),at(y,w,v)}function kr(y,v,w){var u=new Uint8Array(64),E=[t(),t(),t(),t()],L;for(w||n(v,32),_t(u,v,32),u[0]&=248,u[31]&=127,u[31]|=64,nt(E,u),Cr(y,E),L=0;L<32;L++)v[L+32]=y[L];return 0}var st=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function ot(y,v){var w,u,E,L;for(u=63;u>=32;--u){for(w=0,E=u-32,L=u-12;E<L;++E)v[E]+=w-16*v[u]*st[E-(u-32)],w=Math.floor((v[E]+128)/256),v[E]-=w*256;v[E]+=w,v[u]=0}for(w=0,E=0;E<32;E++)v[E]+=w-(v[31]>>4)*st[E],w=v[E]>>8,v[E]&=255;for(E=0;E<32;E++)v[E]-=w*st[E];for(u=0;u<32;u++)v[u+1]+=v[u]>>8,y[u]=v[u]&255}function Ir(y){var v=new Float64Array(64),w;for(w=0;w<64;w++)v[w]=y[w];for(w=0;w<64;w++)y[w]=0;ot(y,v)}function mt(y,v,w,u){var E=new Uint8Array(64),L=new Uint8Array(64),R=new Uint8Array(64),G,se,ce=new Float64Array(64),ie=[t(),t(),t(),t()];_t(E,u,32),E[0]&=248,E[31]&=127,E[31]|=64;var Le=w+64;for(G=0;G<w;G++)y[64+G]=v[G];for(G=0;G<32;G++)y[32+G]=E[32+G];for(_t(R,y.subarray(32),w+32),Ir(R),nt(ie,R),Cr(y,ie),G=32;G<64;G++)y[G]=u[G];for(_t(L,y,w+64),Ir(L),G=0;G<64;G++)ce[G]=0;for(G=0;G<32;G++)ce[G]=R[G];for(G=0;G<32;G++)for(se=0;se<32;se++)ce[G+se]+=L[G]*E[se];return ot(y.subarray(32),ce),Le}function xt(y,v){var w=t(),u=t(),E=t(),L=t(),R=t(),G=t(),se=t();return P(y[2],o),m(y[1],v),ve(E,y[1]),oe(L,E,h),xe(E,E,y[2]),V(L,y[2],L),ve(R,L),ve(G,R),oe(se,G,R),oe(w,se,E),oe(w,w,L),Ge(w,w),oe(w,w,E),oe(w,w,L),oe(w,w,L),oe(y[0],w,L),ve(u,y[0]),oe(u,u,L),z(u,E)&&oe(y[0],y[0],k),ve(u,y[0]),oe(u,u,L),z(u,E)?-1:(M(y[0])===v[31]>>7&&xe(y[0],a,y[0]),oe(y[3],y[0],y[1]),0)}function Mr(y,v,w,u){var E,L=new Uint8Array(32),R=new Uint8Array(64),G=[t(),t(),t(),t()],se=[t(),t(),t(),t()];if(w<64||xt(se,u))return-1;for(E=0;E<w;E++)y[E]=v[E];for(E=0;E<32;E++)y[E+32]=u[E];if(_t(R,y,w),Ir(R),at(G,se,R),nt(se,v.subarray(32)),rt(G,se),Cr(L,G),w-=64,q(v,0,L,0)){for(E=0;E<w;E++)y[E]=0;return-1}for(E=0;E<w;E++)y[E]=v[E+64];return w}var ct=32,it=24,$t=32,Ye=16,Qe=32,lr=32,$e=32,et=32,Vr=32,yt=it,vt=$t,rs=Ye,We=64,Ze=32,Zt=64,ut=32,lt=64;e.lowlevel={crypto_core_hsalsa20:fe,crypto_stream_xor:re,crypto_stream:Ue,crypto_stream_salsa20_xor:Ie,crypto_stream_salsa20:Be,crypto_onetimeauth:K,crypto_onetimeauth_verify:T,crypto_verify_16:F,crypto_verify_32:q,crypto_secretbox:d,crypto_secretbox_open:g,crypto_scalarmult:Ke,crypto_scalarmult_base:ur,crypto_box_beforenm:tt,crypto_box_afternm:yn,crypto_box:bt,crypto_box_open:ts,crypto_box_keypair:dt,crypto_hash:_t,crypto_sign:mt,crypto_sign_keypair:kr,crypto_sign_open:Mr,crypto_secretbox_KEYBYTES:ct,crypto_secretbox_NONCEBYTES:it,crypto_secretbox_ZEROBYTES:$t,crypto_secretbox_BOXZEROBYTES:Ye,crypto_scalarmult_BYTES:Qe,crypto_scalarmult_SCALARBYTES:lr,crypto_box_PUBLICKEYBYTES:$e,crypto_box_SECRETKEYBYTES:et,crypto_box_BEFORENMBYTES:Vr,crypto_box_NONCEBYTES:yt,crypto_box_ZEROBYTES:vt,crypto_box_BOXZEROBYTES:rs,crypto_sign_BYTES:We,crypto_sign_PUBLICKEYBYTES:Ze,crypto_sign_SECRETKEYBYTES:Zt,crypto_sign_SEEDBYTES:ut,crypto_hash_BYTES:lt,gf:t,D:h,L:st,pack25519:H,unpack25519:m,M:oe,A:V,S:ve,Z:xe,pow2523:Ge,add:rt,set25519:P,modL:ot,scalarmult:at,scalarbase:nt};function gn(y,v){if(y.length!==ct)throw new Error("bad key size");if(v.length!==it)throw new Error("bad nonce size")}function wt(y,v){if(y.length!==$e)throw new Error("bad public key size");if(v.length!==et)throw new Error("bad secret key size")}function De(){for(var y=0;y<arguments.length;y++)if(!(arguments[y]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function xn(y){for(var v=0;v<y.length;v++)y[v]=0}e.randomBytes=function(y){var v=new Uint8Array(y);return n(v,y),v},e.secretbox=function(y,v,w){De(y,v,w),gn(w,v);for(var u=new Uint8Array($t+y.length),E=new Uint8Array(u.length),L=0;L<y.length;L++)u[L+$t]=y[L];return d(E,u,u.length,v,w),E.subarray(Ye)},e.secretbox.open=function(y,v,w){De(y,v,w),gn(w,v);for(var u=new Uint8Array(Ye+y.length),E=new Uint8Array(u.length),L=0;L<y.length;L++)u[L+Ye]=y[L];return u.length<32||g(E,u,u.length,v,w)!==0?null:E.subarray($t)},e.secretbox.keyLength=ct,e.secretbox.nonceLength=it,e.secretbox.overheadLength=Ye,e.scalarMult=function(y,v){if(De(y,v),y.length!==lr)throw new Error("bad n size");if(v.length!==Qe)throw new Error("bad p size");var w=new Uint8Array(Qe);return Ke(w,y,v),w},e.scalarMult.base=function(y){if(De(y),y.length!==lr)throw new Error("bad n size");var v=new Uint8Array(Qe);return ur(v,y),v},e.scalarMult.scalarLength=lr,e.scalarMult.groupElementLength=Qe,e.box=function(y,v,w,u){var E=e.box.before(w,u);return e.secretbox(y,v,E)},e.box.before=function(y,v){De(y,v),wt(y,v);var w=new Uint8Array(Vr);return tt(w,y,v),w},e.box.after=e.secretbox,e.box.open=function(y,v,w,u){var E=e.box.before(w,u);return e.secretbox.open(y,v,E)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var y=new Uint8Array($e),v=new Uint8Array(et);return dt(y,v),{publicKey:y,secretKey:v}},e.box.keyPair.fromSecretKey=function(y){if(De(y),y.length!==et)throw new Error("bad secret key size");var v=new Uint8Array($e);return ur(v,y),{publicKey:v,secretKey:new Uint8Array(y)}},e.box.publicKeyLength=$e,e.box.secretKeyLength=et,e.box.sharedKeyLength=Vr,e.box.nonceLength=yt,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(y,v){if(De(y,v),v.length!==Zt)throw new Error("bad secret key size");var w=new Uint8Array(We+y.length);return mt(w,y,y.length,v),w},e.sign.open=function(y,v){if(De(y,v),v.length!==Ze)throw new Error("bad public key size");var w=new Uint8Array(y.length),u=Mr(w,y,y.length,v);if(u<0)return null;for(var E=new Uint8Array(u),L=0;L<E.length;L++)E[L]=w[L];return E},e.sign.detached=function(y,v){for(var w=e.sign(y,v),u=new Uint8Array(We),E=0;E<u.length;E++)u[E]=w[E];return u},e.sign.detached.verify=function(y,v,w){if(De(y,v,w),v.length!==We)throw new Error("bad signature size");if(w.length!==Ze)throw new Error("bad public key size");var u=new Uint8Array(We+y.length),E=new Uint8Array(We+y.length),L;for(L=0;L<We;L++)u[L]=v[L];for(L=0;L<y.length;L++)u[L+We]=y[L];return Mr(E,u,u.length,w)>=0},e.sign.keyPair=function(){var y=new Uint8Array(Ze),v=new Uint8Array(Zt);return kr(y,v),{publicKey:y,secretKey:v}},e.sign.keyPair.fromSecretKey=function(y){if(De(y),y.length!==Zt)throw new Error("bad secret key size");for(var v=new Uint8Array(Ze),w=0;w<v.length;w++)v[w]=y[32+w];return{publicKey:v,secretKey:new Uint8Array(y)}},e.sign.keyPair.fromSeed=function(y){if(De(y),y.length!==ut)throw new Error("bad seed size");for(var v=new Uint8Array(Ze),w=new Uint8Array(Zt),u=0;u<32;u++)w[u]=y[u];return kr(v,w,!0),{publicKey:v,secretKey:w}},e.sign.publicKeyLength=Ze,e.sign.secretKeyLength=Zt,e.sign.seedLength=ut,e.sign.signatureLength=We,e.hash=function(y){De(y);var v=new Uint8Array(lt);return _t(v,y,y.length),v},e.hash.hashLength=lt,e.verify=function(y,v){return De(y,v),y.length===0||v.length===0||y.length!==v.length?!1:D(y,0,v,0,y.length)===0},e.setPRNG=function(y){n=y},function(){var y=typeof self!="undefined"?self.crypto||self.msCrypto:null;if(y&&y.getRandomValues){var v=65536;e.setPRNG(function(w,u){var E,L=new Uint8Array(u);for(E=0;E<u;E+=v)y.getRandomValues(L.subarray(E,E+Math.min(u-E,v)));for(E=0;E<u;E++)w[E]=L[E];xn(L)})}else typeof commonjsRequire!="undefined"&&(y=require$$0,y&&y.randomBytes&&e.setPRNG(function(w,u){var E,L=y.randomBytes(u);for(E=0;E<u;E++)w[E]=L[E];xn(L)}))}()})(r.exports?r.exports:self.nacl=self.nacl||{})})(naclFast);var nacl=naclFast.exports;(function(r){(function(e,t){r.exports?r.exports=t(naclFast.exports):e.ed2curve=t(e.nacl)})(commonjsGlobal,function(e){if(!e)throw new Error("tweetnacl not loaded");var t=function(re){var ee,K=new Float64Array(16);if(re)for(ee=0;ee<re.length;ee++)K[ee]=re[ee];return K},n=t(),s=t([1]),i=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),a=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function o(re){var ee,K;for(K=0;K<16;K++)re[K]+=65536,ee=Math.floor(re[K]/65536),re[(K+1)*(K<15?1:0)]+=ee-1+37*(ee-1)*(K===15?1:0),re[K]-=ee*65536}function c(re,ee,K){for(var T,d=~(K-1),g=0;g<16;g++)T=d&(re[g]^ee[g]),re[g]^=T,ee[g]^=T}function h(re,ee){var K;for(K=0;K<16;K++)re[K]=ee[2*K]+(ee[2*K+1]<<8);re[15]&=32767}function p(re,ee,K){var T;for(T=0;T<16;T++)re[T]=ee[T]+K[T]|0}function x(re,ee,K){var T;for(T=0;T<16;T++)re[T]=ee[T]-K[T]|0}function A(re,ee,K){var T,d,g=new Float64Array(31);for(T=0;T<31;T++)g[T]=0;for(T=0;T<16;T++)for(d=0;d<16;d++)g[T+d]+=ee[T]*K[d];for(T=0;T<15;T++)g[T]+=38*g[T+16];for(T=0;T<16;T++)re[T]=g[T];o(re),o(re)}function k(re,ee){A(re,ee,ee)}function U(re,ee){var K=t(),T;for(T=0;T<16;T++)K[T]=ee[T];for(T=253;T>=0;T--)k(K,K),T!==2&&T!==4&&A(K,K,ee);for(T=0;T<16;T++)re[T]=K[T]}function D(re,ee){var K,T,d,g=t(),P=t();for(K=0;K<16;K++)P[K]=ee[K];for(o(P),o(P),o(P),T=0;T<2;T++){for(g[0]=P[0]-65517,K=1;K<15;K++)g[K]=P[K]-65535-(g[K-1]>>16&1),g[K-1]&=65535;g[15]=P[15]-32767-(g[14]>>16&1),d=g[15]>>16&1,g[14]&=65535,c(P,g,1-d)}for(K=0;K<16;K++)re[2*K]=P[K]&255,re[2*K+1]=P[K]>>8}function F(re){var ee=new Uint8Array(32);return D(ee,re),ee[0]&1}function q(re,ee,K,T,d){var g,P=0;for(g=0;g<d;g++)P|=re[ee+g]^K[T+g];return(1&P-1>>>8)-1}function ae(re,ee,K,T){return q(re,ee,K,T,32)}function Y(re,ee){var K=new Uint8Array(32),T=new Uint8Array(32);return D(K,re),D(T,ee),ae(K,0,T,0)}function de(re,ee){var K=t(),T;for(T=0;T<16;T++)K[T]=ee[T];for(T=250;T>=0;T--)k(K,K),T!==1&&A(K,K,ee);for(T=0;T<16;T++)re[T]=K[T]}function fe(re,ee){var K;for(K=0;K<16;K++)re[K]=ee[K]|0}function be(re,ee){var K=t(),T=t(),d=t(),g=t(),P=t(),I=t(),B=t();return fe(re[2],s),h(re[1],ee),k(d,re[1]),A(g,d,i),x(d,d,re[2]),p(g,re[2],g),k(P,g),k(I,P),A(B,I,P),A(K,B,d),A(K,K,g),de(K,K),A(K,K,d),A(K,K,g),A(K,K,g),A(re[0],K,g),k(T,re[0]),A(T,T,g),Y(T,d)&&A(re[0],re[0],a),k(T,re[0]),A(T,T,g),Y(T,d)?-1:(F(re[0])===ee[31]>>7&&x(re[0],n,re[0]),A(re[3],re[0],re[1]),0)}function Ie(re){var ee=new Uint8Array(32),K=[t(),t(),t(),t()],T=t(),d=t();if(be(K,re))return null;var g=K[1];return p(T,s,g),x(d,s,g),U(d,d),A(T,T,d),D(ee,T),ee}function Be(re){var ee=new Uint8Array(64),K=new Uint8Array(32),T;for(e.lowlevel.crypto_hash(ee,re,32),ee[0]&=248,ee[31]&=127,ee[31]|=64,T=0;T<32;T++)K[T]=ee[T];for(T=0;T<64;T++)ee[T]=0;return K}function Ue(re){var ee=Ie(re.publicKey);return ee?{publicKey:ee,secretKey:Be(re.secretKey)}:null}return{convertPublicKey:Ie,convertSecretKey:Be,convertKeyPair:Ue}})})(ed2curve$1);var ed2curve=ed2curve$1.exports;function convertSecretKeyToCurve25519(r){return ed2curve.convertSecretKey(r)}function convertPublicKeyToCurve25519(r){return assertReturn(ed2curve.convertPublicKey(r),"Unable to convert publicKey to ed25519")}const HDKD=compactAddLength(stringToU8a("Ed25519HDKD"));function ed25519DeriveHard(r,e){return assert$1(isU8a(e)&&e.length===32,"Invalid chainCode passed to derive"),blake2AsU8a(u8aConcat(HDKD,r,e))}function randomAsU8a(r=32){return getRandomValues(new Uint8Array(r))}const randomAsHex=createAsHex(randomAsU8a);function ed25519PairFromSeed(r,e){if(!e&&isReady()){const t=ed25519KeypairFromSeed(r);return{publicKey:t.slice(32),secretKey:t.slice(0,64)}}return nacl.sign.keyPair.fromSeed(r)}function ed25519Sign(r,{publicKey:e,secretKey:t},n){assert$1(t,"Expected a valid secretKey");const s=u8aToU8a(r);return!n&&isReady()?ed25519Sign$1(e,t.subarray(0,32),s):nacl.sign.detached(s,t)}function ed25519Verify(r,e,t,n){const s=u8aToU8a(r),i=u8aToU8a(t),a=u8aToU8a(e);return assert$1(i.length===32,()=>`Invalid publicKey, received ${i.length}, expected 32`),assert$1(a.length===64,()=>`Invalid signature, received ${a.length} bytes, expected 64`),!n&&isReady()?ed25519Verify$1(a,s,i):nacl.sign.detached.verify(s,a,i)}const keyHdkdEd25519=createSeedDeriveFn(ed25519PairFromSeed,ed25519DeriveHard),SEC_LEN=64,PUB_LEN=32,TOT_LEN=SEC_LEN+PUB_LEN;function sr25519PairFromU8a(r){const e=u8aToU8a(r);if(e.length!==TOT_LEN)throw new Error(`Expected keypair with ${TOT_LEN} bytes, found ${e.length}`);return{publicKey:e.slice(SEC_LEN,TOT_LEN),secretKey:e.slice(0,SEC_LEN)}}function sr25519KeypairToU8a({publicKey:r,secretKey:e}){return u8aConcat(e,r).slice()}function createDeriveFn(r){return(e,t)=>{if(!isU8a(t)||t.length!==32)throw new Error("Invalid chainCode passed to derive");return sr25519PairFromU8a(r(sr25519KeypairToU8a(e),t))}}const sr25519DeriveHard=createDeriveFn(sr25519DeriveKeypairHard),sr25519DeriveSoft=createDeriveFn(sr25519DeriveKeypairSoft);function keyHdkdSr25519(r,{chainCode:e,isSoft:t}){return t?sr25519DeriveSoft(r,e):sr25519DeriveHard(r,e)}const generators={ecdsa:keyHdkdEcdsa,ed25519:keyHdkdEd25519,ethereum:keyHdkdEcdsa,sr25519:keyHdkdSr25519};function keyFromPath(r,e,t){const n=generators[t];let s=r;for(const i of e)s=n(s,i);return s}function sr25519PairFromSeed(r){const e=u8aToU8a(r);if(e.length!==32)throw new Error(`Expected a seed matching 32 bytes, found ${e.length}`);return sr25519PairFromU8a(sr25519KeypairFromSeed(e))}function sr25519Sign(r,{publicKey:e,secretKey:t}){if((e==null?void 0:e.length)!==32)throw new Error("Expected a valid publicKey, 32-bytes");if((t==null?void 0:t.length)!==64)throw new Error("Expected a valid secretKey, 64-bytes");return sr25519Sign$1(e,t,u8aToU8a(r))}function sr25519Verify(r,e,t){const n=u8aToU8a(t),s=u8aToU8a(e);if(n.length!==32)throw new Error(`Invalid publicKey, received ${n.length} bytes, expected 32`);if(s.length!==64)throw new Error(`Invalid signature, received ${s.length} bytes, expected 64`);return sr25519Verify$1(s,u8aToU8a(r),n)}const EMPTY_U8A$2=new Uint8Array;function sr25519VrfSign(r,{secretKey:e},t=EMPTY_U8A$2,n=EMPTY_U8A$2){if((e==null?void 0:e.length)!==64)throw new Error("Invalid secretKey, expected 64-bytes");return vrfSign(e,u8aToU8a(t),u8aToU8a(r),u8aToU8a(n))}const EMPTY_U8A$1=new Uint8Array;function sr25519VrfVerify(r,e,t,n=EMPTY_U8A$1,s=EMPTY_U8A$1){const i=u8aToU8a(t),a=u8aToU8a(e);if(i.length!==32)throw new Error("Invalid publicKey, expected 32-bytes");if(a.length!==96)throw new Error("Invalid vrfSign output, expected 96 bytes");return vrfVerify(i,u8aToU8a(n),u8aToU8a(r),u8aToU8a(s),a)}function encodeAddress(r,e=defaults$1.prefix){const t=decodeAddress(r);assert$1(e>=0&&e<=16383&&![46,47].includes(e),"Out of range ss58Format specified"),assert$1(defaults$1.allowedDecodedLengths.includes(t.length),()=>`Expected a valid key to convert, with length ${defaults$1.allowedDecodedLengths.join(", ")}`);const n=u8aConcat(e<64?[e]:[(e&252)>>2|64,e>>8|(e&3)<<6],t);return base58Encode(u8aConcat(n,sshash(n).subarray(0,[32,33].includes(t.length)?2:1)))}const[SHA3_PI,SHA3_ROTL,_SHA3_IOTA]=[[],[],[]],_0n=BigInt(0),_1n=BigInt(1),_2n=BigInt(2),_7n$1=BigInt(7),_256n$1=BigInt(256),_0x71n=BigInt(113);for(let r=0,e=_1n,t=1,n=0;r<24;r++){[t,n]=[n,(2*t+3*n)%5],SHA3_PI.push(2*(5*n+t)),SHA3_ROTL.push((r+1)*(r+2)/2%64);let s=_0n;for(let i=0;i<7;i++)e=(e<<_1n^(e>>_7n$1)*_0x71n)%_256n$1,e&_2n&&(s^=_1n<<(_1n<<BigInt(i))-_1n);_SHA3_IOTA.push(s)}const[SHA3_IOTA_H,SHA3_IOTA_L]=u64$1.split(_SHA3_IOTA,!0),rotlH=(r,e,t)=>t>32?u64$1.rotlBH(r,e,t):u64$1.rotlSH(r,e,t),rotlL=(r,e,t)=>t>32?u64$1.rotlBL(r,e,t):u64$1.rotlSL(r,e,t);function keccakP(r,e=24){const t=new Uint32Array(10);for(let n=24-e;n<24;n++){for(let a=0;a<10;a++)t[a]=r[a]^r[a+10]^r[a+20]^r[a+30]^r[a+40];for(let a=0;a<10;a+=2){const o=(a+8)%10,c=(a+2)%10,h=t[c],p=t[c+1],x=rotlH(h,p,1)^t[o],A=rotlL(h,p,1)^t[o+1];for(let k=0;k<50;k+=10)r[a+k]^=x,r[a+k+1]^=A}let s=r[2],i=r[3];for(let a=0;a<24;a++){const o=SHA3_ROTL[a],c=rotlH(s,i,o),h=rotlL(s,i,o),p=SHA3_PI[a];s=r[p],i=r[p+1],r[p]=c,r[p+1]=h}for(let a=0;a<50;a+=10){for(let o=0;o<10;o++)t[o]=r[a+o];for(let o=0;o<10;o++)r[a+o]^=~t[(o+2)%10]&t[(o+4)%10]}r[0]^=SHA3_IOTA_H[n],r[1]^=SHA3_IOTA_L[n]}t.fill(0)}class Keccak extends Hash{constructor(e,t,n,s=!1,i=24){if(super(),this.blockLen=e,this.suffix=t,this.outputLen=n,this.enableXOF=s,this.rounds=i,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,assert.number(n),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=u32$1(this.state)}keccak(){keccakP(this.state32,this.rounds),this.posOut=0,this.pos=0}update(e){assert.exists(this);const{blockLen:t,state:n}=this;e=toBytes(e);const s=e.length;for(let i=0;i<s;){const a=Math.min(t-this.pos,s-i);for(let o=0;o<a;o++)n[this.pos++]^=e[i++];this.pos===t&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:t,pos:n,blockLen:s}=this;e[n]^=t,(t&128)!==0&&n===s-1&&this.keccak(),e[s-1]^=128,this.keccak()}writeInto(e){assert.exists(this,!1),assert.bytes(e),this.finish();const t=this.state,{blockLen:n}=this;for(let s=0,i=e.length;s<i;){this.posOut>=n&&this.keccak();const a=Math.min(n-this.posOut,i-s);e.set(t.subarray(this.posOut,this.posOut+a),s),this.posOut+=a,s+=a}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return assert.number(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(assert.output(e,this),this.finished)throw new Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(e){const{blockLen:t,suffix:n,outputLen:s,rounds:i,enableXOF:a}=this;return e||(e=new Keccak(t,n,s,a,i)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=i,e.suffix=n,e.outputLen=s,e.enableXOF=a,e.destroyed=this.destroyed,e}}const gen=(r,e,t)=>wrapConstructor(()=>new Keccak(e,r,t));gen(6,144,224/8);gen(6,136,256/8);gen(6,104,384/8);gen(6,72,512/8);gen(1,144,224/8);const keccak_256=gen(1,136,256/8);gen(1,104,384/8);const keccak_512=gen(1,72,512/8),genShake=(r,e,t)=>wrapConstructorWithOpts((n={})=>new Keccak(e,r,n.dkLen===void 0?t:n.dkLen,!0));genShake(31,168,128/8);genShake(31,136,256/8);const keccakAsU8a=createDualHasher({256:keccak256,512:keccak512},{256:keccak_256,512:keccak_512});function hasher(r,e,t){return r==="keccak"?keccakAsU8a(e,void 0,t):blake2AsU8a(e,void 0,void 0,t)}const config$1={chars:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",coder:base64,type:"base64"},base64Validate=createValidate(config$1),base64Decode=createDecode(config$1,base64Validate),base64Encode=createEncode(config$1);function secp256k1Compress(r,e){if(r.length===33)return r;if(r.length!==65)throw new Error("Invalid publicKey provided");return!hasBigInt||!e&&isReady()?secp256k1Compress$1(r):Point.fromHex(r).toRawBytes(!0)}function secp256k1Expand(r,e){if(r.length===65)return r.subarray(1);if(r.length!==33)throw new Error("Invalid publicKey provided");if(!hasBigInt||!e&&isReady())return secp256k1Expand$1(r).subarray(1);const{x:t,y:n}=Point.fromHex(r);return u8aConcat(bnToU8a(t,BN_BE_256_OPTS),bnToU8a(n,BN_BE_256_OPTS))}function secp256k1Recover(r,e,t,n="blake2",s){const i=u8aToU8a(e).subarray(0,64),a=u8aToU8a(r),o=!hasBigInt||!s&&isReady()?secp256k1Recover$1(a,i,t):recoverPublicKey(a,Signature.fromCompact(i).toRawBytes(),t);if(!o)throw new Error("Unable to recover publicKey from signature");return n==="keccak"?secp256k1Expand(o,s):secp256k1Compress(o,s)}function secp256k1Sign(r,{secretKey:e},t="blake2",n){if((e==null?void 0:e.length)!==32)throw new Error("Expected valid secp256k1 secretKey, 32-bytes");const s=hasher(t,r,n);if(!hasBigInt||!n&&isReady())return secp256k1Sign$1(s,e);const[i,a]=signSync(s,e,{canonical:!0,recovered:!0}),{r:o,s:c}=Signature.fromHex(i);return u8aConcat(bnToU8a(o,BN_BE_256_OPTS),bnToU8a(c,BN_BE_256_OPTS),new Uint8Array([a||0]))}const N="ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141".replace(/ /g,""),N_BI=BigInt$1(`0x${N}`),N_BN=new BN(N,"hex");function addBi(r,e){let t=u8aToBigInt(e,BN_BE_OPTS);if(t>=N_BI)throw new Error("Tweak parameter is out of range");if(t+=u8aToBigInt(r,BN_BE_OPTS),t>=N_BI&&(t-=N_BI),t===_0n$2)throw new Error("Invalid resulting private key");return nToU8a(t,BN_BE_256_OPTS)}function addBn(r,e){const t=new BN(e);if(t.cmp(N_BN)>=0)throw new Error("Tweak parameter is out of range");if(t.iadd(new BN(r)),t.cmp(N_BN)>=0&&t.isub(N_BN),t.isZero())throw new Error("Invalid resulting private key");return bnToU8a(t,BN_BE_256_OPTS)}function secp256k1PrivateKeyTweakAdd(r,e,t){if(!isU8a(r)||r.length!==32)throw new Error("Expected seckey to be an Uint8Array with length 32");if(!isU8a(e)||e.length!==32)throw new Error("Expected tweak to be an Uint8Array with length 32");return!hasBigInt||t?addBn(r,e):addBi(r,e)}function secp256k1Verify(r,e,t,n="blake2",s){const i=u8aToU8a(e);if(i.length!==65)throw new Error(`Expected signature with 65 bytes, ${i.length} found instead`);const a=secp256k1Recover(hasher(n,r),i,i[64],n,s),o=hasher(n,a,s),c=u8aToU8a(t);return u8aEq(a,c)||(n==="keccak"?u8aEq(o.slice(-20),c.slice(-20)):u8aEq(o,c))}function getH160(r){return[33,65].includes(r.length)&&(r=keccakAsU8a(secp256k1Expand(r))),r.slice(-20)}function ethereumEncode(r){if(!r)return"0x";const e=u8aToU8a(r);assert$1([20,32,33,65].includes(e.length),"Invalid address or publicKey passed");const t=u8aToHex(getH160(e),-1,!1),n=u8aToHex(keccakAsU8a(t),-1,!1);let s="";for(let i=0;i<40;i++)s=`${s}${parseInt(n[i],16)>7?t[i].toUpperCase():t[i]}`;return`0x${s}`}function isInvalidChar(r,e){return r!==(e>7?r.toUpperCase():r.toLowerCase())}function isEthereumChecksum(r){const e=r.replace("0x",""),t=u8aToHex(keccakAsU8a(e.toLowerCase()),-1,!1);for(let n=0;n<40;n++)if(isInvalidChar(e[n],parseInt(t[n],16)))return!1;return!0}function isEthereumAddress(r){return!r||r.length!==42||!isHex(r)?!1:/^(0x)?[0-9a-f]{40}$/.test(r)||/^(0x)?[0-9A-F]{40}$/.test(r)?!0:isEthereumChecksum(r)}const HARDENED=2147483648;function hdValidatePath(r){if(!r.startsWith("m/"))return!1;const e=r.split("/").slice(1);for(const t of e){const n=/^\d+'?$/.test(t)?parseInt(t.replace(/'$/,""),10):Number.NaN;if(isNaN(n)||n>=HARDENED||n<0)return!1}return!0}const MASTER_SECRET=stringToU8a("Bitcoin seed");function createCoded(r,e){return{chainCode:e,publicKey:secp256k1PairFromSeed(r).publicKey,secretKey:r}}function deriveChild(r,e){const t=bnToU8a(e,BN_BE_32_OPTS),n=e>=HARDENED?u8aConcat(new Uint8Array(1),r.secretKey,t):u8aConcat(r.publicKey,t);try{const s=hmacShaAsU8a(r.chainCode,n,512);return createCoded(secp256k1PrivateKeyTweakAdd(r.secretKey,s.slice(0,32)),s.slice(32))}catch{return deriveChild(r,e+1)}}function hdEthereum(r,e=""){const t=hmacShaAsU8a(MASTER_SECRET,r,512);let n=createCoded(t.slice(0,32),t.slice(32));if(!e||e==="m"||e==="M"||e==="m'"||e==="M'")return n;assert$1(hdValidatePath(e),"Invalid derivation path");const s=e.split("/").slice(1);for(const i of s)n=deriveChild(n,parseInt(i,10)+(i.length>1&&i.endsWith("'")?HARDENED:0));return n}function pbkdf2Init(r,e,t,n){assert.hash(r);const s=checkOpts({dkLen:32,asyncTick:10},n),{c:i,dkLen:a,asyncTick:o}=s;if(assert.number(i),assert.number(a),assert.number(o),i<1)throw new Error("PBKDF2: iterations (c) should be >= 1");const c=toBytes(e),h=toBytes(t),p=new Uint8Array(a),x=hmac.create(r,c),A=x._cloneInto().update(h);return{c:i,dkLen:a,asyncTick:o,DK:p,PRF:x,PRFSalt:A}}function pbkdf2Output(r,e,t,n,s){return r.destroy(),e.destroy(),n&&n.destroy(),s.fill(0),t}function pbkdf2(r,e,t,n){const{c:s,dkLen:i,DK:a,PRF:o,PRFSalt:c}=pbkdf2Init(r,e,t,n);let h;const p=new Uint8Array(4),x=createView(p),A=new Uint8Array(o.outputLen);for(let k=1,U=0;U<i;k++,U+=o.outputLen){const D=a.subarray(U,U+o.outputLen);x.setInt32(0,k,!1),(h=c._cloneInto(h)).update(p).digestInto(A),D.set(A.subarray(0,D.length));for(let F=1;F<s;F++){o._cloneInto(h).update(A).digestInto(A);for(let q=0;q<D.length;q++)D[q]^=A[q]}}return pbkdf2Output(o,c,a,h,A)}function pbkdf2Encode(r,e=randomAsU8a(),t=2048,n){const s=u8aToU8a(r),i=u8aToU8a(e);return{password:!hasBigInt||!n&&isReady()?pbkdf2$1(s,i,t):pbkdf2(sha512,s,i,{c:t,dkLen:64}),rounds:t,salt:e}}const shaAsU8a=createDualHasher({256:sha256$1,512:sha512$1},{256:sha256,512:sha512}),sha256AsU8a=createBitHasher(256,shaAsU8a);var DEFAULT_WORDLIST="abandon|ability|able|about|above|absent|absorb|abstract|absurd|abuse|access|accident|account|accuse|achieve|acid|acoustic|acquire|across|act|action|actor|actress|actual|adapt|add|addict|address|adjust|admit|adult|advance|advice|aerobic|affair|afford|afraid|again|age|agent|agree|ahead|aim|air|airport|aisle|alarm|album|alcohol|alert|alien|all|alley|allow|almost|alone|alpha|already|also|alter|always|amateur|amazing|among|amount|amused|analyst|anchor|ancient|anger|angle|angry|animal|ankle|announce|annual|another|answer|antenna|antique|anxiety|any|apart|apology|appear|apple|approve|april|arch|arctic|area|arena|argue|arm|armed|armor|army|around|arrange|arrest|arrive|arrow|art|artefact|artist|artwork|ask|aspect|assault|asset|assist|assume|asthma|athlete|atom|attack|attend|attitude|attract|auction|audit|august|aunt|author|auto|autumn|average|avocado|avoid|awake|aware|away|awesome|awful|awkward|axis|baby|bachelor|bacon|badge|bag|balance|balcony|ball|bamboo|banana|banner|bar|barely|bargain|barrel|base|basic|basket|battle|beach|bean|beauty|because|become|beef|before|begin|behave|behind|believe|below|belt|bench|benefit|best|betray|better|between|beyond|bicycle|bid|bike|bind|biology|bird|birth|bitter|black|blade|blame|blanket|blast|bleak|bless|blind|blood|blossom|blouse|blue|blur|blush|board|boat|body|boil|bomb|bone|bonus|book|boost|border|boring|borrow|boss|bottom|bounce|box|boy|bracket|brain|brand|brass|brave|bread|breeze|brick|bridge|brief|bright|bring|brisk|broccoli|broken|bronze|broom|brother|brown|brush|bubble|buddy|budget|buffalo|build|bulb|bulk|bullet|bundle|bunker|burden|burger|burst|bus|business|busy|butter|buyer|buzz|cabbage|cabin|cable|cactus|cage|cake|call|calm|camera|camp|can|canal|cancel|candy|cannon|canoe|canvas|canyon|capable|capital|captain|car|carbon|card|cargo|carpet|carry|cart|case|cash|casino|castle|casual|cat|catalog|catch|category|cattle|caught|cause|caution|cave|ceiling|celery|cement|census|century|cereal|certain|chair|chalk|champion|change|chaos|chapter|charge|chase|chat|cheap|check|cheese|chef|cherry|chest|chicken|chief|child|chimney|choice|choose|chronic|chuckle|chunk|churn|cigar|cinnamon|circle|citizen|city|civil|claim|clap|clarify|claw|clay|clean|clerk|clever|click|client|cliff|climb|clinic|clip|clock|clog|close|cloth|cloud|clown|club|clump|cluster|clutch|coach|coast|coconut|code|coffee|coil|coin|collect|color|column|combine|come|comfort|comic|common|company|concert|conduct|confirm|congress|connect|consider|control|convince|cook|cool|copper|copy|coral|core|corn|correct|cost|cotton|couch|country|couple|course|cousin|cover|coyote|crack|cradle|craft|cram|crane|crash|crater|crawl|crazy|cream|credit|creek|crew|cricket|crime|crisp|critic|crop|cross|crouch|crowd|crucial|cruel|cruise|crumble|crunch|crush|cry|crystal|cube|culture|cup|cupboard|curious|current|curtain|curve|cushion|custom|cute|cycle|dad|damage|damp|dance|danger|daring|dash|daughter|dawn|day|deal|debate|debris|decade|december|decide|decline|decorate|decrease|deer|defense|define|defy|degree|delay|deliver|demand|demise|denial|dentist|deny|depart|depend|deposit|depth|deputy|derive|describe|desert|design|desk|despair|destroy|detail|detect|develop|device|devote|diagram|dial|diamond|diary|dice|diesel|diet|differ|digital|dignity|dilemma|dinner|dinosaur|direct|dirt|disagree|discover|disease|dish|dismiss|disorder|display|distance|divert|divide|divorce|dizzy|doctor|document|dog|doll|dolphin|domain|donate|donkey|donor|door|dose|double|dove|draft|dragon|drama|drastic|draw|dream|dress|drift|drill|drink|drip|drive|drop|drum|dry|duck|dumb|dune|during|dust|dutch|duty|dwarf|dynamic|eager|eagle|early|earn|earth|easily|east|easy|echo|ecology|economy|edge|edit|educate|effort|egg|eight|either|elbow|elder|electric|elegant|element|elephant|elevator|elite|else|embark|embody|embrace|emerge|emotion|employ|empower|empty|enable|enact|end|endless|endorse|enemy|energy|enforce|engage|engine|enhance|enjoy|enlist|enough|enrich|enroll|ensure|enter|entire|entry|envelope|episode|equal|equip|era|erase|erode|erosion|error|erupt|escape|essay|essence|estate|eternal|ethics|evidence|evil|evoke|evolve|exact|example|excess|exchange|excite|exclude|excuse|execute|exercise|exhaust|exhibit|exile|exist|exit|exotic|expand|expect|expire|explain|expose|express|extend|extra|eye|eyebrow|fabric|face|faculty|fade|faint|faith|fall|false|fame|family|famous|fan|fancy|fantasy|farm|fashion|fat|fatal|father|fatigue|fault|favorite|feature|february|federal|fee|feed|feel|female|fence|festival|fetch|fever|few|fiber|fiction|field|figure|file|film|filter|final|find|fine|finger|finish|fire|firm|first|fiscal|fish|fit|fitness|fix|flag|flame|flash|flat|flavor|flee|flight|flip|float|flock|floor|flower|fluid|flush|fly|foam|focus|fog|foil|fold|follow|food|foot|force|forest|forget|fork|fortune|forum|forward|fossil|foster|found|fox|fragile|frame|frequent|fresh|friend|fringe|frog|front|frost|frown|frozen|fruit|fuel|fun|funny|furnace|fury|future|gadget|gain|galaxy|gallery|game|gap|garage|garbage|garden|garlic|garment|gas|gasp|gate|gather|gauge|gaze|general|genius|genre|gentle|genuine|gesture|ghost|giant|gift|giggle|ginger|giraffe|girl|give|glad|glance|glare|glass|glide|glimpse|globe|gloom|glory|glove|glow|glue|goat|goddess|gold|good|goose|gorilla|gospel|gossip|govern|gown|grab|grace|grain|grant|grape|grass|gravity|great|green|grid|grief|grit|grocery|group|grow|grunt|guard|guess|guide|guilt|guitar|gun|gym|habit|hair|half|hammer|hamster|hand|happy|harbor|hard|harsh|harvest|hat|have|hawk|hazard|head|health|heart|heavy|hedgehog|height|hello|helmet|help|hen|hero|hidden|high|hill|hint|hip|hire|history|hobby|hockey|hold|hole|holiday|hollow|home|honey|hood|hope|horn|horror|horse|hospital|host|hotel|hour|hover|hub|huge|human|humble|humor|hundred|hungry|hunt|hurdle|hurry|hurt|husband|hybrid|ice|icon|idea|identify|idle|ignore|ill|illegal|illness|image|imitate|immense|immune|impact|impose|improve|impulse|inch|include|income|increase|index|indicate|indoor|industry|infant|inflict|inform|inhale|inherit|initial|inject|injury|inmate|inner|innocent|input|inquiry|insane|insect|inside|inspire|install|intact|interest|into|invest|invite|involve|iron|island|isolate|issue|item|ivory|jacket|jaguar|jar|jazz|jealous|jeans|jelly|jewel|job|join|joke|journey|joy|judge|juice|jump|jungle|junior|junk|just|kangaroo|keen|keep|ketchup|key|kick|kid|kidney|kind|kingdom|kiss|kit|kitchen|kite|kitten|kiwi|knee|knife|knock|know|lab|label|labor|ladder|lady|lake|lamp|language|laptop|large|later|latin|laugh|laundry|lava|law|lawn|lawsuit|layer|lazy|leader|leaf|learn|leave|lecture|left|leg|legal|legend|leisure|lemon|lend|length|lens|leopard|lesson|letter|level|liar|liberty|library|license|life|lift|light|like|limb|limit|link|lion|liquid|list|little|live|lizard|load|loan|lobster|local|lock|logic|lonely|long|loop|lottery|loud|lounge|love|loyal|lucky|luggage|lumber|lunar|lunch|luxury|lyrics|machine|mad|magic|magnet|maid|mail|main|major|make|mammal|man|manage|mandate|mango|mansion|manual|maple|marble|march|margin|marine|market|marriage|mask|mass|master|match|material|math|matrix|matter|maximum|maze|meadow|mean|measure|meat|mechanic|medal|media|melody|melt|member|memory|mention|menu|mercy|merge|merit|merry|mesh|message|metal|method|middle|midnight|milk|million|mimic|mind|minimum|minor|minute|miracle|mirror|misery|miss|mistake|mix|mixed|mixture|mobile|model|modify|mom|moment|monitor|monkey|monster|month|moon|moral|more|morning|mosquito|mother|motion|motor|mountain|mouse|move|movie|much|muffin|mule|multiply|muscle|museum|mushroom|music|must|mutual|myself|mystery|myth|naive|name|napkin|narrow|nasty|nation|nature|near|neck|need|negative|neglect|neither|nephew|nerve|nest|net|network|neutral|never|news|next|nice|night|noble|noise|nominee|noodle|normal|north|nose|notable|note|nothing|notice|novel|now|nuclear|number|nurse|nut|oak|obey|object|oblige|obscure|observe|obtain|obvious|occur|ocean|october|odor|off|offer|office|often|oil|okay|old|olive|olympic|omit|once|one|onion|online|only|open|opera|opinion|oppose|option|orange|orbit|orchard|order|ordinary|organ|orient|original|orphan|ostrich|other|outdoor|outer|output|outside|oval|oven|over|own|owner|oxygen|oyster|ozone|pact|paddle|page|pair|palace|palm|panda|panel|panic|panther|paper|parade|parent|park|parrot|party|pass|patch|path|patient|patrol|pattern|pause|pave|payment|peace|peanut|pear|peasant|pelican|pen|penalty|pencil|people|pepper|perfect|permit|person|pet|phone|photo|phrase|physical|piano|picnic|picture|piece|pig|pigeon|pill|pilot|pink|pioneer|pipe|pistol|pitch|pizza|place|planet|plastic|plate|play|please|pledge|pluck|plug|plunge|poem|poet|point|polar|pole|police|pond|pony|pool|popular|portion|position|possible|post|potato|pottery|poverty|powder|power|practice|praise|predict|prefer|prepare|present|pretty|prevent|price|pride|primary|print|priority|prison|private|prize|problem|process|produce|profit|program|project|promote|proof|property|prosper|protect|proud|provide|public|pudding|pull|pulp|pulse|pumpkin|punch|pupil|puppy|purchase|purity|purpose|purse|push|put|puzzle|pyramid|quality|quantum|quarter|question|quick|quit|quiz|quote|rabbit|raccoon|race|rack|radar|radio|rail|rain|raise|rally|ramp|ranch|random|range|rapid|rare|rate|rather|raven|raw|razor|ready|real|reason|rebel|rebuild|recall|receive|recipe|record|recycle|reduce|reflect|reform|refuse|region|regret|regular|reject|relax|release|relief|rely|remain|remember|remind|remove|render|renew|rent|reopen|repair|repeat|replace|report|require|rescue|resemble|resist|resource|response|result|retire|retreat|return|reunion|reveal|review|reward|rhythm|rib|ribbon|rice|rich|ride|ridge|rifle|right|rigid|ring|riot|ripple|risk|ritual|rival|river|road|roast|robot|robust|rocket|romance|roof|rookie|room|rose|rotate|rough|round|route|royal|rubber|rude|rug|rule|run|runway|rural|sad|saddle|sadness|safe|sail|salad|salmon|salon|salt|salute|same|sample|sand|satisfy|satoshi|sauce|sausage|save|say|scale|scan|scare|scatter|scene|scheme|school|science|scissors|scorpion|scout|scrap|screen|script|scrub|sea|search|season|seat|second|secret|section|security|seed|seek|segment|select|sell|seminar|senior|sense|sentence|series|service|session|settle|setup|seven|shadow|shaft|shallow|share|shed|shell|sheriff|shield|shift|shine|ship|shiver|shock|shoe|shoot|shop|short|shoulder|shove|shrimp|shrug|shuffle|shy|sibling|sick|side|siege|sight|sign|silent|silk|silly|silver|similar|simple|since|sing|siren|sister|situate|six|size|skate|sketch|ski|skill|skin|skirt|skull|slab|slam|sleep|slender|slice|slide|slight|slim|slogan|slot|slow|slush|small|smart|smile|smoke|smooth|snack|snake|snap|sniff|snow|soap|soccer|social|sock|soda|soft|solar|soldier|solid|solution|solve|someone|song|soon|sorry|sort|soul|sound|soup|source|south|space|spare|spatial|spawn|speak|special|speed|spell|spend|sphere|spice|spider|spike|spin|spirit|split|spoil|sponsor|spoon|sport|spot|spray|spread|spring|spy|square|squeeze|squirrel|stable|stadium|staff|stage|stairs|stamp|stand|start|state|stay|steak|steel|stem|step|stereo|stick|still|sting|stock|stomach|stone|stool|story|stove|strategy|street|strike|strong|struggle|student|stuff|stumble|style|subject|submit|subway|success|such|sudden|suffer|sugar|suggest|suit|summer|sun|sunny|sunset|super|supply|supreme|sure|surface|surge|surprise|surround|survey|suspect|sustain|swallow|swamp|swap|swarm|swear|sweet|swift|swim|swing|switch|sword|symbol|symptom|syrup|system|table|tackle|tag|tail|talent|talk|tank|tape|target|task|taste|tattoo|taxi|teach|team|tell|ten|tenant|tennis|tent|term|test|text|thank|that|theme|then|theory|there|they|thing|this|thought|three|thrive|throw|thumb|thunder|ticket|tide|tiger|tilt|timber|time|tiny|tip|tired|tissue|title|toast|tobacco|today|toddler|toe|together|toilet|token|tomato|tomorrow|tone|tongue|tonight|tool|tooth|top|topic|topple|torch|tornado|tortoise|toss|total|tourist|toward|tower|town|toy|track|trade|traffic|tragic|train|transfer|trap|trash|travel|tray|treat|tree|trend|trial|tribe|trick|trigger|trim|trip|trophy|trouble|truck|true|truly|trumpet|trust|truth|try|tube|tuition|tumble|tuna|tunnel|turkey|turn|turtle|twelve|twenty|twice|twin|twist|two|type|typical|ugly|umbrella|unable|unaware|uncle|uncover|under|undo|unfair|unfold|unhappy|uniform|unique|unit|universe|unknown|unlock|until|unusual|unveil|update|upgrade|uphold|upon|upper|upset|urban|urge|usage|use|used|useful|useless|usual|utility|vacant|vacuum|vague|valid|valley|valve|van|vanish|vapor|various|vast|vault|vehicle|velvet|vendor|venture|venue|verb|verify|version|very|vessel|veteran|viable|vibrant|vicious|victory|video|view|village|vintage|violin|virtual|virus|visa|visit|visual|vital|vivid|vocal|voice|void|volcano|volume|vote|voyage|wage|wagon|wait|walk|wall|walnut|want|warfare|warm|warrior|wash|wasp|waste|water|wave|way|wealth|weapon|wear|weasel|weather|web|wedding|weekend|weird|welcome|west|wet|whale|what|wheat|wheel|when|where|whip|whisper|wide|width|wife|wild|will|win|window|wine|wing|wink|winner|winter|wire|wisdom|wise|wish|witness|wolf|woman|wonder|wood|wool|word|work|world|worry|worth|wrap|wreck|wrestle|wrist|write|wrong|yard|year|yellow|you|young|youth|zebra|zero|zone|zoo".split("|");const INVALID_MNEMONIC="Invalid mnemonic",INVALID_ENTROPY="Invalid entropy",INVALID_CHECKSUM="Invalid mnemonic checksum";function normalize(r){return(r||"").normalize("NFKD")}function binaryToByte(r){return parseInt(r,2)}function bytesToBinary(r){return r.map(e=>e.toString(2).padStart(8,"0")).join("")}function deriveChecksumBits(r){return bytesToBinary(Array.from(sha256AsU8a(r))).slice(0,r.length*8/32)}function mnemonicToSeedSync(r,e){return pbkdf2Encode(stringToU8a(normalize(r)),stringToU8a(`mnemonic${normalize(e)}`)).password}function mnemonicToEntropy$1(r){var e;const t=normalize(r).split(" ");assert$1(t.length%3===0,INVALID_MNEMONIC);const n=t.map(p=>{const x=DEFAULT_WORDLIST.indexOf(p);return assert$1(x!==-1,INVALID_MNEMONIC),x.toString(2).padStart(11,"0")}).join(""),s=Math.floor(n.length/33)*32,i=n.slice(0,s),a=n.slice(s),o=(e=i.match(/(.{1,8})/g))===null||e===void 0?void 0:e.map(binaryToByte);assert$1(o&&o.length%4===0&&o.length>=16&&o.length<=32,INVALID_ENTROPY);const c=u8aToU8a(o),h=deriveChecksumBits(c);return assert$1(h===a,INVALID_CHECKSUM),c}function validateMnemonic(r){try{mnemonicToEntropy$1(r)}catch{return!1}return!0}function mnemonicToEntropy(r,e){return!hasBigInt||!e&&isReady()?bip39ToEntropy(r):mnemonicToEntropy$1(r)}function mnemonicValidate(r,e){return!hasBigInt||!e&&isReady()?bip39Validate(r):validateMnemonic(r)}function mnemonicToLegacySeed(r,e="",t,n=32){if(mnemonicValidate(r)){if(![32,64].includes(n))throw new Error(`Invalid seed length ${n}, expected 32 or 64`)}else throw new Error("Invalid bip39 mnemonic specified");return n===32?!hasBigInt||!t&&isReady()?bip39ToSeed(r,e):mnemonicToSeedSync(r,e).subarray(0,32):mnemonicToSeedSync(r,e)}function mnemonicToMiniSecret(r,e="",t){if(!mnemonicValidate(r))throw new Error("Invalid bip39 mnemonic specified");if(!t&&isReady())return bip39ToMiniSecret(r,e);const n=mnemonicToEntropy(r),s=stringToU8a(`mnemonic${e}`);return pbkdf2Encode(n,s).password.slice(0,32)}function naclDecrypt(r,e,t){return nacl.secretbox.open(r,e,t)||null}function naclEncrypt(r,e,t=randomAsU8a(24)){return{encrypted:nacl.secretbox(r,t,e),nonce:t}}function naclOpen(r,e,t,n){return nacl.box.open(r,e,t,n)||null}function naclSeal(r,e,t,n=randomAsU8a(24)){return{nonce:n,sealed:nacl.box(r,n,t,e)}}const rotl$1=(r,e)=>r<<e|r>>>32-e;function XorAndSalsa(r,e,t,n,s,i){let a=r[e++]^t[n++],o=r[e++]^t[n++],c=r[e++]^t[n++],h=r[e++]^t[n++],p=r[e++]^t[n++],x=r[e++]^t[n++],A=r[e++]^t[n++],k=r[e++]^t[n++],U=r[e++]^t[n++],D=r[e++]^t[n++],F=r[e++]^t[n++],q=r[e++]^t[n++],ae=r[e++]^t[n++],Y=r[e++]^t[n++],de=r[e++]^t[n++],fe=r[e++]^t[n++],be=a,Ie=o,Be=c,Ue=h,re=p,ee=x,K=A,T=k,d=U,g=D,P=F,I=q,B=ae,H=Y,z=de,M=fe;for(let m=0;m<8;m+=2)re^=rotl$1(be+B|0,7),d^=rotl$1(re+be|0,9),B^=rotl$1(d+re|0,13),be^=rotl$1(B+d|0,18),g^=rotl$1(ee+Ie|0,7),H^=rotl$1(g+ee|0,9),Ie^=rotl$1(H+g|0,13),ee^=rotl$1(Ie+H|0,18),z^=rotl$1(P+K|0,7),Be^=rotl$1(z+P|0,9),K^=rotl$1(Be+z|0,13),P^=rotl$1(K+Be|0,18),Ue^=rotl$1(M+I|0,7),T^=rotl$1(Ue+M|0,9),I^=rotl$1(T+Ue|0,13),M^=rotl$1(I+T|0,18),Ie^=rotl$1(be+Ue|0,7),Be^=rotl$1(Ie+be|0,9),Ue^=rotl$1(Be+Ie|0,13),be^=rotl$1(Ue+Be|0,18),K^=rotl$1(ee+re|0,7),T^=rotl$1(K+ee|0,9),re^=rotl$1(T+K|0,13),ee^=rotl$1(re+T|0,18),I^=rotl$1(P+g|0,7),d^=rotl$1(I+P|0,9),g^=rotl$1(d+I|0,13),P^=rotl$1(g+d|0,18),B^=rotl$1(M+z|0,7),H^=rotl$1(B+M|0,9),z^=rotl$1(H+B|0,13),M^=rotl$1(z+H|0,18);s[i++]=a+be|0,s[i++]=o+Ie|0,s[i++]=c+Be|0,s[i++]=h+Ue|0,s[i++]=p+re|0,s[i++]=x+ee|0,s[i++]=A+K|0,s[i++]=k+T|0,s[i++]=U+d|0,s[i++]=D+g|0,s[i++]=F+P|0,s[i++]=q+I|0,s[i++]=ae+B|0,s[i++]=Y+H|0,s[i++]=de+z|0,s[i++]=fe+M|0}function BlockMix(r,e,t,n,s){let i=n+0,a=n+16*s;for(let o=0;o<16;o++)t[a+o]=r[e+(2*s-1)*16+o];for(let o=0;o<s;o++,i+=16,e+=16)XorAndSalsa(t,a,r,e,t,i),o>0&&(a+=16),XorAndSalsa(t,i,r,e+=16,t,a)}function scryptInit(r,e,t){const n=checkOpts({dkLen:32,asyncTick:10,maxmem:1073742848},t),{N:s,r:i,p:a,dkLen:o,asyncTick:c,maxmem:h,onProgress:p}=n;if(assert.number(s),assert.number(i),assert.number(a),assert.number(o),assert.number(c),assert.number(h),p!==void 0&&typeof p!="function")throw new Error("progressCb should be function");const x=128*i,A=x/4;if(s<=1||(s&s-1)!==0||s>=2**(x/8)||s>2**32)throw new Error("Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32");if(a<0||a>(2**32-1)*32/x)throw new Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)");if(o<0||o>(2**32-1)*32)throw new Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32");const k=x*(s+a);if(k>h)throw new Error(`Scrypt: parameters too large, ${k} (128 * r * (N + p)) > ${h} (maxmem)`);const U=pbkdf2(sha256,r,e,{c:1,dkLen:x*a}),D=u32$1(U),F=u32$1(new Uint8Array(x*s)),q=u32$1(new Uint8Array(x));let ae=()=>{};if(p){const Y=2*s*a,de=Math.max(Math.floor(Y/1e4),1);let fe=0;ae=()=>{fe++,p&&(!(fe%de)||fe===Y)&&p(fe/Y)}}return{N:s,r:i,p:a,dkLen:o,blockSize32:A,V:F,B32:D,B:U,tmp:q,blockMixCb:ae,asyncTick:c}}function scryptOutput(r,e,t,n,s){const i=pbkdf2(sha256,r,t,{c:1,dkLen:e});return t.fill(0),n.fill(0),s.fill(0),i}function scrypt(r,e,t){const{N:n,r:s,p:i,dkLen:a,blockSize32:o,V:c,B32:h,B:p,tmp:x,blockMixCb:A}=scryptInit(r,e,t);for(let k=0;k<i;k++){const U=o*k;for(let D=0;D<o;D++)c[D]=h[U+D];for(let D=0,F=0;D<n-1;D++)BlockMix(c,F,c,F+=o,s),A();BlockMix(c,(n-1)*o,h,U,s),A();for(let D=0;D<n;D++){const F=h[U+o-16]%n;for(let q=0;q<o;q++)x[q]=h[U+q]^c[F*o+q];BlockMix(x,0,h,U,s),A()}}return scryptOutput(r,a,p,c,x)}const DEFAULT_PARAMS={N:1<<15,p:1,r:8};function scryptEncode(r,e=randomAsU8a(),t=DEFAULT_PARAMS,n){const s=u8aToU8a(r);return{params:t,password:!hasBigInt||!n&&isReady()?scrypt$1(s,e,Math.log2(t.N),t.r,t.p):scrypt(s,e,objectSpread({dkLen:64},t)),salt:e}}function scryptFromU8a(r){const e=r.subarray(0,32),t=u8aToBn(r.subarray(32+0,32+4),BN_LE_OPTS).toNumber(),n=u8aToBn(r.subarray(32+4,32+8),BN_LE_OPTS).toNumber(),s=u8aToBn(r.subarray(32+8,32+12),BN_LE_OPTS).toNumber();if(t!==DEFAULT_PARAMS.N||n!==DEFAULT_PARAMS.p||s!==DEFAULT_PARAMS.r)throw new Error("Invalid injected scrypt params found");return{params:{N:t,p:n,r:s},salt:e}}function scryptToU8a(r,{N:e,p:t,r:n}){return u8aConcat(r,bnToU8a(e,BN_LE_32_OPTS),bnToU8a(t,BN_LE_32_OPTS),bnToU8a(n,BN_LE_32_OPTS))}const ENCODING=["scrypt","xsalsa20-poly1305"],ENCODING_NONE=["none"],ENCODING_VERSION="3",NONCE_LENGTH=24,SCRYPT_LENGTH=32+3*4;function jsonDecryptData(r,e,t=ENCODING){assert$1(r,"No encrypted data available to decode"),assert$1(e||!t.includes("xsalsa20-poly1305"),"Password required to decode encrypted data");let n=r;if(e){let s;if(t.includes("scrypt")){const{params:i,salt:a}=scryptFromU8a(r);s=scryptEncode(e,a,i).password,r=r.subarray(SCRYPT_LENGTH)}else s=stringToU8a(e);n=naclDecrypt(r.subarray(NONCE_LENGTH),r.subarray(0,NONCE_LENGTH),u8aFixLength(s,256,!0))}return assert$1(n,"Unable to decode using the supplied passphrase"),n}function jsonDecrypt({encoded:r,encoding:e},t){return assert$1(r,"No encrypted data available to decode"),jsonDecryptData(isHex(r)?hexToU8a(r):base64Decode(r),t,Array.isArray(e.type)?e.type:[e.type])}function jsonEncryptFormat(r,e,t){return{encoded:base64Encode(r),encoding:{content:e,type:t?ENCODING:ENCODING_NONE,version:ENCODING_VERSION}}}function jsonEncrypt(r,e,t){let n=!1,s=r;if(t){const{params:i,password:a,salt:o}=scryptEncode(t),{encrypted:c,nonce:h}=naclEncrypt(s,a.subarray(0,32));n=!0,s=u8aConcat(scryptToU8a(o,i),h,c)}return jsonEncryptFormat(s,e,n)}const secp256k1VerifyHasher=r=>(e,t,n)=>secp256k1Verify(e,t,n,r),VERIFIERS_ECDSA=[["ecdsa",secp256k1VerifyHasher("blake2")],["ethereum",secp256k1VerifyHasher("keccak")]],VERIFIERS=[["ed25519",ed25519Verify],["sr25519",sr25519Verify],...VERIFIERS_ECDSA],CRYPTO_TYPES=["ed25519","sr25519","ecdsa"];function verifyDetect(r,{message:e,publicKey:t,signature:n},s=VERIFIERS){return r.isValid=s.some(([i,a])=>{try{if(a(e,n,t))return r.crypto=i,!0}catch{}return!1}),r}function verifyMultisig(r,{message:e,publicKey:t,signature:n}){if(![0,1,2].includes(n[0]))throw new Error(`Unknown crypto type, expected signature prefix [0..2], found ${n[0]}`);const s=CRYPTO_TYPES[n[0]]||"none";r.crypto=s;try{r.isValid={ecdsa:()=>verifyDetect(r,{message:e,publicKey:t,signature:n.subarray(1)},VERIFIERS_ECDSA).isValid,ed25519:()=>ed25519Verify(e,n.subarray(1),t),none:()=>{throw Error("no verify for `none` crypto type")},sr25519:()=>sr25519Verify(e,n.subarray(1),t)}[s]()}catch{}return r}function getVerifyFn(r){return[0,1,2].includes(r[0])&&[65,66].includes(r.length)?verifyMultisig:verifyDetect}function signatureVerify(r,e,t){const n=u8aToU8a(e);if(![64,65,66].includes(n.length))throw new Error(`Invalid signature length, expected [64..66] bytes, found ${n.length}`);const s=decodeAddress(t),i={message:u8aToU8a(r),publicKey:s,signature:n},a={crypto:"none",isValid:!1,isWrapped:u8aIsWrapped(i.message,!0),publicKey:s},o=u8aIsWrapped(i.message,!1),c=getVerifyFn(n);return c(a,i),a.crypto!=="none"||a.isWrapped&&!o?a:(i.message=o?u8aUnwrapBytes(i.message):u8aWrapBytes(i.message),c(a,i))}const P64_1=BigInt$1("11400714785074694791"),P64_2=BigInt$1("14029467366897019727"),P64_3=BigInt$1("1609587929392839161"),P64_4=BigInt$1("9650029242287828579"),P64_5=BigInt$1("2870177450012600261"),U64=BigInt$1("0xffffffffffffffff"),_7n=BigInt$1(7),_11n=BigInt$1(11),_12n=BigInt$1(12),_16n=BigInt$1(16),_18n=BigInt$1(18),_23n=BigInt$1(23),_27n=BigInt$1(27),_29n=BigInt$1(29),_31n=BigInt$1(31),_32n=BigInt$1(32),_33n=BigInt$1(33),_64n=BigInt$1(64),_256n=BigInt$1(256);function rotl(r,e){const t=r&U64;return(t<<e|t>>_64n-e)&U64}function fromU8a(r,e,t){const n=new Array(t);let s=0;for(let a=0;a<t;a++,s+=2)n[a]=BigInt$1(r[e+s]|r[e+1+s]<<8);let i=_0n$2;for(let a=t-1;a>=0;a--)i=(i<<_16n)+n[a];return i}function toU8a(r){const e=new Uint8Array(8);for(let t=7;t>=0;t--)e[t]=Number(r%_256n),r=r/_256n;return e}function state(r){const e=BigInt$1(r);return{seed:e,u8a:new Uint8Array(32),u8asize:0,v1:e+P64_1+P64_2,v2:e+P64_2,v3:e,v4:e-P64_1}}function init(r,e){if(e.length<32)return r.u8a.set(e),r.u8asize=e.length,r;const t=e.length-32;let n=0;if(t>=0){const s=i=>P64_1*rotl(i+P64_2*fromU8a(e,n,4),_31n);do r.v1=s(r.v1),n+=8,r.v2=s(r.v2),n+=8,r.v3=s(r.v3),n+=8,r.v4=s(r.v4),n+=8;while(n<=t)}return n<e.length&&(r.u8a.set(e.subarray(n,e.length)),r.u8asize=e.length-n),r}function xxhash64(r,e){const{seed:t,u8a:n,u8asize:s,v1:i,v2:a,v3:o,v4:c}=init(state(e),r);let h=0,p=U64&BigInt$1(r.length)+(r.length>=32?((((rotl(i,_1n$2)+rotl(a,_7n)+rotl(o,_12n)+rotl(c,_18n)^P64_1*rotl(i*P64_2,_31n))*P64_1+P64_4^P64_1*rotl(a*P64_2,_31n))*P64_1+P64_4^P64_1*rotl(o*P64_2,_31n))*P64_1+P64_4^P64_1*rotl(c*P64_2,_31n))*P64_1+P64_4:t+P64_5);for(;h<=s-8;)p=U64&P64_4+P64_1*rotl(p^P64_1*rotl(P64_2*fromU8a(n,h,4),_31n),_27n),h+=8;for(h+4<=s&&(p=U64&P64_3+P64_2*rotl(p^P64_1*fromU8a(n,h,2),_23n),h+=4);h<s;)p=U64&P64_1*rotl(p^P64_5*BigInt$1(n[h++]),_11n);return p=U64&P64_2*(p^p>>_33n),p=U64&P64_3*(p^p>>_29n),toU8a(U64&(p^p>>_32n))}function xxhashAsU8a(r,e=64,t){const n=Math.ceil(e/64),s=u8aToU8a(r);if(!hasBigInt||!t&&isReady())return twox(s,n);const i=new Uint8Array(n*8);for(let a=0;a<n;a++)i.set(xxhash64(s,a).reverse(),a*8);return i}const blake2=r=>blake2AsU8a(r,512),S=64,C=S/2,Z=S/64*5,SCHEMA={target:{colors:[0,28,0,0,28,0,0,28,0,0,28,0,0,28,0,0,28,0,1],freq:1},cube:{colors:[0,1,3,2,4,3,0,1,3,2,4,3,0,1,3,2,4,3,5],freq:20},quazar:{colors:[1,2,3,1,2,4,5,5,4,1,2,3,1,2,4,5,5,4,0],freq:16},flower:{colors:[0,1,2,0,1,2,0,1,2,0,1,2,0,1,2,0,1,2,3],freq:32},cyclic:{colors:[0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,6],freq:32},vmirror:{colors:[0,1,2,3,4,5,3,4,2,0,1,6,7,8,9,7,8,6,10],freq:128},hmirror:{colors:[0,1,2,3,4,5,6,7,8,9,10,8,6,7,5,3,4,2,11],freq:128}},OUTER_CIRCLE={cx:C,cy:C,fill:"#eee",r:C};let zeroHash=new Uint8Array;function getRotation(r){const e=r?C/8*5:C/4*3,t=e*Math.sqrt(3)/2,n=e/2,s=e*Math.sqrt(3)/4,i=e/4,a=e*3/4;return{r:e,r3o4:a,ro2:n,ro4:i,rroot3o2:t,rroot3o4:s}}function getCircleXY(r){const{r:e,r3o4:t,ro2:n,ro4:s,rroot3o2:i,rroot3o4:a}=getRotation(r);return[[C,C-e],[C,C-n],[C-a,C-t],[C-i,C-n],[C-a,C-s],[C-i,C],[C-i,C+n],[C-a,C+s],[C-a,C+t],[C,C+e],[C,C+n],[C+a,C+t],[C+i,C+n],[C+a,C+s],[C+i,C],[C+i,C-n],[C+a,C-s],[C+a,C-t],[C,C]]}function findScheme(r){let e=0;const t=Object.values(SCHEMA).find(n=>(e+=n.freq,r<e));if(!t)throw new Error("Unable to find schema");return t}function addressToId(r){return zeroHash.length||(zeroHash=blake2(new Uint8Array(32))),blake2(decodeAddress(r)).map((e,t)=>(e+256-zeroHash[t])%256)}function getColors(r){const e=Object.values(SCHEMA).map(c=>c.freq).reduce((c,h)=>c+h),t=addressToId(r),n=Math.floor((t[30]+t[31]*256)%e),s=t[28]%6*3,i=Math.floor(t[29]*70/256+26)%80+30,a=findScheme(n),o=Array.from(t).map((c,h)=>{const p=(c+h%28*58)%256;if(p===0)return"#444";if(p===255)return"transparent";const x=Math.floor(p%64*360/64),A=[53,15,35,75][Math.floor(p/64)];return`hsl(${x}, ${i}%, ${A}%)`});return a.colors.map((c,h)=>o[a.colors[h<18?(h+s)%18:18]])}function polkadotIcon(r,{isAlternative:e}){const t=getCircleXY(e);let n;try{n=getColors(r)}catch{n=new Array(t.length).fill("#ddd")}return[OUTER_CIRCLE].concat(t.map(([s,i],a)=>({cx:s,cy:i,fill:n[a],r:Z})))}const AllHashers={Blake2_128:null,Blake2_256:null,Blake2_128Concat:null,Twox128:null,Twox256:null,Twox64Concat:null,Identity:null},runtime$m={Metadata:[{methods:{metadata:{description:"Returns the metadata of a runtime",params:[],type:"OpaqueMetadata"}},version:1}]},v9={ErrorMetadataV9:{name:"Text",docs:"Vec<Text>"},EventMetadataV9:{name:"Text",args:"Vec<Type>",docs:"Vec<Text>"},FunctionArgumentMetadataV9:{name:"Text",type:"Type"},FunctionMetadataV9:{name:"Text",args:"Vec<FunctionArgumentMetadataV9>",docs:"Vec<Text>"},MetadataV9:{modules:"Vec<ModuleMetadataV9>"},ModuleConstantMetadataV9:{name:"Text",type:"Type",value:"Bytes",docs:"Vec<Text>"},ModuleMetadataV9:{name:"Text",storage:"Option<StorageMetadataV9>",calls:"Option<Vec<FunctionMetadataV9>>",events:"Option<Vec<EventMetadataV9>>",constants:"Vec<ModuleConstantMetadataV9>",errors:"Vec<ErrorMetadataV9>"},StorageEntryMetadataV9:{name:"Text",modifier:"StorageEntryModifierV9",type:"StorageEntryTypeV9",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryModifierV9:{_enum:["Optional","Default","Required"]},StorageEntryTypeV9:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV9",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV9",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV9"}}},StorageHasherV9:{_enum:{Blake2_128:null,Blake2_256:null,Twox128:null,Twox256:null,Twox64Concat:null}},StorageMetadataV9:{prefix:"Text",items:"Vec<StorageEntryMetadataV9>"}},v10={ErrorMetadataV10:"ErrorMetadataV9",EventMetadataV10:"EventMetadataV9",FunctionArgumentMetadataV10:"FunctionArgumentMetadataV9",FunctionMetadataV10:"FunctionMetadataV9",MetadataV10:{modules:"Vec<ModuleMetadataV10>"},ModuleConstantMetadataV10:"ModuleConstantMetadataV9",ModuleMetadataV10:{name:"Text",storage:"Option<StorageMetadataV10>",calls:"Option<Vec<FunctionMetadataV10>>",events:"Option<Vec<EventMetadataV10>>",constants:"Vec<ModuleConstantMetadataV10>",errors:"Vec<ErrorMetadataV10>"},StorageEntryModifierV10:"StorageEntryModifierV9",StorageEntryMetadataV10:{name:"Text",modifier:"StorageEntryModifierV10",type:"StorageEntryTypeV10",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV10:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV10",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV10",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV10"}}},StorageMetadataV10:{prefix:"Text",items:"Vec<StorageEntryMetadataV10>"},StorageHasherV10:{_enum:{Blake2_128:null,Blake2_256:null,Blake2_128Concat:null,Twox128:null,Twox256:null,Twox64Concat:null}}},v11={ErrorMetadataV11:"ErrorMetadataV10",EventMetadataV11:"EventMetadataV10",ExtrinsicMetadataV11:{version:"u8",signedExtensions:"Vec<Text>"},FunctionArgumentMetadataV11:"FunctionArgumentMetadataV10",FunctionMetadataV11:"FunctionMetadataV10",MetadataV11:{modules:"Vec<ModuleMetadataV11>",extrinsic:"ExtrinsicMetadataV11"},ModuleConstantMetadataV11:"ModuleConstantMetadataV10",ModuleMetadataV11:{name:"Text",storage:"Option<StorageMetadataV11>",calls:"Option<Vec<FunctionMetadataV11>>",events:"Option<Vec<EventMetadataV11>>",constants:"Vec<ModuleConstantMetadataV11>",errors:"Vec<ErrorMetadataV11>"},StorageEntryModifierV11:"StorageEntryModifierV10",StorageEntryMetadataV11:{name:"Text",modifier:"StorageEntryModifierV11",type:"StorageEntryTypeV11",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV11:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV11",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV11",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV11"}}},StorageMetadataV11:{prefix:"Text",items:"Vec<StorageEntryMetadataV11>"},StorageHasherV11:{_enum:AllHashers}},v12={ErrorMetadataV12:"ErrorMetadataV11",EventMetadataV12:"EventMetadataV11",ExtrinsicMetadataV12:"ExtrinsicMetadataV11",FunctionArgumentMetadataV12:"FunctionArgumentMetadataV11",FunctionMetadataV12:"FunctionMetadataV11",MetadataV12:{modules:"Vec<ModuleMetadataV12>",extrinsic:"ExtrinsicMetadataV12"},ModuleConstantMetadataV12:"ModuleConstantMetadataV11",ModuleMetadataV12:{name:"Text",storage:"Option<StorageMetadataV12>",calls:"Option<Vec<FunctionMetadataV12>>",events:"Option<Vec<EventMetadataV12>>",constants:"Vec<ModuleConstantMetadataV12>",errors:"Vec<ErrorMetadataV12>",index:"u8"},StorageEntryModifierV12:"StorageEntryModifierV11",StorageEntryMetadataV12:"StorageEntryMetadataV11",StorageEntryTypeV12:"StorageEntryTypeV11",StorageMetadataV12:"StorageMetadataV11",StorageHasherV12:"StorageHasherV11"},v13={ErrorMetadataV13:"ErrorMetadataV12",EventMetadataV13:"EventMetadataV12",ExtrinsicMetadataV13:"ExtrinsicMetadataV12",FunctionArgumentMetadataV13:"FunctionArgumentMetadataV12",FunctionMetadataV13:"FunctionMetadataV12",MetadataV13:{modules:"Vec<ModuleMetadataV13>",extrinsic:"ExtrinsicMetadataV13"},ModuleConstantMetadataV13:"ModuleConstantMetadataV12",ModuleMetadataV13:{name:"Text",storage:"Option<StorageMetadataV13>",calls:"Option<Vec<FunctionMetadataV13>>",events:"Option<Vec<EventMetadataV13>>",constants:"Vec<ModuleConstantMetadataV13>",errors:"Vec<ErrorMetadataV13>",index:"u8"},StorageEntryModifierV13:"StorageEntryModifierV12",StorageEntryMetadataV13:{name:"Text",modifier:"StorageEntryModifierV13",type:"StorageEntryTypeV13",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV13:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV13",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV13",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV13"},NMap:{keyVec:"Vec<Type>",hashers:"Vec<StorageHasherV13>",value:"Type"}}},StorageMetadataV13:{prefix:"Text",items:"Vec<StorageEntryMetadataV13>"},StorageHasherV13:"StorageHasherV12"},Si1Variant={name:"Text",fields:"Vec<Si1Field>",index:"u8",docs:"Vec<Text>"},v1$1={Si1Field:{name:"Option<Text>",type:"Si1LookupTypeId",typeName:"Option<Text>",docs:"Vec<Text>"},Si1LookupTypeId:"Compact<u32>",Si1Path:"Si0Path",Si1Type:{path:"Si1Path",params:"Vec<Si1TypeParameter>",def:"Si1TypeDef",docs:"Vec<Text>"},Si1TypeDef:{_enum:{Composite:"Si1TypeDefComposite",Variant:"Si1TypeDefVariant",Sequence:"Si1TypeDefSequence",Array:"Si1TypeDefArray",Tuple:"Si1TypeDefTuple",Primitive:"Si1TypeDefPrimitive",Compact:"Si1TypeDefCompact",BitSequence:"Si1TypeDefBitSequence",HistoricMetaCompat:"Type"}},Si1TypeDefArray:{len:"u32",type:"Si1LookupTypeId"},Si1TypeDefBitSequence:{bitStoreType:"Si1LookupTypeId",bitOrderType:"Si1LookupTypeId"},Si1TypeDefCompact:{type:"Si1LookupTypeId"},Si1TypeDefComposite:{fields:"Vec<Si1Field>"},Si1TypeDefPrimitive:"Si0TypeDefPrimitive",Si1TypeDefSequence:{type:"Si1LookupTypeId"},Si1TypeDefTuple:"Vec<Si1LookupTypeId>",Si1TypeParameter:{name:"Text",type:"Option<Si1LookupTypeId>"},Si1TypeDefVariant:{variants:"Vec<Si1Variant>"},Si1Variant},v14={PortableTypeV14:{id:"Si1LookupTypeId",type:"Si1Type"},ErrorMetadataV14:objectSpread({},Si1Variant,{args:"Vec<Type>"}),EventMetadataV14:objectSpread({},Si1Variant,{args:"Vec<Type>"}),FunctionArgumentMetadataV14:{name:"Text",type:"Type",typeName:"Option<Type>"},FunctionMetadataV14:objectSpread({},Si1Variant,{args:"Vec<FunctionArgumentMetadataV14>"}),ExtrinsicMetadataV14:{type:"SiLookupTypeId",version:"u8",signedExtensions:"Vec<SignedExtensionMetadataV14>"},MetadataV14:{lookup:"PortableRegistry",pallets:"Vec<PalletMetadataV14>",extrinsic:"ExtrinsicMetadataV14",type:"SiLookupTypeId"},PalletCallMetadataV14:{type:"SiLookupTypeId"},PalletConstantMetadataV14:{name:"Text",type:"SiLookupTypeId",value:"Bytes",docs:"Vec<Text>"},PalletErrorMetadataV14:{type:"SiLookupTypeId"},PalletEventMetadataV14:{type:"SiLookupTypeId"},PalletMetadataV14:{name:"Text",storage:"Option<PalletStorageMetadataV14>",calls:"Option<PalletCallMetadataV14>",events:"Option<PalletEventMetadataV14>",constants:"Vec<PalletConstantMetadataV14>",errors:"Option<PalletErrorMetadataV14>",index:"u8"},PalletStorageMetadataV14:{prefix:"Text",items:"Vec<StorageEntryMetadataV14>"},SignedExtensionMetadataV14:{identifier:"Text",type:"SiLookupTypeId",additionalSigned:"SiLookupTypeId"},StorageEntryMetadataV14:{name:"Text",modifier:"StorageEntryModifierV14",type:"StorageEntryTypeV14",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryModifierV14:"StorageEntryModifierV13",StorageEntryTypeV14:{_enum:{Plain:"SiLookupTypeId",Map:{hashers:"Vec<StorageHasherV14>",key:"SiLookupTypeId",value:"SiLookupTypeId"}}},StorageHasherV14:"StorageHasherV13"};var definitions$11={rpc:{},runtime:runtime$m,types:objectSpread({},v9,v10,v11,v12,v13,v14,{ErrorMetadataLatest:"ErrorMetadataV14",EventMetadataLatest:"EventMetadataV14",ExtrinsicMetadataLatest:"ExtrinsicMetadataV14",FunctionArgumentMetadataLatest:"FunctionArgumentMetadataV14",FunctionMetadataLatest:"FunctionMetadataV14",MetadataLatest:"MetadataV14",PalletCallMetadataLatest:"PalletCallMetadataV14",PalletConstantMetadataLatest:"PalletConstantMetadataV14",PalletErrorMetadataLatest:"PalletErrorMetadataV14",PalletEventMetadataLatest:"PalletEventMetadataV14",PalletMetadataLatest:"PalletMetadataV14",PalletStorageMetadataLatest:"PalletStorageMetadataV14",PortableType:"PortableTypeV14",SignedExtensionMetadataLatest:"SignedExtensionMetadataV14",StorageEntryMetadataLatest:"StorageEntryMetadataV14",StorageEntryModifierLatest:"StorageEntryModifierV14",StorageEntryTypeLatest:"StorageEntryTypeV14",StorageHasher:"StorageHasherV14",OpaqueMetadata:"Bytes",MetadataAll:{_enum:{V0:"DoNotConstruct<MetadataV0>",V1:"DoNotConstruct<MetadataV1>",V2:"DoNotConstruct<MetadataV2>",V3:"DoNotConstruct<MetadataV3>",V4:"DoNotConstruct<MetadataV4>",V5:"DoNotConstruct<MetadataV5>",V6:"DoNotConstruct<MetadataV6>",V7:"DoNotConstruct<MetadataV7>",V8:"DoNotConstruct<MetadataV8>",V9:"MetadataV9",V10:"MetadataV10",V11:"MetadataV11",V12:"MetadataV12",V13:"MetadataV13",V14:"MetadataV14"}}})};const CORE_V1_TO_V4={execute_block:{description:"Execute the given block.",params:[{name:"block",type:"Block"}],type:"Null"}},CORE_V1_TO_V2={version:{description:"Returns the version of the runtime.",params:[],type:"RuntimeVersionPre3"}},CORE_V2_TO_V4={initialize_block:{description:"Initialize a block with the given header.",params:[{name:"header",type:"Header"}],type:"Null"}},runtime$l={Core:[{methods:objectSpread({version:{description:"Returns the version of the runtime.",params:[],type:"RuntimeVersion"}},CORE_V1_TO_V4,CORE_V2_TO_V4),version:4},{methods:objectSpread({version:{description:"Returns the version of the runtime.",params:[],type:"RuntimeVersionPre4"}},CORE_V1_TO_V4,CORE_V2_TO_V4),version:3},{methods:objectSpread({},CORE_V1_TO_V2,CORE_V1_TO_V4,CORE_V2_TO_V4),version:2},{methods:objectSpread({initialise_block:{description:"Initialize a block with the given header.",params:[{name:"header",type:"Header"}],type:"Null"}},CORE_V1_TO_V2,CORE_V1_TO_V4),version:1}],TryRuntime:[{methods:{execute_block_no_check:{description:"Execute the given block, but don't check that its state root matches that of yours.",params:[{name:"block",type:"Block"}],type:"Weight"},on_runtime_upgrade:{description:"dry-run runtime upgrades, returning the total weight consumed.",params:[],type:"(Weight, Weight)"}},version:1}]},numberTypes={Fixed64:"Int<64, Fixed64>",FixedI64:"Int<64, FixedI64>",FixedU64:"UInt<64, FixedU64>",Fixed128:"Int<128, Fixed128>",FixedI128:"Int<128, FixedI128>",FixedU128:"UInt<128, FixedU128>",I32F32:"Int<64, I32F32>",U32F32:"UInt<64, U32F32>",PerU16:"UInt<16, PerU16>",Perbill:"UInt<32, Perbill>",Percent:"UInt<8, Percent>",Permill:"UInt<32, Permill>",Perquintill:"UInt<64, Perquintill>"},knownOrigins={Council:"CollectiveOrigin",System:"SystemOrigin",TechnicalCommittee:"CollectiveOrigin",Xcm:"XcmOrigin",XcmPallet:"XcmOrigin",Authority:"AuthorityOrigin",GeneralCouncil:"CollectiveOrigin"};var definitions$10={rpc:{},runtime:runtime$l,types:objectSpread({},numberTypes,{AccountId:"AccountId32",AccountId20:"GenericEthereumAccountId",AccountId32:"GenericAccountId",AccountIdOf:"AccountId",AccountIndex:"GenericAccountIndex",Address:"MultiAddress",AssetId:"u32",Balance:"UInt<128, Balance>",BalanceOf:"Balance",Block:"GenericBlock",BlockNumber:"u32",BlockNumberFor:"BlockNumber",BlockNumberOf:"BlockNumber",Call:"GenericCall",CallHash:"Hash",CallHashOf:"CallHash",ChangesTrieConfiguration:{digestInterval:"u32",digestLevels:"u32"},ChangesTrieSignal:{_enum:{NewConfiguration:"Option<ChangesTrieConfiguration>"}},ConsensusEngineId:"GenericConsensusEngineId",CodecHash:"Hash",CrateVersion:{major:"u16",minor:"u8",patch:"u8"},Digest:{logs:"Vec<DigestItem>"},DigestItem:{_enum:{Other:"Bytes",AuthoritiesChange:"Vec<AuthorityId>",ChangesTrieRoot:"Hash",SealV0:"SealV0",Consensus:"Consensus",Seal:"Seal",PreRuntime:"PreRuntime",ChangesTrieSignal:"ChangesTrieSignal",RuntimeEnvironmentUpdated:"Null"}},ExtrinsicsWeight:{normal:"Weight",operational:"Weight"},H32:"[u8; 4; H32]",H64:"[u8; 8; H64]",H128:"[u8; 16; H128]",H160:"[u8; 20; H160]",H256:"[u8; 32; H256]",H512:"[u8; 64; H512]",H1024:"[u8; 128; H1024]",H2048:"[u8; 256; H2048]",Hash:"H256",Header:{parentHash:"Hash",number:"Compact<BlockNumber>",stateRoot:"Hash",extrinsicsRoot:"Hash",digest:"Digest"},HeaderPartial:{parentHash:"Hash",number:"BlockNumber"},IndicesLookupSource:"GenericLookupSource",Index:"u32",Justification:"(ConsensusEngineId, EncodedJustification)",EncodedJustification:"Bytes",Justifications:"Vec<Justification>",KeyValue:"(StorageKey, StorageData)",KeyTypeId:"u32",LockIdentifier:"[u8; 8]",LookupSource:"MultiAddress",LookupTarget:"AccountId",ModuleId:"LockIdentifier",MultiAddress:"GenericMultiAddress",MultiSigner:{_enum:{Ed25519:"[u8; 32]",Sr25519:"[u8; 32]",Ecdsa:"[u8; 33]"}},Moment:"UInt<64, Moment>",OpaqueCall:"Bytes",Origin:"DoNotConstruct<Origin>",OriginCaller:{_enum:{System:"SystemOrigin"}},PalletId:"LockIdentifier",PalletsOrigin:"OriginCaller",PalletVersion:{major:"u16",minor:"u8",patch:"u8"},Pays:{_enum:["Yes","No"]},Phantom:"Null",PhantomData:"Null",Releases:{_enum:["V1","V2","V3","V4","V5","V6","V7","V8","V9","V10"]},RuntimeDbWeight:{read:"Weight",write:"Weight"},SignedBlock:"SignedBlockWithJustifications",SignedBlockWithJustification:{block:"Block",justification:"Option<EncodedJustification>"},SignedBlockWithJustifications:{block:"Block",justifications:"Option<Justifications>"},Slot:"u64",SlotDuration:"u64",StorageData:"Bytes",StorageInfo:{palletName:"Bytes",storage_name:"Bytes",prefix:"Bytes",maxValues:"Option<u32>",maxSize:"Option<u32>"},StorageProof:{trieNodes:"Vec<Bytes>"},TransactionPriority:"u64",TransactionLongevity:"u64",TransactionTag:"Bytes",TransactionInfo:{_alias:{dataSize:"size"},chunkRoot:"H256",contentHash:"H256",dataSize:"u32",blockChunks:"u32"},TransactionStorageProof:{chunk:"Vec<u8>",proof:"Vec<Vec<u8>>"},ValidatorId:"AccountId",ValidatorIdOf:"ValidatorId",Weight:"u64",WeightMultiplier:"Fixed64",PreRuntime:"(ConsensusEngineId, Bytes)",SealV0:"(u64, Signature)",Seal:"(ConsensusEngineId, Bytes)",Consensus:"(ConsensusEngineId, Bytes)"})};const v0$1={Si0Field:{name:"Option<Text>",type:"Si0LookupTypeId",typeName:"Option<Text>",docs:"Vec<Text>"},Si0LookupTypeId:"u32",Si0Path:"Vec<Text>",Si0Type:{path:"Si0Path",params:"Vec<Si0LookupTypeId>",def:"Si0TypeDef"},Si0TypeDef:{_enum:{Composite:"Si0TypeDefComposite",Variant:"Si0TypeDefVariant",Sequence:"Si0TypeDefSequence",Array:"Si0TypeDefArray",Tuple:"Si0TypeDefTuple",Primitive:"Si0TypeDefPrimitive",Compact:"Si0TypeDefCompact",Phantom:"Si0TypeDefPhantom",BitSequence:"Si0TypeDefBitSequence"}},Si0TypeDefArray:{len:"u32",type:"Si0LookupTypeId"},Si0TypeDefBitSequence:{bitStoreType:"Si0LookupTypeId",bitOrderType:"Si0LookupTypeId"},Si0TypeDefCompact:{type:"Si0LookupTypeId"},Si0TypeDefComposite:{fields:"Vec<Si0Field>"},Si0TypeDefPhantom:"Null",Si0TypeDefVariant:{variants:"Vec<Si0Variant>"},Si0TypeDefPrimitive:{_enum:["Bool","Char","Str","U8","U16","U32","U64","U128","U256","I8","I16","I32","I64","I128","I256"]},Si0TypeDefSequence:{type:"Si0LookupTypeId"},Si0TypeDefTuple:"Vec<Si0LookupTypeId>",Si0TypeParameter:{name:"Text",type:"Option<Si0LookupTypeId>"},Si0Variant:{name:"Text",fields:"Vec<Si0Field>",index:"Option<u8>",discriminant:"Option<u64>",docs:"Vec<Text>"}};var definitions$$={rpc:{},types:objectSpread({},v0$1,v1$1,{SiField:"Si1Field",SiLookupTypeId:"Si1LookupTypeId",SiPath:"Si1Path",SiType:"Si1Type",SiTypeDef:"Si1TypeDef",SiTypeDefArray:"Si1TypeDefArray",SiTypeDefBitSequence:"Si1TypeDefBitSequence",SiTypeDefCompact:"Si1TypeDefCompact",SiTypeDefComposite:"Si1TypeDefComposite",SiTypeDefPrimitive:"Si1TypeDefPrimitive",SiTypeDefSequence:"Si1TypeDefSequence",SiTypeDefTuple:"Si1TypeDefTuple",SiTypeParameter:"Si1TypeParameter",SiTypeDefVariant:"Si1TypeDefVariant",SiVariant:"Si1Variant"})},definitions$_={rpc:{},types:{AssetApprovalKey:{owner:"AccountId",delegate:"AccountId"},AssetApproval:{amount:"TAssetBalance",deposit:"TAssetDepositBalance"},AssetBalance:{balance:"TAssetBalance",isFrozen:"bool",isSufficient:"bool"},AssetDestroyWitness:{accounts:"Compact<u32>",sufficients:"Compact<u32>",approvals:"Compact<u32>"},AssetDetails:{owner:"AccountId",issuer:"AccountId",admin:"AccountId",freezer:"AccountId",supply:"TAssetBalance",deposit:"TAssetDepositBalance",minBalance:"TAssetBalance",isSufficient:"bool",accounts:"u32",sufficients:"u32",approvals:"u32",isFrozen:"bool"},AssetMetadata:{deposit:"TAssetDepositBalance",name:"Vec<u8>",symbol:"Vec<u8>",decimals:"u8",isFrozen:"bool"},TAssetBalance:"u64",TAssetDepositBalance:"BalanceOf"}},definitions$Z={rpc:{},types:{UncleEntryItem:{_enum:{InclusionHeight:"BlockNumber",Uncle:"(Hash, Option<AccountId>)"}}}};const runtime$k={AuraApi:[{methods:{authorities:{description:"Return the current set of authorities.",params:[],type:"Vec<AuthorityId>"},slot_duration:{description:"Returns the slot duration for Aura.",params:[],type:"SlotDuration"}},version:1}]};var definitions$Y={rpc:{},runtime:runtime$k,types:{RawAuraPreDigest:{slotNumber:"u64"}}};const rpc$g={epochAuthorship:{description:"Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore",params:[],type:"HashMap<AuthorityId, EpochAuthorship>"}},V1_V2_SHARED={current_epoch:{description:"Returns information regarding the current epoch.",params:[],type:"Epoch"},current_epoch_start:{description:"Returns the slot that started the current epoch.",params:[],type:"Slot"},generate_key_ownership_proof:{description:"Generates a proof of key ownership for the given authority in the current epoch.",params:[{name:"slot",type:"Slot"},{name:"authorityId",type:"AuthorityId"}],type:"Option<OpaqueKeyOwnershipProof>"},next_epoch:{description:"Returns information regarding the next epoch (which was already previously announced).",params:[],type:"Epoch"},submit_report_equivocation_unsigned_extrinsic:{description:"Submits an unsigned extrinsic to report an equivocation.",params:[{name:"equivocationProof",type:"BabeEquivocationProof"},{name:"keyOwnerProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"}},runtime$j={BabeApi:[{methods:objectSpread({configuration:{description:"Return the genesis configuration for BABE. The configuration is only read on genesis.",params:[],type:"BabeGenesisConfiguration"}},V1_V2_SHARED),version:2},{methods:objectSpread({configuration:{description:"Return the configuration for BABE. Version 1.",params:[],type:"BabeGenesisConfigurationV1"}},V1_V2_SHARED),version:1}]};var definitions$X={rpc:rpc$g,runtime:runtime$j,types:{AllowedSlots:{_enum:["PrimarySlots","PrimaryAndSecondaryPlainSlots","PrimaryAndSecondaryVRFSlots"]},BabeAuthorityWeight:"u64",BabeEpochConfiguration:{c:"(u64, u64)",allowedSlots:"AllowedSlots"},BabeBlockWeight:"u32",BabeEquivocationProof:{offender:"AuthorityId",slotNumber:"SlotNumber",firstHeader:"Header",secondHeader:"Header"},BabeGenesisConfiguration:{slotDuration:"u64",epochLength:"u64",c:"(u64, u64)",genesisAuthorities:"Vec<(AuthorityId, BabeAuthorityWeight)>",randomness:"Randomness",allowedSlots:"AllowedSlots"},BabeGenesisConfigurationV1:{slotDuration:"u64",epochLength:"u64",c:"(u64, u64)",genesisAuthorities:"Vec<(AuthorityId, BabeAuthorityWeight)>",randomness:"Randomness",secondarySlots:"bool"},BabeWeight:"u64",MaybeRandomness:"Option<Randomness>",MaybeVrf:"Option<VrfData>",Epoch:{epochIndex:"u64",startSlot:"Slot",duration:"u64",authorities:"Vec<(AuthorityId, BabeAuthorityWeight)>",randomness:"Hash",config:"BabeEpochConfiguration"},EpochAuthorship:{primary:"Vec<u64>",secondary:"Vec<u64>",secondary_vrf:"Vec<u64>"},NextConfigDescriptor:{_enum:{V0:"Null",V1:"NextConfigDescriptorV1"}},NextConfigDescriptorV1:{c:"(u64, u64)",allowedSlots:"AllowedSlots"},OpaqueKeyOwnershipProof:"Bytes",Randomness:"Hash",RawBabePreDigest:{_enum:{Phantom:"Null",Primary:"RawBabePreDigestPrimary",SecondaryPlain:"RawBabePreDigestSecondaryPlain",SecondaryVRF:"RawBabePreDigestSecondaryVRF"}},RawBabePreDigestPrimary:{authorityIndex:"u32",slotNumber:"SlotNumber",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestSecondaryPlain:{authorityIndex:"u32",slotNumber:"SlotNumber"},RawBabePreDigestSecondaryVRF:{authorityIndex:"u32",slotNumber:"SlotNumber",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestTo159:{_enum:{Primary:"RawBabePreDigestPrimaryTo159",Secondary:"RawBabePreDigestSecondaryTo159"}},RawBabePreDigestPrimaryTo159:{authorityIndex:"u32",slotNumber:"SlotNumber",weight:"BabeBlockWeight",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestSecondaryTo159:{authorityIndex:"u32",slotNumber:"SlotNumber",weight:"BabeBlockWeight"},RawBabePreDigestCompat:{_enum:{Zero:"u32",One:"u32",Two:"u32",Three:"u32"}},SlotNumber:"u64",VrfData:"[u8; 32]",VrfOutput:"[u8; 32]",VrfProof:"[u8; 64]"}},definitions$W={rpc:{},types:{AccountData:{free:"Balance",reserved:"Balance",miscFrozen:"Balance",feeFrozen:"Balance"},BalanceLockTo212:{id:"LockIdentifier",amount:"Balance",until:"BlockNumber",reasons:"WithdrawReasons"},BalanceLock:{id:"LockIdentifier",amount:"Balance",reasons:"Reasons"},BalanceStatus:{_enum:["Free","Reserved"]},Reasons:{_enum:["Fee","Misc","All"]},ReserveData:{id:"ReserveIdentifier",amount:"Balance"},ReserveIdentifier:"[u8; 8]",VestingSchedule:{offset:"Balance",perBlock:"Balance",startingBlock:"BlockNumber"},WithdrawReasons:{_set:{TransactionPayment:1,Transfer:2,Reserve:4,Fee:8,Tip:16}}}};const rpc$f={getFinalizedHead:{description:"Returns hash of the latest BEEFY finalized block as seen by this client.",params:[],type:"H256"},subscribeJustifications:{description:"Returns the block most recently finalized by BEEFY, alongside side its justification.",params:[],pubsub:["justifications","subscribeJustifications","unsubscribeJustifications"],type:"BeefySignedCommitment"}},runtime$i={BeefyApi:[{methods:{validator_set:{description:"Return the current active BEEFY validator set",params:[],type:"Option<ValidatorSet>"}},version:1}],BeefyMmrApi:[{methods:{authority_set_proof:{description:"Return the currently active BEEFY authority set proof.",params:[],type:"BeefyAuthoritySet"},next_authority_set_proof:{description:"Return the next/queued BEEFY authority set proof.",params:[],type:"BeefyNextAuthoritySet"}},version:1}]};var definitions$V={rpc:rpc$f,runtime:runtime$i,types:{BeefyAuthoritySet:{id:"u64",len:"u32",root:"H256"},BeefyCommitment:{payload:"BeefyPayload",blockNumber:"BlockNumber",validatorSetId:"ValidatorSetId"},BeefyId:"[u8; 33]",BeefySignedCommitment:{commitment:"BeefyCommitment",signatures:"Vec<Option<EcdsaSignature>>"},BeefyNextAuthoritySet:{id:"u64",len:"u32",root:"H256"},BeefyPayload:"Vec<(BeefyPayloadId, Bytes)>",BeefyPayloadId:"[u8;2]",MmrRootHash:"H256",ValidatorSetId:"u64",ValidatorSet:{validators:"Vec<AuthorityId>",id:"ValidatorSetId"}}};const runtime$h={Benchmark:[{methods:{benchmark_metadata:{description:"Get the benchmark metadata available for this runtime.",params:[{name:"extra",type:"bool"}],type:"(Vec<BenchmarkList>, Vec<StorageInfo>)"},dispatch_benchmark:{description:"Dispatch the given benchmark.",params:[{name:"config",type:"BenchmarkConfig"}],type:"Result<Vec<BenchmarkBatch>, Text>"}},version:1}]};var definitions$U={rpc:{},runtime:runtime$h,types:{BenchmarkConfig:{pallet:"Bytes",benchmark:"Bytes",selectedComponents:"Vec<(BenchmarkParameter, u32)>",verify:"bool",internalRepeats:"u32"},BenchmarkList:{pallet:"Bytes",instance:"Bytes",benchmarks:"Vec<BenchmarkMetadata>"},BenchmarkMetadata:{name:"Bytes",components:"Vec<(BenchmarkParameter, u32, u32)>"},BenchmarkParameter:{_enum:["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]}}};const BB_V5_TO_V6={check_inherents:{description:"Check that the inherents are valid.",params:[{name:"block",type:"Block"},{name:"data",type:"InherentData"}],type:"CheckInherentsResult"},finalize_block:{description:"Finish the current block.",params:[],type:"Header"},inherent_extrinsics:{description:"Generate inherent extrinsics.",params:[{name:"inherent",type:"InherentData"}],type:"Vec<Extrinsic>"}},runtime$g={BlockBuilder:[{methods:objectSpread({apply_extrinsic:{description:"Apply the given extrinsic.",params:[{name:"extrinsic",type:"Extrinsic"}],type:"ApplyExtrinsicResult"}},BB_V5_TO_V6),version:6},{methods:objectSpread({apply_extrinsic:{description:"Apply the given extrinsic.",params:[{name:"extrinsic",type:"Extrinsic"}],type:"ApplyExtrinsicResultPre6"}},BB_V5_TO_V6),version:5}]};var definitions$T={rpc:{},runtime:runtime$g,types:{CheckInherentsResult:{okay:"bool",fatalError:"bool",errors:"InherentData"},InherentData:{data:"BTreeMap<InherentIdentifier, Bytes>"},InherentIdentifier:"[u8; 8]"}},definitions$S={rpc:{},types:{CollectiveOrigin:{_enum:{Members:"(MemberCount, MemberCount)",Member:"AccountId"}},MemberCount:"u32",ProposalIndex:"u32",VotesTo230:{index:"ProposalIndex",threshold:"MemberCount",ayes:"Vec<AccountId>",nays:"Vec<AccountId>"},Votes:{index:"ProposalIndex",threshold:"MemberCount",ayes:"Vec<AccountId>",nays:"Vec<AccountId>",end:"BlockNumber"}}},definitions$R={rpc:{},types:{AuthorityId:"AccountId",RawVRFOutput:"[u8; 32]"}};const rpc$e={call:{description:"Executes a call to a contract",params:[{name:"callRequest",type:"ContractCallRequest"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ContractExecResult"},getStorage:{description:"Returns the value under a specified storage key in a contract",params:[{name:"address",type:"AccountId"},{name:"key",type:"H256"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Option<Bytes>"},instantiate:{description:"Instantiate a new contract",params:[{name:"request",type:"InstantiateRequest"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ContractInstantiateResult"},rentProjection:{description:"Returns the projected time a given contract will be able to sustain paying its rent",params:[{name:"address",type:"AccountId"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Option<BlockNumber>"},uploadCode:{description:"Upload new code without instantiating a contract from it",endpoint:"contracts_upload_code",params:[{name:"uploadRequest",type:"CodeUploadRequest"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"CodeUploadResult"}},runtime$f={ContractsApi:[{methods:{call:{description:"Perform a call from a specified account to a given contract.",params:[{name:"origin",type:"AccountId"},{name:"dest",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"u64"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"inputData",type:"Vec<u8>"}],type:"ContractExecResult"},get_storage:{description:"Query a given storage key in a given contract.",params:[{name:"address",type:"AccountId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},instantiate:{description:"Instantiate a new contract.",params:[{name:"origin",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"u64"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"code",type:"Bytes"},{name:"data",type:"Bytes"},{name:"salt",type:"Bytes"}],type:"ContractInstantiateResult"},upload_code:{description:"Upload new code without instantiating a contract from it.",params:[{name:"origin",type:"AccountId"},{name:"code",type:"Bytes"},{name:"storageDepositLimit",type:"Option<Balance>"}],type:"CodeUploadResult"}},version:1}]};var definitions$Q={rpc:rpc$e,runtime:runtime$f,types:{AliveContractInfo:{trieId:"TrieId",storageSize:"u32",pairCount:"u32",codeHash:"CodeHash",rentAllowance:"Balance",rentPaid:"Balance",deductBlock:"BlockNumber",lastWrite:"Option<BlockNumber>",_reserved:"Option<Null>"},CodeHash:"Hash",CodeSource:{_enum:{Upload:"Bytes",Existing:"Hash"}},CodeUploadRequest:{origin:"AccountId",code:"Bytes",storageDepositLimit:"Option<Balance>"},CodeUploadResult:"Result<CodeUploadResultValue, DispatchError>",CodeUploadResultValue:{codeHash:"CodeHash",deposit:"Balance"},ContractCallRequest:{origin:"AccountId",dest:"AccountId",value:"Balance",gasLimit:"u64",storageDepositLimit:"Option<Balance>",inputData:"Bytes"},ContractExecResultSuccessTo255:{status:"u8",data:"Raw"},ContractExecResultTo255:{_enum:{Success:"ContractExecResultSuccessTo255",Error:"Null"}},ContractExecResultSuccessTo260:{flags:"ContractReturnFlags",data:"Bytes",gasConsumed:"u64"},ContractExecResultTo260:{_enum:{Success:"ContractExecResultSuccessTo260",Error:"Null"}},ContractExecResultOk:{flags:"ContractReturnFlags",data:"Bytes"},ContractExecResultResult:"Result<ContractExecResultOk, DispatchError>",ContractExecResultTo267:{gasConsumed:"u64",debugMessage:"Text",result:"ContractExecResultResult"},ContractExecResult:{gasConsumed:"u64",gasRequired:"u64",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"ContractExecResultResult"},ContractInfo:{_enum:{Alive:"AliveContractInfo",Tombstone:"TombstoneContractInfo"}},ContractCallFlags:{_set:{_bitLength:32,ForwardInput:1,CloneInput:2,TailCall:4,AllowReentry:8}},ContractReturnFlags:{_set:{_bitLength:32,Revert:1}},ContractStorageKey:"[u8; 32]",DeletedContract:{pairCount:"u32",trieId:"TrieId"},ExecReturnValue:{flags:"ContractReturnFlags",data:"Bytes"},Gas:"u64",HostFnWeightsTo264:{caller:"Weight",address:"Weight",gasLeft:"Weight",balance:"Weight",valueTransferred:"Weight",minimumBalance:"Weight",tombstoneDeposit:"Weight",rentAllowance:"Weight",blockNumber:"Weight",now:"Weight",weightToFee:"Weight",gas:"Weight",input:"Weight",inputPerByte:"Weight",return:"Weight",returnPerByte:"Weight",terminate:"Weight",restoreTo:"Weight",restoreToPerDelta:"Weight",random:"Weight",depositEvent:"Weight",depositEventPerTopic:"Weight",depositEventPerByte:"Weight",setRentAllowance:"Weight",setStorage:"Weight",setStoragePerByte:"Weight",clearStorage:"Weight",getStorage:"Weight",getStoragePerByte:"Weight",transfer:"Weight",call:"Weight",callTransferSurcharge:"Weight",callPerInputByte:"Weight",callPerOutputByte:"Weight",instantiate:"Weight",instantiatePerInputByte:"Weight",instantiatePerOutputByte:"Weight",hashSha2256:"Weight",hashSha2256PerByte:"Weight",hashKeccak256:"Weight",hashKeccak256PerByte:"Weight",hashBlake2256:"Weight",hashBlake2256PerByte:"Weight",hashBlake2128:"Weight",hashBlake2128PerByte:"Weight"},HostFnWeights:{caller:"Weight",address:"Weight",gasLeft:"Weight",balance:"Weight",valueTransferred:"Weight",minimumBalance:"Weight",tombstoneDeposit:"Weight",rentAllowance:"Weight",blockNumber:"Weight",now:"Weight",weightToFee:"Weight",gas:"Weight",input:"Weight",inputPerByte:"Weight",return:"Weight",returnPerByte:"Weight",terminate:"Weight",terminatePerCodeByte:"Weight",restoreTo:"Weight",restoreToPerCallerCodeByte:"Weight",restoreToPerTombstoneCodeByte:"Weight",restoreToPerDelta:"Weight",random:"Weight",depositEvent:"Weight",depositEventPerTopic:"Weight",depositEventPerByte:"Weight",setRentAllowance:"Weight",setStorage:"Weight",setStoragePerByte:"Weight",clearStorage:"Weight",getStorage:"Weight",getStoragePerByte:"Weight",transfer:"Weight",call:"Weight",callPerCodeByte:"Weight",callTransferSurcharge:"Weight",callPerInputByte:"Weight",callPerOutputByte:"Weight",instantiate:"Weight",instantiatePerCodeByte:"Weight",instantiatePerInputByte:"Weight",instantiatePerOutputByte:"Weight",instantiatePerSaltByte:"Weight",hashSha2256:"Weight",hashSha2256PerByte:"Weight",hashKeccak256:"Weight",hashKeccak256PerByte:"Weight",hashBlake2256:"Weight",hashBlake2256PerByte:"Weight",hashBlake2128:"Weight",hashBlake2128PerByte:"Weight",rentParams:"Weight"},InstantiateRequestV1:{origin:"AccountId",value:"Balance",gasLimit:"Gas",code:"Bytes",data:"Bytes",salt:"Bytes"},InstantiateRequestV2:{_fallback:"InstantiateRequestV1",origin:"AccountId",value:"Balance",gasLimit:"Gas",storageDepositLimit:"Option<Balance>",code:"Bytes",data:"Bytes",salt:"Bytes"},InstantiateRequest:{_fallback:"InstantiateRequestV2",origin:"AccountId",value:"Balance",gasLimit:"Gas",storageDepositLimit:"Option<Balance>",code:"CodeSource",data:"Bytes",salt:"Bytes"},ContractInstantiateResultTo267:"Result<InstantiateReturnValueTo267, Null>",ContractInstantiateResultTo299:"Result<InstantiateReturnValueOk, Null>",ContractInstantiateResult:{_fallback:"ContractInstantiateResultTo299",gasConsumed:"u64",gasRequired:"u64",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"InstantiateReturnValue"},InstantiateReturnValueTo267:{result:"ExecReturnValue",accountId:"AccountId",rentProjection:"Option<RentProjection>"},InstantiateReturnValueOk:{result:"ExecReturnValue",accountId:"AccountId"},InstantiateReturnValue:"Result<InstantiateReturnValueOk, DispatchError>",InstructionWeights:{i64const:"u32",i64load:"u32",i64store:"u32",select:"u32",rIf:"u32",br:"u32",brIf:"u32",brIable:"u32",brIablePerEntry:"u32",call:"u32",callIndirect:"u32",callIndirectPerParam:"u32",localGet:"u32",localSet:"u32",local_tee:"u32",globalGet:"u32",globalSet:"u32",memoryCurrent:"u32",memoryGrow:"u32",i64clz:"u32",i64ctz:"u32",i64popcnt:"u32",i64eqz:"u32",i64extendsi32:"u32",i64extendui32:"u32",i32wrapi64:"u32",i64eq:"u32",i64ne:"u32",i64lts:"u32",i64ltu:"u32",i64gts:"u32",i64gtu:"u32",i64les:"u32",i64leu:"u32",i64ges:"u32",i64geu:"u32",i64add:"u32",i64sub:"u32",i64mul:"u32",i64divs:"u32",i64divu:"u32",i64rems:"u32",i64remu:"u32",i64and:"u32",i64or:"u32",i64xor:"u32",i64shl:"u32",i64shrs:"u32",i64shru:"u32",i64rotl:"u32",i64rotr:"u32"},LimitsTo264:{eventTopics:"u32",stackHeight:"u32",globals:"u32",parameters:"u32",memoryPages:"u32",tableSize:"u32",brTableSize:"u32",subjectLen:"u32",codeSize:"u32"},Limits:{eventTopics:"u32",stackHeight:"u32",globals:"u32",parameters:"u32",memoryPages:"u32",tableSize:"u32",brTableSize:"u32",subjectLen:"u32"},PrefabWasmModule:{scheduleVersion:"Compact<u32>",initial:"Compact<u32>",maximum:"Compact<u32>",refcount:"Compact<u64>",_reserved:"Option<Null>",code:"Bytes",originalCodeLen:"u32"},RentProjection:{_enum:{EvictionAt:"BlockNumber",NoEviction:"Null"}},ScheduleTo212:{version:"u32",putCodePerByteCost:"Gas",growMemCost:"Gas",regularOpCost:"Gas",returnDataPerByteCost:"Gas",eventDataPerByteCost:"Gas",eventPerTopicCost:"Gas",eventBaseCost:"Gas",sandboxDataReadCost:"Gas",sandboxDataWriteCost:"Gas",maxEventTopics:"u32",maxStackHeight:"u32",maxMemoryPages:"u32",enablePrintln:"bool",maxSubjectLen:"u32"},ScheduleTo258:{version:"u32",putCodePerByteCost:"Gas",growMemCost:"Gas",regularOpCost:"Gas",returnDataPerByteCost:"Gas",eventDataPerByteCost:"Gas",eventPerTopicCost:"Gas",eventBaseCost:"Gas",sandboxDataReadCost:"Gas",sandboxDataWriteCost:"Gas",transferCost:"Gas",maxEventTopics:"u32",maxStackHeight:"u32",maxMemoryPages:"u32",enablePrintln:"bool",maxSubjectLen:"u32"},ScheduleTo264:{version:"u32",enablePrintln:"bool",limits:"LimitsTo264",instructionWeights:"InstructionWeights",hostFnWeights:"HostFnWeightsTo264"},Schedule:{version:"u32",enablePrintln:"bool",limits:"Limits",instructionWeights:"InstructionWeights",hostFnWeights:"HostFnWeights"},SeedOf:"Hash",StorageDeposit:{_enum:{Refund:"Balance",Charge:"Balance"}},TombstoneContractInfo:"Hash",TrieId:"Bytes"}};const AllConvictions=["None","Locked1x","Locked2x","Locked3x","Locked4x","Locked5x","Locked6x"];var definitions$P={rpc:{},types:{AccountVote:{_enum:{Standard:"AccountVoteStandard",Split:"AccountVoteSplit"}},AccountVoteSplit:{aye:"Balance",nay:"Balance"},AccountVoteStandard:{vote:"Vote",balance:"Balance"},Conviction:{_enum:AllConvictions},Delegations:{votes:"Balance",capital:"Balance"},PreimageStatus:{_enum:{Missing:"BlockNumber",Available:"PreimageStatusAvailable"}},PreimageStatusAvailable:{data:"Bytes",provider:"AccountId",deposit:"Balance",since:"BlockNumber",expiry:"Option<BlockNumber>"},PriorLock:"(BlockNumber, Balance)",PropIndex:"u32",Proposal:"Call",ProxyState:{_enum:{Open:"AccountId",Active:"AccountId"}},ReferendumIndex:"u32",ReferendumInfoTo239:{end:"BlockNumber",proposalHash:"Hash",threshold:"VoteThreshold",delay:"BlockNumber"},ReferendumInfo:{_enum:{Ongoing:"ReferendumStatus",Finished:"ReferendumInfoFinished"}},ReferendumInfoFinished:{approved:"bool",end:"BlockNumber"},ReferendumStatus:{end:"BlockNumber",proposalHash:"Hash",threshold:"VoteThreshold",delay:"BlockNumber",tally:"Tally"},Tally:{ayes:"Balance",nays:"Balance",turnout:"Balance"},Voting:{_enum:{Direct:"VotingDirect",Delegating:"VotingDelegating"}},VotingDirect:{votes:"Vec<VotingDirectVote>",delegations:"Delegations",prior:"PriorLock"},VotingDirectVote:"(ReferendumIndex, AccountVote)",VotingDelegating:{balance:"Balance",target:"AccountId",conviction:"Conviction",delegations:"Delegations",prior:"PriorLock"}}};const rpc$d={getBlockStats:{description:"Reexecute the specified `block_hash` and gather statistics while doing so",params:[{isHistoric:!0,name:"at",type:"Hash"}],type:"Option<BlockStats>"}};var definitions$O={rpc:rpc$d,types:{BlockStats:{witnessLen:"u64",witnessCompactLen:"u64",blockLen:"u64",blockNumExtrinsics:"u64"}}};const runtime$e={AuthorityDiscoveryApi:[{methods:{authorities:{description:"Retrieve authority identifiers of the current and next authority set.",params:[],type:"Vec<AuthorityId>"}},version:1}]};var definitions$N={rpc:{},runtime:runtime$e,types:{}},definitions$M={rpc:{},types:{ApprovalFlag:"u32",DefunctVoter:{who:"AccountId",voteCount:"Compact<u32>",candidateCount:"Compact<u32>"},Renouncing:{_enum:{Member:"Null",RunnerUp:"Null",Candidate:"Compact<u32>"}},SetIndex:"u32",Vote:"GenericVote",VoteIndex:"u32",VoterInfo:{lastActive:"VoteIndex",lastWin:"VoteIndex",pot:"Balance",stake:"Balance"},VoteThreshold:{_enum:["Super Majority Approve","Super Majority Against","Simple Majority"]}}};const rpc$c={createBlock:{description:"Instructs the manual-seal authorship task to create a new block",params:[{name:"createEmpty",type:"bool"},{name:"finalize",type:"bool"},{isOptional:!0,name:"parentHash",type:"BlockHash"}],type:"CreatedBlock"},finalizeBlock:{description:"Instructs the manual-seal authorship task to finalize a block",params:[{name:"hash",type:"BlockHash"},{isOptional:!0,name:"justification",type:"Justification"}],type:"bool"}};var definitions$L={rpc:rpc$c,types:{CreatedBlock:{_alias:{blockHash:"hash"},blockHash:"BlockHash",aux:"ImportedAux"},ImportedAux:{headerOnly:"bool",clearJustificationRequests:"bool",needsJustification:"bool",badJustification:"bool",needsFinalityProof:"bool",isNewBest:"bool"}}},definitions$K={rpc:{},types:{EvmAccount:{nonce:"u256",balance:"u256"},EvmCallInfo:{exitReason:"ExitReason",value:"Bytes",usedGas:"U256",logs:"Vec<EvmLog>"},EvmCreateInfo:{exitReason:"ExitReason",value:"H160",usedGas:"U256",logs:"Vec<EvmLog>"},EvmLog:{address:"H160",topics:"Vec<H256>",data:"Bytes"},EvmVicinity:{gasPrice:"u256",origin:"H160"},ExitError:{_enum:{StackUnderflow:"Null",StackOverflow:"Null",InvalidJump:"Null",InvalidRange:"Null",DesignatedInvalid:"Null",CallTooDeep:"Null",CreateCollision:"Null",CreateContractLimit:"Null",OutOfOffset:"Null",OutOfGas:"Null",OutOfFund:"Null",PCUnderflow:"Null",CreateEmpty:"Null",Other:"Text"}},ExitFatal:{_enum:{NotSupported:"Null",UnhandledInterrupt:"Null",CallErrorAsFatal:"ExitError",Other:"Text"}},ExitReason:{_enum:{Succeed:"ExitSucceed",Error:"ExitError",Revert:"ExitRevert",Fatal:"ExitFatal"}},ExitRevert:{_enum:["Reverted"]},ExitSucceed:{_enum:["Stopped","Returned","Suicided"]}}},definitions$J={rpc:{},types:{Extrinsic:"GenericExtrinsic",ExtrinsicEra:"GenericExtrinsicEra",ExtrinsicPayload:"GenericExtrinsicPayload",ExtrinsicSignature:"MultiSignature",ExtrinsicV4:"GenericExtrinsicV4",ExtrinsicPayloadV4:"GenericExtrinsicPayloadV4",ExtrinsicSignatureV4:"GenericExtrinsicSignatureV4",ExtrinsicUnknown:"GenericExtrinsicUnknown",ExtrinsicPayloadUnknown:"GenericExtrinsicPayloadUnknown",Era:"ExtrinsicEra",ImmortalEra:"GenericImmortalEra",MortalEra:"GenericMortalEra",AnySignature:"H512",MultiSignature:{_enum:{Ed25519:"Ed25519Signature",Sr25519:"Sr25519Signature",Ecdsa:"EcdsaSignature"}},Signature:"H512",SignerPayload:"GenericSignerPayload",EcdsaSignature:"[u8; 65]",Ed25519Signature:"H512",Sr25519Signature:"H512"}},definitions$I={rpc:{},types:{AssetOptions:{initalIssuance:"Compact<Balance>",permissions:"PermissionLatest"},Owner:{_enum:{None:"Null",Address:"AccountId"}},PermissionsV1:{update:"Owner",mint:"Owner",burn:"Owner"},PermissionVersions:{_enum:{V1:"PermissionsV1"}},PermissionLatest:"PermissionsV1"}},definitions$H={rpc:{},types:{ActiveGilt:{proportion:"Perquintill",amount:"Balance",who:"AccountId",expiry:"BlockNumber"},ActiveGiltsTotal:{frozen:"Balance",proportion:"Perquintill",index:"ActiveIndex",target:"Perquintill"},ActiveIndex:"u32",GiltBid:{amount:"Balance",who:"AccountId"}}};const rpc$b={proveFinality:{description:"Prove finality for the given block number, returning the Justification for the last block in the set.",params:[{name:"blockNumber",type:"BlockNumber"}],type:"Option<EncodedFinalityProofs>"},roundState:{description:"Returns the state of the current best round state as well as the ongoing background rounds",params:[],type:"ReportedRoundStates"},subscribeJustifications:{description:"Subscribes to grandpa justifications",params:[],pubsub:["justifications","subscribeJustifications","unsubscribeJustifications"],type:"JustificationNotification"}},runtime$d={GrandpaApi:[{methods:{current_set_id:{description:"Get current GRANDPA authority set id.",params:[],type:"SetId"},generate_key_ownership_proof:{description:"Generates a proof of key ownership for the given authority in the given set.",params:[{name:"setId",type:"SetId"},{name:"authorityId",type:"AuthorityId"}],type:"Option<OpaqueKeyOwnershipProof>"},grandpa_authorities:{description:"Get the current GRANDPA authorities and weights. This should not change except for when changes are scheduled and the corresponding delay has passed.",params:[],type:"AuthorityList"},submit_report_equivocation_unsigned_extrinsic:{description:"Submits an unsigned extrinsic to report an equivocation.",params:[{name:"equivocationProof",type:"GrandpaEquivocationProof"},{name:"keyOwnerProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"}},version:3}]};var definitions$G={rpc:rpc$b,runtime:runtime$d,types:{AuthorityIndex:"u64",AuthorityList:"Vec<NextAuthority>",AuthoritySet:{currentAuthorities:"AuthorityList",setId:"u64",pendingStandardChanges:"ForkTreePendingChange",pendingForcedChanges:"Vec<PendingChange>",authoritySetChanges:"AuthoritySetChanges"},ForkTreePendingChange:{roots:"Vec<ForkTreePendingChangeNode>",bestFinalizedNumber:"Option<BlockNumber>"},ForkTreePendingChangeNode:{hash:"BlockHash",number:"BlockNumber",data:"PendingChange",children:"Vec<ForkTreePendingChangeNode>"},AuthoritySetChange:"(U64, BlockNumber)",AuthoritySetChanges:"Vec<AuthoritySetChange>",AuthorityWeight:"u64",DelayKind:{_enum:{Finalized:"Null",Best:"DelayKindBest"}},DelayKindBest:{medianLastFinalized:"BlockNumber"},EncodedFinalityProofs:"Bytes",GrandpaEquivocation:{_enum:{Prevote:"GrandpaEquivocationValue",Precommit:"GrandpaEquivocationValue"}},GrandpaEquivocationProof:{setId:"SetId",equivocation:"GrandpaEquivocation"},GrandpaEquivocationValue:{roundNumber:"u64",identity:"AuthorityId",first:"(GrandpaPrevote, AuthoritySignature)",second:"(GrandpaPrevote, AuthoritySignature)"},GrandpaPrevote:{targetHash:"Hash",targetNumber:"BlockNumber"},GrandpaCommit:{targetHash:"BlockHash",targetNumber:"BlockNumber",precommits:"Vec<GrandpaSignedPrecommit>"},GrandpaPrecommit:{targetHash:"BlockHash",targetNumber:"BlockNumber"},GrandpaSignedPrecommit:{precommit:"GrandpaPrecommit",signature:"AuthoritySignature",id:"AuthorityId"},GrandpaJustification:{round:"u64",commit:"GrandpaCommit",votesAncestries:"Vec<Header>"},JustificationNotification:"Bytes",KeyOwnerProof:"MembershipProof",NextAuthority:"(AuthorityId, AuthorityWeight)",PendingChange:{nextAuthorities:"AuthorityList",delay:"BlockNumber",canonHeight:"BlockNumber",canonHash:"BlockHash",delayKind:"DelayKind"},PendingPause:{scheduledAt:"BlockNumber",delay:"BlockNumber"},PendingResume:{scheduledAt:"BlockNumber",delay:"BlockNumber"},Precommits:{currentWeight:"u32",missing:"BTreeSet<AuthorityId>"},Prevotes:{currentWeight:"u32",missing:"BTreeSet<AuthorityId>"},ReportedRoundStates:{setId:"u32",best:"RoundState",background:"Vec<RoundState>"},RoundState:{round:"u32",totalWeight:"u32",thresholdWeight:"u32",prevotes:"Prevotes",precommits:"Precommits"},SetId:"u64",StoredPendingChange:{scheduledAt:"BlockNumber",delay:"BlockNumber",nextAuthorities:"AuthorityList"},StoredState:{_enum:{Live:"Null",PendingPause:"PendingPause",Paused:"Null",PendingResume:"PendingResume"}}}},definitions$F={rpc:{},types:{IdentityFields:{_set:{_bitLength:64,Display:1,Legal:2,Web:4,Riot:8,Email:16,PgpFingerprint:32,Image:64,Twitter:128}},IdentityInfoAdditional:"(Data, Data)",IdentityInfoTo198:{additional:"Vec<IdentityInfoAdditional>",display:"Data",legal:"Data",web:"Data",riot:"Data",email:"Data",pgpFingerprint:"Option<H160>",image:"Data"},IdentityInfo:{_fallback:"IdentityInfoTo198",additional:"Vec<IdentityInfoAdditional>",display:"Data",legal:"Data",web:"Data",riot:"Data",email:"Data",pgpFingerprint:"Option<H160>",image:"Data",twitter:"Data"},IdentityJudgement:{_enum:{Unknown:"Null",FeePaid:"Balance",Reasonable:"Null",KnownGood:"Null",OutOfDate:"Null",LowQuality:"Null",Erroneous:"Null"}},RegistrationJudgement:"(RegistrarIndex, IdentityJudgement)",RegistrationTo198:{judgements:"Vec<RegistrationJudgement>",deposit:"Balance",info:"IdentityInfoTo198"},Registration:{_fallback:"RegistrationTo198",judgements:"Vec<RegistrationJudgement>",deposit:"Balance",info:"IdentityInfo"},RegistrarIndex:"u32",RegistrarInfo:{account:"AccountId",fee:"Balance",fields:"IdentityFields"}}},definitions$E={rpc:{},types:{AuthIndex:"u32",AuthoritySignature:"Signature",Heartbeat:{blockNumber:"BlockNumber",networkState:"OpaqueNetworkState",sessionIndex:"SessionIndex",authorityIndex:"AuthIndex",validatorsLen:"u32"},HeartbeatTo244:{blockNumber:"BlockNumber",networkState:"OpaqueNetworkState",sessionIndex:"SessionIndex",authorityIndex:"AuthIndex"},OpaqueMultiaddr:"Bytes",OpaquePeerId:"Bytes",OpaqueNetworkState:{peerId:"OpaquePeerId",externalAddresses:"Vec<OpaqueMultiaddr>"}}},definitions$D={rpc:{},types:{CallIndex:"(u8, u8)",LotteryConfig:{price:"Balance",start:"BlockNumber",length:"BlockNumber",delay:"BlockNumber",repeat:"bool"}}};const rpc$a={generateBatchProof:{description:"Generate MMR proof for the given leaf indices.",params:[{name:"leafIndices",type:"Vec<u64>"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"MmrLeafProof"},generateProof:{description:"Generate MMR proof for given leaf index.",params:[{name:"leafIndex",type:"u64"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"MmrLeafBatchProof"}},runtime$c={MmrApi:[{methods:{generate_batch_proof:{description:"Generate MMR proof for a series of leaves under given indices.",params:[{name:"leafIndices",type:"Vec<MmrLeafIndex>"}],type:"Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>"},generate_proof:{description:"Generate MMR proof for a leaf under given index.",params:[{name:"leafIndex",type:"MmrLeafIndex"}],type:"Result<(MmrEncodableOpaqueLeaf, MmrProof), MmrError>"},mmr_root:{description:"Return the on-chain MMR root hash.",params:[],type:"Result<Hash, MmrError>"},verify_batch_proof:{description:"Verify MMR proof against on-chain MMR for a batch of leaves.",params:[{name:"leaves",type:"Vec<MmrEncodableOpaqueLeaf>"},{name:"proof",type:"MmrBatchProof"}],type:"Result<(), MmrError>"},verify_batch_proof_stateless:{description:"Verify MMR proof against given root hash or a batch of leaves.",params:[{name:"root",type:"Hash"},{name:"leaves",type:"Vec<MmrEncodableOpaqueLeaf>"},{name:"proof",type:"MmrBatchProof"}],type:"Result<(), MmrError>"},verify_proof:{description:"Verify MMR proof against on-chain MMR.",params:[{name:"leaf",type:"MmrEncodableOpaqueLeaf"},{name:"proof",type:"MmrProof"}],type:"Result<(), MmrError>"},verify_proof_stateless:{description:"Verify MMR proof against given root hash.",params:[{name:"root",type:"Hash"},{name:"leaf",type:"MmrEncodableOpaqueLeaf"},{name:"proof",type:"MmrProof"}],type:"Result<(), MmrError>"}},version:1}]};var definitions$C={rpc:rpc$a,runtime:runtime$c,types:{MmrBatchProof:{leafIndices:"Vec<MmrLeafIndex>",leafCount:"MmrNodeIndex",items:"Vec<Hash>"},MmrEncodableOpaqueLeaf:"Bytes",MmrError:{_enum:["Push","GetRoot","Commit","GenerateProof","Verify","LeafNotFound"," PalletNotIncluded","InvalidLeafIndex"]},MmrLeafBatchProof:{blockHash:"BlockHash",leaves:"Bytes",proof:"Bytes"},MmrLeafIndex:"u64",MmrLeafProof:{blockHash:"BlockHash",leaf:"Bytes",proof:"Bytes"},MmrNodeIndex:"u64",MmrProof:{leafIndex:"MmrLeafIndex",leafCount:"MmrNodeIndex",items:"Vec<Hash>"}}},definitions$B={rpc:{},types:{DeferredOffenceOf:"(Vec<OffenceDetails>, Vec<Perbill>, SessionIndex)",Kind:"[u8; 16]",OffenceDetails:{offender:"Offender",reporters:"Vec<Reporter>"},Offender:"IdentificationTuple",OpaqueTimeSlot:"Bytes",ReportIdOf:"Hash",Reporter:"AccountId"}};const runtime$b={DifficultyApi:[{methods:{difficulty:{description:"Return the target difficulty of the next block.",params:[],type:"Raw"}},version:1}],TimestampApi:[{methods:{timestamp:{description:"API necessary for timestamp-based difficulty adjustment algorithms.",params:[],type:"Moment"}},version:1}]};var definitions$A={rpc:{},runtime:runtime$b,types:{}},definitions$z={rpc:{},types:{ProxyDefinition:{delegate:"AccountId",proxyType:"ProxyType",delay:"BlockNumber"},ProxyType:{_enum:["Any","NonTransfer","Governance","Staking"]},ProxyAnnouncement:{real:"AccountId",callHash:"Hash",height:"BlockNumber"}}},definitions$y={rpc:{},types:{ActiveRecovery:{created:"BlockNumber",deposit:"Balance",friends:"Vec<AccountId>"},RecoveryConfig:{delayPeriod:"BlockNumber",deposit:"Balance",friends:"Vec<AccountId>",threshold:"u16"}}},definitions$x={rpc:{},types:{Period:"(BlockNumber, u32)",Priority:"u8",SchedulePeriod:"Period",SchedulePriority:"Priority",Scheduled:{maybeId:"Option<Bytes>",priority:"SchedulePriority",call:"Call",maybePeriodic:"Option<SchedulePeriod>",origin:"PalletsOrigin"},ScheduledTo254:{maybeId:"Option<Bytes>",priority:"SchedulePriority",call:"Call",maybePeriodic:"Option<SchedulePeriod>"},TaskAddress:"(BlockNumber, u32)"}};const runtime$a={SessionKeys:[{methods:{decode_session_keys:{description:"Decode the given public session keys.",params:[{name:"encoded",type:"Bytes"}],type:"Option<Vec<(Bytes, KeyTypeId)>>"},generate_session_keys:{description:"Generate a set of session keys with optionally using the given seed.",params:[{name:"seed",type:"Option<Bytes>"}],type:"Bytes"}},version:1}]},keyTypes={BeefyKey:"[u8; 33]",Keys:"SessionKeys4",SessionKeys1:"(AccountId)",SessionKeys2:"(AccountId, AccountId)",SessionKeys3:"(AccountId, AccountId, AccountId)",SessionKeys4:"(AccountId, AccountId, AccountId, AccountId)",SessionKeys5:"(AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys6:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys6B:"(AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys7:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys7B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys8:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys8B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys9:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys9B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys10:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys10B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)"};var definitions$w={rpc:{},runtime:runtime$a,types:objectSpread({},keyTypes,{FullIdentification:"Exposure",IdentificationTuple:"(ValidatorId, FullIdentification)",MembershipProof:{session:"SessionIndex",trieNodes:"Vec<Bytes>",validatorCount:"ValidatorCount"},SessionIndex:"u32",ValidatorCount:"u32"})},definitions$v={rpc:{},types:{Bid:{who:"AccountId",kind:"BidKind",value:"Balance"},BidKind:{_enum:{Deposit:"Balance",Vouch:"(AccountId, Balance)"}},SocietyJudgement:{_enum:["Rebid","Reject","Approve"]},SocietyVote:{_enum:["Skeptic","Reject","Approve"]},StrikeCount:"u32",VouchingStatus:{_enum:["Vouching","Banned"]}}};const deprecated={Points:"u32",EraPoints:{total:"Points",individual:"Vec<Points>"}},phragmen={CompactAssignments:"CompactAssignmentsWith16",CompactAssignmentsWith16:{votes1:"Vec<(NominatorIndexCompact, ValidatorIndexCompact)>",votes2:"Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>",votes3:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>",votes4:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>",votes5:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>",votes6:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>",votes7:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>",votes8:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>",votes9:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>",votes10:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>",votes11:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>",votes12:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>",votes13:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>",votes14:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>",votes15:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>",votes16:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>"},CompactAssignmentsWith24:{votes1:"Vec<(NominatorIndexCompact, ValidatorIndexCompact)>",votes2:"Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>",votes3:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>",votes4:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>",votes5:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>",votes6:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>",votes7:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>",votes8:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>",votes9:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>",votes10:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>",votes11:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>",votes12:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>",votes13:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>",votes14:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>",votes15:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>",votes16:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>",votes17:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 16], ValidatorIndexCompact)>",votes18:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 17], ValidatorIndexCompact)>",votes19:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 18], ValidatorIndexCompact)>",votes20:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 19], ValidatorIndexCompact)>",votes21:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 20], ValidatorIndexCompact)>",votes22:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 21], ValidatorIndexCompact)>",votes23:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 22], ValidatorIndexCompact)>",votes24:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 23], ValidatorIndexCompact)>"},CompactAssignmentsTo265:"CompactAssignmentsWith16",CompactAssignmentsTo257:{votes1:"Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>",votes2:"Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>",votes3:"Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>",votes4:"Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>",votes5:"Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>",votes6:"Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>",votes7:"Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>",votes8:"Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>",votes9:"Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>",votes10:"Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>",votes11:"Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>",votes12:"Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>",votes13:"Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>",votes14:"Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>",votes15:"Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>",votes16:"Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>"},CompactScore:"(ValidatorIndex, OffchainAccuracy)",CompactScoreCompact:"(ValidatorIndexCompact, OffchainAccuracyCompact)",ElectionCompute:{_enum:["OnChain","Signed","Unsigned"]},ElectionPhase:{_enum:{Off:null,Signed:null,Unsigned:"(bool, BlockNumber)",Emergency:null}},ElectionResult:{compute:"ElectionCompute",slotStake:"Balance",electedStashes:"Vec<AccountId>",exposures:"Vec<(AccountId, Exposure)>"},ElectionScore:"[u128; 3]",ElectionSize:{validators:"Compact<ValidatorIndex>",nominators:"Compact<NominatorIndex>"},ElectionStatus:{_enum:{Close:"Null",Open:"BlockNumber"}},ExtendedBalance:"u128",RawSolution:"RawSolutionWith16",RawSolutionWith16:{compact:"CompactAssignmentsWith16",score:"ElectionScore",round:"u32"},RawSolutionWith24:{compact:"CompactAssignmentsWith24",score:"ElectionScore",round:"u32"},RawSolutionTo265:"RawSolutionWith16",ReadySolution:{supports:"SolutionSupports",score:"ElectionScore",compute:"ElectionCompute"},RoundSnapshot:{voters:"Vec<(AccountId, VoteWeight, Vec<AccountId>)>",targets:"Vec<AccountId>"},SeatHolder:{who:"AccountId",stake:"Balance",deposit:"Balance"},SignedSubmission:{_fallback:"SignedSubmissionTo276",who:"AccountId",deposit:"Balance",solution:"RawSolution",reward:"Balance"},SignedSubmissionTo276:{who:"AccountId",deposit:"Balance",solution:"RawSolution"},SignedSubmissionOf:"SignedSubmission",SolutionOrSnapshotSize:{voters:"Compact<u32>",targets:"Compact<u32>"},SolutionSupport:{total:"ExtendedBalance",voters:"Vec<(AccountId, ExtendedBalance)>"},SolutionSupports:"Vec<(AccountId, SolutionSupport)>",Supports:"SolutionSupports",SubmissionIndicesOf:"BTreeMap<ElectionScore, u32>",Voter:{votes:"Vec<AccountId>",stake:"Balance",deposit:"Balance"},VoteWeight:"u64"};var definitions$u={rpc:{},types:objectSpread({},deprecated,phragmen,{ActiveEraInfo:{index:"EraIndex",start:"Option<Moment>"},EraIndex:"u32",EraRewardPoints:{total:"RewardPoint",individual:"BTreeMap<AccountId, RewardPoint>"},EraRewards:{total:"u32",rewards:"Vec<u32>"},Exposure:{total:"Compact<Balance>",own:"Compact<Balance>",others:"Vec<IndividualExposure>"},Forcing:{_enum:["NotForcing","ForceNew","ForceNone","ForceAlways"]},IndividualExposure:{who:"AccountId",value:"Compact<Balance>"},KeyType:"AccountId",MomentOf:"Moment",Nominations:{targets:"Vec<AccountId>",submittedIn:"EraIndex",suppressed:"bool"},NominatorIndex:"u32",NominatorIndexCompact:"Compact<NominatorIndex>",OffchainAccuracy:"PerU16",OffchainAccuracyCompact:"Compact<OffchainAccuracy>",PhragmenScore:"[u128; 3]",Points:"u32",RewardDestination:{_enum:{Staked:"Null",Stash:"Null",Controller:"Null",Account:"AccountId",None:"Null"}},RewardPoint:"u32",SlashJournalEntry:{who:"AccountId",amount:"Balance",ownSlash:"Balance"},SlashingSpansTo204:{spanIndex:"SpanIndex",lastStart:"EraIndex",prior:"Vec<EraIndex>"},SlashingSpans:{spanIndex:"SpanIndex",lastStart:"EraIndex",lastNonzeroSlash:"EraIndex",prior:"Vec<EraIndex>"},SpanIndex:"u32",SpanRecord:{slashed:"Balance",paidOut:"Balance"},StakingLedgerTo223:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>"},StakingLedgerTo240:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>",lastReward:"Option<EraIndex>"},StakingLedger:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>",claimedRewards:"Vec<EraIndex>"},UnappliedSlashOther:"(AccountId, Balance)",UnappliedSlash:{validator:"AccountId",own:"Balance",others:"Vec<UnappliedSlashOther>",reporters:"Vec<AccountId>",payout:"Balance"},UnlockChunk:{value:"Compact<Balance>",era:"Compact<BlockNumber>"},ValidatorIndex:"u16",ValidatorIndexCompact:"Compact<ValidatorIndex>",ValidatorPrefs:"ValidatorPrefsWithBlocked",ValidatorPrefsWithCommission:{commission:"Compact<Perbill>"},ValidatorPrefsWithBlocked:{commission:"Compact<Perbill>",blocked:"bool"},ValidatorPrefsTo196:{validatorPayment:"Compact<Balance>"},ValidatorPrefsTo145:{unstakeThreshold:"Compact<u32>",validatorPayment:"Compact<Balance>"}})},definitions$t={rpc:{},types:{WeightToFeeCoefficient:{coeffInteger:"Balance",coeffFrac:"Perbill",negative:"bool",degree:"u8"}}};const rpc$9={genSyncSpec:{description:"Returns the json-serialized chainspec running the node, with a sync state.",endpoint:"sync_state_genSyncSpec",params:[{name:"raw",type:"bool"}],type:"Json"}};var definitions$s={rpc:rpc$9,types:{}};const rpc$8={accountNextIndex:{alias:["account_nextIndex"],description:"Retrieves the next accountIndex as available on the node",params:[{name:"accountId",type:"AccountId"}],type:"Index"},addLogFilter:{description:"Adds the supplied directives to the current log filter",params:[{name:"directives",type:"Text"}],type:"Null"},addReservedPeer:{description:"Adds a reserved peer",params:[{name:"peer",type:"Text"}],type:"Text"},chain:{description:"Retrieves the chain",params:[],type:"Text"},chainType:{description:"Retrieves the chain type",params:[],type:"ChainType"},dryRun:{alias:["system_dryRunAt"],description:"Dry run an extrinsic at a given block",params:[{name:"extrinsic",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ApplyExtrinsicResult"},health:{description:"Return health status of the node",noErrorLog:!0,params:[],type:"Health"},localListenAddresses:{description:"The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example",params:[],type:"Vec<Text>"},localPeerId:{description:"Returns the base58-encoded PeerId of the node",params:[],type:"Text"},name:{description:"Retrieves the node name",params:[],type:"Text"},networkState:{alias:["system_unstable_networkState"],description:"Returns current state of the network",params:[],type:"NetworkState"},nodeRoles:{description:"Returns the roles the node is running as",params:[],type:"Vec<NodeRole>"},peers:{description:"Returns the currently connected peers",params:[],type:"Vec<PeerInfo>"},properties:{description:"Get a custom set of properties as a JSON object, defined in the chain spec",params:[],type:"ChainProperties"},removeReservedPeer:{description:"Remove a reserved peer",params:[{name:"peerId",type:"Text"}],type:"Text"},reservedPeers:{description:"Returns the list of reserved peers",params:[],type:"Vec<Text>"},resetLogFilter:{description:"Resets the log filter to Substrate defaults",params:[],type:"Null"},syncState:{description:"Returns the state of the syncing of the node",params:[],type:"SyncState"},version:{description:"Retrieves the version of the node",params:[],type:"Text"}},runtime$9={AccountNonceApi:[{methods:{account_nonce:{description:"The API to query account nonce (aka transaction index)",params:[{name:"accountId",type:"AccountId"}],type:"Index"}},version:1}]};var definitions$r={rpc:rpc$8,runtime:runtime$9,types:{AccountInfo:"AccountInfoWithTripleRefCount",AccountInfoWithRefCountU8:{nonce:"Index",refcount:"u8",data:"AccountData"},AccountInfoWithRefCount:{_fallback:"AccountInfoWithRefCountU8",nonce:"Index",refcount:"RefCount",data:"AccountData"},AccountInfoWithDualRefCount:{_fallback:"AccountInfoWithRefCount",nonce:"Index",consumers:"RefCount",providers:"RefCount",data:"AccountData"},AccountInfoWithProviders:"AccountInfoWithDualRefCount",AccountInfoWithTripleRefCount:{_fallback:"AccountInfoWithDualRefCount",nonce:"Index",consumers:"RefCount",providers:"RefCount",sufficients:"RefCount",data:"AccountData"},ApplyExtrinsicResult:"Result<DispatchOutcome, TransactionValidityError>",ApplyExtrinsicResultPre6:"Result<DispatchOutcomePre6, TransactionValidityError>",ArithmeticError:{_enum:["Underflow","Overflow","DivisionByZero"]},BlockLength:{max:"PerDispatchClassU32"},BlockWeights:{baseBlock:"Weight",maxBlock:"Weight",perClass:"PerDispatchClassWeightsPerClass"},ChainProperties:"GenericChainProperties",ChainType:{_enum:{Development:"Null",Local:"Null",Live:"Null",Custom:"Text"}},ConsumedWeight:"PerDispatchClassWeight",DigestOf:"Digest",DispatchClass:{_enum:["Normal","Operational","Mandatory"]},DispatchError:{_enum:{Other:"Null",CannotLookup:"Null",BadOrigin:"Null",Module:"DispatchErrorModule",ConsumerRemaining:"Null",NoProviders:"Null",TooManyConsumers:"Null",Token:"TokenError",Arithmetic:"ArithmeticError",Transactional:"TransactionalError"}},DispatchErrorPre6:{_enum:{Other:"Null",CannotLookup:"Null",BadOrigin:"Null",Module:"DispatchErrorModulePre6",ConsumerRemaining:"Null",NoProviders:"Null",TooManyConsumers:"Null",Token:"TokenError",Arithmetic:"ArithmeticError",Transactional:"TransactionalError"}},DispatchErrorModuleU8:{index:"u8",error:"u8"},DispatchErrorModuleU8a:{index:"u8",error:"[u8; 4]"},DispatchErrorModule:"DispatchErrorModuleU8a",DispatchErrorModulePre6:"DispatchErrorModuleU8",DispatchErrorTo198:{module:"Option<u8>",error:"u8"},DispatchInfo:{weight:"Weight",class:"DispatchClass",paysFee:"Pays"},DispatchInfoTo190:{weight:"Weight",class:"DispatchClass"},DispatchInfoTo244:{weight:"Weight",class:"DispatchClass",paysFee:"bool"},DispatchOutcome:"Result<(), DispatchError>",DispatchOutcomePre6:"Result<(), DispatchErrorPre6>",DispatchResult:"Result<(), DispatchError>",DispatchResultOf:"DispatchResult",DispatchResultTo198:"Result<(), Text>",Event:"GenericEvent",EventId:"[u8; 2]",EventIndex:"u32",EventRecord:{phase:"Phase",event:"Event",topics:"Vec<Hash>"},Health:{peers:"u64",isSyncing:"bool",shouldHavePeers:"bool"},InvalidTransaction:{_enum:{Call:"Null",Payment:"Null",Future:"Null",Stale:"Null",BadProof:"Null",AncientBirthBlock:"Null",ExhaustsResources:"Null",Custom:"u8",BadMandatory:"Null",MandatoryDispatch:"Null",BadSigner:"Null"}},Key:"Bytes",LastRuntimeUpgradeInfo:{specVersion:"Compact<u32>",specName:"Text"},NetworkState:{peerId:"Text",listenedAddresses:"Vec<Text>",externalAddresses:"Vec<Text>",connectedPeers:"HashMap<Text, Peer>",notConnectedPeers:"HashMap<Text, NotConnectedPeer>",averageDownloadPerSec:"u64",averageUploadPerSec:"u64",peerset:"NetworkStatePeerset"},NetworkStatePeerset:{messageQueue:"u64",nodes:"HashMap<Text, NetworkStatePeersetInfo>"},NetworkStatePeersetInfo:{connected:"bool",reputation:"i32"},NodeRole:{_enum:{Full:"Null",LightClient:"Null",Authority:"Null",UnknownRole:"u8"}},NotConnectedPeer:{knownAddresses:"Vec<Text>",latestPingTime:"Option<PeerPing>",versionString:"Option<Text>"},Peer:{enabled:"bool",endpoint:"PeerEndpoint",knownAddresses:"Vec<Text>",latestPingTime:"PeerPing",open:"bool",versionString:"Text"},PeerEndpoint:{listening:"PeerEndpointAddr"},PeerEndpointAddr:{_alias:{localAddr:"local_addr",sendBackAddr:"send_back_addr"},localAddr:"Text",sendBackAddr:"Text"},PeerPing:{nanos:"u64",secs:"u64"},PeerInfo:{peerId:"Text",roles:"Text",protocolVersion:"u32",bestHash:"Hash",bestNumber:"BlockNumber"},PerDispatchClassU32:{normal:"u32",operational:"u32",mandatory:"u32"},PerDispatchClassWeight:{normal:"Weight",operational:"Weight",mandatory:"Weight"},PerDispatchClassWeightsPerClass:{normal:"WeightPerClass",operational:"WeightPerClass",mandatory:"WeightPerClass"},Phase:{_enum:{ApplyExtrinsic:"u32",Finalization:"Null",Initialization:"Null"}},RawOrigin:{_enum:{Root:"Null",Signed:"AccountId",None:"Null"}},RefCount:"u32",RefCountTo259:"u8",SyncState:{startingBlock:"BlockNumber",currentBlock:"BlockNumber",highestBlock:"Option<BlockNumber>"},SystemOrigin:"RawOrigin",TokenError:{_enum:["NoFunds","WouldDie","BelowMinimum","CannotCreate","UnknownAsset","Frozen","Unsupported","Underflow","Overflow"]},TransactionValidityError:{_enum:{Invalid:"InvalidTransaction",Unknown:"UnknownTransaction"}},TransactionalError:{_enum:["LimitReached","NoLayer"]},UnknownTransaction:{_enum:{CannotLookup:"Null",NoUnsignedValidator:"Null",Custom:"u8"}},WeightPerClass:{baseExtrinsic:"Weight",maxExtrinsic:"Option<Weight>",maxTotal:"Option<Weight>",reserved:"Option<Weight>"}}},definitions$q={rpc:{},types:{Bounty:{proposer:"AccountId",value:"Balance",fee:"Balance",curatorDeposit:"Balance",bond:"Balance",status:"BountyStatus"},BountyIndex:"u32",BountyStatus:{_enum:{Proposed:"Null",Approved:"Null",Funded:"Null",CuratorProposed:"BountyStatusCuratorProposed",Active:"BountyStatusActive",PendingPayout:"BountyStatusPendingPayout"}},BountyStatusActive:{curator:"AccountId",updateDue:"BlockNumber"},BountyStatusCuratorProposed:{curator:"AccountId"},BountyStatusPendingPayout:{curator:"AccountId",beneficiary:"AccountId",unlockAt:"BlockNumber"},OpenTip:{reason:"Hash",who:"AccountId",finder:"AccountId",deposit:"Balance",closes:"Option<BlockNumber>",tips:"Vec<OpenTipTip>",findersFee:"bool"},OpenTipTo225:{reason:"Hash",who:"AccountId",finder:"Option<OpenTipFinderTo225>",closes:"Option<BlockNumber>",tips:"Vec<OpenTipTip>"},OpenTipFinderTo225:"(AccountId, Balance)",OpenTipTip:"(AccountId, Balance)",TreasuryProposal:{proposer:"AccountId",value:"Balance",beneficiary:"AccountId",bond:"Balance"}}},definitions$p={rpc:{},types:{Multiplier:"Fixed128"}};const runtime$8={TaggedTransactionQueue:[{methods:{validate_transaction:{description:"Validate the transaction.",params:[{name:"source",type:"TransactionSource"},{name:"tx",type:"Extrinsic"},{name:"blockHash",type:"BlockHash"}],type:"TransactionValidity"}},version:3},{methods:{validate_transaction:{description:"Validate the transaction.",params:[{name:"source",type:"TransactionSource"},{name:"tx",type:"Extrinsic"}],type:"TransactionValidity"}},version:2},{methods:{validate_transaction:{description:"Validate the transaction.",params:[{name:"tx",type:"Extrinsic"}],type:"TransactionValidity"}},version:1}]};var definitions$o={rpc:{},runtime:runtime$8,types:{TransactionSource:{_enum:["InBlock","Local","External"]},TransactionValidity:"Result<ValidTransaction, TransactionValidityError>",ValidTransaction:{priority:"TransactionPriority",requires:"Vec<TransactionTag>",provides:"Vec<TransactionTag>",longevity:"TransactionLongevity",propagate:"bool"}}},definitions$n={rpc:{},types:{ClassId:"u32",InstanceId:"u32",DepositBalance:"Balance",DepositBalanceOf:"Balance",ClassDetails:{owner:"AccountId",issuer:"AccountId",admin:"AccountId",freezer:"AccountId",totalDeposit:"DepositBalance",freeHolding:"bool",instances:"u32",instanceMetadatas:"u32",attributes:"u32",isFrozen:"bool"},DestroyWitness:{instances:"Compact<u32>",instanceMetadatas:"Compact<u32>",attributes:"Compact<u32>"},InstanceDetails:{owner:"AccountId",approved:"Option<AccountId>",isFrozen:"bool",deposit:"DepositBalance"},ClassMetadata:{deposit:"DepositBalance",data:"Vec<u8>",isFrozen:"bool"},InstanceMetadata:{deposit:"DepositBalance",data:"Vec<u8>",isFrozen:"bool"}}},definitions$m={rpc:{},types:{Multisig:{when:"Timepoint",deposit:"Balance",depositor:"AccountId",approvals:"Vec<AccountId>"},Timepoint:{height:"BlockNumber",index:"u32"}}},definitions$l={rpc:{},types:{VestingInfo:{locked:"Balance",perBlock:"Balance",startingBlock:"BlockNumber"}}},definitions$k={rpc:{},types:{BlockAttestations:{receipt:"CandidateReceipt",valid:"Vec<AccountId>",invalid:"Vec<AccountId>"},IncludedBlocks:{actualNumber:"BlockNumber",session:"SessionIndex",randomSeed:"H256",activeParachains:"Vec<ParaId>",paraBlocks:"Vec<Hash>"},MoreAttestations:{}}},definitions$j={rpc:{},types:{BridgedBlockHash:"H256",BridgedBlockNumber:"BlockNumber",BridgedHeader:"Header",BridgeMessageId:"(LaneId, MessageNonce)",CallOrigin:{_enum:{SourceRoot:"Null",TargetAccount:"(AccountId, MultiSigner, MultiSignature)",SourceAccount:"AccountId"}},ChainId:"[u8; 4]",DeliveredMessages:{begin:"MessageNonce",end:"MessageNonce",dispatchResults:"BitVec"},DispatchFeePayment:{_enum:["AtSourceChain","AtTargetChain"]},InboundLaneData:{relayers:"Vec<UnrewardedRelayer>",lastConfirmedNonce:"MessageNonce"},InboundRelayer:"AccountId",InitializationData:{header:"Header",authorityList:"AuthorityList",setId:"SetId",isHalted:"bool"},LaneId:"[u8; 4]",MessageData:{payload:"Bytes",fee:"Balance"},MessagesDeliveryProofOf:{bridgedHeaderHash:"BlockHash",storageProof:"Vec<Bytes>",lane:"LaneId"},MessageKey:{laneId:"LaneId",nonce:"MessageNonce"},MessageNonce:"u64",MessagesProofOf:{bridgedHeaderHash:"BridgedBlockHash",storageProof:"Vec<Bytes>",lane:"LaneId",noncesStart:"MessageNonce",noncesEnd:"MessageNonce"},OperatingMode:{_enum:["Normal","RejectingOutboundMessages","Halted"]},OutboundLaneData:{oldestUnprunedNonce:"MessageNonce",latestReceivedNonce:"MessageNonce",latestGeneratedNonce:"MessageNonce"},OutboundMessageFee:"Balance",OutboundPayload:{specVersion:"u32",weight:"Weight",origin:"CallOrigin",dispatchFeePayment:"DispatchFeePayment",call:"Bytes"},Parameter:"Null",RelayerId:"AccountId",UnrewardedRelayer:{relayer:"RelayerId",messages:"DeliveredMessages"},UnrewardedRelayersState:{unrewardedRelayer_Entries:"MessageNonce",messagesInOldestEntry:"MessageNonce",totalMessages:"MessageNonce"}}},definitions$i={rpc:{},types:{StatementKind:{_enum:["Regular","Saft"]}}},definitions$h={rpc:{},types:{FundIndex:"u32",LastContribution:{_enum:{Never:"Null",PreEnding:"u32",Ending:"BlockNumber"}},FundInfo:{depositor:"AccountId",verifier:"Option<MultiSigner>",deposit:"Balance",raised:"Balance",end:"BlockNumber",cap:"Balance",lastContribution:"LastContribution",firstPeriod:"LeasePeriod",lastPeriod:"LeasePeriod",trieIndex:"TrieIndex"},TrieIndex:"u32"}};const runtime$7={CollectCollationInfo:[{methods:{collect_collation_info:{description:"Collect information about a collation.",params:[{name:"header",type:"Header"}],type:"CollationInfo"}},version:2},{methods:{collect_collation_info:{description:"Collect information about a collation.",params:[],type:"CollationInfoV1"}},version:1}]},dmpQueue={CollationInfo:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",processedDownwardMessages:"u32",hrmpWatermark:"RelayBlockNumber",headData:"HeadData"},CollationInfoV1:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",processedDownwardMessages:"u32",hrmpWatermark:"RelayBlockNumber"},ConfigData:{maxIndividual:"Weight"},MessageId:"[u8; 32]",OverweightIndex:"u64",PageCounter:"u32",PageIndexData:{beginUsed:"PageCounter",endUsed:"PageCounter",overweightCount:"OverweightIndex"}};var definitions$g={rpc:{},runtime:runtime$7,types:dmpQueue};const finalityV1={methods:{best_finalized:{description:"Returns number and hash of the best finalized header known to the bridge module.",params:[],type:"(BlockNumber, Hash)"}},version:1},runtime$6={KusamaFinalityApi:[finalityV1],PolkadotFinalityApi:[finalityV1],RococoFinalityApi:[finalityV1],WestendFinalityApi:[finalityV1]};var definitions$f={rpc:{},runtime:runtime$6,types:{}},hrmpTypes={HrmpChannel:{maxCapacity:"u32",maxTotalSize:"u32",maxMessageSize:"u32",msgCount:"u32",totalSize:"u32",mqcHead:"Option<Hash>",senderDeposit:"Balance",recipientDeposit:"Balance"},HrmpChannelId:{sender:"u32",receiver:"u32"},HrmpOpenChannelRequest:{confirmed:"bool",age:"SessionIndex",senderDeposit:"Balance",maxMessageSize:"u32",maxCapacity:"u32",maxTotalSize:"u32"}};const PH_V1_TO_V2={assumed_validation_data:{description:"Returns the persisted validation data for the given `ParaId` along with the corresponding validation code hash.",params:[{name:"paraId",type:"ParaId"},{name:"hash",type:"Hash"}],type:"Option<(PersistedValidationData, ValidationCodeHash)>"},availability_cores:{description:"Yields information on all availability cores as relevant to the child block.",params:[],type:"Vec<CoreState>"},candidate_events:{description:"Get a vector of events concerning candidates that occurred within a block.",params:[],type:"Vec<CandidateEvent>"},candidate_pending_availability:{description:"Get the receipt of a candidate pending availability.",params:[{name:"paraId",type:"ParaId"}],type:"Option<CommittedCandidateReceipt>"},check_validation_outputs:{description:"Checks if the given validation outputs pass the acceptance criteria.",params:[{name:"paraId",type:"ParaId"},{name:"outputs",type:"CandidateCommitments"}],type:"bool"},dmq_contents:{description:"Get all the pending inbound messages in the downward message queue for a para.",params:[{name:"paraId",type:"ParaId"}],type:"Vec<InboundDownwardMessage>"},inbound_hrmp_channels_contents:{description:"Get the contents of all channels addressed to the given recipient.",params:[{name:"paraId",type:"ParaId"}],type:"Vec<InboundHrmpMessage>"},on_chain_votes:{description:"Scrape dispute relevant from on-chain, backing votes and resolved disputes.",params:[],type:"Option<ScrapedOnChainVotes>"},persisted_validation_data:{description:"Yields the persisted validation data for the given `ParaId` along with an assumption that should be used if the para currently occupies a core.",params:[{name:"paraId",type:"ParaId"},{name:"assumption",type:"OccupiedCoreAssumption"}],type:"Option<PersistedValidationData>"},session_index_for_child:{description:"Returns the session index expected at a child of the block.",params:[],type:"SessionIndex"},validation_code:{description:"Fetch the validation code used by a para, making the given `OccupiedCoreAssumption`.",params:[{name:"paraId",type:"ParaId"},{name:"assumption",type:"OccupiedCoreAssumption"}],type:"ValidationCode"},validation_code_by_hash:{description:"Get the validation code from its hash.",params:[{name:"hash",type:"ValidationCodeHash"}],type:"Option<ValidationCode>"},validator_groups:{description:"Returns the validator groups and rotation info localized based on the hypothetical child of a block whose state  this is invoked on",params:[],type:"(Vec<Vec<ParaValidatorIndex>>, GroupRotationInfo)"},validators:{description:"Get the current validators.",params:[],type:"Vec<ValidatorId>"}},runtime$5={ParachainHost:[{methods:objectSpread({pvfs_require_precheck:{description:"Returns code hashes of PVFs that require pre-checking by validators in the active set.",params:[],type:"Vec<ValidationCodeHash>"},session_info:{description:"Get the session info for the given session, if stored.",params:[{name:"index",type:"SessionIndex"}],type:"Option<SessionInfo>"},submit_pvf_check_statement:{description:"Submits a PVF pre-checking statement into the transaction pool.",params:[{name:"stmt",type:"PvfCheckStatement"},{name:"signature",type:"ValidatorSignature"}],type:"Null"},validation_code_hash:{description:"Fetch the hash of the validation code used by a para, making the given `OccupiedCoreAssumption`.",params:[{name:"paraId",type:"ParaId"},{name:"assumption",type:"OccupiedCoreAssumption"}],type:"Option<ValidationCodeHash>"}},PH_V1_TO_V2),version:2},{methods:objectSpread({session_info:{description:"Get the session info for the given session, if stored.",params:[{name:"index",type:"SessionIndex"}],type:"Option<OldV1SessionInfo>"}},PH_V1_TO_V2),version:1}]},SlotRange10={_enum:["ZeroZero","ZeroOne","ZeroTwo","ZeroThree","OneOne","OneTwo","OneThree","TwoTwo","TwoThree","ThreeThree"]},SlotRange={_enum:["ZeroZero","ZeroOne","ZeroTwo","ZeroThree","ZeroFour","ZeroFive","ZeroSix","ZeroSeven","OneOne","OneTwo","OneThree","OneFour","OneFive","OneSix","OneSeven","TwoTwo","TwoThree","TwoFour","TwoFive","TwoSix","TwoSeven","ThreeThree","ThreeFour","ThreeFive","ThreeSix","ThreeSeven","FourFour","FourFive","FourSix","FourSeven","FiveFive","FiveSix","FiveSeven","SixSix","SixSeven","SevenSeven"]},oldTypes={Bidder:{_enum:{New:"NewBidder",Existing:"ParaId"}},IncomingParachain:{_enum:{Unset:"NewBidder",Fixed:"IncomingParachainFixed",Deploy:"IncomingParachainDeploy"}},IncomingParachainDeploy:{code:"ValidationCode",initialHeadData:"HeadData"},IncomingParachainFixed:{codeHash:"Hash",codeSize:"u32",initialHeadData:"HeadData"},NewBidder:{who:"AccountId",sub:"SubId"},SubId:"u32"};var slotTypes=objectSpread({},oldTypes,{AuctionIndex:"u32",LeasePeriod:"BlockNumber",LeasePeriodOf:"BlockNumber",SlotRange10,SlotRange,WinningData10:`[WinningDataEntry; ${SlotRange10._enum.length}]`,WinningData:`[WinningDataEntry; ${SlotRange._enum.length}]`,WinningDataEntry:"Option<(AccountId, ParaId, BalanceOf)>",WinnersData10:"Vec<WinnersDataTuple10>",WinnersData:"Vec<WinnersDataTuple>",WinnersDataTuple10:"(AccountId, ParaId, BalanceOf, SlotRange10)",WinnersDataTuple:"(AccountId, ParaId, BalanceOf, SlotRange)"});const proposeTypes={ParachainProposal:{proposer:"AccountId",genesisHead:"HeadData",validators:"Vec<ValidatorId>",name:"Bytes",balance:"Balance"},RegisteredParachainInfo:{validators:"Vec<ValidatorId>",proposer:"AccountId"}},cumulusTypes={ServiceQuality:{_enum:["Ordered","Fast"]}},disputeTypes={DisputeLocation:{_enum:["Local","Remote"]},DisputeResult:{_enum:["Valid","Invalid"]},DisputeState:{validatorsFor:"BitVec",validatorsAgainst:"BitVec",start:"BlockNumber",concludedAt:"Option<BlockNumber>"},DisputeStatement:{_enum:{Valid:"ValidDisputeStatementKind",Invalid:"InvalidDisputeStatementKind"}},DisputeStatementSet:{candidateHash:"CandidateHash",session:"SessionIndex",statements:"Vec<(DisputeStatement, ParaValidatorIndex, ValidatorSignature)>"},ExplicitDisputeStatement:{valid:"bool",candidateHash:"CandidateHash",session:"SessionIndex"},InvalidDisputeStatementKind:{_enum:["Explicit"]},MultiDisputeStatementSet:"Vec<DisputeStatementSet>",ValidDisputeStatementKind:{_enum:{Explicit:"Null",BackingSeconded:"Hash",BackingValid:"Hash",ApprovalChecking:"Null"}}};var definitions$e={rpc:{},runtime:runtime$5,types:objectSpread({},cumulusTypes,disputeTypes,hrmpTypes,proposeTypes,slotTypes,{AbridgedCandidateReceipt:{parachainIndex:"ParaId",relayParent:"Hash",headData:"HeadData",collator:"CollatorId",signature:"CollatorSignature",povBlockHash:"Hash",commitments:"CandidateCommitments"},AbridgedHostConfiguration:{maxCodeSize:"u32",maxHeadDataSize:"u32",maxUpwardQueueCount:"u32",maxUpwardQueueSize:"u32",maxUpwardMessageSize:"u32",maxUpwardMessageNumPerCandidate:"u32",hrmpMaxMessageNumPerCandidate:"u32",validationUpgradeFrequency:"BlockNumber",validationUpgradeDelay:"BlockNumber"},AbridgedHrmpChannel:{maxCapacity:"u32",maxTotalSize:"u32",maxMessageSize:"u32",msgCount:"u32",totalSize:"u32",mqcHead:"Option<Hash>"},AssignmentId:"AccountId",AssignmentKind:{_enum:{Parachain:"Null",Parathread:"(CollatorId, u32)"}},AttestedCandidate:{candidate:"AbridgedCandidateReceipt",validityVotes:"Vec<ValidityAttestation>",validatorIndices:"BitVec"},AuthorityDiscoveryId:"AccountId",AvailabilityBitfield:"BitVec",AvailabilityBitfieldRecord:{bitfield:"AvailabilityBitfield",submittedTt:"BlockNumber"},BackedCandidate:{candidate:"CommittedCandidateReceipt",validityVotes:"Vec<ValidityAttestation>",validatorIndices:"BitVec"},BufferedSessionChange:{applyAt:"BlockNumber",validators:"Vec<ValidatorId>",queued:"Vec<ValidatorId>",sessionIndex:"SessionIndex"},CandidateCommitments:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",headData:"HeadData",processedDownwardMessages:"u32",hrmpWatermark:"BlockNumber"},CandidateDescriptor:{paraId:"ParaId",relayParent:"RelayChainHash",collatorId:"CollatorId",persistedValidationDataHash:"Hash",povHash:"Hash",erasureRoot:"Hash",signature:"CollatorSignature",paraHead:"Hash",validationCodeHash:"ValidationCodeHash"},CandidateEvent:{_enum:{CandidateBacked:"(CandidateReceipt, HeadData, CoreIndex, GroupIndex)",CandidateIncluded:"(CandidateReceipt, HeadData, CoreIndex, GroupIndex)",CandidateTimedOut:"(CandidateReceipt, HeadData, CoreIndex)"}},CandidateHash:"Hash",CandidateInfo:{who:"AccountId",deposit:"Balance"},CandidatePendingAvailability:{core:"CoreIndex",hash:"CandidateHash",descriptor:"CandidateDescriptor",availabilityVotes:"BitVec",backers:"BitVec",relayParentNumber:"BlockNumber",backedInNumber:"BlockNumber",backingGroup:"GroupIndex"},CandidateReceipt:{descriptor:"CandidateDescriptor",commitmentsHash:"Hash"},GlobalValidationData:{maxCodeSize:"u32",maxHeadDataSize:"u32",blockNumber:"BlockNumber"},CollatorId:"H256",CollatorSignature:"Signature",CommittedCandidateReceipt:{descriptor:"CandidateDescriptor",commitments:"CandidateCommitments"},CoreAssignment:{core:"CoreIndex",paraId:"ParaId",kind:"AssignmentKind",groupIdx:"GroupIndex"},CoreIndex:"u32",CoreOccupied:{_enum:{Parathread:"ParathreadEntry",Parachain:"Null"}},CoreState:{_enum:{Occupied:"OccupiedCore",Scheduled:"ScheduledCore",Free:"Null"}},DoubleVoteReport:{identity:"ValidatorId",first:"(Statement, ValidatorSignature)",second:"(Statement, ValidatorSignature)",proof:"MembershipProof",signingContext:"SigningContext"},DownwardMessage:"Bytes",GroupIndex:"u32",GroupRotationInfo:{sessionStartBlock:"BlockNumber",groupRotationFrequency:"BlockNumber",now:"BlockNumber"},GlobalValidationSchedule:{maxCodeSize:"u32",maxHeadDataSize:"u32",blockNumber:"BlockNumber"},HeadData:"Bytes",HostConfiguration:{maxCodeSize:"u32",maxHeadDataSize:"u32",maxUpwardQueueCount:"u32",maxUpwardQueueSize:"u32",maxUpwardMessageSize:"u32",maxUpwardMessageNumPerCandidate:"u32",hrmpMaxMessageNumPerCandidate:"u32",validationUpgradeFrequency:"BlockNumber",validationUpgradeDelay:"BlockNumber",maxPovSize:"u32",maxDownwardMessageSize:"u32",preferredDispatchableUpwardMessagesStepWeight:"Weight",hrmpMaxParachainOutboundChannels:"u32",hrmpMaxParathreadOutboundChannels:"u32",hrmpOpenRequestTtl:"u32",hrmpSenderDeposit:"Balance",hrmpRecipientDeposit:"Balance",hrmpChannelMaxCapacity:"u32",hrmpChannelMaxTotalSize:"u32",hrmpMaxParachainInboundChannels:"u32",hrmpMaxParathreadInboundChannels:"u32",hrmpChannelMaxMessageSize:"u32",codeRetentionPeriod:"BlockNumber",parathreadCores:"u32",parathreadRetries:"u32",groupRotationFrequency:"BlockNumber",chainAvailabilityPeriod:"BlockNumber",threadAvailabilityPeriod:"BlockNumber",schedulingLookahead:"u32",maxValidatorsPerCore:"Option<u32>",maxValidators:"Option<u32>",disputePeriod:"SessionIndex",disputePostConclusionAcceptancePeriod:"BlockNumber",disputeMaxSpamSlots:"u32",disputeConclusionByTimeOutPeriod:"BlockNumber",noShowSlots:"u32",nDelayTranches:"u32",zerothDelayTrancheWidth:"u32",neededApprovals:"u32",relayVrfModuloSamples:"u32"},InboundDownwardMessage:{pubSentAt:"BlockNumber",pubMsg:"DownwardMessage"},InboundHrmpMessage:{sentAt:"BlockNumber",data:"Bytes"},InboundHrmpMessages:"Vec<InboundHrmpMessage>",LocalValidationData:{parentHead:"HeadData",balance:"Balance",codeUpgradeAllowed:"Option<BlockNumber>"},MessageIngestionType:{downwardMessages:"Vec<InboundDownwardMessage>",horizontalMessages:"BTreeMap<ParaId, InboundHrmpMessages>"},MessageQueueChain:"RelayChainHash",OccupiedCore:{nextUpOnAvailable:"Option<ScheduledCore>",occupiedSince:"BlockNumber",timeOutAt:"BlockNumber",nextUpOnTimeOut:"Option<ScheduledCore>",availability:"BitVec",groupResponsible:"GroupIndex",candidateHash:"CandidateHash",candidateDescriptor:"CandidateDescriptor"},OccupiedCoreAssumption:{_enum:["Included,","TimedOut","Free"]},OutboundHrmpMessage:{recipient:"u32",data:"Bytes"},ParachainDispatchOrigin:{_enum:["Signed","Parachain","Root"]},ParachainInherentData:{validationData:"PersistedValidationData",relayChainState:"StorageProof",downwardMessages:"Vec<InboundDownwardMessage>",horizontalMessages:"BTreeMap<ParaId, VecInboundHrmpMessage>"},ParachainsInherentData:{bitfields:"SignedAvailabilityBitfields",backedCandidates:"Vec<BackedCandidate>",disputes:"MultiDisputeStatementSet",parentHeader:"Header"},ParaGenesisArgs:{genesisHead:"Bytes",validationCode:"Bytes",parachain:"bool"},ParaId:"u32",ParaInfo:{manager:"AccountId",deposit:"Balance",locked:"bool"},ParaLifecycle:{_enum:["Onboarding","Parathread","Parachain","UpgradingToParachain","DowngradingToParathread","OutgoingParathread","OutgoingParachain"]},ParaPastCodeMeta:{upgradeTimes:"Vec<ReplacementTimes>",lastPruned:"Option<BlockNumber>"},ParaScheduling:{_enum:["Always","Dynamic"]},ParathreadClaim:"(ParaId, CollatorId)",ParathreadClaimQueue:{queue:"Vec<QueuedParathread>",nextCoreOffset:"u32"},ParathreadEntry:{claim:"ParathreadClaim",retries:"u32"},ParaValidatorIndex:"u32",PersistedValidationData:{parentHead:"HeadData",relayParentNumber:"RelayChainBlockNumber",relayParentStorageRoot:"Hash",maxPovSize:"u32"},PvfCheckStatement:{accept:"bool",subject:"ValidationCodeHash",sessionIndex:"SessionIndex",validatorIndex:"ParaValidatorIndex"},QueuedParathread:{claim:"ParathreadEntry",coreOffset:"u32"},RelayBlockNumber:"u32",RelayChainBlockNumber:"RelayBlockNumber",RelayHash:"Hash",RelayChainHash:"RelayHash",Remark:"[u8; 32]",ReplacementTimes:{expectedAt:"BlockNumber",activatedAt:"BlockNumber"},Retriable:{_enum:{Never:"Null",WithRetries:"u32"}},ScheduledCore:{paraId:"ParaId",collator:"Option<CollatorId>"},Scheduling:{_enum:["Always","Dynamic"]},ScrapedOnChainVotes:{session:"SessionIndex",backingValidatorsPerCandidate:"Vec<(CandidateReceipt, Vec<(ParaValidatorIndex, ValidityAttestation)>)>",disputes:"MultiDisputeStatementSet"},SessionInfo:{activeValidatorIndices:"Vec<ParaValidatorIndex>",randomSeed:"[u8; 32]",disputePeriod:"SessionIndex",validators:"Vec<ValidatorId>",discoveryKeys:"Vec<AuthorityDiscoveryId>",assignmentKeys:"Vec<AssignmentId>",validatorGroups:"Vec<Vec<ValidatorIndex>>",nCores:"u32",zerothDelayTrancheWidth:"u32",relayVrfModuloSamples:"u32",nDelayTranches:"u32",noShowSlots:"u32",neededApprovals:"u32"},OldV1SessionInfo:{validators:"Vec<ValidatorId>",discoveryKeys:"Vec<AuthorityDiscoveryId>",assignmentKeys:"Vec<AssignmentId>",validatorGroups:"Vec<Vec<ParaValidatorIndex>>",nCores:"u32",zerothDelayTrancheWidth:"u32",relayVrfModuloSamples:"u32",nDelayTranches:"u32",noShowSlots:"u32",neededApprovals:"u32"},SessionInfoValidatorGroup:"Vec<ParaValidatorIndex>",SignedAvailabilityBitfield:{payload:"BitVec",validatorIndex:"ParaValidatorIndex",signature:"ValidatorSignature"},SignedAvailabilityBitfields:"Vec<SignedAvailabilityBitfield>",SigningContext:{sessionIndex:"SessionIndex",parentHash:"Hash"},Statement:{_enum:{Never:"Null",Candidate:"Hash",Valid:"Hash",Invalid:"Hash"}},TransientValidationData:{maxCodeSize:"u32",maxHeadDataSize:"u32",balance:"Balance",codeUpgradeAllowed:"Option<BlockNumber>",dmqLength:"u32"},UpgradeGoAhead:{_enum:["Abort","GoAhead"]},UpgradeRestriction:{_enum:["Present"]},UpwardMessage:"Bytes",ValidationFunctionParams:{maxCodeSize:"u32",relayChainHeight:"RelayChainBlockNumber",codeUpgradeAllowed:"Option<RelayChainBlockNumber>"},ValidationCode:"Bytes",ValidationCodeHash:"Hash",ValidationData:{persisted:"PersistedValidationData",transient:"TransientValidationData"},ValidationDataType:{validationData:"ValidationData",relayChainState:"Vec<Bytes>"},ValidatorSignature:"Signature",ValidityAttestation:{_enum:{Never:"Null",Implicit:"ValidatorSignature",Explicit:"ValidatorSignature"}},MessagingStateSnapshot:{relayDispatchQueueSize:"(u32, u32)",egressChannels:"Vec<MessagingStateSnapshotEgressEntry>"},MessagingStateSnapshotEgressEntry:"(ParaId, AbridgedHrmpChannel)",SystemInherentData:"ParachainInherentData",VecInboundHrmpMessage:"Vec<InboundHrmpMessage>"})},definitions$d={rpc:{},types:{Approvals:"[bool; 4]"}},definitions$c={rpc:{},types:{AccountStatus:{validity:"AccountValidity",freeBalance:"Balance",lockedBalance:"Balance",signature:"Vec<u8>",vat:"Permill"},AccountValidity:{_enum:["Invalid","Initiated","Pending","ValidLow","ValidHigh","Completed"]}}};let TypeDefInfo;(function(r){r[r.BTreeMap=0]="BTreeMap",r[r.BTreeSet=1]="BTreeSet",r[r.Compact=2]="Compact",r[r.DoNotConstruct=3]="DoNotConstruct",r[r.Enum=4]="Enum",r[r.HashMap=5]="HashMap",r[r.Int=6]="Int",r[r.Linkage=7]="Linkage",r[r.Null=8]="Null",r[r.Option=9]="Option",r[r.Plain=10]="Plain",r[r.Range=11]="Range",r[r.RangeInclusive=12]="RangeInclusive",r[r.Result=13]="Result",r[r.Set=14]="Set",r[r.Si=15]="Si",r[r.Struct=16]="Struct",r[r.Tuple=17]="Tuple",r[r.UInt=18]="UInt",r[r.Vec=19]="Vec",r[r.VecFixed=20]="VecFixed",r[r.WrapperKeepOpaque=21]="WrapperKeepOpaque",r[r.WrapperOpaque=22]="WrapperOpaque"})(TypeDefInfo||(TypeDefInfo={}));function hasEq(r){return isFunction$3(r.eq)}function compareArray(r,e){return Array.isArray(e)?r.length===e.length&&isUndefined(r.find((t,n)=>hasEq(t)?!t.eq(e[n]):t!==e[n])):!1}class AbstractArray extends Array{static get[Symbol.species](){return Array}constructor(e,t){super(t),this.registry=e}get encodedLength(){let e=compactToU8a(this.length).length;for(let t=0;t<this.length;t++)e+=this[t].encodedLength;return e}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.length===0}get length(){return super.length}eq(e){return compareArray(this,e)}inspect(){return{inner:this.inspectInner(),outer:[compactToU8a(this.length)]}}inspectInner(){const e=new Array(this.length);for(let t=0;t<this.length;t++)e[t]=this[t].inspect();return e}toArray(){return Array.from(this)}toHex(){return u8aToHex(this.toU8a())}toHuman(e){const t=new Array(this.length);for(let n=0;n<this.length;n++)t[n]=this[n].toHuman(e);return t}toJSON(){const e=new Array(this.length);for(let t=0;t<this.length;t++)e[t]=this[t].toJSON();return e}toString(){const e=new Array(this.length);for(let t=0;t<this.length;t++)e[t]=this[t].toString();return`[${e.join(", ")}]`}toU8a(e){const t=this.toU8aInner();return u8aConcatStrict(e?t:[compactToU8a(this.length),...t])}toU8aInner(e){const t=new Array(this.length);for(let n=0;n<this.length;n++)t[n]=this[n].toU8a(e);return t}}var Rt;class AbstractBase{constructor(e,t,n){_(this,Rt,void 0);Q(this,Rt,t),this.initialU8aLength=n,this.registry=e}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get inner(){return b(this,Rt)}get isEmpty(){return b(this,Rt).isEmpty}eq(e){return b(this,Rt).eq(e)}inspect(){return b(this,Rt).inspect()}toHex(e){return b(this,Rt).toHex(e)}toHuman(e){return b(this,Rt).toHuman(e)}toJSON(){return b(this,Rt).toJSON()}toString(){return b(this,Rt).toString()}toU8a(e){return b(this,Rt).toU8a(e)}toRawType(){return"Base"}unwrap(){return b(this,Rt)}}Rt=new WeakMap;const DEFAULT_UINT_BITS=64,MAX_NUMBER_BITS=52,MUL_P=new BN(1e4),FORMATTERS=[["Perquintill",BN_QUINTILL],["Perbill",BN_BILLION],["Permill",BN_MILLION],["Percent",BN_HUNDRED]];function toPercentage(r,e){return`${(r.mul(MUL_P).div(e).toNumber()/100).toFixed(2)}%`}function decodeAbstractInt(r,e){if(isNumber(r)){if(!Number.isInteger(r)||r>Number.MAX_SAFE_INTEGER||r<Number.MIN_SAFE_INTEGER)throw new Error("Number needs to be an integer <= Number.MAX_SAFE_INTEGER, i.e. 2 ^ 53 - 1");return r}else if(isString(r)){if(isHex(r,-1,!0))return hexToBn(r,{isLe:!1,isNegative:e}).toString();if(r.includes(".")||r.includes(",")||r.includes("e"))throw new Error("String should not contain decimal points or scientific notation");return r}else if(isBn(r))return r.toString();return bnToBn(r).toString()}var hr;class AbstractInt extends BN{constructor(t,n=0,s=DEFAULT_UINT_BITS,i=!1){super(isU8a(n)?s<=48?u8aToNumber(n.subarray(0,s/8),{isNegative:i}):u8aToBn(n.subarray(0,s/8),{isLe:!0,isNegative:i}).toString():decodeAbstractInt(n,i));_(this,hr,void 0);this.registry=t,Q(this,hr,s),this.encodedLength=b(this,hr)/8,this.isUnsigned=!i;const a=this.isNeg(),o=s-(i&&!a?1:0);if(a&&!i)throw new Error(`${this.toRawType()}: Negative number passed to unsigned type`);if(super.bitLength()>o)throw new Error(`${this.toRawType()}: Input too large. Found input with ${super.bitLength()} bits, expected ${o}`)}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isZero()}bitLength(){return b(this,hr)}eq(t){return super.eq(isHex(t)?hexToBn(t.toString(),{isLe:!1,isNegative:!this.isUnsigned}):bnToBn(t))}inspect(){return{outer:[this.toU8a()]}}isMax(){return this.toU8a().filter(n=>n===255).length===b(this,hr)/8}toBigInt(){return BigInt(this.toString())}toBn(){return this}toHex(t=!1){return bnToHex(this,{bitLength:this.bitLength(),isLe:t,isNegative:!this.isUnsigned})}toHuman(t){const n=this.toRawType();if(n==="Balance")return this.isMax()?"everything":formatBalance(this,{decimals:this.registry.chainDecimals[0],withSi:!0,withUnit:this.registry.chainTokens[0]});const[,s]=FORMATTERS.find(([i])=>i===n)||[];return s?toPercentage(this,s):formatNumber(this)}toJSON(t=!1){return t||super.bitLength()>MAX_NUMBER_BITS?this.toHex():this.toNumber()}toRawType(){return this instanceof this.registry.createClassUnsafe("Balance")?"Balance":`${this.isUnsigned?"u":"i"}${this.bitLength()}`}toString(t){return super.toString(t)}toU8a(t){return bnToU8a(this,{bitLength:this.bitLength(),isLe:!0,isNegative:!this.isUnsigned})}}hr=new WeakMap;function hasMismatch(r,e){return isUndefined(r)||(hasEq(r)?!r.eq(e):r!==e)}function notEntry(r){return!Array.isArray(r)||r.length!==2}function compareMapArray(r,e){return r.size===e.length&&!e.some(t=>notEntry(t)||hasMismatch(r.get(t[0]),t[1]))}function compareMap(r,e){return Array.isArray(e)?compareMapArray(r,e):e instanceof Map?compareMapArray(r,[...e.entries()]):isObject$2(e)?compareMapArray(r,Object.entries(e)):!1}function compareSetArray(r,e){return r.size===e.length&&!e.some(t=>!r.has(t))}function compareSet(r,e){return Array.isArray(e)?compareSetArray(r,e):e instanceof Set?compareSetArray(r,[...e.values()]):isObject$2(e)?compareSetArray(r,Object.values(e)):!1}function formatFailure(r,{message:e},t,n,s,i,a){let o="";try{o=`: ${new i(r).toRawType()}`}catch{}return`decodeU8a: failed at ${u8aToHex(t.subarray(0,16))}\u2026${a?` on ${a}`:""} (index ${n}/${s})${o}:: ${e}`}function decodeU8a$6(r,e,t,[n,s]){const i=e.length;let a=0,o=0;try{for(;o<i;){const c=new n[o](r,t.subarray(a));a+=c.initialU8aLength||c.encodedLength,e[o]=c,o++}}catch(c){throw new Error(formatFailure(r,c,t.subarray(a),o,i,n[o],s[o]))}return[e,a]}function decodeU8aStruct(r,e,t,[n,s]){const i=e.length;let a=0,o=0;try{for(;o<i;){const c=new n[o](r,t.subarray(a));a+=c.initialU8aLength||c.encodedLength,e[o]=[s[o],c],o++}}catch(c){throw new Error(formatFailure(r,c,t.subarray(a),o,i,n[o],s[o]))}return[e,a]}function decodeU8aVec(r,e,t,n,s){const i=e.length;let a=n,o=0;try{for(;o<i;){const c=new s(r,t.subarray(a));a+=c.initialU8aLength||c.encodedLength,e[o]=c,o++}}catch(c){throw new Error(formatFailure(r,c,t.subarray(a),o,i,s))}return[a,a-n]}function typeToConstructor(r,e){return isString(e)?r.createClassUnsafe(e):e}function mapToTypeMap(r,e){const t=Object.entries(e),n=t.length,s=[new Array(n),new Array(n)];for(let i=0;i<n;i++)s[1][i]=t[i][0],s[0][i]=typeToConstructor(r,t[i][1]);return s}const BOUNDED=["BTreeMap","BTreeSet","HashMap","Vec"],ALLOWED_BOXES=BOUNDED.concat(["Compact","DoNotConstruct","Int","Linkage","Range","RangeInclusive","Result","Option","UInt","WrapperKeepOpaque","WrapperOpaque"]),BOX_PRECEDING=["<","(","[",'"',","," "],mappings=[alias("<T::InherentOfflineReport as InherentOfflineReport>::Inherent","InherentOfflineReport",!1),alias("VecDeque<","Vec<",!1),cleanupCompact(),removeExtensions("Bounded",!0),removeExtensions("Weak",!1),removeTraits(),removePairOf(),removeWrap("Box<"),removeGenerics(),alias("String","Text"),alias("Vec<u8>","Bytes"),alias("&\\[u8\\]","Bytes"),alias("&'static\\[u8\\]","Bytes"),alias("RawAddress","Address"),alias("Lookup::Source","LookupSource"),alias("Lookup::Target","LookupTarget"),alias("exec::StorageKey","ContractStorageKey"),flattenSingleTuple(),removeColons(),trim$2()];function trim$2(){return r=>r.trim()}function findClosing(r,e){let t=0;for(let n=e;n<r.length;n++)if(r[n]===">"){if(!t)return n;t--}else r[n]==="<"&&t++;throw new Error(`Unable to find closing matching <> on '${r}' (start ${e})`)}function alias(r,e,t=!0){const n=new RegExp(`(^${r}|${BOX_PRECEDING.map(i=>`\\${i}${r}`).join("|")})`,"g"),s=i=>(n.lastIndex=0,t&&BOX_PRECEDING.includes(i[0])?`${i[0]}${e}`:e);return i=>i.replace(n,s)}function cleanupCompact(){return r=>{if(r.includes(" as HasCompact")){for(let e=0;e<r.length;e++)if(r[e]==="<"){const t=findClosing(r,e+1)-14;r.substring(t,t+14)===" as HasCompact"&&(r=`Compact<${r.substring(e+1,t)}>`)}}return r}}function flattenSingleTuple(){const r=/,\)/g,e=/\(([^,]+)\)/;return t=>(r.lastIndex=0,t.replace(r,")").replace(e,"$1"))}function replaceTagWith(r,e,t){let n=-1;for(;;){if(n=r.indexOf(e,n+1),n===-1)return r;const s=n+e.length,i=findClosing(r,s);r=`${r.substring(0,n)}${t(r.substring(s,i))}${r.substring(i+1)}`}}function removeExtensions(r,e){return t=>{for(let n=0;n<BOUNDED.length;n++){const s=BOUNDED[n];t=replaceTagWith(t,`${r}${s}<`,i=>{const a=i.split(",").map(o=>o.trim()).filter(o=>o);return e&&a.pop(),`${s}<${a.join(",")}>`})}return t}}function removeColons(){return r=>{let e=0;for(;e!==-1;)if(e=r.indexOf("::"),e===0)r=r.substring(2);else if(e!==-1){let t=e;for(;t!==-1&&!BOX_PRECEDING.includes(r[t]);)t--;r=`${r.substring(0,t+1)}${r.substring(e+2)}`}return r}}function removeGenerics(){return r=>{for(let e=0;e<r.length;e++)if(r[e]==="<"&&!ALLOWED_BOXES.find(n=>{const s=e-n.length;return s>=0&&r.substring(s,e)===n&&(s===0||BOX_PRECEDING.includes(r[s-1]))})){const n=findClosing(r,e+1);r=`${r.substring(0,e)}${r.substring(n+1)}`}return r}}function removePairOf(){const r=e=>`(${e},${e})`;return e=>replaceTagWith(e,"PairOf<",r)}function removeTraits(){const r=/\s/g,e=/(T|Self)::/g,t=/<(T|Self)asTrait>::/g,n=/<Tas[a-z]+::Trait>::/g,s=/<LookupasStaticLookup>/g,i=/::Type/g;return a=>(r.lastIndex=0,e.lastIndex=0,t.lastIndex=0,n.lastIndex=0,s.lastIndex=0,i.lastIndex=0,a.replace(r,"").replace(e,"").replace(t,"").replace(n,"").replace(s,"Lookup").replace(i,""))}function removeWrap(r){const e=t=>t;return t=>replaceTagWith(t,r,e)}const sanitizeMap=new Map;function sanitize(r){const e=r.toString(),t=sanitizeMap.get(e);if(t)return t;let n=e;for(let s=0;s<mappings.length;s++)n=mappings[s](n);return sanitizeMap.set(e,n),n}function isArrayLike$1(r){return r instanceof Uint8Array||Array.isArray(r)}function isCodec(r){return isFunction$3(r&&r.toU8a)}function isEnum(r){return isCodec(r)&&isNumber(r.index)&&isCodec(r.value)}function isNumberLike(r){return isNumber(r)||isBn(r)||isBigInt(r)}function sortArray(r,e){let t=0;const n=Math.min(r.length,e.length);for(let s=0;s<n;++s)if(t=sortAsc(r[s],e[s]),t!==0)return t;return r.length-e.length}function sortAsc(r,e){if(isNumberLike(r)&&isNumberLike(e))return bnToBn(r).cmp(bnToBn(e));if(r instanceof Map&&e instanceof Map)return sortAsc(Array.from(r.values()),Array.from(e.values()));if(isEnum(r)&&isEnum(e))return sortAsc(r.index,e.index)||sortAsc(r.value,e.value);if(isArrayLike$1(r)&&isArrayLike$1(e))return sortArray(r,e);if(isCodec(r)&&isCodec(e))return sortAsc(r.toU8a(!0),e.toU8a(!0));throw new Error(`Attempting to sort unrecognized values: ${stringify(r)} (typeof ${typeof r}) <-> ${stringify(e)} (typeof ${typeof e})`)}function sortSet(r){return new Set(Array.from(r).sort(sortAsc))}function sortMap(r){return new Map(Array.from(r.entries()).sort(([e],[t])=>sortAsc(e,t)))}function typesToMap(r,[e,t]){const n={};for(let s=0;s<t.length;s++)n[t[s]]=r.getClassName(e[s])||new e[s](r).toRawType();return n}function noopSetDefinition$6(r){return r}function decodeCompact(r,e,t){if(isU8a(t)){const[n,s]=(t[0]&3)<3?compactFromU8aLim(t):compactFromU8a(t);return[new e(r,s),n]}else if(t instanceof Compact){const n=t.unwrap();return n instanceof e?[n,0]:[new e(r,n),0]}else if(t instanceof e)return[t,0];return[new e(r,t),0]}var Hr,kt;const ss=class{constructor(e,t,n=0,{definition:s,setDefinition:i=noopSetDefinition$6}={}){_(this,Hr,void 0);_(this,kt,void 0);this.registry=e,Q(this,Hr,s||i(typeToConstructor(e,t)));const[a,o]=decodeCompact(e,b(this,Hr),n);this.initialU8aLength=o,Q(this,kt,a)}static with(e){let t;const n=s=>t=s;return class extends ss{constructor(s,i){super(s,e,i,{definition:t,setDefinition:n})}}}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return b(this,kt).isEmpty}bitLength(){return b(this,kt).bitLength()}eq(e){return b(this,kt).eq(e instanceof ss?b(e,kt):e)}inspect(){return{outer:[this.toU8a()]}}toBigInt(){return b(this,kt).toBigInt()}toBn(){return b(this,kt).toBn()}toHex(e){return b(this,kt).toHex(e)}toHuman(e){return b(this,kt).toHuman(e)}toJSON(){return b(this,kt).toJSON()}toNumber(){return b(this,kt).toNumber()}toRawType(){return`Compact<${this.registry.getClassName(b(this,Hr))||b(this,kt).toRawType()}>`}toString(){return b(this,kt).toString()}toU8a(e){return compactToU8a(b(this,kt).toBn())}unwrap(){return b(this,kt)}};let Compact=ss;Hr=new WeakMap,kt=new WeakMap;var Bt;const ws=class{constructor(e,t="DoNotConstruct"){_(this,Bt,void 0);throw this.registry=e,Q(this,Bt,new Error(`DoNotConstruct: Cannot construct unknown type ${t}`)),b(this,Bt)}static with(e){return class extends ws{constructor(t){super(t,e)}}}get encodedLength(){throw b(this,Bt)}get hash(){throw b(this,Bt)}get isEmpty(){throw b(this,Bt)}eq(){throw b(this,Bt)}inspect(){throw b(this,Bt)}toHex(){throw b(this,Bt)}toHuman(){throw b(this,Bt)}toJSON(){throw b(this,Bt)}toRawType(){throw b(this,Bt)}toString(){throw b(this,Bt)}toU8a(){throw b(this,Bt)}};let DoNotConstruct=ws;Bt=new WeakMap;class Null{constructor(e){Ae(this,"encodedLength",0);Ae(this,"isEmpty",!0);Ae(this,"initialU8aLength",0);this.registry=e}get hash(){throw new Error(".hash is not implemented on Null")}eq(e){return e instanceof Null||isNull(e)}inspect(){return{}}toHex(){return"0x"}toHuman(){return this.toJSON()}toJSON(){return null}toRawType(){return"Null"}toString(){return""}toU8a(e){return new Uint8Array}}function noopSetDefinition$5(r){return r}function isRustEnum$1(r){const e=Object.values(r);if(e.some(t=>isNumber(t))){if(!e.every(t=>isNumber(t)&&t>=0&&t<=255))throw new Error("Invalid number-indexed enum definition");return!1}return!0}function extractDef(r,e){const t={};let n,s;if(Array.isArray(e)){for(let i=0;i<e.length;i++)t[e[i]]={Type:Null,index:i};n=!0,s=!1}else if(isRustEnum$1(e)){const[i,a]=mapToTypeMap(r,e);for(let o=0;o<a.length;o++)t[a[o]]={Type:i[o],index:o};n=!Object.values(t).some(({Type:o})=>o!==Null),s=!1}else{const i=Object.entries(e);for(let a=0;a<i.length;a++){const[o,c]=i[a];t[o]={Type:Null,index:c}}n=!0,s=!0}return{def:t,isBasic:n,isIndexed:s}}function getEntryType(r,e){const t=Object.values(r);for(let n=0;n<t.length;n++){const{Type:s,index:i}=t[n];if(i===e)return s}throw new Error(`Unable to create Enum via index ${e}, in ${Object.keys(r).join(", ")}`)}function createFromU8a(r,e,t,n){const s=getEntryType(e,t);return{index:t,value:new s(r,n)}}function createFromValue(r,e,t=0,n){const s=getEntryType(e,t);return{index:t,value:n instanceof s?n:new s(r,n)}}function decodeFromJSON(r,e,t,n){const s=Object.keys(e).map(o=>o.toLowerCase()),i=t.toLowerCase(),a=s.indexOf(i);if(a===-1)throw new Error(`Cannot map Enum JSON, unable to find '${t}' in ${s.join(", ")}`);try{return createFromValue(r,e,Object.values(e)[a].index,n)}catch(o){throw new Error(`Enum(${t}):: ${o.message}`)}}function decodeEnum(r,e,t,n){if(isNumber(n))return createFromValue(r,e,n,t);if(isU8a(t)||isHex(t)){const s=u8aToU8a(t);if(s.length)return createFromU8a(r,e,s[0],s.subarray(1))}else{if(t instanceof Enum)return createFromValue(r,e,t.index,t.value);if(isNumber(t))return createFromValue(r,e,t);if(isString(t))return decodeFromJSON(r,e,t.toString());if(isObject$2(t)){const s=Object.keys(t)[0];return decodeFromJSON(r,e,s,t[s])}}return createFromValue(r,e,Object.values(e)[0].index)}var Ur,Rr,rr,Gt,Sn,Nt;const is=class{constructor(e,t,n,s,{definition:i,setDefinition:a=noopSetDefinition$5}={}){_(this,Ur,void 0);_(this,Rr,void 0);_(this,rr,void 0);_(this,Gt,void 0);_(this,Sn,void 0);_(this,Nt,void 0);const{def:o,isBasic:c,isIndexed:h}=i||a(extractDef(e,t)),p=isU8a(n)&&n.length&&!isNumber(s)?createFromU8a(e,o,n[0],n.subarray(1)):decodeEnum(e,o,n,s);this.registry=e,Q(this,Ur,o),Q(this,Gt,c),Q(this,Sn,h),Q(this,rr,Object.values(o).map(({index:x})=>x)),Q(this,Rr,b(this,rr).indexOf(p.index)),Q(this,Nt,p.value),b(this,Nt).initialU8aLength&&(this.initialU8aLength=1+b(this,Nt).initialU8aLength)}static with(e){const t=Array.isArray(e)?e:Object.keys(e),n=new Array(t.length),s=new Array(t.length);for(let o=0;o<t.length;o++){const c=stringPascalCase(t[o]);n[o]=`as${c}`,s[o]=`is${c}`}let i;const a=o=>i=o;return class extends is{constructor(o,c,h){super(o,e,c,h,{definition:i,setDefinition:a}),objectProperties(this,s,(p,x)=>this.type===t[x]),objectProperties(this,n,(p,x)=>{if(!this[s[x]])throw new Error(`Cannot convert '${this.type}' via ${p}`);return this.value})}}}get encodedLength(){return 1+b(this,Nt).encodedLength}get hash(){return this.registry.hash(this.toU8a())}get index(){return b(this,rr)[b(this,Rr)]}get inner(){return b(this,Nt)}get isBasic(){return b(this,Gt)}get isEmpty(){return b(this,Nt).isEmpty}get isNone(){return b(this,Nt)instanceof Null}get isNull(){return this.isNone}get defIndexes(){return b(this,rr)}get defKeys(){return Object.keys(b(this,Ur))}get type(){return this.defKeys[b(this,Rr)]}get value(){return b(this,Nt)}eq(e){return isU8a(e)?!this.toU8a().some((t,n)=>t!==e[n]):isNumber(e)?this.toNumber()===e:b(this,Gt)&&isString(e)?this.type===e:isHex(e)?this.toHex()===e:e instanceof is?this.index===e.index&&this.value.eq(e.value):isObject$2(e)?this.value.eq(e[this.type]):this.value.eq(e)}inspect(){if(b(this,Gt))return{outer:[new Uint8Array([this.index])]};const{inner:e,outer:t=[]}=b(this,Nt).inspect();return{inner:e,outer:[new Uint8Array([this.index]),...t]}}toHex(){return u8aToHex(this.toU8a())}toHuman(e){return b(this,Gt)||this.isNone?this.type:{[this.type]:b(this,Nt).toHuman(e)}}toJSON(){return b(this,Gt)?this.type:{[stringCamelCase(this.type)]:b(this,Nt).toJSON()}}toNumber(){return this.index}_toRawStruct(){if(b(this,Gt))return b(this,Sn)?this.defKeys.reduce((t,n,s)=>(t[n]=b(this,rr)[s],t),{}):this.defKeys;const e=Object.entries(b(this,Ur));return typesToMap(this.registry,e.reduce((t,[n,{Type:s}],i)=>(t[0][i]=s,t[1][i]=n,t),[new Array(e.length),new Array(e.length)]))}toRawType(){return stringify({_enum:this._toRawStruct()})}toString(){return this.isNone?this.type:stringify(this.toJSON())}toU8a(e){return e?b(this,Nt).toU8a(e):u8aConcatStrict([new Uint8Array([this.index]),b(this,Nt).toU8a(e)])}};let Enum=is;Ur=new WeakMap,Rr=new WeakMap,rr=new WeakMap,Gt=new WeakMap,Sn=new WeakMap,Nt=new WeakMap;class Int extends AbstractInt{constructor(e,t=0,n){super(e,t,n,!0)}static with(e,t){return class extends Int{constructor(n,s){super(n,s,e)}toRawType(){return t||super.toRawType()}}}}function noopSetDefinition$4(r){return r}class None extends Null{toRawType(){return"None"}}function decodeOption(r,e,t){return t instanceof e?t:t instanceof Option?t.value instanceof e?t.value:t.isNone?new None(r):new e(r,t.value):isNull(t)||isUndefined(t)||t==="0x"||t instanceof None?new None(r):isU8a(t)?!t.length||t[0]===0?new None(r):new e(r,t.subarray(1)):new e(r,t)}var pr,Ft;const as=class{constructor(e,t,n,{definition:s,setDefinition:i=noopSetDefinition$4}={}){_(this,pr,void 0);_(this,Ft,void 0);const a=s||i(typeToConstructor(e,t)),o=isU8a(n)&&n.length&&!isCodec$1(n)?n[0]===0?new None(e):new a(e,n.subarray(1)):decodeOption(e,a,n);this.registry=e,Q(this,pr,a),Q(this,Ft,o),o&&o.initialU8aLength&&(this.initialU8aLength=1+o.initialU8aLength)}static with(e){let t;const n=s=>(t=s,s);return class extends as{constructor(s,i){super(s,e,i,{definition:t,setDefinition:n})}}}get encodedLength(){return 1+b(this,Ft).encodedLength}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isNone}get isNone(){return b(this,Ft)instanceof None}get isSome(){return!this.isNone}get value(){return b(this,Ft)}eq(e){return e instanceof as?this.isSome===e.isSome&&this.value.eq(e.value):this.value.eq(e)}inspect(){if(this.isNone)return{outer:[new Uint8Array([0])]};const{inner:e,outer:t=[]}=b(this,Ft).inspect();return{inner:e,outer:[new Uint8Array([1]),...t]}}toHex(){return this.isNone?"0x":u8aToHex(this.toU8a().subarray(1))}toHuman(e){return b(this,Ft).toHuman(e)}toJSON(){return this.isNone?null:b(this,Ft).toJSON()}toRawType(e){const t=this.registry.getClassName(b(this,pr))||new(b(this,pr))(this.registry).toRawType();return e?t:`Option<${t}>`}toString(){return b(this,Ft).toString()}toU8a(e){if(e)return b(this,Ft).toU8a(!0);const t=new Uint8Array(this.encodedLength);return this.isSome&&(t.set([1]),t.set(b(this,Ft).toU8a(),1)),t}unwrap(){if(this.isNone)throw new Error("Option: unwrapping a None value");return b(this,Ft)}unwrapOr(e){return this.isSome?this.unwrap():e}unwrapOrDefault(){return this.isSome?this.unwrap():new(b(this,pr))(this.registry)}};let Option=as;pr=new WeakMap,Ft=new WeakMap;class Result extends Enum{constructor(e,t,n,s){super(e,{Ok:t,Err:n},s)}static with(e){return class extends Result{constructor(t,n){super(t,e.Ok,e.Err,n)}}}get asErr(){if(!this.isErr)throw new Error("Cannot extract Err value from Ok result, check isErr first");return this.value}get asError(){return this.asErr}get asOk(){if(!this.isOk)throw new Error("Cannot extract Ok value from Err result, check isOk first");return this.value}get isEmpty(){return this.isOk&&this.value.isEmpty}get isErr(){return!this.isOk}get isError(){return this.isErr}get isOk(){return this.index===0}toRawType(){const e=this._toRawStruct();return`Result<${e.Ok},${e.Err}>`}}function noopSetDefinition$3(r){return r}function decodeTuple(r,e,t,n){if(isU8a(t)||isHex(t))return decodeU8a$6(r,e,u8aToU8a(t),n);const s=n[0];for(let i=0;i<s.length;i++)try{const a=t==null?void 0:t[i];e[i]=a instanceof s[i]?a:new s[i](r,a)}catch(a){throw new Error(`Tuple: failed on ${i}:: ${a.message}`)}return[e,0]}var nr;const Ss=class extends AbstractArray{constructor(t,n,s,{definition:i,setDefinition:a=noopSetDefinition$3}={}){const o=i||a(Array.isArray(n)?[n.map(c=>typeToConstructor(t,c)),[]]:isFunction$3(n)||isString(n)?[[typeToConstructor(t,n)],[]]:mapToTypeMap(t,n));super(t,o[0].length);_(this,nr,void 0);this.initialU8aLength=(isU8a(s)?decodeU8a$6(t,this,s,o):decodeTuple(t,this,s,o))[1],Q(this,nr,o)}static with(t){let n;const s=i=>n=i;return class extends Ss{constructor(i,a){super(i,t,a,{definition:n,setDefinition:s})}}}get encodedLength(){let t=0;for(let n=0;n<this.length;n++)t+=this[n].encodedLength;return t}get Types(){return b(this,nr)[1].length?b(this,nr)[1]:b(this,nr)[0].map(t=>new t(this.registry).toRawType())}inspect(){return{inner:this.inspectInner()}}toRawType(){return`(${b(this,nr)[0].map(n=>this.registry.getClassName(n)||new n(this.registry).toRawType()).join(",")})`}toString(){return stringify(this.toJSON())}toU8a(t){return u8aConcatStrict(this.toU8aInner(t))}};let Tuple=Ss;nr=new WeakMap;class UInt extends AbstractInt{static with(e,t){return class extends UInt{constructor(n,s){super(n,s,e)}toRawType(){return t||super.toRawType()}}}}const MAX_LENGTH$2=64*1024,l$e=logger("Vec");function noopSetDefinition$2(r){return r}function decodeVecLength(r){if(Array.isArray(r))return[r,r.length,0];const e=u8aToU8a(r),[t,n]=compactFromU8aLim(e);if(n>MAX_LENGTH$2)throw new Error(`Vec length ${n.toString()} exceeds ${MAX_LENGTH$2}`);return[e,n,t]}function decodeVec(r,e,t,n,s){if(Array.isArray(t)){const i=e.length;for(let a=0;a<i;a++){const o=t[a];try{e[a]=o instanceof s?o:new s(r,o)}catch(c){throw l$e.error(`Unable to decode on index ${a}`,c.message),c}}return[0,0]}return decodeU8aVec(r,e,u8aToU8a(t),n,s)}var qt;const Ts=class extends AbstractArray{constructor(t,n,s=[],{definition:i,setDefinition:a=noopSetDefinition$2}={}){const[o,c,h]=decodeVecLength(s);super(t,c);_(this,qt,void 0);Q(this,qt,i||a(typeToConstructor(t,n))),this.initialU8aLength=(isU8a(o)?decodeU8aVec(t,this,o,h,b(this,qt)):decodeVec(t,this,o,h,b(this,qt)))[0]}static with(t){let n;const s=i=>n=i;return class extends Ts{constructor(i,a){super(i,t,a,{definition:n,setDefinition:s})}}}get Type(){return b(this,qt).name}indexOf(t){const n=t instanceof b(this,qt)?t:new(b(this,qt))(this.registry,t);for(let s=0;s<this.length;s++)if(n.eq(this[s]))return s;return-1}toRawType(){return`Vec<${this.registry.getClassName(b(this,qt))||new(b(this,qt))(this.registry).toRawType()}>`}};let Vec=Ts;qt=new WeakMap;function noopSetDefinition$1(r){return r}var mr;const Ps=class extends AbstractArray{constructor(t,n,s,i=[],{definition:a,setDefinition:o=noopSetDefinition$1}={}){super(t,s);_(this,mr,void 0);Q(this,mr,a||o(typeToConstructor(t,n))),this.initialU8aLength=(isU8a(i)?decodeU8aVec(t,this,i,0,b(this,mr)):decodeVec(t,this,i,0,b(this,mr)))[1]}static with(t,n){let s;const i=a=>s=a;return class extends Ps{constructor(a,o){super(a,t,n,o,{definition:s,setDefinition:i})}}}get Type(){return new(b(this,mr))(this.registry).toRawType()}get encodedLength(){let t=0;for(let n=0;n<this.length;n++)t+=this[n].encodedLength;return t}inspect(){return{inner:this.inspectInner()}}toU8a(){const t=this.toU8aInner();return t.length?u8aConcatStrict(t):new Uint8Array([])}toRawType(){return`[${this.Type};${this.length}]`}};let VecFixed=Ps;mr=new WeakMap;class Raw extends Uint8Array{static get[Symbol.species](){return Uint8Array}constructor(e,t,n){super(u8aToU8a(t)),this.registry=e,this.initialU8aLength=n}get encodedLength(){return this.length}get hash(){return this.registry.hash(this.toU8a())}get isAscii(){return isAscii(this)}get isEmpty(){return!this.length||isUndefined(this.find(e=>!!e))}get isUtf8(){return isUtf8(this)}bitLength(){return this.length*8}eq(e){return e instanceof Uint8Array?this.length===e.length&&!this.some((t,n)=>t!==e[n]):this.eq(u8aToU8a(e))}inspect(){return{outer:[this.toU8a()]}}toHex(){return u8aToHex(this)}toHuman(){if(this.isAscii){const e=this.toUtf8();if(isAscii(e))return e}return this.toJSON()}toJSON(){return this.toHex()}toRawType(){return"Raw"}toString(){return this.toHex()}toU8a(e){return Uint8Array.from(this)}toUtf8(){if(!this.isUtf8)throw new Error("The character sequence is not a valid Utf8 string");return u8aToString(this)}}function decodeBitVecU8a(r){if(!r||!r.length)return[0,new Uint8Array];const[e,t]=compactFromU8aLim(r),n=e+Math.ceil(t/8);if(n>r.length)throw new Error(`BitVec: required length less than remainder, expected at least ${n}, found ${r.length}`);return[t,r.subarray(e,n)]}function decodeBitVec(r){if(Array.isArray(r)||isString(r)){const e=u8aToU8a(r);return[e.length/8,e]}return decodeBitVecU8a(r)}var yr,Tn;class BitVec extends Raw{constructor(t,n,s=!1){const[i,a]=decodeBitVec(n);super(t,a);_(this,yr,void 0);_(this,Tn,void 0);Q(this,yr,i),Q(this,Tn,s)}get encodedLength(){return this.length+compactToU8a(b(this,yr)).length}inspect(){return{outer:[compactToU8a(b(this,yr)),super.toU8a()]}}toHuman(){return`0b${[...this.toU8a(!0)].map(t=>`00000000${t.toString(2)}`.slice(-8)).map(t=>b(this,Tn)?t:t.split("").reverse().join("")).join("_")}`}toRawType(){return"BitVec"}toU8a(t){const n=super.toU8a();return t?n:u8aConcatStrict([compactToU8a(b(this,yr)),n])}}yr=new WeakMap,Tn=new WeakMap;function noopSetDefinition(r){return r}function decodeStructFromObject(r,[e,t],n,s){let i;const a=Array.isArray(n),o=n instanceof Map;if(!a&&!o&&!isObject$2(n))throw new Error(`Struct: Cannot decode value ${stringify(n)} (typeof ${typeof n}), expected an input object, map or array`);if(a&&n.length!==t.length)throw new Error(`Struct: Unable to map ${stringify(n)} array to object with known keys ${t.join(", ")}`);const c=new Array(t.length);for(let h=0;h<t.length;h++){const p=t[h],x=s.get(p)||p,A=e[h];let k;try{if(a)k=n[h];else if(o)k=x&&n.get(x);else if(k=x&&n[x],isUndefined(k)){if(isUndefined(i)){const U=Object.entries(n);i={};for(let D=0;D<U.length;D++)i[stringCamelCase(U[D][0])]=U[D][1]}k=x&&i[x]}c[h]=[p,k instanceof A?k:new A(r,k)]}catch(U){let D=A.name;try{D=new A(r).toRawType()}catch{}throw new Error(`Struct: failed on ${x}: ${D}:: ${U.message}`)}}return[c,0]}var Pn,gr;const os=class extends Map{constructor(t,n,s,i=new Map,{definition:a,setDefinition:o=noopSetDefinition}={}){const c=a||o(mapToTypeMap(t,n)),[h,p]=isU8a(s)||isHex(s)?decodeU8aStruct(t,new Array(c[0].length),u8aToU8a(s),c):s instanceof os?[s,0]:decodeStructFromObject(t,c,s||{},i);super(h);_(this,Pn,void 0);_(this,gr,void 0);this.initialU8aLength=p,this.registry=t,Q(this,Pn,i),Q(this,gr,c)}static with(t,n){const s=Object.keys(t);let i;const a=o=>i=o;return class extends os{constructor(o,c){super(o,t,c,n,{definition:i,setDefinition:a}),objectProperties(this,s,h=>this.get(h))}}}get defKeys(){return b(this,gr)[1]}getT(t){return this.get(t)}get isEmpty(){for(const t of this.values())if(!t.isEmpty)return!1;return!0}get Type(){const t={},[n,s]=b(this,gr);for(let i=0;i<s.length;i++)t[s[i]]=new n[i](this.registry).toRawType();return t}get encodedLength(){let t=0;for(const n of this.values())t+=n.encodedLength;return t}get hash(){return this.registry.hash(this.toU8a())}eq(t){return compareMap(this,t)}get(t){return super.get(t)}getAtIndex(t){return this.toArray()[t]}inspect(t){const n=new Array;for(const[s,i]of this.entries())n.push(Je(Ve({},i.inspect(!t||isBoolean(t)?t:t[s])),{name:stringCamelCase(s)}));return{inner:n}}toArray(){return[...this.values()]}toHex(){return u8aToHex(this.toU8a())}toHuman(t){const n={};for(const[s,i]of this.entries())n[s]=i&&i.toHuman(t);return n}toJSON(){const t={};for(const[n,s]of this.entries()){const i=b(this,Pn).get(n)||n;t[i]=s&&s.toJSON()}return t}toRawType(){return stringify(typesToMap(this.registry,b(this,gr)))}toString(){return stringify(this.toJSON())}toU8a(t){const n=[];for(const[s,i]of this.entries())i&&isFunction$3(i.toU8a)&&n.push(i.toU8a(!t||isBoolean(t)?t:t[s]));return u8aConcatStrict(n)}};let Struct=os;Pn=new WeakMap,gr=new WeakMap;const l$d=logger("Map");function decodeMapFromU8a(r,e,t,n){const s=new Map,[i,a]=compactFromU8aLim(n),o=[];for(let p=0;p<a;p++)o.push(e,t);const[c,h]=decodeU8a$6(r,new Array(o.length),n.subarray(i),[o,[]]);for(let p=0;p<c.length;p+=2)s.set(c[p],c[p+1]);return[e,t,s,i+h]}function decodeMapFromMap(r,e,t,n){const s=new Map;for(const[i,a]of n.entries()){const o=e.prototype instanceof AbstractArray||e.prototype instanceof Struct||e.prototype instanceof Enum;try{s.set(i instanceof e?i:new e(r,o?JSON.parse(i):i),a instanceof t?a:new t(r,a))}catch(c){throw l$d.error("Failed to decode key or value:",c.message),c}}return[e,t,s,0]}function decodeMap(r,e,t,n){const s=typeToConstructor(r,e),i=typeToConstructor(r,t);if(n){if(isU8a(n)||isHex(n))return decodeMapFromU8a(r,s,i,u8aToU8a(n));if(n instanceof Map)return decodeMapFromMap(r,s,i,n);if(isObject$2(n))return decodeMapFromMap(r,s,i,new Map(Object.entries(n)))}else return[s,i,new Map,0];throw new Error("Map: cannot decode type")}var Fr,Lr,En;class CodecMap extends Map{constructor(t,n,s,i,a="HashMap"){const[o,c,h,p]=decodeMap(t,n,s,i);super(a==="BTreeMap"?sortMap(h):h);_(this,Fr,void 0);_(this,Lr,void 0);_(this,En,void 0);this.registry=t,this.initialU8aLength=p,Q(this,Fr,o),Q(this,Lr,c),Q(this,En,a)}get encodedLength(){let t=compactToU8a(this.size).length;for(const[n,s]of this.entries())t+=n.encodedLength+s.encodedLength;return t}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.size===0}eq(t){return compareMap(this,t)}inspect(){const t=new Array;for(const[n,s]of this.entries())t.push(n.inspect()),t.push(s.inspect());return{inner:t,outer:[compactToU8a(this.size)]}}toHex(){return u8aToHex(this.toU8a())}toHuman(t){const n={};for(const[s,i]of this.entries())n[s.toString()]=i.toHuman(t);return n}toJSON(){const t={};for(const[n,s]of this.entries())t[n.toString()]=s.toJSON();return t}toRawType(){return`${b(this,En)}<${this.registry.getClassName(b(this,Fr))||new(b(this,Fr))(this.registry).toRawType()},${this.registry.getClassName(b(this,Lr))||new(b(this,Lr))(this.registry).toRawType()}>`}toString(){return stringify(this.toJSON())}toU8a(t){const n=new Array;t||n.push(compactToU8a(this.size));for(const[s,i]of this.entries())n.push(s.toU8a(t),i.toU8a(t));return u8aConcatStrict(n)}}Fr=new WeakMap,Lr=new WeakMap,En=new WeakMap;class BTreeMap extends CodecMap{static with(e,t){return class extends BTreeMap{constructor(n,s){super(n,e,t,s,"BTreeMap")}}}}const l$c=logger("BTreeSet");function decodeSetFromU8a(r,e,t){const n=new Set,[s,i]=compactFromU8aLim(t),a=new Array(i),[o]=decodeU8aVec(r,a,t,s,e);for(let c=0;c<i;c++)n.add(a[c]);return[e,n,o]}function decodeSetFromSet(r,e,t){const n=new Set;return t.forEach(s=>{try{n.add(s instanceof e?s:new e(r,s))}catch(i){throw l$c.error("Failed to decode key or value:",i.message),i}}),[e,n,0]}function decodeSet$1(r,e,t){const n=typeToConstructor(r,e);if(t){if(isU8a(t)||isHex(t))return decodeSetFromU8a(r,n,u8aToU8a(t));if(Array.isArray(t)||t instanceof Set)return decodeSetFromSet(r,n,t)}else return[n,new Set,0];throw new Error("BTreeSet: cannot decode type")}var Dr;const Es=class extends Set{constructor(t,n,s){const[i,a,o]=decodeSet$1(t,n,s);super(sortSet(a));_(this,Dr,void 0);this.registry=t,this.initialU8aLength=o,Q(this,Dr,i)}static with(t){return class extends Es{constructor(n,s){super(n,t,s)}}}get encodedLength(){let t=compactToU8a(this.size).length;for(const n of this.values())t+=n.encodedLength;return t}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.size===0}get strings(){return[...super.values()].map(t=>t.toString())}eq(t){return compareSet(this,t)}inspect(){const t=new Array;for(const n of this.values())t.push(n.inspect());return{inner:t,outer:[compactToU8a(this.size)]}}toHex(){return u8aToHex(this.toU8a())}toHuman(t){const n=[];for(const s of this.values())n.push(s.toHuman(t));return n}toJSON(){const t=[];for(const n of this.values())t.push(n.toJSON());return t}toRawType(){return`BTreeSet<${this.registry.getClassName(b(this,Dr))||new(b(this,Dr))(this.registry).toRawType()}>`}toString(){return stringify(this.toJSON())}toU8a(t){const n=new Array;t||n.push(compactToU8a(this.size));for(const s of this.values())n.push(s.toU8a(t));return u8aConcatStrict(n)}};let BTreeSet=Es;Dr=new WeakMap;const MAX_LENGTH$1=10*1024*1024;function decodeBytesU8a(r){if(!r.length)return[new Uint8Array,0];const[e,t]=compactFromU8aLim(r),n=e+t;if(t>MAX_LENGTH$1)throw new Error(`Bytes length ${t.toString()} exceeds ${MAX_LENGTH$1}`);if(n>r.length)throw new Error(`Bytes: required length less than remainder, expected at least ${n}, found ${r.length}`);return[r.subarray(e,n),n]}class Bytes extends Raw{constructor(e,t){const[n,s]=isU8a(t)&&!(t instanceof Raw)?decodeBytesU8a(t):Array.isArray(t)||isString(t)?[u8aToU8a(t),0]:[t,0];super(e,n,s)}get encodedLength(){return this.length+compactToU8a(this.length).length}inspect(e){const t=compactToU8a(this.length);return{outer:e?[super.toU8a()]:this.length?[t,super.toU8a()]:[t]}}toRawType(){return"Bytes"}toU8a(e){return e?super.toU8a(e):compactAddLength(this)}}class HashMap extends CodecMap{static with(e,t){return class extends HashMap{constructor(n,s){super(n,e,t,s)}}}}class bool extends Boolean{constructor(e,t=!1){super(isU8a(t)?t[0]===1:t instanceof Boolean?t.valueOf():!!t),this.registry=e}get encodedLength(){return 1}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isFalse}get isFalse(){return!this.isTrue}get isTrue(){return this.valueOf()}eq(e){return this.valueOf()===(e instanceof Boolean?e.valueOf():e)}inspect(){return{outer:[this.toU8a()]}}toHex(){return u8aToHex(this.toU8a())}toHuman(){return this.toJSON()}toJSON(){return this.valueOf()}toRawType(){return"bool"}toString(){return this.toJSON().toString()}toU8a(e){return new Uint8Array([this.valueOf()?1:0])}}function decodeU8a$5(r,e){return e[0]===0?null:new bool(r,e[0]===1)}class OptionBool extends Option{constructor(e,t){super(e,bool,isU8a(t)||isHex(t)?decodeU8a$5(e,u8aToU8a(t)):t),this.initialU8aLength=1}get encodedLength(){return 1}get isFalse(){return this.isSome?!this.value.valueOf():!1}get isTrue(){return this.isSome?this.value.valueOf():!1}inspect(){return{outer:[this.toU8a()]}}toRawType(e){return e?"bool":"Option<bool>"}toU8a(e){return e?super.toU8a(!0):this.isSome?new Uint8Array([this.isTrue?1:2]):new Uint8Array([0])}}var An;const As=class extends Tuple{constructor(t,n,s,{rangeName:i="Range"}={}){super(t,[n,n],s);_(this,An,void 0);Q(this,An,i)}static with(t){return class extends As{constructor(n,s){super(n,t,s)}}}get start(){return this[0]}get end(){return this[1]}toRawType(){return`${b(this,An)}<${this.start.toRawType()}>`}};let Range=As;An=new WeakMap;class RangeInclusive extends Range{constructor(e,t,n){super(e,t,n,{rangeName:"RangeInclusive"})}static with(e){return class extends RangeInclusive{constructor(t,n){super(t,e,n)}}}}const MAX_LENGTH=128*1024;function decodeText(r){if(isU8a(r)){if(!r.length)return["",0];if(r instanceof Raw)return[u8aToString(r),0];const[e,t]=compactFromU8aLim(r),n=e+t;if(t>MAX_LENGTH)throw new Error(`Text: length ${t.toString()} exceeds ${MAX_LENGTH}`);if(n>r.length)throw new Error(`Text: required length less than remainder, expected at least ${n}, found ${r.length}`);return[u8aToString(r.subarray(e,n)),n]}else if(isHex(r))return[u8aToString(hexToU8a(r)),0];return[r?r.toString():"",0]}var Cn;class Text extends String{constructor(t,n){const[s,i]=decodeText(n);super(s);_(this,Cn,null);this.registry=t,this.initialU8aLength=i}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.length===0}get length(){return super.length}eq(t){return isString(t)?this.toString()===t.toString():!1}inspect(){const t=stringToU8a(super.toString());return{outer:t.length?[compactToU8a(t.length),t]:[compactToU8a(t.length)]}}setOverride(t){Q(this,Cn,t)}toHex(){return u8aToHex(this.toU8a(!0))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toRawType(){return"Text"}toString(){return b(this,Cn)||super.toString()}toU8a(t){const n=stringToU8a(super.toString());return t?n:compactAddLength(n)}}Cn=new WeakMap;class Type extends Text{constructor(e,t=""){super(e,t),this.setOverride(sanitize(this.toString()))}toRawType(){return"Type"}}function decodeU8aFixed(r,e){const t=u8aToU8a(r),n=e/8;if(!t.length)return[new Uint8Array(n),0];if(isU8a(r)?t.length<n:t.length!==n)throw new Error(`Expected input with ${n} bytes (${e} bits), found ${t.length} bytes`);return[t.subarray(0,n),n]}class U8aFixed extends Raw{constructor(e,t=new Uint8Array,n=256){const[s,i]=decodeU8aFixed(t,n);super(e,s,i)}static with(e,t){return class extends U8aFixed{constructor(n,s){super(n,s,e)}toRawType(){return t||super.toRawType()}}}toRawType(){return`[u8;${this.length}]`}}function decodeRaw(r,e,t){const n=typeToConstructor(r,e);if(isU8a(t)||isHex(t))try{const[,i]=isHex(t)||t instanceof Raw?[0,t]:compactStripLength(t);return[n,new n(r,i),t]}catch{return[n,null,t]}const s=new n(r,t);return[n,s,compactAddLength(s.toU8a())]}var zr,Ht,jr;const Cs=class extends Bytes{constructor(t,n,s,{opaqueName:i="WrapperKeepOpaque"}={}){const[a,o,c]=decodeRaw(t,n,s);super(t,c);_(this,zr,void 0);_(this,Ht,void 0);_(this,jr,void 0);Q(this,zr,a),Q(this,Ht,o),Q(this,jr,i)}static with(t){return class extends Cs{constructor(n,s){super(n,t,s)}}}get isDecoded(){return!!b(this,Ht)}inspect(){return b(this,Ht)?{inner:[b(this,Ht).inspect()],outer:[compactToU8a(this.length)]}:{outer:[compactToU8a(this.length),this.toU8a(!0)]}}toHuman(t){return b(this,Ht)?b(this,Ht).toHuman(t):super.toHuman()}toRawType(){return`${b(this,jr)}<${this.registry.getClassName(b(this,zr))||(b(this,Ht)?b(this,Ht).toRawType():new(b(this,zr))(this.registry).toRawType())}>`}toString(){return b(this,Ht)?b(this,Ht).toString():super.toString()}unwrap(){if(!b(this,Ht))throw new Error(`${b(this,jr)}: unwrapping an undecodable value`);return b(this,Ht)}};let WrapperKeepOpaque=Cs;zr=new WeakMap,Ht=new WeakMap,jr=new WeakMap;class WrapperOpaque extends WrapperKeepOpaque{constructor(e,t,n){super(e,t,n,{opaqueName:"WrapperOpaque"})}static with(e){return class extends WrapperOpaque{constructor(t,n){super(t,e,n)}}}get inner(){return this.unwrap()}}var qr;const ks=class extends Number{constructor(t,n,{bitLength:s=32}={}){super(isU8a(n)||isHex(n)?n.length===0?0:u8aToFloat(u8aToU8a(n),{bitLength:s}):n||0);_(this,qr,void 0);Q(this,qr,s),this.encodedLength=s/8,this.initialU8aLength=this.encodedLength,this.registry=t}static with(t){return class extends ks{constructor(n,s){super(n,s,{bitLength:t})}}}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.valueOf()===0}eq(t){return this.valueOf()===Number(t)}inspect(){return{outer:[this.toU8a()]}}toHex(){return u8aToHex(this.toU8a())}toHuman(){return this.toString()}toJSON(){return this.toHex()}toNumber(){return this.valueOf()}toRawType(){return`f${b(this,qr)}`}toU8a(){return floatToU8a(this,{bitLength:b(this,qr)})}};let Float=ks;qr=new WeakMap;function decodeJson(r){return Object.entries(r||{})}class Json extends Map{constructor(e,t){const n=decodeJson(t);super(n),this.registry=e,objectProperties(this,n.map(([s])=>s),s=>this.get(s))}get encodedLength(){return 0}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return[...this.keys()].length===0}eq(e){return compareMap(this,e)}getT(e){return this.get(e)}inspect(){throw new Error("Unimplemented")}toHex(){throw new Error("Unimplemented")}toHuman(){return[...this.entries()].reduce((e,[t,n])=>(e[t]=isFunction$3(n.toHuman)?n.toHuman():n,e),{})}toJSON(){return[...this.entries()].reduce((e,[t,n])=>(e[t]=n,e),{})}toRawType(){return"Json"}toString(){return stringify(this.toJSON())}toU8a(e){throw new Error("Unimplemented")}}function encodeSet(r,e){const t=new BN(0);for(let n=0;n<e.length;n++)t.ior(bnToBn(r[e[n]]||0));return t}function decodeSetArray(r,e){const t=new Array(e.length);for(let n=0;n<e.length;n++){const s=e[n];if(isUndefined(r[s]))throw new Error(`Set: Invalid key '${s}' passed to Set, allowed ${Object.keys(r).join(", ")}`);t[n]=s}return t}function decodeSetNumber(r,e){const t=bnToBn(e),n=Object.keys(r),s=[];for(let a=0;a<n.length;a++){const o=n[a];t.and(bnToBn(r[o])).eq(bnToBn(r[o]))&&s.push(o)}const i=encodeSet(r,s);if(!t.eq(i))throw new Error(`Set: Mismatch decoding '${t.toString()}', computed as '${i.toString()}' with ${s.join(", ")}`);return s}function decodeSet(r,e=0,t){if(t%8!==0)throw new Error(`Expected valid bitLength, power of 8, found ${t}`);const n=t/8;if(isU8a(e))return e.length===0?[]:decodeSetNumber(r,u8aToBn(e.subarray(0,n),{isLe:!0}));if(isString(e))return decodeSet(r,u8aToU8a(e),n);if(e instanceof Set||Array.isArray(e)){const s=Array.isArray(e)?e:[...e.values()];return decodeSetArray(r,s)}return decodeSetNumber(r,e)}var sr,Xr;const Is=class extends Set{constructor(t,n,s,i=8){super(decodeSet(n,s,i));_(this,sr,void 0);_(this,Xr,void 0);Ae(this,"add",t=>{if(b(this,sr)&&isUndefined(b(this,sr)[t]))throw new Error(`Set: Invalid key '${t}' on add`);return super.add(t),this});this.registry=t,Q(this,sr,n),Q(this,Xr,i/8)}static with(t,n){const s=Object.keys(t),i=new Array(s.length);for(let a=0;a<s.length;a++)i[a]=`is${stringPascalCase(s[a])}`;return class extends Is{constructor(a,o){super(a,t,o,n),objectProperties(this,i,(c,h)=>this.strings.includes(s[h]))}}}get encodedLength(){return b(this,Xr)}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.size===0}get strings(){return[...super.values()]}get valueEncoded(){return encodeSet(b(this,sr),this.strings)}eq(t){return Array.isArray(t)?compareArray(this.strings.sort(),t.sort()):t instanceof Set?this.eq([...t.values()]):isNumber(t)||isBn(t)?this.valueEncoded.eq(bnToBn(t)):!1}inspect(){return{outer:[this.toU8a()]}}toHex(){return u8aToHex(this.toU8a())}toHuman(){return this.toJSON()}toJSON(){return this.strings}toNumber(){return this.valueEncoded.toNumber()}toRawType(){return stringify({_set:b(this,sr)})}toString(){return`[${this.strings.join(", ")}]`}toU8a(t){return bnToU8a(this.valueEncoded,{bitLength:b(this,Xr)*8,isLe:!0})}};let CodecSet=Is;sr=new WeakMap,Xr=new WeakMap;class f32 extends Float.with(32){constructor(){super(...arguments);Ae(this,"__FloatType","f32")}}class f64 extends Float.with(64){constructor(){super(...arguments);Ae(this,"__FloatType","f64")}}class i8 extends Int.with(8){constructor(){super(...arguments);Ae(this,"__IntType","i8")}}class i16 extends Int.with(16){constructor(){super(...arguments);Ae(this,"__IntType","i16")}}class i32 extends Int.with(32){constructor(){super(...arguments);Ae(this,"__IntType","i32")}}class i64 extends Int.with(64){constructor(){super(...arguments);Ae(this,"__IntType","i64")}}class i128 extends Int.with(128){constructor(){super(...arguments);Ae(this,"__IntType","i128")}}class i256 extends Int.with(256){constructor(){super(...arguments);Ae(this,"__IntType","i256")}}class u8 extends UInt.with(8){constructor(){super(...arguments);Ae(this,"__UIntType","u8")}}class u16 extends UInt.with(16){constructor(){super(...arguments);Ae(this,"__UIntType","u16")}}class u32 extends UInt.with(32){constructor(){super(...arguments);Ae(this,"__UIntType","u32")}}class u64 extends UInt.with(64){constructor(){super(...arguments);Ae(this,"__UIntType","u64")}}class u128 extends UInt.with(128){constructor(){super(...arguments);Ae(this,"__UIntType","u128")}}class u256 extends UInt.with(256){constructor(){super(...arguments);Ae(this,"__UIntType","u256")}}class usize extends u32{constructor(e,t){throw super(e,t),new Error("The `usize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally u64) and WASM (always u32) code. Use one of the `u32` or `u64` types explicitly.")}}function typeSplit(r){const e=[];let t=0,n=0,s=0,i=0,a=0;for(let o=0;o<r.length;o++)switch(r[o]){case",":{t||n||s||i||(e.push(r.substring(a,o).trim()),a=o+1);break}case"<":t++;break;case">":t--;break;case"[":n++;break;case"]":n--;break;case"{":s++;break;case"}":s--;break;case"(":i++;break;case")":i--;break}if(t||n||s||i)throw new Error(`Invalid definition (missing terminators) found in ${r}`);return e.push(r.substring(a,r.length).trim()),e}const KNOWN_INTERNALS=["_alias","_fallback"];function getTypeString(r){return isString(r)?r.toString():JSON.stringify(r)}function isRustEnum(r){const e=Object.values(r);if(e.some(t=>isNumber(t))){if(!e.every(t=>isNumber(t)&&t>=0&&t<=255))throw new Error("Invalid number-indexed enum definition");return!1}return!0}function _decodeEnum(r,e,t,n){return r.info=TypeDefInfo.Enum,r.fallbackType=n,Array.isArray(e)?r.sub=e.map((s,i)=>({index:i,info:TypeDefInfo.Plain,name:s,type:"Null"})):isRustEnum(e)?r.sub=Object.entries(e).map(([s,i],a)=>objectSpread({},getTypeDef(getTypeString(i||"Null"),{name:s},t),{index:a})):r.sub=Object.entries(e).map(([s,i])=>({index:i,info:TypeDefInfo.Plain,name:s,type:"Null"})),r}function _decodeSet(r,e,t){return r.info=TypeDefInfo.Set,r.fallbackType=t,r.length=e._bitLength,r.sub=Object.entries(e).filter(([n])=>!n.startsWith("_")).map(([n,s])=>({index:s,info:TypeDefInfo.Plain,name:n,type:"Null"})),r}function _decodeStruct(r,e,t,n){const s=JSON.parse(e),i=Object.keys(s);return i.includes("_enum")?_decodeEnum(r,s._enum,n,s._fallback):i.includes("_set")?_decodeSet(r,s._set,s._fallback):(r.alias=s._alias?new Map(Object.entries(s._alias)):void 0,r.fallbackType=s._fallback,r.sub=i.filter(a=>!KNOWN_INTERNALS.includes(a)).map(a=>getTypeDef(getTypeString(s[a]),{name:a},n)),r)}function _decodeFixedVec(r,e,t,n){const s=e.length-1;let i=-1,a=0;for(let x=1;x<s&&i===-1;x++)switch(e[x]){case";":{a===0&&(i=x);break}case"[":case"(":case"<":a++;break;case"]":case")":case">":a--;break}if(i===-1)throw new Error(`${e}: Unable to extract location of ';'`);const o=e.substring(1,i),[c,h]=e.substring(i+1,s).split(";"),p=parseInt(c.trim(),10);if(p>2048)throw new Error(`${e}: Only support for [Type; <length>], where length <= 2048`);return r.displayName=h,r.length=p,r.sub=getTypeDef(o,{},n),r}function _decodeTuple(r,e,t,n){return r.sub=t.length===0?[]:typeSplit(t).map(s=>getTypeDef(s,{},n)),r}function _decodeAnyInt(r,e,t,n){const[s,i]=e.substring(n.length+1,e.length-1).split(","),a=parseInt(s.trim(),10);if(a>8192||a%8)throw new Error(`${e}: Only support for ${n}<bitLength>, where length <= 8192 and a power of 8, found ${a}`);return r.displayName=i,r.length=a,r}function _decodeInt(r,e,t){return _decodeAnyInt(r,e,t,"Int")}function _decodeUInt(r,e,t){return _decodeAnyInt(r,e,t,"UInt")}function _decodeDoNotConstruct(r,e,t){return r.displayName=e.substring(14+1,e.length-1),r}function hasWrapper(r,[e,t]){return r.substring(0,e.length)===e&&r.slice(-1*t.length)===t}const nestedExtraction=[["[","]",TypeDefInfo.VecFixed,_decodeFixedVec],["{","}",TypeDefInfo.Struct,_decodeStruct],["(",")",TypeDefInfo.Tuple,_decodeTuple],["BTreeMap<",">",TypeDefInfo.BTreeMap,_decodeTuple],["HashMap<",">",TypeDefInfo.HashMap,_decodeTuple],["Int<",">",TypeDefInfo.Int,_decodeInt],["Result<",">",TypeDefInfo.Result,_decodeTuple],["UInt<",">",TypeDefInfo.UInt,_decodeUInt],["DoNotConstruct<",">",TypeDefInfo.DoNotConstruct,_decodeDoNotConstruct]],wrappedExtraction=[["BTreeSet<",">",TypeDefInfo.BTreeSet],["Compact<",">",TypeDefInfo.Compact],["Linkage<",">",TypeDefInfo.Linkage],["Option<",">",TypeDefInfo.Option],["Range<",">",TypeDefInfo.Range],["RangeInclusive<",">",TypeDefInfo.RangeInclusive],["Vec<",">",TypeDefInfo.Vec],["WrapperKeepOpaque<",">",TypeDefInfo.WrapperKeepOpaque],["WrapperOpaque<",">",TypeDefInfo.WrapperOpaque]];function extractSubType(r,[e,t]){return r.substring(e.length,r.length-t.length)}function getTypeDef(r,{displayName:e,name:t}={},n=0){const s=sanitize(r),i={displayName:e,info:TypeDefInfo.Plain,name:t,type:s};if(++n>64)throw new Error("getTypeDef: Maximum nested limit reached");const a=nestedExtraction.find(c=>hasWrapper(s,c));if(a)return i.info=a[2],a[3](i,s,extractSubType(s,a),n);const o=wrappedExtraction.find(c=>hasWrapper(s,c));return o&&(i.info=o[2],i.sub=getTypeDef(extractSubType(s,o),{},n)),i}function getTypeDefType({lookupName:r,type:e}){return r||e}function getSubDefArray(r){if(!Array.isArray(r.sub))throw new Error(`Expected subtype as TypeDef[] in ${stringify(r)}`);return r.sub}function getSubDef(r){if(!r.sub||Array.isArray(r.sub))throw new Error(`Expected subtype as TypeDef in ${stringify(r)}`);return r.sub}function getSubType(r){return getTypeDefType(getSubDef(r))}function getTypeClassMap(r){const e=getSubDefArray(r),t={};for(let n=0;n<e.length;n++)t[e[n].name]=getTypeDefType(e[n]);return t}function getTypeClassArray(r){return getSubDefArray(r).map(getTypeDefType)}function createInt(r,{displayName:e,length:t}){if(!isNumber(t))throw new Error(`Expected bitLength information for ${e||r.constructor.name}<bitLength>`);return r.with(t,e)}function createHashMap(r,e){const[t,n]=getTypeClassArray(e);return r.with(t,n)}function createWithSub(r,e){return r.with(getSubType(e))}const infoMapping={[TypeDefInfo.BTreeMap]:(r,e)=>createHashMap(BTreeMap,e),[TypeDefInfo.BTreeSet]:(r,e)=>createWithSub(BTreeSet,e),[TypeDefInfo.Compact]:(r,e)=>createWithSub(Compact,e),[TypeDefInfo.DoNotConstruct]:(r,e)=>DoNotConstruct.with(e.displayName||e.type),[TypeDefInfo.Enum]:(r,e)=>{const t=getSubDefArray(e);return Enum.with(t.every(({type:n})=>n==="Null")?t.reduce((n,{index:s,name:i},a)=>(n[i]=s||a,n),{}):getTypeClassMap(e))},[TypeDefInfo.HashMap]:(r,e)=>createHashMap(HashMap,e),[TypeDefInfo.Int]:(r,e)=>createInt(Int,e),[TypeDefInfo.Linkage]:(r,e)=>{const t=`Option<${getSubType(e)}>`,n=Struct.with({previous:t,next:t});return n.prototype.toRawType=function(){return`Linkage<${this.next.toRawType(!0)}>`},n},[TypeDefInfo.Null]:(r,e)=>Null,[TypeDefInfo.Option]:(r,e)=>{if(!e.sub||Array.isArray(e.sub))throw new Error("Expected type information for Option");return createWithSub(Option,e)},[TypeDefInfo.Plain]:(r,e)=>r.getOrUnknown(e.type),[TypeDefInfo.Range]:(r,e)=>createWithSub(Range,e),[TypeDefInfo.RangeInclusive]:(r,e)=>createWithSub(RangeInclusive,e),[TypeDefInfo.Result]:(r,e)=>{const[t,n]=getTypeClassArray(e);return Result.with({Err:n,Ok:t})},[TypeDefInfo.Set]:(r,e)=>CodecSet.with(getSubDefArray(e).reduce((t,{index:n,name:s})=>(t[s]=n,t),{}),e.length),[TypeDefInfo.Si]:(r,e)=>getTypeClass(r,r.lookup.getTypeDef(e.type)),[TypeDefInfo.Struct]:(r,e)=>Struct.with(getTypeClassMap(e),e.alias),[TypeDefInfo.Tuple]:(r,e)=>Tuple.with(getTypeClassArray(e)),[TypeDefInfo.UInt]:(r,e)=>createInt(UInt,e),[TypeDefInfo.Vec]:(r,{sub:e})=>{if(!e||Array.isArray(e))throw new Error("Expected type information for vector");return e.type==="u8"?Bytes:Vec.with(getTypeDefType(e))},[TypeDefInfo.VecFixed]:(r,{displayName:e,length:t,sub:n})=>{if(!isNumber(t)||!n||Array.isArray(n))throw new Error("Expected length & type information for fixed vector");return n.type==="u8"?U8aFixed.with(t*8,e):VecFixed.with(getTypeDefType(n),t)},[TypeDefInfo.WrapperKeepOpaque]:(r,e)=>createWithSub(WrapperKeepOpaque,e),[TypeDefInfo.WrapperOpaque]:(r,e)=>createWithSub(WrapperOpaque,e)};function constructTypeClass(r,e){try{const t=infoMapping[e.info](r,e);if(!t)throw new Error("No class created");return!t.__fallbackType&&e.fallbackType&&(t.__fallbackType=e.fallbackType),t}catch(t){throw new Error(`Unable to construct class from ${stringify(e)}: ${t.message}`)}}function getTypeClass(r,e){return r.getUnsafe(e.type,!1,e)}function createClassUnsafe(r,e){return r.getUnsafe(e)||getTypeClass(r,r.isLookupType(e)?r.lookup.getTypeDef(e):getTypeDef(e))}function checkInstance(r,e){const t=r.toU8a(),n=r.toRawType();if(!(u8aEq(t,e)||["Bytes","Text","Type"].includes(n)&&e.length===r.length||r.isEmpty&&e.every(i=>!i)))throw new Error(`${n}:: Decoded input doesn't match input, received ${u8aToHex(e,512)} (${e.length} bytes), created ${u8aToHex(t,512)} (${t.length} bytes)`)}function checkPedantic(r,[e]){isU8a(e)?checkInstance(r,e):isHex(e)&&checkInstance(r,u8aToU8a(e))}function initType(r,e,t=[],{blockHash:n,isOptional:s,isPedantic:i}={}){const a=new(s?Option.with(e):e)(r,...t);return i&&checkPedantic(a,t),n&&(a.createdAtHash=createTypeUnsafe(r,"Hash",[n])),a}function createTypeUnsafe(r,e,t=[],n={}){let s=null,i=null;try{return s=createClassUnsafe(r,e),initType(r,s,t,n)}catch(a){i=new Error(`createType(${e}):: ${a.message}`)}if(s&&s.__fallbackType)try{return s=createClassUnsafe(r,s.__fallbackType),initType(r,s,t,n)}catch{}throw i}const stringIdentity=r=>r.toString(),INFO_WRAP=["BTreeMap","BTreeSet","Compact","HashMap","Option","Result","Vec"];function paramsNotation(r,e,t=stringIdentity){return`${r}${e?`<${(Array.isArray(e)?e:[e]).map(t).join(", ")}>`:""}`}function encodeWithParams(r,e,t){const{info:n,sub:s}=e;switch(n){case TypeDefInfo.BTreeMap:case TypeDefInfo.BTreeSet:case TypeDefInfo.Compact:case TypeDefInfo.HashMap:case TypeDefInfo.Linkage:case TypeDefInfo.Option:case TypeDefInfo.Range:case TypeDefInfo.RangeInclusive:case TypeDefInfo.Result:case TypeDefInfo.Vec:case TypeDefInfo.WrapperKeepOpaque:case TypeDefInfo.WrapperOpaque:return paramsNotation(t,s,i=>encodeTypeDef(r,i))}throw new Error(`Unable to encode ${stringify(e)} with params`)}function encodeSubTypes(r,e,t,n){const s=e.map(({name:a})=>a);if(!s.every(a=>!!a))throw new Error(`Subtypes does not have consistent names, ${s.join(", ")}`);const i=objectSpread({},n);for(let a=0;a<e.length;a++){const o=e[a];i[o.name]=encodeTypeDef(r,o)}return stringify(t?{_enum:i}:i)}const encoders={[TypeDefInfo.BTreeMap]:(r,e)=>encodeWithParams(r,e,"BTreeMap"),[TypeDefInfo.BTreeSet]:(r,e)=>encodeWithParams(r,e,"BTreeSet"),[TypeDefInfo.Compact]:(r,e)=>encodeWithParams(r,e,"Compact"),[TypeDefInfo.DoNotConstruct]:(r,{displayName:e,lookupIndex:t,lookupName:n})=>`DoNotConstruct<${n||e||(isUndefined(t)?"Unknown":r.createLookupType(t))}>`,[TypeDefInfo.Enum]:(r,{sub:e})=>{if(!Array.isArray(e))throw new Error("Unable to encode Enum type");return e.every(({type:t})=>t==="Null")?stringify({_enum:e.map(({name:t},n)=>`${t||`Empty${n}`}`)}):encodeSubTypes(r,e,!0)},[TypeDefInfo.HashMap]:(r,e)=>encodeWithParams(r,e,"HashMap"),[TypeDefInfo.Int]:(r,{length:e=32})=>`Int<${e}>`,[TypeDefInfo.Linkage]:(r,e)=>encodeWithParams(r,e,"Linkage"),[TypeDefInfo.Null]:(r,e)=>"Null",[TypeDefInfo.Option]:(r,e)=>encodeWithParams(r,e,"Option"),[TypeDefInfo.Plain]:(r,{displayName:e,type:t})=>e||t,[TypeDefInfo.Range]:(r,e)=>encodeWithParams(r,e,"Range"),[TypeDefInfo.RangeInclusive]:(r,e)=>encodeWithParams(r,e,"RangeInclusive"),[TypeDefInfo.Result]:(r,e)=>encodeWithParams(r,e,"Result"),[TypeDefInfo.Set]:(r,{length:e=8,sub:t})=>{if(!Array.isArray(t))throw new Error("Unable to encode Set type");return stringify({_set:t.reduce((n,{index:s,name:i},a)=>objectSpread(n,{[`${i||`Unknown${s||a}`}`]:s||a}),{_bitLength:e||8})})},[TypeDefInfo.Si]:(r,{lookupName:e,type:t})=>e||t,[TypeDefInfo.Struct]:(r,{alias:e,sub:t})=>{if(!Array.isArray(t))throw new Error("Unable to encode Struct type");return encodeSubTypes(r,t,!1,e?{_alias:[...e.entries()].reduce((n,[s,i])=>objectSpread(n,{[s]:i}),{})}:{})},[TypeDefInfo.Tuple]:(r,{sub:e})=>{if(!Array.isArray(e))throw new Error("Unable to encode Tuple type");return`(${e.map(t=>encodeTypeDef(r,t)).join(",")})`},[TypeDefInfo.UInt]:(r,{length:e=32})=>`UInt<${e}>`,[TypeDefInfo.Vec]:(r,e)=>encodeWithParams(r,e,"Vec"),[TypeDefInfo.VecFixed]:(r,{length:e,sub:t})=>{if(!isNumber(e)||!t||Array.isArray(t))throw new Error("Unable to encode VecFixed type");return`[${t.type};${e}]`},[TypeDefInfo.WrapperKeepOpaque]:(r,e)=>encodeWithParams(r,e,"WrapperKeepOpaque"),[TypeDefInfo.WrapperOpaque]:(r,e)=>encodeWithParams(r,e,"WrapperOpaque")};function encodeType(r,e,t=!0){return t&&e.lookupName?e.lookupName:encoders[e.info](r,e)}function encodeTypeDef(r,e){return e.displayName&&!INFO_WRAP.some(t=>e.displayName===t)?e.displayName:encodeType(r,e)}function withTypeString(r,e){return objectSpread({},e,{type:encodeType(r,e,!1)})}const XCM_MAPPINGS=["AssetInstance","Fungibility","Junction","Junctions","MultiAsset","MultiAssetFilter","MultiLocation","Response","WildFungibility","WildMultiAsset","Xcm","XcmError","XcmOrder"];function mapXcmTypes(r){return XCM_MAPPINGS.reduce((e,t)=>objectSpread(e,{[t]:`${t}${r}`}),{})}const v0={FungibilityV0:"FungibilityV1",WildFungibilityV0:"WildFungibilityV1",AssetInstanceV0:{_enum:{Undefined:"Null",Index8:"u8",Index16:"Compact<u16>",Index32:"Compact<u32>",Index64:"Compact<u64>",Index128:"Compact<u128>",Array4:"[u8; 4]",Array8:"[u8; 8]",Array16:"[u8; 16]",Array32:"[u8; 32]",Blob:"Vec<u8>"}},JunctionV0:{_enum:{Parent:"Null",Parachain:"Compact<u32>",AccountId32:{network:"NetworkId",id:"AccountId"},AccountIndex64:{network:"NetworkId",index:"Compact<u64>"},AccountKey20:{network:"NetworkId",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Vec<u8>",OnlyChild:"Null",Plurality:{id:"BodyId",part:"BodyPart"}}},MultiAssetV0:{_enum:{None:"Null",All:"Null",AllFungible:"Null",AllNonFungible:"Null",AllAbstractFungible:"Vec<u8>",AllAbstractNonFungible:"Vec<u8>",AllConcreteFungible:"MultiLocationV0",AllConcreteNonFungible:"MultiLocationV0",AbstractFungible:{id:"Vec<u8>",instance:"Compact<u128>"},AbstractNonFungible:{class:"Vec<u8>",instance:"AssetInstanceV0"},ConcreteFungible:{id:"MultiLocationV0",amount:"Compact<u128>"},ConcreteNonFungible:{class:"MultiLocationV0",instance:"AssetInstanceV0"}}},MultiLocationV0:{_enum:{Here:"Null",X1:"JunctionV0",X2:"(JunctionV0, JunctionV0)",X3:"(JunctionV0, JunctionV0, JunctionV0)",X4:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X5:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X6:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X7:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X8:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)"}},OriginKindV0:{_enum:["Native","SovereignAccount","Superuser","Xcm"]},ResponseV0:{_enum:{Assets:"Vec<MultiAssetV0>"}},XcmV0:{_enum:{WithdrawAsset:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},ReserveAssetDeposit:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},ReceiveTeleportedAsset:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},QueryResponse:{queryId:"Compact<u64>",response:"ResponseV0"},TransferAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0"},TransferReserveAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},RelayedFrom:{who:"MultiLocationV0",message:"XcmV0"}}},XcmErrorV0:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",SendFailed:"Null",CannotReachDestination:"(MultiLocation, Xcm)",MultiLocationFull:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",RecursionLimitReached:"Null"}},XcmOrderV0:{_enum:{Null:"Null",DepositAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0"},DepositReserveAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},ExchangeAsset:{give:"Vec<MultiAssetV0>",receive:"Vec<MultiAssetV0>"},InitiateReserveWithdraw:{assets:"Vec<MultiAssetV0>",reserve:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},InitiateTeleport:{assets:"Vec<MultiAsset>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV0",assets:"Vec<MultiAssetV0>"},BuyExecution:{fees:"MultiAsset",weight:"u64",debt:"u64",haltOnError:"bool",xcm:"Vec<XcmV0>"}}}},v1={AssetInstanceV1:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8; 4]",Array8:"[u8; 8]",Array16:"[u8; 16]",Array32:"[u8; 32]",Blob:"Bytes"}},FungibilityV1:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV1"}},JunctionV1:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"NetworkId",id:"AccountId"},AccountIndex64:{network:"NetworkId",index:"Compact<u64>"},AccountKey20:{network:"NetworkId",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Vec<u8>",OnlyChild:"Null",Plurality:{id:"BodyId",part:"BodyPart"}}},JunctionsV1:{_enum:{Here:"Null",X1:"JunctionV1",X2:"(JunctionV1, JunctionV1)",X3:"(JunctionV1, JunctionV1, JunctionV1)",X4:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X5:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X6:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X7:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X8:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)"}},MultiAssetsV1:"Vec<MultiAssetV1>",MultiAssetV1:{id:"XcmAssetId",fungibility:"FungibilityV1"},MultiAssetFilterV1:{_enum:{Definite:"MultiAssetsV1",Wild:"WildMultiAssetV1"}},MultiLocationV1:{parents:"u8",interior:"JunctionsV1"},OriginKindV1:"OriginKindV0",ResponseV1:{_enum:{Assets:"MultiAssetsV1"}},WildFungibilityV1:{_enum:["Fungible","NonFungible"]},WildMultiAssetV1:{_enum:{All:"Null",AllOf:{id:"XcmAssetId",fungibility:"WildFungibilityV1"}}},XcmV1:{_enum:{WithdrawAsset:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},ReserveAssetDeposit:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},ReceiveTeleportedAsset:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},QueryResponse:{queryId:"Compact<u64>",response:"ResponseV1"},TransferAsset:{assets:"MultiAssetsV1",dest:"MultiLocationV1"},TransferReserveAsset:{assets:"MultiAssetsV1",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},RelayedFrom:{who:"MultiLocationV1",message:"XcmV1"}}},XcmErrorV1:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",SendFailed:"Null",CannotReachDestination:"(MultiLocationV1, XcmV1)",MultiLocationFull:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",DestinationUnsupported:"Null",RecursionLimitReached:"Null"}},XcmOrderV1:{_enum:{Noop:"Null",DepositAsset:{assets:"MultiAssetFilterV1",maxAssets:"u32",beneficiary:"MultiLocationV1"},DepositReserveAsset:{assets:"MultiAssetFilterV1",maxAssets:"u32",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},ExchangeAsset:{give:"MultiAssetFilterV1",receive:"MultiAssetsV1"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV1",reserve:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},InitiateTeleport:{assets:"MultiAssetFilterV1",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV1",assets:"MultiAssetFilterV1"},BuyExecution:{fees:"MultiAssetV1",weight:"u64",debt:"u64",haltOnError:"bool",instructions:"Vec<XcmV1>"}}}},v2={AssetInstanceV2:"AssetInstanceV1",FungibilityV2:"FungibilityV1",JunctionV2:"JunctionV1",JunctionsV2:"JunctionsV1",MultiAssetsV2:"MultiAssetsV1",MultiAssetV2:"MultiAssetV1",MultiAssetFilterV2:"MultiAssetFilterV1",MultiLocationV2:"MultiLocationV1",OriginKindV2:"OriginKindV1",WildFungibilityV2:"WildFungibilityV1",ResponseV2:{_enum:{Null:"Null",Assets:"MultiAssetsV2",ExecutionResult:"ResponseV2Result"}},ResponseV2Error:"(u32, XcmErrorV2)",ResponseV2Result:"Result<Null, ResponseV2Error>",WeightLimitV2:{_enum:{Unlimited:"Null",Limited:"Compact<u64>"}},InstructionV2:{_enum:{WithdrawAsset:"MultiAssetsV2",ReserveAssetDeposited:"MultiAssetsV2",ReceiveTeleportedAsset:"MultiAssetsV2",QueryResponse:{queryId:"Compact<u64>",response:"ResponseV2",maxWeight:"Compact<u64>"},TransferAsset:{assets:"MultiAssetsV2",beneficiary:"MultiLocationV2"},TransferReserveAsset:{assets:"MultiAssetsV2",dest:"MultiLocationV2",xcm:"XcmV2"},Transact:{originType:"OriginKindV2",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},ClearOrigin:"Null",DescendOrigin:"InteriorMultiLocation",ReportError:{queryId:"Compact<u64>",dest:"MultiLocationV2",maxResponseWeight:"Compact<u64>"},DepositAsset:{assets:"MultiAssetFilterV2",maxAssets:"u32",beneficiary:"MultiLocationV2"},DepositReserveAsset:{assets:"MultiAssetFilterV2",maxAssets:"u32",dest:"MultiLocationV2",xcm:"XcmV2"},ExchangeAsset:{give:"MultiAssetFilterV2",receive:"MultiAssetsV2"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV2",reserve:"MultiLocationV2",xcm:"XcmV2"},InitiateTeleport:{assets:"MultiAssetFilterV2",dest:"MultiLocationV2",xcm:"XcmV2"},QueryHolding:{query_id:"Compact<u64>",dest:"MultiLocationV2",assets:"MultiAssetFilterV2",maxResponse_Weight:"Compact<u64>"},BuyExecution:{fees:"MultiAssetV2",weightLimit:"WeightLimitV2"},RefundSurplus:"Null",SetErrorHandler:"XcmV2",SetAppendix:"XcmV2",ClearError:"Null",ClaimAsset:{assets:"MultiAssetsV2",ticket:"MultiLocationV2"},Trap:"u64"}},WildMultiAssetV2:"WildMultiAssetV1",XcmV2:"Vec<InstructionV2>",XcmErrorV2:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",MultiLocationFull:"Null",MultiLocationNotInvertible:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",DestinationUnsupported:"Null",RecursionLimitReached:"Null",Transport:"Null",Unroutable:"Null",UnknownWeightRequired:"Null",Trap:"u64",UnknownClaim:"Null",InvalidLocation:"Null"}},XcmOrderV2:"XcmOrderV1"},XCM_LATEST="V2",xcm={XcmOrigin:{_enum:{Xcm:"MultiLocation"}},XcmpMessageFormat:{_enum:["ConcatenatedVersionedXcm","ConcatenatedEncodedBlob","Signals"]},XcmAssetId:{_enum:{Concrete:"MultiLocation",Abstract:"Bytes"}},InboundStatus:{_enum:["Ok","Suspended"]},OutboundStatus:{_enum:["Ok","Suspended"]},MultiAssets:"Vec<MultiAsset>"},location={BodyId:{_enum:{Unit:"Null",Named:"Vec<u8>",Index:"Compact<u32>",Executive:"Null",Technical:"Null",Legislative:"Null",Judicial:"Null"}},BodyPart:{_enum:{Voice:"Null",Members:"Compact<u32>",Fraction:{nom:"Compact<u32>",denom:"Compact<u32>"},AtLeastProportion:{nom:"Compact<u32>",denom:"Compact<u32>"},MoreThanProportion:{nom:"Compact<u32>",denom:"Compact<u32>"}}},InteriorMultiLocation:"Junctions",NetworkId:{_enum:{Any:"Null",Named:"Vec<u8>",Polkadot:"Null",Kusama:"Null"}}};var definitions$b={rpc:{},types:objectSpread({},location,xcm,v0,v1,v2,mapXcmTypes(XCM_LATEST),{DoubleEncodedCall:{encoded:"Vec<u8>"},XcmOriginKind:{_enum:["Native","SovereignAccount","Superuser","Xcm"]},Outcome:{_enum:{Complete:"Weight",Incomplete:"(Weight, XcmErrorV0)",Error:"XcmErrorV0"}},QueryId:"u64",QueryStatus:{_enum:{Pending:{responder:"VersionedMultiLocation",maybeNotify:"Option<(u8, u8)>",timeout:"BlockNumber"},Ready:{response:"VersionedResponse",at:"BlockNumber"}}},QueueConfigData:{suspendThreshold:"u32",dropThreshold:"u32",resumeThreshold:"u32",thresholdWeight:"Weight",weightRestrictDecay:"Weight"},VersionMigrationStage:{_enum:{MigrateSupportedVersion:"Null",MigrateVersionNotifiers:"Null",NotifyCurrentTargets:"Option<Bytes>",MigrateAndNotifyOldTargets:"Null"}},VersionedMultiAsset:{_enum:{V0:"MultiAssetV0",V1:"MultiAssetV1",V2:"MultiAssetV2"}},VersionedMultiAssets:{_enum:{V0:"Vec<MultiAssetV0>",V1:"MultiAssetsV1",V2:"MultiAssetsV2"}},VersionedMultiLocation:{_enum:{V0:"MultiLocationV0",V1:"MultiLocationV1",V2:"MultiLocationV2"}},VersionedResponse:{V0:"ResponseV0",V1:"ResponseV1",V2:"ResponseV2"},VersionedXcm:{_enum:{V0:"XcmV0",V1:"XcmV1",V2:"XcmV2"}},XcmVersion:"u32"})};const layout={ContractCryptoHasher:{_enum:["Blake2x256","Sha2x256","Keccak256"]},ContractDiscriminant:"u32",ContractLayoutArray:{offset:"ContractLayoutKey",len:"u32",cellsPerElem:"u64",layout:"ContractStorageLayout"},ContractLayoutCell:{key:"ContractLayoutKey",ty:"SiLookupTypeId"},ContractLayoutEnum:{dispatchKey:"ContractLayoutKey",variants:"BTreeMap<ContractDiscriminant, ContractLayoutStruct>"},ContractLayoutHash:{offset:"ContractLayoutKey",strategy:"ContractLayoutHashingStrategy",layout:"ContractStorageLayout"},ContractLayoutHashingStrategy:{hasher:"ContractCryptoHasher",postfix:"Vec<u8>",prefix:"Vec<u8>"},ContractLayoutKey:"[u8; 32]",ContractLayoutStruct:{fields:"Vec<ContractLayoutStructField>"},ContractLayoutStructField:{layout:"ContractStorageLayout",name:"Text"},ContractStorageLayout:{_enum:{Cell:"ContractLayoutCell",Hash:"ContractLayoutHash",Array:"ContractLayoutArray",Struct:"ContractLayoutStruct",Enum:"ContractLayoutEnum"}}},spec={ContractConstructorSpecV0:{name:"Text",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV0>",docs:"Vec<Text>"},ContractConstructorSpecV1:{name:"Vec<Text>",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV0>",docs:"Vec<Text>"},ContractConstructorSpecV2:{label:"Text",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV2>",docs:"Vec<Text>"},ContractConstructorSpecV3:{label:"Text",selector:"ContractSelector",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",docs:"Vec<Text>"},ContractContractSpecV0:{constructors:"Vec<ContractConstructorSpecV0>",messages:"Vec<ContractMessageSpecV0>",events:"Vec<ContractEventSpecV0>",docs:"Vec<Text>"},ContractContractSpecV1:{constructors:"Vec<ContractConstructorSpecV1>",messages:"Vec<ContractMessageSpecV1>",events:"Vec<ContractEventSpecV1>",docs:"Vec<Text>"},ContractContractSpecV2:{constructors:"Vec<ContractConstructorSpecV2>",messages:"Vec<ContractMessageSpecV2>",events:"Vec<ContractEventSpecV2>",docs:"Vec<Text>"},ContractContractSpecV3:{constructors:"Vec<ContractConstructorSpecV3>",messages:"Vec<ContractMessageSpecV2>",events:"Vec<ContractEventSpecV2>",docs:"Vec<Text>"},ContractDisplayName:"SiPath",ContractEventParamSpecV0:{name:"Text",indexed:"bool",type:"ContractTypeSpec",docs:"Vec<Text>"},ContractEventParamSpecV2:{label:"Text",indexed:"bool",type:"ContractTypeSpec",docs:"Vec<Text>"},ContractEventSpecV0:{name:"Text",args:"Vec<ContractEventParamSpecV0>",docs:"Vec<Text>"},ContractEventSpecV1:{name:"Text",args:"Vec<ContractEventParamSpecV0>",docs:"Vec<Text>"},ContractEventSpecV2:{label:"Text",args:"Vec<ContractEventParamSpecV2>",docs:"Vec<Text>"},ContractMessageParamSpecV0:{name:"Text",type:"ContractTypeSpec"},ContractMessageParamSpecV2:{label:"Text",type:"ContractTypeSpec"},ContractMessageSpecV0:{name:"Text",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV0>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractMessageSpecV1:{name:"Vec<Text>",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV0>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractMessageSpecV2:{label:"Text",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractSelector:"[u8; 4]",ContractTypeSpec:{type:"SiLookupTypeId",displayName:"ContractDisplayName"}},ContractMetadataV0={types:"Vec<Si0Type>",spec:"ContractContractSpecV0"},ContractMetadataV1={types:"Vec<PortableType>",spec:"ContractContractSpecV1"},ContractMetadataV2={types:"Vec<PortableType>",spec:"ContractContractSpecV2"},ContractMetadataV3={types:"Vec<PortableType>",spec:"ContractContractSpecV3"},ContractProjectInfo={source:"ContractProjectSource",contract:"ContractProjectContract"},latest={ContractConstructorSpecLatest:"ContractConstructorSpecV3",ContractEventSpecLatest:"ContractEventSpecV2",ContractEventParamSpecLatest:"ContractEventParamSpecV2",ContractMessageParamSpecLatest:"ContractMessageParamSpecV2",ContractMessageSpecLatest:"ContractMessageSpecV2",ContractMetadataLatest:"ContractMetadataV3"};var definitions$a={rpc:{},types:objectSpread({},layout,spec,latest,{ContractProjectInfo,ContractMetadataV0,ContractMetadataV1,ContractMetadataV2,ContractMetadataV3,ContractMetadata:{_enum:{V0:"ContractMetadataV0",V1:"ContractMetadataV1",V2:"ContractMetadataV2",V3:"ContractMetadataV3"}},ContractProjectV0:objectSpread({metadataVersion:"Text"},ContractProjectInfo,ContractMetadataV0),ContractProject:"(ContractProjectInfo, ContractMetadata)",ContractProjectContract:{_alias:{docs:"documentation"},name:"Text",version:"Text",authors:"Vec<Text>",description:"Option<Text>",docs:"Option<Text>",repository:"Option<Text>",homepage:"Option<Text>",license:"Option<Text>"},ContractProjectSource:{_alias:{wasmHash:"hash"},wasmHash:"[u8; 32]",language:"Text",compiler:"Text",wasm:"Raw"}})};const netRpc={listening:{aliasSection:"net",description:"Returns true if client is actively listening for network connections. Otherwise false.",params:[],type:"bool"},peerCount:{aliasSection:"net",description:"Returns number of peers connected to node.",params:[],type:"String"},version:{aliasSection:"net",description:"Returns protocol version.",params:[],type:"String"}},web3Rpc={clientVersion:{aliasSection:"web3",description:"Returns current client version.",params:[],type:"String"},sha3:{aliasSection:"web3",description:"Returns sha3 of the given data",params:[{name:"data",type:"Bytes"}],type:"H256"}},rpc$7=objectSpread({},netRpc,web3Rpc,{accounts:{description:"Returns accounts list.",params:[],type:"Vec<H160>"},blockNumber:{description:"Returns the blockNumber",params:[],type:"U256"},call:{description:"Call contract, returning the output data.",params:[{name:"request",type:"EthCallRequest"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"Bytes"},chainId:{description:"Returns the chain ID used for transaction signing at the current best block. None is returned if not available.",params:[],type:"U64"},coinbase:{description:"Returns block author.",params:[],type:"H160"},estimateGas:{description:"Estimate gas needed for execution of given contract.",params:[{name:"request",type:"EthCallRequest"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},feeHistory:{description:"Returns fee history for given block count & reward percentiles",params:[{name:"blockCount",type:"U256"},{name:"newestBlock",type:"BlockNumber"},{name:"rewardPercentiles",type:"Option<Vec<f64>>"}],type:"EthFeeHistory"},gasPrice:{description:"Returns current gas price.",params:[],type:"U256"},getBalance:{description:"Returns balance of the given account.",params:[{name:"address",type:"H160"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},getBlockByHash:{description:"Returns block with given hash.",params:[{name:"hash",type:"H256"},{name:"full",type:"bool"}],type:"Option<EthRichBlock>"},getBlockByNumber:{description:"Returns block with given number.",params:[{name:"block",type:"BlockNumber"},{name:"full",type:"bool"}],type:"Option<EthRichBlock>"},getBlockTransactionCountByHash:{description:"Returns the number of transactions in a block with given hash.",params:[{name:"hash",type:"H256"}],type:"U256"},getBlockTransactionCountByNumber:{description:"Returns the number of transactions in a block with given block number.",params:[{name:"block",type:"BlockNumber"}],type:"U256"},getCode:{description:"Returns the code at given address at given time (block number).",params:[{name:"address",type:"H160"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"Bytes"},getFilterChanges:{description:"Returns filter changes since last poll.",params:[{name:"index",type:"U256"}],type:"EthFilterChanges"},getFilterLogs:{description:"Returns all logs matching given filter (in a range 'from' - 'to').",params:[{name:"index",type:"U256"}],type:"Vec<EthLog>"},getLogs:{description:"Returns logs matching given filter object.",params:[{name:"filter",type:"EthFilter"}],type:"Vec<EthLog>"},getProof:{description:"Returns proof for account and storage.",params:[{name:"address",type:"H160"},{name:"storageKeys",type:"Vec<H256>"},{name:"number",type:"BlockNumber"}],type:"EthAccount"},getStorageAt:{description:"Returns content of the storage at given address.",params:[{name:"address",type:"H160"},{name:"index",type:"U256"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"H256"},getTransactionByBlockHashAndIndex:{description:"Returns transaction at given block hash and index.",params:[{name:"hash",type:"H256"},{name:"index",type:"U256"}],type:"EthTransaction"},getTransactionByBlockNumberAndIndex:{description:"Returns transaction by given block number and index.",params:[{name:"number",type:"BlockNumber"},{name:"index",type:"U256"}],type:"EthTransaction"},getTransactionByHash:{description:"Get transaction by its hash.",params:[{name:"hash",type:"H256"}],type:"EthTransaction"},getTransactionCount:{description:"Returns the number of transactions sent from given address at given time (block number).",params:[{name:"hash",type:"H256"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},getTransactionReceipt:{description:"Returns transaction receipt by transaction hash.",params:[{name:"hash",type:"H256"}],type:"EthReceipt"},getUncleByBlockHashAndIndex:{description:"Returns an uncles at given block and index.",params:[{name:"hash",type:"H256"},{name:"index",type:"U256"}],type:"EthRichBlock"},getUncleByBlockNumberAndIndex:{description:"Returns an uncles at given block and index.",params:[{name:"number",type:"BlockNumber"},{name:"index",type:"U256"}],type:"EthRichBlock"},getUncleCountByBlockHash:{description:"Returns the number of uncles in a block with given hash.",params:[{name:"hash",type:"H256"}],type:"U256"},getUncleCountByBlockNumber:{description:"Returns the number of uncles in a block with given block number.",params:[{name:"number",type:"BlockNumber"}],type:"U256"},getWork:{description:"Returns the hash of the current block, the seedHash, and the boundary condition to be met.",params:[],type:"EthWork"},hashrate:{description:"Returns the number of hashes per second that the node is mining with.",params:[],type:"U256"},maxPriorityFeePerGas:{description:"Returns max priority fee per gas",params:[],type:"U256"},mining:{description:"Returns true if client is actively mining new blocks.",params:[],type:"bool"},newBlockFilter:{description:"Returns id of new block filter.",params:[],type:"U256"},newFilter:{description:"Returns id of new filter.",params:[{name:"filter",type:"EthFilter"}],type:"U256"},newPendingTransactionFilter:{description:"Returns id of new block filter.",params:[],type:"U256"},protocolVersion:{description:"Returns protocol version encoded as a string (quotes are necessary).",params:[],type:"u64"},sendRawTransaction:{description:"Sends signed transaction, returning its hash.",params:[{name:"bytes",type:"Bytes"}],type:"H256"},sendTransaction:{description:"Sends transaction; will block waiting for signer to return the transaction hash",params:[{name:"tx",type:"EthTransactionRequest"}],type:"H256"},submitHashrate:{description:"Used for submitting mining hashrate.",params:[{name:"index",type:"U256"},{name:"hash",type:"H256"}],type:"bool"},submitWork:{description:"Used for submitting a proof-of-work solution.",params:[{name:"nonce",type:"H64"},{name:"headerHash",type:"H256"},{name:"mixDigest",type:"H256"}],type:"bool"},subscribe:{description:"Subscribe to Eth subscription.",params:[{name:"kind",type:"EthSubKind"},{isOptional:!0,name:"params",type:"EthSubParams"}],pubsub:["subscription","subscribe","unsubscribe"],type:"Null"},syncing:{description:"Returns an object with data about the sync status or false.",params:[],type:"EthSyncStatus"},uninstallFilter:{description:"Uninstalls filter.",params:[{name:"index",type:"U256"}],type:"bool"}}),runtime$4={ConvertTransactionRuntimeApi:[{methods:{convert_transaction:{description:"Converts an Ethereum-style transaction to Extrinsic",params:[{name:"transaction",type:"TransactionV2"}],type:"Extrinsic"}},version:2}],EthereumRuntimeRPCApi:[{methods:{account_basic:{description:"Returns pallet_evm::Accounts by address.",params:[{name:"address",type:"H160"}],type:"EvmAccount"},account_code_at:{description:"For a given account address, returns pallet_evm::AccountCodes.",params:[{name:"address",type:"H160"}],type:"Bytes"},author:{description:"Returns the converted FindAuthor::find_author authority id.",params:[],type:"H160"},call:{description:"Returns a frame_ethereum::call response. If `estimate` is true,",params:[{name:"from",type:"H160"},{name:"to",type:"H160"},{name:"data",type:"Vec<u8>"},{name:"value",type:"U256"},{name:"gasLimit",type:"U256"},{name:"maxFeePerGas",type:"Option<U256>"},{name:"maxPriorityFeePerGas",type:"Option<U256>"},{name:"nonce",type:"Option<U256>"},{name:"estimate",type:"bool"},{name:"accessList",type:"Option<Vec<(H160, Vec<H256>)>>"}],type:"Result<EvmCallInfo, DispatchError>"},chain_id:{description:"Returns runtime defined pallet_evm::ChainId.",params:[],type:"u64"},create:{description:"Returns a frame_ethereum::call response. If `estimate` is true,",params:[{name:"from",type:"H160"},{name:"data",type:"Vec<u8>"},{name:"value",type:"U256"},{name:"gasLimit",type:"U256"},{name:"maxFeePerGas",type:"Option<U256>"},{name:"maxPriorityFeePerGas",type:"Option<U256>"},{name:"nonce",type:"Option<U256>"},{name:"estimate",type:"bool"},{name:"accessList",type:"Option<Vec<(H160, Vec<H256>)>>"}],type:"Result<EvmCreateInfo, DispatchError>"},current_all:{description:"Return all the current data for a block in a single runtime call.",params:[],type:"(Option<BlockV2>, Option<Vec<ReceiptV0>>, Option<Vec<TransactionStatus>>)"},current_block:{description:"Return the current block.",params:[],type:"BlockV2"},current_receipts:{description:"Return the current receipt.",params:[],type:"Option<Vec<EthReceiptV3>>"},current_transaction_statuses:{description:"Return the current transaction status.",params:[],type:"Option<Vec<EthTransactionStatus>>"},elasticity:{description:"Return the elasticity multiplier.",params:[],type:"Option<Permill>"},extrinsic_filter:{description:"Receives a `Vec<OpaqueExtrinsic>` and filters all the ethereum transactions.",params:[{name:"xts",type:"Vec<Extrinsic>"}],type:"Vec<TransactionV2>"},gas_price:{description:"Returns FixedGasPrice::min_gas_price",params:[],type:"u256"},storage_at:{description:"For a given account address and index, returns pallet_evm::AccountStorages.",params:[{name:"address",type:"H160"},{name:"index",type:"u256"}],type:"H256"}},version:4}]},V0={BlockV0:{header:"EthHeader",transactions:"Vec<TransactionV0>",ommers:"Vec<EthHeader>"},LegacyTransaction:{nonce:"U256",gasPrice:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",signature:"EthTransactionSignature"},TransactionV0:"LegacyTransaction"},V1={BlockV1:{header:"EthHeader",transactions:"Vec<TransactionV1>",ommers:"Vec<EthHeader>"},EIP2930Transaction:{chainId:"u64",nonce:"U256",gasPrice:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",accessList:"EthAccessList",oddYParity:"bool",r:"H256",s:"H256"},TransactionV1:{_enum:{Legacy:"LegacyTransaction",EIP2930:"EIP2930Transaction"}}},V2={BlockV2:{header:"EthHeader",transactions:"Vec<TransactionV2>",ommers:"Vec<EthHeader>"},EIP1559Transaction:{chainId:"u64",nonce:"U256",maxPriorityFeePerGas:"U256",maxFeePerGas:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",accessList:"EthAccessList",oddYParity:"bool",r:"H256",s:"H256"},TransactionV2:{_enum:{Legacy:"LegacyTransaction",EIP2930:"EIP2930Transaction",EIP1559:"EIP1559Transaction"}}},types=objectSpread({},V0,V1,V2,{EthereumAccountId:"GenericEthereumAccountId",EthereumAddress:"GenericEthereumAccountId",EthereumLookupSource:"GenericEthereumLookupSource",EthereumSignature:"[u8; 65]",EthAccessListItem:{address:"EthAddress",slots:"Vec<H256>"},EthAccessList:"Vec<EthAccessListItem>",EthAccount:{address:"EthAddress",balance:"U256",nonce:"U256",codeHash:"H256",storageHash:"H256",accountProof:"Vec<Bytes>",storageProof:"Vec<EthStorageProof>"},EthAddress:"H160",EthBlock:{header:"EthHeader",transactions:"Vec<EthTransaction>",ommers:"Vec<EthHeader>"},EthHeader:{parentHash:"H256",ommersHash:"H256",beneficiary:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",logsBloom:"EthBloom",difficulty:"U256",number:"U256",gasLimit:"U256",gasUsed:"U256",timestamp:"u64",extraData:"Bytes",mixMash:"H256",nonce:"H64"},EthRichBlock:{_alias:{blockHash:"hash",blockSize:"size"},blockHash:"Option<H256>",parentHash:"H256",sha3Uncles:"H256",author:"EthAddress",miner:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",number:"Option<U256>",gasUsed:"U256",gasLimit:"U256",extraData:"Bytes",logsBloom:"EthBloom",timestamp:"U256",difficulty:"U256",totalDifficulty:"Option<U256>",sealFields:"Vec<Bytes>",uncles:"Vec<H256>",transactions:"Vec<EthTransaction>",blockSize:"Option<U256>"},EthBloom:"H2048",EthCallRequest:{from:"Option<EthAddress>",to:"Option<EthAddress>",gasPrice:"Option<U256>",gas:"Option<U256>",value:"Option<U256>",data:"Option<Bytes>",nonce:"Option<U256>"},EthFeeHistory:{oldestBlock:"U256",baseFeePerGas:"Vec<U256>",gasUsedRatio:"Vec<f64>",reward:"Option<Vec<Vec<U256>>>"},EthFilter:{fromBlock:"Option<BlockNumber>",toBlock:"Option<BlockNumber>",blockHash:"Option<H256>",address:"Option<EthFilterAddress>",topics:"Option<EthFilterTopic>"},EthFilterAddress:{_enum:{Single:"EthAddress",Multiple:"Vec<EthAddress>",Null:"Null"}},EthFilterChanges:{_enum:{Logs:"Vec<EthLog>",Hashes:"Vec<H256>",Empty:"Null"}},EthFilterTopic:{_enum:{Single:"EthFilterTopicInner",Multiple:"Vec<EthFilterTopicInner>",Null:"Null"}},EthFilterTopicEntry:"Option<H256>",EthFilterTopicInner:{_enum:{Single:"EthFilterTopicEntry",Multiple:"Vec<EthFilterTopicEntry>",Null:"Null"}},EthRichHeader:{_alias:{blockHash:"hash",blockSize:"size"},blockHash:"Option<H256>",parentHash:"H256",sha3Uncles:"H256",author:"EthAddress",miner:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",number:"Option<U256>",gasUsed:"U256",gasLimit:"U256",extraData:"Bytes",logsBloom:"EthBloom",timestamp:"U256",difficulty:"U256",sealFields:"Vec<Bytes>",blockSize:"Option<U256>"},EthLog:{address:"EthAddress",topics:"Vec<H256>",data:"Bytes",blockHash:"Option<H256>",blockNumber:"Option<U256>",transactionHash:"Option<H256>",transactionIndex:"Option<U256>",logIndex:"Option<U256>",transactionLogIndex:"Option<U256>",removed:"bool"},EthReceipt:{transactionHash:"Option<H256>",transactionIndex:"Option<U256>",blockHash:"Option<H256>",from:"Option<EthAddress>",to:"Option<EthAddress>",blockNumber:"Option<U256>",cumulativeGasUsed:"U256",gasUsed:"Option<U256>",contractAddress:"Option<EthAddress>",logs:"Vec<EthLog>",root:"Option<H256>",logsBloom:"EthBloom",statusCode:"Option<U64>"},EthReceiptV0:"EthReceipt",EthReceiptV3:"EthReceipt",EthStorageProof:{key:"U256",value:"U256",proof:"Vec<Bytes>"},EthSubKind:{_enum:["newHeads","logs","newPendingTransactions","syncing"]},EthSubParams:{_enum:{None:"Null",Logs:"EthFilter"}},EthSubResult:{_enum:{Header:"EthRichHeader",Log:"EthLog",TransactionHash:"H256",SyncState:"EthSyncStatus"}},EthSyncInfo:{startingBlock:"U256",currentBlock:"U256",highestBlock:"U256",warpChunksAmount:"Option<U256>",warpChunksProcessed:"Option<U256>"},EthSyncStatus:{_enum:{Info:"EthSyncInfo",None:"Null"}},EthTransaction:"LegacyTransaction",EthTransactionSignature:{v:"u64",r:"H256",s:"H256"},EthTransactionAction:{_enum:{Call:"H160",Create:"Null"}},EthTransactionCondition:{_enum:{block:"u64",time:"u64"}},EthTransactionRequest:{from:"Option<EthAddress>",to:"Option<EthAddress>",gasPrice:"Option<U256>",gas:"Option<U256>",value:"Option<U256>",data:"Option<Bytes>",nonce:"Option<U256>"},EthTransactionStatus:{transactionHash:"H256",transactionIndex:"u32",from:"EthAddress",to:"Option<EthAddress>",contractAddress:"Option<EthAddress>",logs:"Vec<EthLog>",logsBloom:"EthBloom"},EthWork:{powHash:"H256",seedHash:"H256",target:"H256",number:"Option<u64>"}});var definitions$9={rpc:rpc$7,runtime:runtime$4,types};const runtime$3={OracleApi:[{methods:{get_all_values:{description:"Retrieves all values",params:[{name:"providerId",type:"Raw"}],type:"Raw"},get_value:{description:"Retrieves a single value",params:[{name:"providerId",type:"Raw"},{name:"key",type:"Raw"}],type:"Option<Raw>"}},version:1}]};var definitions$8={rpc:{},runtime:runtime$3,types:{}};const runtime$2={TokensApi:[{methods:{query_existential_deposit:{description:"Query the existential amount for a specific currency",params:[{name:"currencyId",type:"Raw"}],type:"u128"}},version:1}]};var definitions$7={rpc:{},runtime:runtime$2,types:{}};const rpc$6={methods:{description:"Retrieves the list of RPC methods that are exposed by the node",params:[],type:"RpcMethods"}};var definitions$6={rpc:rpc$6,types:{RpcMethods:{version:"u32",methods:"Vec<Text>"}}};const rpc$5={hasKey:{description:"Returns true if the keystore has private keys for the given public key and key type.",params:[{name:"publicKey",type:"Bytes"},{name:"keyType",type:"Text"}],type:"bool"},hasSessionKeys:{description:"Returns true if the keystore has private keys for the given session public keys.",params:[{name:"sessionKeys",type:"Bytes"}],type:"bool"},insertKey:{description:"Insert a key into the keystore.",params:[{name:"keyType",type:"Text"},{name:"suri",type:"Text"},{name:"publicKey",type:"Bytes"}],type:"Bytes"},pendingExtrinsics:{description:"Returns all pending extrinsics, potentially grouped by sender",params:[],type:"Vec<Extrinsic>"},removeExtrinsic:{description:"Remove given extrinsic from the pool and temporarily ban it to prevent reimporting",params:[{name:"bytesOrHash",type:"Vec<ExtrinsicOrHash>"}],type:"Vec<Hash>"},rotateKeys:{description:"Generate new session keys and returns the corresponding public keys",params:[],type:"Bytes"},submitAndWatchExtrinsic:{description:"Submit and subscribe to watch an extrinsic until unsubscribed",isSigned:!0,params:[{name:"extrinsic",type:"Extrinsic"}],pubsub:["extrinsicUpdate","submitAndWatchExtrinsic","unwatchExtrinsic"],type:"ExtrinsicStatus"},submitExtrinsic:{description:"Submit a fully formatted extrinsic for block inclusion",isSigned:!0,params:[{name:"extrinsic",type:"Extrinsic"}],type:"Hash"}};var definitions$5={rpc:rpc$5,types:{ExtrinsicOrHash:{_enum:{Hash:"Hash",Extrinsic:"Bytes"}},ExtrinsicStatus:{_enum:{Future:"Null",Ready:"Null",Broadcast:"Vec<Text>",InBlock:"Hash",Retracted:"Hash",FinalityTimeout:"Hash",Finalized:"Hash",Usurped:"Hash",Dropped:"Null",Invalid:"Null"}}}};const rpc$4={getBlock:{description:"Get header and body of a relay chain block",params:[{isHistoric:!0,isOptional:!0,name:"hash",type:"BlockHash"}],type:"SignedBlock"},getBlockHash:{description:"Get the block hash for a specific block",params:[{isOptional:!0,name:"blockNumber",type:"BlockNumber"}],type:"BlockHash"},getFinalizedHead:{alias:["chain_getFinalisedHead"],description:"Get hash of the last finalized block in the canon chain",params:[],type:"BlockHash"},getHeader:{alias:["chain_getHead"],description:"Retrieves the header for a specific block",params:[{isHistoric:!0,isOptional:!0,name:"hash",type:"BlockHash"}],type:"Header"},subscribeAllHeads:{description:"Retrieves the newest header via subscription",params:[],pubsub:["allHead","subscribeAllHeads","unsubscribeAllHeads"],type:"Header"},subscribeFinalizedHeads:{alias:["chain_subscribeFinalisedHeads","chain_unsubscribeFinalisedHeads"],description:"Retrieves the best finalized header via subscription",params:[],pubsub:["finalizedHead","subscribeFinalizedHeads","unsubscribeFinalizedHeads"],type:"Header"},subscribeNewHeads:{alias:["chain_unsubscribeNewHeads","subscribe_newHead","unsubscribe_newHead"],description:"Retrieves the best header via subscription",params:[],pubsub:["newHead","subscribeNewHead","unsubscribeNewHead"],type:"Header"}};var definitions$4={rpc:rpc$4,types:{BlockHash:"Hash"}};const rpc$3={getKeys:{description:"Returns the keys with prefix from a child storage, leave empty to get all the keys",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"prefix",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Vec<StorageKey>"},getKeysPaged:{alias:["childstate_getKeysPagedAt"],description:"Returns the keys with prefix from a child storage with pagination support",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"prefix",type:"StorageKey"},{name:"count",type:"u32"},{isOptional:!0,name:"startKey",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Vec<StorageKey>"},getStorage:{description:"Returns a child storage entry at a specific block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Option<StorageData>"},getStorageEntries:{description:"Returns child storage entries for multiple keys at a specific block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Vec<Option<StorageData>>"},getStorageHash:{description:"Returns the hash of a child storage entry at a block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Option<Hash>"},getStorageSize:{description:"Returns the size of a child storage entry at a block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Option<u64>"}};var definitions$3={rpc:rpc$3,types:{PrefixedStorageKey:"StorageKey"}};const rpc$2={localStorageGet:{description:"Get offchain local storage under given key and prefix",params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},localStorageSet:{description:"Set offchain local storage under given key and prefix",params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"},{name:"value",type:"Bytes"}],type:"Null"}},runtime$1={OffchainWorkerApi:[{methods:{offchain_worker:{description:"Starts the off-chain task for given block header.",params:[{name:"header",type:"Header"}],type:"Null"}},version:2},{methods:{offchain_worker:{description:"Starts the off-chain task for given block header.",params:[{name:"number",type:"BlockNumber"}],type:"Null"}},version:1}]};var definitions$2={rpc:rpc$2,runtime:runtime$1,types:{StorageKind:{_enum:{PERSISTENT:1,LOCAL:2}}}};const rpc$1={queryFeeDetails:{description:"Query the detailed fee of a given encoded extrinsic",params:[{name:"extrinsic",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"FeeDetails"},queryInfo:{description:"Retrieves the fee information for an encoded extrinsic",params:[{name:"extrinsic",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"RuntimeDispatchInfo"}},runtime={TransactionPaymentApi:[{methods:{query_fee_details:{description:"The transaction fee details",params:[{name:"uxt",type:"Extrinsic"},{name:"len",type:"u32"}],type:"FeeDetails"},query_info:{description:"The transaction info",params:[{name:"uxt",type:"Extrinsic"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"}},version:1}]};var definitions$1={rpc:rpc$1,runtime,types:{FeeDetails:{inclusionFee:"Option<InclusionFee>"},InclusionFee:{baseFee:"Balance",lenFee:"Balance",adjustedWeightFee:"Balance"},RuntimeDispatchInfo:{weight:"Weight",class:"DispatchClass",partialFee:"Balance"}}};const rpc={call:{alias:["state_callAt"],description:"Perform a call to a builtin on the chain",params:[{name:"method",type:"Text"},{name:"data",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Bytes"},getChildKeys:{description:"Retrieves the keys with prefix of a specific child storage",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageKey>"},getChildReadProof:{description:"Returns proof of storage for child key entries at a specific block state.",params:[{name:"childStorageKey",type:"PrefixedStorageKey"},{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ReadProof"},getChildStorage:{description:"Retrieves the child storage for a key",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"StorageData"},getChildStorageHash:{description:"Retrieves the child storage hash",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Hash"},getChildStorageSize:{description:"Retrieves the child storage size",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"u64"},getKeys:{description:"Retrieves the keys with a certain prefix",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageKey>"},getKeysPaged:{alias:["state_getKeysPagedAt"],description:"Returns the keys with prefix with pagination support.",params:[{name:"key",type:"StorageKey"},{name:"count",type:"u32"},{isOptional:!0,name:"startKey",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageKey>"},getMetadata:{description:"Returns the runtime metadata",params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Metadata"},getPairs:{description:"Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)",params:[{name:"prefix",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<KeyValue>"},getReadProof:{description:"Returns proof of storage entries at a specific block state",params:[{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ReadProof"},getRuntimeVersion:{alias:["chain_getRuntimeVersion"],description:"Get the runtime version",params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"RuntimeVersion"},getStorage:{alias:["state_getStorageAt"],description:"Retrieves the storage for a key",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"StorageData"},getStorageHash:{alias:["state_getStorageHashAt"],description:"Retrieves the storage hash",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Hash"},getStorageSize:{alias:["state_getStorageSizeAt"],description:"Retrieves the storage size",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"u64"},queryStorage:{description:"Query historical storage entries (by key) starting from a start block",params:[{name:"keys",type:"Vec<StorageKey>"},{name:"fromBlock",type:"Hash"},{isOptional:!0,name:"toBlock",type:"BlockHash"}],type:"Vec<StorageChangeSet>"},queryStorageAt:{description:"Query storage entries (by key) starting at block hash given as the second parameter",params:[{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageChangeSet>"},subscribeRuntimeVersion:{alias:["chain_subscribeRuntimeVersion","chain_unsubscribeRuntimeVersion"],description:"Retrieves the runtime version via subscription",params:[],pubsub:["runtimeVersion","subscribeRuntimeVersion","unsubscribeRuntimeVersion"],type:"RuntimeVersion"},subscribeStorage:{description:"Subscribes to storage changes for the provided keys",params:[{isOptional:!0,name:"keys",type:"Vec<StorageKey>"}],pubsub:["storage","subscribeStorage","unsubscribeStorage"],type:"StorageChangeSet"},traceBlock:{description:"Provides a way to trace the re-execution of a single block",params:[{name:"block",type:"Hash"},{name:"targets",type:"Option<Text>"},{name:"storageKeys",type:"Option<Text>"},{name:"methods",type:"Option<Text>"}],type:"TraceBlockResponse"},trieMigrationStatus:{description:"Check current migration state",params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"MigrationStatusResult"}};var definitions={rpc,types:{ApiId:"[u8; 8]",BlockTrace:{blockHash:"Text",parentHash:"Text",tracingTargets:"Text",storageKeys:"Text",spans:"Vec<BlockTraceSpan>",events:"Vec<BlockTraceEvent>"},BlockTraceEvent:{target:"Text",data:"BlockTraceEventData",parentId:"Option<u64>"},BlockTraceEventData:{stringValues:"HashMap<Text, Text>"},BlockTraceSpan:{id:"u64",parentId:"Option<u64>",name:"Text",target:"Text",wasm:"bool"},KeyValueOption:"(StorageKey, Option<StorageData>)",MigrationStatusResult:{topRemainingToMigrate:"u64",childRemainingToMigrate:"u64"},ReadProof:{at:"Hash",proof:"Vec<Bytes>"},RuntimeVersionApi:"(ApiId, u32)",RuntimeVersion:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>",transactionVersion:"u32",stateVersion:"u8"},RuntimeVersionPre4:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>",transactionVersion:"u32"},RuntimeVersionPre3:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>"},RuntimeVersionPartial:{specName:"Text",specVersion:"u32",apis:"Vec<RuntimeVersionApi>"},SpecVersion:"u32",StorageChangeSet:{block:"Hash",changes:"Vec<KeyValueOption>"},TraceBlockResponse:{_enum:{TraceError:"TraceError",BlockTrace:"BlockTrace"}},TraceError:{error:"Text"}}},typeDefinitions=Object.freeze(Object.defineProperty({__proto__:null,assets:definitions$_,authorship:definitions$Z,aura:definitions$Y,babe:definitions$X,balances:definitions$W,beefy:definitions$V,benchmark:definitions$U,blockbuilder:definitions$T,collective:definitions$S,consensus:definitions$R,contracts:definitions$Q,democracy:definitions$P,dev:definitions$O,discovery:definitions$N,elections:definitions$M,engine:definitions$L,evm:definitions$K,extrinsics:definitions$J,genericAsset:definitions$I,gilt:definitions$H,grandpa:definitions$G,identity:definitions$F,imOnline:definitions$E,lottery:definitions$D,mmr:definitions$C,offences:definitions$B,pow:definitions$A,proxy:definitions$z,recovery:definitions$y,scheduler:definitions$x,session:definitions$w,society:definitions$v,staking:definitions$u,support:definitions$t,syncstate:definitions$s,system:definitions$r,treasury:definitions$q,txpayment:definitions$p,txqueue:definitions$o,uniques:definitions$n,utility:definitions$m,vesting:definitions$l,attestations:definitions$k,bridges:definitions$j,claims:definitions$i,crowdloan:definitions$h,cumulus:definitions$g,finality:definitions$f,parachains:definitions$e,poll:definitions$d,purchase:definitions$c,xcm:definitions$b,contractsAbi:definitions$a,eth:definitions$9,ormlOracle:definitions$8,ormlTokens:definitions$7,rpc:definitions$6,author:definitions$5,chain:definitions$4,childstate:definitions$3,offchain:definitions$2,payment:definitions$1,state:definitions,metadata:definitions$11,runtime:definitions$10,scaleInfo:definitions$$},Symbol.toStringTag,{value:"Module"}));const jsonrpc={};Object.keys(typeDefinitions).forEach(r=>Object.entries(typeDefinitions[r].rpc||{}).forEach(([e,t])=>{const n=t.aliasSection||r;jsonrpc[n]||(jsonrpc[n]={}),jsonrpc[n][e]=objectSpread({},t,{isSubscription:!!t.pubsub,jsonrpc:`${n}_${e}`,method:e,section:n})}));var rpcDefinitions=jsonrpc;function lazyVariants(r,{type:e},t,n){const s={},i=r.getSiType(e).def.asVariant.variants;for(let a=0;a<i.length;a++)lazyMethod(s,i[a],n,t);return s}const emptyCheck={extrinsic:{},payload:{}},polkadot$2={LimitParathreadCommits:emptyCheck,OnlyStakingAndClaims:emptyCheck,PrevalidateAttests:emptyCheck,RestrictFunctionality:emptyCheck,TransactionCallFilter:emptyCheck,ValidateDoubleVoteReports:emptyCheck},shell$1={DisallowSigned:emptyCheck},statemint$1={ChargeAssetTxPayment:{extrinsic:{tip:"Compact<Balance>",assetId:"Option<AssetId>"},payload:{}}},CheckMortality={extrinsic:{era:"ExtrinsicEra"},payload:{blockHash:"Hash"}},substrate$1={ChargeTransactionPayment:{extrinsic:{tip:"Compact<Balance>"},payload:{}},CheckBlockGasLimit:emptyCheck,CheckEra:CheckMortality,CheckGenesis:{extrinsic:{},payload:{genesisHash:"Hash"}},CheckMortality,CheckNonZeroSender:emptyCheck,CheckNonce:{extrinsic:{nonce:"Compact<Index>"},payload:{}},CheckSpecVersion:{extrinsic:{},payload:{specVersion:"u32"}},CheckTxVersion:{extrinsic:{},payload:{transactionVersion:"u32"}},CheckVersion:{extrinsic:{},payload:{specVersion:"u32"}},CheckWeight:emptyCheck,LockStakingStatus:emptyCheck,ValidateEquivocationReport:emptyCheck},allExtensions=objectSpread({},substrate$1,polkadot$2,shell$1,statemint$1),fallbackExtensions=["CheckVersion","CheckGenesis","CheckEra","CheckNonce","CheckWeight","ChargeTransactionPayment","CheckBlockGasLimit"];function findUnknownExtensions(r,e={}){const t=[...Object.keys(allExtensions),...Object.keys(e)];return r.filter(n=>!t.includes(n))}function expandExtensionTypes(r,e,t={}){return r.map(n=>t[n]||allExtensions[n]).filter(n=>!!n).reduce((n,s)=>objectSpread(n,s[e]),{})}function decodeEvent(r,e){if(!e||!e.length)return{DataType:Null};const t=e.subarray(0,2);return{DataType:r.findMetaEvent(t),value:{data:e.subarray(2),index:t}}}var kn,In,ir,Mn,Vn;class GenericEventData extends Tuple{constructor(t,n,s,i="<unknown>",a="<unknown>"){const o=(s==null?void 0:s.fields)||[];super(t,o.map(({type:h})=>t.createLookupType(h)),n);_(this,kn,void 0);_(this,In,void 0);_(this,ir,null);_(this,Mn,void 0);_(this,Vn,void 0);Q(this,kn,s),Q(this,In,a),Q(this,Mn,i),Q(this,Vn,o.map(({type:h})=>t.lookup.getTypeDef(h)));const c=o.map(({name:h})=>t.lookup.sanitizeField(h)[0]).filter(h=>!!h);c.length===o.length&&(Q(this,ir,c),objectProperties(this,c,(h,p)=>this[p]))}get meta(){return b(this,kn)}get method(){return b(this,In)}get names(){return b(this,ir)}get section(){return b(this,Mn)}get typeDef(){return b(this,Vn)}toHuman(t){if(b(this,ir)!==null){const n={};for(let s=0;s<b(this,ir).length;s++)n[b(this,ir)[s]]=this[s].toHuman(t);return n}return super.toHuman(t)}}kn=new WeakMap,In=new WeakMap,ir=new WeakMap,Mn=new WeakMap,Vn=new WeakMap;class GenericEvent extends Struct{constructor(e,t){const{DataType:n,value:s}=decodeEvent(e,t);super(e,{index:"EventId",data:n},s)}get data(){return this.getT("data")}get index(){return this.getT("index")}get meta(){return this.data.meta}get method(){return this.data.method}get section(){return this.data.section}get typeDef(){return this.data.typeDef}toHuman(e){return objectSpread({method:this.method,section:this.section},e?{docs:this.meta.docs.map(t=>t.toString())}:null,super.toHuman(e))}}const BIT_SIGNED=128,BIT_UNSIGNED=0,EMPTY_U8A=new Uint8Array,DEFAULT_VERSION=4,IMMORTAL_ERA=new Uint8Array([0]),UNMASK_VERSION=127,EXTRINSIC_VERSION=4;class GenericExtrinsicV4 extends Struct{constructor(e,t,{isSigned:n}={}){super(e,{signature:"ExtrinsicSignatureV4",method:"Call"},GenericExtrinsicV4.decodeExtrinsic(e,t,n))}static decodeExtrinsic(e,t,n=!1){if(t instanceof GenericExtrinsicV4)return t;if(t instanceof e.createClassUnsafe("Call"))return{method:t};if(isU8a(t)){const s=e.createTypeUnsafe("ExtrinsicSignatureV4",[t,{isSigned:n}]);return{method:e.createTypeUnsafe("Call",[t.subarray(s.encodedLength)]),signature:s}}return t||{}}get encodedLength(){return this.toU8a().length}get method(){return this.getT("method")}get signature(){return this.getT("signature")}get version(){return EXTRINSIC_VERSION}addSignature(e,t,n){return this.signature.addSignature(e,t,n),this}sign(e,t){return this.signature.sign(this.method,e,t),this}signFake(e,t){return this.signature.signFake(this.method,e,t),this}}const VERSIONS$1=["ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicV4"];function newFromValue(r,e,t){if(e instanceof GenericExtrinsic)return e.unwrap();const n=(t&BIT_SIGNED)===BIT_SIGNED,s=VERSIONS$1[t&UNMASK_VERSION]||VERSIONS$1[0];return r.createTypeUnsafe(s,[e,{isSigned:n,version:t}])}function decodeExtrinsic(r,e,t=DEFAULT_VERSION){return isU8a(e)||Array.isArray(e)||isHex(e)?decodeU8a$4(r,u8aToU8a(e),t):e instanceof r.createClassUnsafe("Call")?newFromValue(r,{method:e},t):newFromValue(r,e,t)}function decodeU8a$4(r,e,t){if(!e.length)return newFromValue(r,new Uint8Array,t);const[n,s]=compactFromU8a(e),i=n+s.toNumber();if(i>e.length)throw new Error(`Extrinsic: length less than remainder, expected at least ${i}, found ${e.length}`);const a=e.subarray(n,i);return newFromValue(r,a.subarray(1),a[0])}class ExtrinsicBase extends AbstractBase{constructor(e,t,n){super(e,t,n);const s=Object.keys(e.getSignedExtensionTypes()),i=a=>this.inner.signature[a];for(let a=0;a<s.length;a++)objectProperty(this,s[a],i)}get args(){return this.method.args}get argsDef(){return this.method.argsDef}get callIndex(){return this.method.callIndex}get data(){return this.method.data}get era(){return this.inner.signature.era}get encodedLength(){return this.toU8a().length}get isSigned(){return this.inner.signature.isSigned}get length(){return this.toU8a(!0).length}get meta(){return this.method.meta}get method(){return this.inner.method}get nonce(){return this.inner.signature.nonce}get signature(){return this.inner.signature.signature}get signer(){return this.inner.signature.signer}get tip(){return this.inner.signature.tip}get type(){return this.inner.version}get inner(){return this.unwrap()}get version(){return this.type|(this.isSigned?BIT_SIGNED:BIT_UNSIGNED)}is(e){return this.method.is(e)}unwrap(){return super.unwrap()}}var Jt;class GenericExtrinsic extends ExtrinsicBase{constructor(t,n,{version:s}={}){super(t,decodeExtrinsic(t,n,s));_(this,Jt,void 0)}get hash(){return b(this,Jt)||Q(this,Jt,super.hash),b(this,Jt)}addSignature(t,n,s){return this.inner.addSignature(t,n,s),Q(this,Jt,void 0),this}inspect(){const t=u8aConcat(...this.toU8aInner());return{inner:this.isSigned?this.inner.inspect().inner:this.inner.method.inspect().inner,outer:[compactToU8a(t.length),new Uint8Array([this.version])]}}sign(t,n){return this.inner.sign(t,n),Q(this,Jt,void 0),this}signFake(t,n){return this.inner.signFake(t,n),Q(this,Jt,void 0),this}toHex(t){return u8aToHex(this.toU8a(t))}toHuman(t){return objectSpread({},{isSigned:this.isSigned,method:this.method.toHuman(t)},this.isSigned?{era:this.era.toHuman(t),nonce:this.nonce.toHuman(t),signature:this.signature.toHex(),signer:this.signer.toHuman(t),tip:this.tip.toHuman(t)}:null)}toJSON(){return this.toHex()}toRawType(){return"Extrinsic"}toU8a(t){const n=u8aConcat(...this.toU8aInner());return t?n:compactAddLength(n)}toU8aInner(){return[new Uint8Array([this.version]),this.inner.toU8a()]}}Jt=new WeakMap;function getTrailingZeros(r){const e=r.toString(2);let t=0;for(;e[e.length-1-t]==="0";)t++;return t}function decodeMortalEra(r,e){if(isU8a(e)||isHex(e)||Array.isArray(e))return decodeMortalU8a(r,u8aToU8a(e));if(e){if(isObject$2(e))return decodeMortalObject(r,e)}else return[new u64(r),new u64(r)];throw new Error("Invalid data passed to Mortal era")}function decodeMortalObject(r,e){const{current:t,period:n}=e;let s=Math.pow(2,Math.ceil(Math.log2(n)));s=Math.min(Math.max(s,4),1<<16);const i=t%s,a=Math.max(s>>12,1),o=i/a*a;return[new u64(r,s),new u64(r,o)]}function decodeMortalU8a(r,e){if(e.length===0)return[new u64(r),new u64(r)];const t=u8aToBn(e.subarray(0,1)).toNumber(),n=u8aToBn(e.subarray(1,2)).toNumber(),s=t+(n<<8),i=2<<s%(1<<4),a=Math.max(i>>12,1),o=(s>>4)*a;if(i<4||o>=i)throw new Error("Invalid data passed to Mortal era");return[new u64(r,i),new u64(r,o)]}function decodeExtrinsicEra(r=new Uint8Array){if(isU8a(r))return!r.length||r[0]===0?new Uint8Array([0]):new Uint8Array([1,r[0],r[1]]);if(r){if(r instanceof GenericExtrinsicEra)return decodeExtrinsicEra(r.toU8a());if(isHex(r))return decodeExtrinsicEra(hexToU8a(r));if(isObject$2(r)){const e=Object.entries(r).map(([s,i])=>[s.toLowerCase(),i]),t=e.find(([s])=>s.toLowerCase()==="mortalera"),n=e.find(([s])=>s.toLowerCase()==="immortalera");return t?{MortalEra:t[1]}:n?{ImmortalEra:n[1]}:{MortalEra:r}}}else return new Uint8Array([0]);throw new Error("Invalid data passed to Era")}class ImmortalEra extends Raw{constructor(e,t){super(e,IMMORTAL_ERA)}}class MortalEra extends Tuple{constructor(e,t){super(e,{period:u64,phase:u64},decodeMortalEra(e,t))}get encodedLength(){return 2}get period(){return this[0]}get phase(){return this[1]}toHuman(){return{period:formatNumber(this.period),phase:formatNumber(this.phase)}}toJSON(){return this.toHex()}toU8a(e){const t=this.period.toNumber(),n=Math.min(15,Math.max(1,getTrailingZeros(t)-1))+(this.phase.toNumber()/Math.max(t>>12,1)<<4);return new Uint8Array([n&255,n>>8])}birth(e){const t=this.phase.toNumber(),n=this.period.toNumber();return~~((Math.max(bnToBn(e).toNumber(),t)-t)/n)*n+t}death(e){return this.birth(e)+this.period.toNumber()}}class GenericExtrinsicEra extends Enum{constructor(e,t){super(e,{ImmortalEra,MortalEra},decodeExtrinsicEra(t))}get encodedLength(){return this.isImmortalEra?this.asImmortalEra.encodedLength:this.asMortalEra.encodedLength}get asImmortalEra(){if(!this.isImmortalEra)throw new Error(`Cannot convert '${this.type}' via asImmortalEra`);return this.inner}get asMortalEra(){if(!this.isMortalEra)throw new Error(`Cannot convert '${this.type}' via asMortalEra`);return this.inner}get isImmortalEra(){return this.index===0}get isMortalEra(){return this.index>0}toU8a(e){return this.isMortalEra?this.asMortalEra.toU8a(e):this.asImmortalEra.toU8a(e)}}const VERSIONS=["ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadV4"];function decodeExtrinsicPayload(r,e,t=DEFAULT_VERSION){return e instanceof GenericExtrinsicPayload?e.unwrap():r.createTypeUnsafe(VERSIONS[t]||VERSIONS[0],[e,{version:t}])}class GenericExtrinsicPayload extends AbstractBase{constructor(e,t,{version:n}={}){super(e,decodeExtrinsicPayload(e,t,n))}get blockHash(){return this.inner.blockHash}get era(){return this.inner.era}get genesisHash(){return this.inner.genesisHash||this.registry.createTypeUnsafe("Hash",[])}get method(){return this.inner.method}get nonce(){return this.inner.nonce}get specVersion(){return this.inner.specVersion||this.registry.createTypeUnsafe("u32",[])}get tip(){return this.inner.tip||this.registry.createTypeUnsafe("Compact<Balance>",[])}get transactionVersion(){return this.inner.transactionVersion||this.registry.createTypeUnsafe("u32",[])}eq(e){return this.inner.eq(e)}sign(e){const t=this.inner.sign(e);return{signature:u8aToHex(t)}}toHuman(e){return this.inner.toHuman(e)}toJSON(){return this.toHex()}toString(){return this.toHex()}toU8a(e){return super.toU8a(e?{method:!0}:!1)}}class GenericExtrinsicPayloadUnknown extends Struct{constructor(e,t,{version:n=0}={}){throw super(e,{}),new Error(`Unsupported extrinsic payload version ${n}`)}}class GenericExtrinsicUnknown extends Struct{constructor(e,t,{isSigned:n=!1,version:s=0}={}){throw super(e,{}),new Error(`Unsupported ${n?"":"un"}signed extrinsic version ${s&UNMASK_VERSION}`)}}const knownTypes={address:"Address",blockHash:"Hash",blockNumber:"BlockNumber",era:"ExtrinsicEra",genesisHash:"Hash",method:"Call",nonce:"Compact<Index>",runtimeVersion:"RuntimeVersion",signedExtensions:"Vec<Text>",tip:"Compact<Balance>",version:"u8"};var Wr;class GenericSignerPayload extends Struct{constructor(t,n){const s=objectSpread({},t.getSignedExtensionTypes(),t.getSignedExtensionExtra());super(t,objectSpread({},s,knownTypes),n);_(this,Wr,void 0);Q(this,Wr,{});const i=a=>this.get(a);for(const[a,o]of Object.entries(s))knownTypes[a]||(b(this,Wr)[a]=o),objectProperty(this,a,i)}get address(){return this.getT("address")}get blockHash(){return this.getT("blockHash")}get blockNumber(){return this.getT("blockNumber")}get era(){return this.getT("era")}get genesisHash(){return this.getT("genesisHash")}get method(){return this.getT("method")}get nonce(){return this.getT("nonce")}get runtimeVersion(){return this.getT("runtimeVersion")}get signedExtensions(){return this.getT("signedExtensions")}get tip(){return this.getT("tip")}get version(){return this.getT("version")}toPayload(){const t={},n=Object.keys(b(this,Wr));for(let s=0;s<n.length;s++){const i=n[s],a=this.get(i);(!(a instanceof Option)||a.isSome)&&(t[i]=a.toHex())}return objectSpread(t,{address:this.address.toString(),blockHash:this.blockHash.toHex(),blockNumber:this.blockNumber.toHex(),era:this.era.toHex(),genesisHash:this.genesisHash.toHex(),method:this.method.toHex(),nonce:this.nonce.toHex(),signedExtensions:this.signedExtensions.map(s=>s.toString()),specVersion:this.runtimeVersion.specVersion.toHex(),tip:this.tip.toHex(),transactionVersion:this.runtimeVersion.transactionVersion.toHex(),version:this.version.toNumber()})}toRaw(){const t=this.toPayload(),n=u8aToHex(this.registry.createTypeUnsafe("ExtrinsicPayload",[t,{version:t.version}]).toU8a({method:!0}));return{address:t.address,data:n,type:"payload"}}}Wr=new WeakMap;function sign(r,e,t,n){const s=t.length>256?r.hash(t):t;return e.sign(s,n)}var Bn;class GenericExtrinsicPayloadV4 extends Struct{constructor(t,n){super(t,objectSpread({method:"Bytes"},t.getSignedExtensionTypes(),t.getSignedExtensionExtra()),n);_(this,Bn,void 0);Q(this,Bn,{withType:t.createTypeUnsafe("ExtrinsicSignature",[])instanceof Enum})}inspect(){return super.inspect({method:!0})}get blockHash(){return this.getT("blockHash")}get era(){return this.getT("era")}get genesisHash(){return this.getT("genesisHash")}get method(){return this.getT("method")}get nonce(){return this.getT("nonce")}get specVersion(){return this.getT("specVersion")}get tip(){return this.getT("tip")}get transactionVersion(){return this.getT("transactionVersion")}get assetId(){return this.getT("assetId")}sign(t){return sign(this.registry,t,this.toU8a({method:!0}),b(this,Bn))}}Bn=new WeakMap;const FAKE_SIGNATURE=new Uint8Array(256).fill(1);function toAddress(r,e){return r.createTypeUnsafe("Address",[isU8a(e)?u8aToHex(e):e])}var br;const cs=class extends Struct{constructor(t,n,{isSigned:s}={}){const i=t.getSignedExtensionTypes();super(t,objectSpread({signer:"Address",signature:"ExtrinsicSignature"},i),cs.decodeExtrinsicSignature(n,s));_(this,br,void 0);Q(this,br,Object.keys(i)),objectProperties(this,b(this,br),a=>this.get(a))}static decodeExtrinsicSignature(t,n=!1){if(t){if(t instanceof cs)return t}else return EMPTY_U8A;return n?t:EMPTY_U8A}get encodedLength(){return this.isSigned?super.encodedLength:0}get isSigned(){return!this.signature.isEmpty}get era(){return this.getT("era")}get nonce(){return this.getT("nonce")}get signature(){return this.multiSignature.value||this.multiSignature}get multiSignature(){return this.getT("signature")}get signer(){return this.getT("signer")}get tip(){return this.getT("tip")}_injectSignature(t,n,s){for(let i=0;i<b(this,br).length;i++){const a=b(this,br)[i],o=s.get(a);isUndefined(o)||this.set(a,o)}return this.set("signer",t),this.set("signature",n),this}addSignature(t,n,s){return this._injectSignature(toAddress(this.registry,t),this.registry.createTypeUnsafe("ExtrinsicSignature",[n]),new GenericExtrinsicPayloadV4(this.registry,s))}createPayload(t,n){const{era:s,runtimeVersion:{specVersion:i,transactionVersion:a}}=n;return new GenericExtrinsicPayloadV4(this.registry,objectSpread({},n,{era:s||IMMORTAL_ERA,method:t.toHex(),specVersion:i,transactionVersion:a}))}sign(t,n,s){if(!n||!n.addressRaw)throw new Error(`Expected a valid keypair for signing, found ${stringify(n)}`);const i=this.createPayload(t,s);return this._injectSignature(toAddress(this.registry,n.addressRaw),this.registry.createTypeUnsafe("ExtrinsicSignature",[i.sign(n)]),i)}signFake(t,n,s){if(!n)throw new Error(`Expected a valid address for signing, found ${stringify(n)}`);const i=this.createPayload(t,s);return this._injectSignature(toAddress(this.registry,n),this.registry.createTypeUnsafe("ExtrinsicSignature",[FAKE_SIGNATURE]),i)}toU8a(t){return this.isSigned?super.toU8a(t):EMPTY_U8A}};let GenericExtrinsicSignatureV4=cs;br=new WeakMap;function decodeAccountId$1(r){return isU8a(r)||Array.isArray(r)?u8aToU8a(r):isHex(r)||isEthereumAddress(r.toString())?hexToU8a(r.toString()):isString(r)?u8aToU8a(r):r}class GenericEthereumAccountId extends U8aFixed{constructor(e,t=new Uint8Array){super(e,decodeAccountId$1(t),160)}eq(e){return super.eq(decodeAccountId$1(e))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toString(){return ethereumEncode(this)}toRawType(){return"AccountId"}}const PREFIX_1BYTE=239,PREFIX_2BYTE=252,PREFIX_4BYTE=253,PREFIX_8BYTE=254,MAX_1BYTE=new BN(PREFIX_1BYTE),MAX_2BYTE=new BN(1).shln(16),MAX_4BYTE=new BN(1).shln(32);function decodeAccountIndex(r){return r instanceof GenericAccountIndex?r.toBn():isBn(r)||isNumber(r)||isHex(r)||isU8a(r)||isBigInt(r)?r:decodeAccountIndex(decodeAddress(r))}class GenericAccountIndex extends u32{constructor(e,t=new BN(0)){super(e,decodeAccountIndex(t))}static calcLength(e){const t=bnToBn(e);return t.lte(MAX_1BYTE)?1:t.lt(MAX_2BYTE)?2:t.lt(MAX_4BYTE)?4:8}static readLength(e){const t=e[0];return t===PREFIX_2BYTE?[1,2]:t===PREFIX_4BYTE?[1,4]:t===PREFIX_8BYTE?[1,8]:[0,1]}static writeLength(e){switch(e.length){case 2:return new Uint8Array([PREFIX_2BYTE]);case 4:return new Uint8Array([PREFIX_4BYTE]);case 8:return new Uint8Array([PREFIX_8BYTE]);default:return new Uint8Array([])}}eq(e){return isBn(e)||isNumber(e)?super.eq(e):super.eq(this.registry.createTypeUnsafe("AccountIndex",[e]))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toString(){const e=GenericAccountIndex.calcLength(this);return encodeAddress(this.toU8a().subarray(0,e),this.registry.chainSS58)}toRawType(){return"AccountIndex"}}const ACCOUNT_ID_PREFIX$1=new Uint8Array([255]);function decodeString$1(r,e){const t=decodeAddress(e);return t.length===20?r.createTypeUnsafe("EthereumAccountId",[t]):r.createTypeUnsafe("AccountIndex",[u8aToBn(t,!0)])}function decodeU8a$3(r,e){if(e.length===20)return r.createTypeUnsafe("EthereumAccountId",[e]);if(e[0]===255)return r.createTypeUnsafe("EthereumAccountId",[e.subarray(1)]);const[t,n]=GenericAccountIndex.readLength(e);return r.createTypeUnsafe("AccountIndex",[u8aToBn(e.subarray(t,t+n))])}function decodeAddressOrIndex$1(r,e){return e instanceof GenericEthereumLookupSource?e.inner:e instanceof GenericEthereumAccountId||e instanceof GenericAccountIndex?e:isU8a(e)||Array.isArray(e)||isHex(e)?decodeU8a$3(r,u8aToU8a(e)):isBn(e)||isNumber(e)||isBigInt(e)?r.createTypeUnsafe("AccountIndex",[e]):decodeString$1(r,e)}class GenericEthereumLookupSource extends AbstractBase{constructor(e,t=new Uint8Array){super(e,decodeAddressOrIndex$1(e,t))}get encodedLength(){const e=this._rawLength;return e+(e>1?1:0)}get _rawLength(){return this.inner instanceof GenericAccountIndex?GenericAccountIndex.calcLength(this.inner):this.inner.encodedLength}toHex(){return u8aToHex(this.toU8a())}toRawType(){return"Address"}toU8a(e){const t=this.inner.toU8a().subarray(0,this._rawLength);return e?t:u8aConcat(this.inner instanceof GenericAccountIndex?GenericAccountIndex.writeLength(t):ACCOUNT_ID_PREFIX$1,t)}}function decodeAccountId(r){if(isU8a(r)||Array.isArray(r))return u8aToU8a(r);if(r){if(isHex(r))return hexToU8a(r);if(isString(r))return decodeAddress(r.toString())}else return new Uint8Array;throw new Error(`Unknown type passed to AccountId constructor, found typeof ${typeof r}`)}class GenericAccountId extends U8aFixed{constructor(e,t){const n=decodeAccountId(t);if(n.length<32&&n.some(s=>s))throw new Error(`Invalid AccountId provided, expected 32 bytes, found ${n.length}`);super(e,n,256)}eq(e){return super.eq(decodeAccountId(e))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toString(){return encodeAddress(this,this.registry.chainSS58)}toRawType(){return"AccountId"}}class GenericBlock extends Struct{constructor(e,t){super(e,{header:"Header",extrinsics:"Vec<Extrinsic>"},t)}get contentHash(){return this.registry.hash(this.toU8a())}get extrinsics(){return this.getT("extrinsics")}get hash(){return this.header.hash}get header(){return this.getT("header")}}function getArgsDef(r,e){return e.fields.reduce((t,{name:n,type:s},i)=>(t[n.unwrapOr(`param${i}`).toString()]=r.createLookupType(s),t),{})}function decodeCallViaObject(r,e,t){const{args:n,callIndex:s}=e,i=s instanceof GenericCallIndex?s.toU8a():s,a=t||r.findMetaCall(i).meta;return{args:n,argsDef:getArgsDef(r,a),callIndex:s,meta:a}}function decodeCallViaU8a(r,e,t){const n=r.firstCallIndex.slice();n.set(e.subarray(0,2),0);const s=t||r.findMetaCall(n).meta;return{args:e.subarray(2),argsDef:getArgsDef(r,s),callIndex:n,meta:s}}function decodeCall(r,e=new Uint8Array,t){if(isU8a(e)||isHex(e))return decodeCallViaU8a(r,u8aToU8a(e),t);if(isObject$2(e)&&e.callIndex&&e.args)return decodeCallViaObject(r,e,t);throw new Error(`Call: Cannot decode value '${e}' of type ${typeof e}`)}class GenericCallIndex extends U8aFixed{constructor(e,t){super(e,t,16)}}class GenericCall extends Struct{constructor(e,t,n){const s=decodeCall(e,t,n);try{super(e,{callIndex:GenericCallIndex,args:Struct.with(s.argsDef)},s)}catch(i){let a="unknown.unknown";try{const o=e.findMetaCall(s.callIndex);a=`${o.section}.${o.method}`}catch{}throw new Error(`Call: failed decoding ${a}:: ${i.message}`)}this._meta=s.meta}get args(){return[...this.getT("args").values()]}get argsDef(){return getArgsDef(this.registry,this.meta)}get argsEntries(){return[...this.getT("args").entries()]}get callIndex(){return this.getT("callIndex").toU8a()}get data(){return this.getT("args").toU8a()}get meta(){return this._meta}get method(){return this.registry.findMetaCall(this.callIndex).method}get section(){return this.registry.findMetaCall(this.callIndex).section}is(e){return e.callIndex[0]===this.callIndex[0]&&e.callIndex[1]===this.callIndex[1]}toHuman(e){var t,n;let s;try{s=this.registry.findMetaCall(this.callIndex)}catch{}return objectSpread({args:this.argsEntries.reduce((i,[a,o])=>objectSpread(i,{[a]:o.toHuman(e)}),{}),method:(t=s)===null||t===void 0?void 0:t.method,section:(n=s)===null||n===void 0?void 0:n.section},e&&s?{docs:s.meta.docs.map(i=>i.toString())}:null)}toRawType(){return"Call"}}function createValue(r,e,t,n=!0){return t&&isFunction$3(t.unwrapOrDefault)?t:r.createTypeUnsafe(e,[n?isNull(t)||isUndefined(t)?null:Array.isArray(t)?t:[t]:t])}function decodeValue(r,e,t){return e==="ss58Format"?createValue(r,"Option<u32>",t,!1):e==="tokenDecimals"?createValue(r,"Option<Vec<u32>>",t):e==="tokenSymbol"?createValue(r,"Option<Vec<Text>>",t):t}function decode(r,e){return(e&&isFunction$3(e.entries)?[...e.entries()]:Object.entries(e||{})).reduce((t,[n,s])=>(t[n]=decodeValue(r,n,s),t),{ss58Format:r.createTypeUnsafe("Option<u32>",[]),tokenDecimals:r.createTypeUnsafe("Option<Vec<u32>>",[]),tokenSymbol:r.createTypeUnsafe("Option<Vec<Text>>",[])})}class GenericChainProperties extends Json{constructor(e,t){super(e,decode(e,t))}get ss58Format(){return this.getT("ss58Format")}get tokenDecimals(){return this.getT("tokenDecimals")}get tokenSymbol(){return this.getT("tokenSymbol")}}const CID_AURA=stringToU8a("aura"),CID_BABE=stringToU8a("BABE"),CID_GRPA=stringToU8a("FRNK"),CID_POW=stringToU8a("pow_");function getAuraAuthor(r,e,t){return t[r.createTypeUnsafe("RawAuraPreDigest",[e.toU8a(!0)]).slotNumber.mod(new BN(t.length)).toNumber()]}function getBabeAuthor(r,e,t){const n=r.createTypeUnsafe("RawBabePreDigestCompat",[e.toU8a(!0)]);return t[n.value.toNumber()]}function getBytesAsAuthor(r,e){return r.createTypeUnsafe("AccountId",[e])}class GenericConsensusEngineId extends U8aFixed{constructor(e,t){super(e,isNumber(t)?bnToU8a(t,{isLe:!1}):t,32)}get isAura(){return this.eq(CID_AURA)}get isBabe(){return this.eq(CID_BABE)}get isGrandpa(){return this.eq(CID_GRPA)}get isPow(){return this.eq(CID_POW)}extractAuthor(e,t){if(t!=null&&t.length){if(this.isAura)return getAuraAuthor(this.registry,e,t);if(this.isBabe)return getBabeAuthor(this.registry,e,t)}if(this.isPow||e.length===20)return getBytesAsAuthor(this.registry,e)}toHuman(){return this.toString()}toRawType(){return"ConsensusEngineId"}toString(){return this.isAscii?u8aToString(this):u8aToHex(this)}}const ACCOUNT_ID_PREFIX=new Uint8Array([255]);function decodeString(r,e){const t=decodeAddress(e);return t.length===32?r.createTypeUnsafe("AccountId",[t]):r.createTypeUnsafe("AccountIndex",[u8aToBn(t,!0)])}function decodeU8a$2(r,e){if(e.length===32)return r.createTypeUnsafe("AccountId",[e]);if(e[0]===255)return r.createTypeUnsafe("AccountId",[e.subarray(1)]);const[t,n]=GenericAccountIndex.readLength(e);return r.createTypeUnsafe("AccountIndex",[u8aToBn(e.subarray(t,t+n))])}function decodeAddressOrIndex(r,e){return e instanceof GenericLookupSource?e.inner:e instanceof GenericAccountId||e instanceof GenericAccountIndex?e:isBn(e)||isNumber(e)||isBigInt(e)?r.createTypeUnsafe("AccountIndex",[e]):Array.isArray(e)||isHex(e)||isU8a(e)?decodeU8a$2(r,u8aToU8a(e)):decodeString(r,e)}class GenericLookupSource extends AbstractBase{constructor(e,t=new Uint8Array){super(e,decodeAddressOrIndex(e,t))}get encodedLength(){const e=this._rawLength;return e+(e>1?1:0)}get _rawLength(){return this.inner instanceof GenericAccountIndex?GenericAccountIndex.calcLength(this.inner):this.inner.encodedLength}inspect(){const e=this.inner.toU8a().subarray(0,this._rawLength);return{outer:[new Uint8Array(this.inner instanceof GenericAccountIndex?GenericAccountIndex.writeLength(e):ACCOUNT_ID_PREFIX),e]}}toHex(){return u8aToHex(this.toU8a())}toRawType(){return"Address"}toU8a(e){const t=this.inner.toU8a().subarray(0,this._rawLength);return e?t:u8aConcat(this.inner instanceof GenericAccountIndex?GenericAccountIndex.writeLength(t):ACCOUNT_ID_PREFIX,t)}}function decodeU8a$1(r,e){return[0,32].includes(e.length)?{Id:e}:e.length===20?{Address20:e}:e.length<=8?{Index:r.createTypeUnsafe("AccountIndex",[e]).toNumber()}:e}function decodeMultiAny(r,e){return e instanceof GenericAccountId?{Id:e}:isU8a(e)?decodeU8a$1(r,e):e instanceof GenericMultiAddress?e:e instanceof GenericAccountIndex||isBn(e)||isNumber(e)?{Index:isNumber(e)?e:e.toNumber()}:isString(e)?decodeU8a$1(r,decodeAddress(e.toString())):e}class GenericMultiAddress extends Enum{constructor(e,t){super(e,{Id:"AccountId",Index:"Compact<AccountIndex>",Raw:"Bytes",Address32:"H256",Address20:"H160"},decodeMultiAny(e,t))}inspect(){const{inner:e,outer:t=[]}=this.inner.inspect();return{inner:e,outer:[new Uint8Array([this.index]),...t]}}toString(){return this.value.toString()}}const AYE_BITS=128,NAY_BITS=0,CON_MASK=127,DEF_CONV=0;function decodeVoteBool(r){return r?new Uint8Array([AYE_BITS|DEF_CONV]):new Uint8Array([NAY_BITS])}function decodeVoteU8a(r){return r.length?r.subarray(0,1):new Uint8Array([NAY_BITS])}function decodeVoteType(r,e){return new Uint8Array([(new bool(r,e.aye).isTrue?AYE_BITS:NAY_BITS)|r.createTypeUnsafe("Conviction",[e.conviction||DEF_CONV]).index])}function decodeVote(r,e){return isU8a(e)?decodeVoteU8a(e):isUndefined(e)||e instanceof Boolean||isBoolean(e)?decodeVoteBool(new bool(r,e).isTrue):isNumber(e)?decodeVoteBool(e<0):decodeVoteType(r,e)}var Nn,On;class GenericVote extends U8aFixed{constructor(t,n){const s=decodeVote(t,n);super(t,s,8);_(this,Nn,void 0);_(this,On,void 0);Q(this,Nn,(s[0]&AYE_BITS)===AYE_BITS),Q(this,On,this.registry.createTypeUnsafe("Conviction",[s[0]&CON_MASK]))}get conviction(){return b(this,On)}get isAye(){return b(this,Nn)}get isNay(){return!this.isAye}toHuman(t){return{conviction:this.conviction.toHuman(t),vote:this.isAye?"Aye":"Nay"}}toRawType(){return"Vote"}}Nn=new WeakMap,On=new WeakMap;function decodeDataU8a(r,e){const t=e[0];if(t){if(t>=1&&t<=33){const n=t-1,s=e.subarray(1,n+1);return[r.createTypeUnsafe("Raw",[s]),1]}else if(t>=34&&t<=37)return[e.subarray(1,32+1),t-32]}else return[void 0,void 0];throw new Error(`Unable to decode Data, invalid indicator byte ${t}`)}function decodeData(r,e){return isU8a(e)||isString(e)?decodeDataU8a(r,u8aToU8a(e)):e?[e,void 0]:[void 0,void 0]}class Data extends Enum{constructor(e,t){if(super(e,{None:"Null",Raw:"Bytes",BlakeTwo256:"H256",Sha256:"H256",Keccak256:"H256",ShaThree256:"H256"},...decodeData(e,t)),this.isRaw&&this.asRaw.length>32)throw new Error("Data.Raw values are limited to a maximum length of 32 bytes")}get asBlakeTwo256(){return this.value}get asKeccak256(){return this.value}get asRaw(){return this.value}get asSha256(){return this.value}get asShaThree256(){return this.value}get isBlakeTwo256(){return this.index===2}get isKeccak256(){return this.index===4}get isNone(){return this.index===0}get isRaw(){return this.index===1}get isSha256(){return this.index===3}get isShaThree256(){return this.index===5}get encodedLength(){return this.toU8a().length}toU8a(){if(this.index===0)return new Uint8Array(1);if(this.index===1){const t=this.value.toU8a(!0),n=Math.min(t.length,32),s=new Uint8Array(n+1);return s.set([n+1],0),s.set(t.subarray(0,n),1),s}const e=new Uint8Array(33);return e.set([this.index+32],0),e.set(this.value.toU8a(),1),e}}function flattenUniq(r,e=[]){for(let t=0;t<r.length;t++){const n=r[t];Array.isArray(n)?flattenUniq(n,e):e.push(n)}return[...new Set(e)]}function getSiName(r,e){const t=r.getTypeDef(e);return t.lookupName||t.type}function extractSubSingle(r,{sub:e}){const{lookupName:t,type:n}=e;return extractTypes$1([t||n])}function extractSubArray(r,{sub:e}){return extractTypes$1(e.map(({lookupName:t,type:n})=>t||n))}function unhandled(r,{info:e}){throw new Error(`Unhandled: Unable to create and validate type from ${r} (info=${TypeDefInfo[e]})`)}const mapping={[TypeDefInfo.BTreeMap]:extractSubArray,[TypeDefInfo.BTreeSet]:extractSubSingle,[TypeDefInfo.Compact]:extractSubSingle,[TypeDefInfo.DoNotConstruct]:unhandled,[TypeDefInfo.Enum]:extractSubArray,[TypeDefInfo.HashMap]:extractSubArray,[TypeDefInfo.Int]:unhandled,[TypeDefInfo.Linkage]:extractSubSingle,[TypeDefInfo.Null]:unhandled,[TypeDefInfo.Option]:extractSubSingle,[TypeDefInfo.Plain]:(r,e)=>e.lookupName||e.type,[TypeDefInfo.Range]:extractSubSingle,[TypeDefInfo.RangeInclusive]:extractSubSingle,[TypeDefInfo.Result]:extractSubArray,[TypeDefInfo.Set]:extractSubArray,[TypeDefInfo.Si]:unhandled,[TypeDefInfo.Struct]:extractSubArray,[TypeDefInfo.Tuple]:extractSubArray,[TypeDefInfo.UInt]:unhandled,[TypeDefInfo.Vec]:extractSubSingle,[TypeDefInfo.VecFixed]:extractSubSingle,[TypeDefInfo.WrapperKeepOpaque]:extractSubSingle,[TypeDefInfo.WrapperOpaque]:extractSubSingle};function extractTypes$1(r){const e=r.length,t=new Array(e);for(let n=0;n<e;n++){const s=r[n],i=getTypeDef(s);t[n]=mapping[i.info](s,i)}return t}const l$b=logger("metadata");function validateTypes(r,e,t){const n=flattenUniq(extractTypes$1(t)).filter(s=>!r.hasType(s)&&!r.isLookupType(s)).sort();if(n.length!==0){const s=`Unknown types found, no types for ${n.join(", ")}`;if(e)throw new Error(s);l$b.warn(s)}return t}function extractTypes(r,e){return e.map(({type:t})=>r.getTypeDef(t).type)}function extractFieldTypes(r,e){return r.getSiType(e).def.asVariant.variants.map(({fields:t})=>extractTypes(r,t))}function getPalletNames({lookup:r,pallets:e}){return e.reduce((t,{calls:n,constants:s,events:i,storage:a})=>(t.push([extractTypes(r,s)]),n.isSome&&t.push(extractFieldTypes(r,n.unwrap().type)),i.isSome&&t.push(extractFieldTypes(r,i.unwrap().type)),a.isSome&&t.push(a.unwrap().items.map(({type:o})=>{if(o.isPlain)return[r.getTypeDef(o.asPlain).type];const{hashers:c,key:h,value:p}=o.asMap;return c.length===1?[r.getTypeDef(p).type,r.getTypeDef(h).type]:[r.getTypeDef(p).type,...r.getSiType(h).def.asTuple.map(x=>r.getTypeDef(x).type)]})),t),[])}function getUniqTypes(r,e,t){return validateTypes(r,t,flattenUniq(getPalletNames(e)))}function trimDocs(r){const e=r.map(n=>n.toString().trim()),t=e.findIndex(n=>!n.length);return t===-1?e:e.slice(0,t)}function toCallsOnly(r,{extrinsic:e,lookup:t,pallets:n}){return r.createTypeUnsafe("MetadataLatest",[{extrinsic:e,lookup:{types:t.types.map(({id:s,type:i})=>r.createTypeUnsafe("PortableType",[{id:s,type:Je(Ve({},i),{docs:trimDocs(i.docs)})}]))},pallets:n.map(({calls:s,index:i,name:a})=>({calls:r.createTypeUnsafe("Option<PalletCallMetadataLatest>",[s.unwrapOr(null)]),index:i,name:a}))}]).toJSON()}const HASHER_MAP={Blake2_128:[16,!1],Blake2_128Concat:[16,!0],Blake2_256:[32,!1],Identity:[0,!0],Twox128:[16,!1],Twox256:[32,!1],Twox64Concat:[8,!0]};function unwrapStorageSi(r){return r.isPlain?r.asPlain:r.asMap.value}function unwrapStorageType(r,e,t){const n=getSiName(r.lookup,unwrapStorageSi(e));return t?`Option<${n}>`:n}function decodeStorageKey(r){if(isU8a(r)||!r||isString(r))return{key:r};if(r instanceof StorageKey)return{key:r,method:r.method,section:r.section};if(isFunction$3(r))return{key:r(),method:r.method,section:r.section};if(Array.isArray(r)){const[e,t=[]]=r;if(!isFunction$3(e))throw new Error("Expected function input for key construction");if(e.meta&&e.meta.type.isMap){const n=e.meta.type.asMap;if(!Array.isArray(t)||t.length!==n.hashers.length)throw new Error(`Expected an array of ${n.hashers.length} values as params to a Map query`)}return{key:e(...t),method:e.method,section:e.section}}throw new Error(`Unable to convert input ${r} to StorageKey`)}function decodeHashers(r,e,t){let n=32;const s=new Array(t.length);for(let i=0;i<t.length;i++){const[a,o]=t[i],[c,h]=HASHER_MAP[a.type],p=h?r.createTypeUnsafe(getSiName(r.lookup,o),[e.subarray(n+c)]):r.createTypeUnsafe("Raw",[e.subarray(n,n+c)]);n+=c+(h?p.encodedLength:0),s[i]=p}return s}function decodeArgsFromMeta(r,e,t){if(!t||!t.type.isMap)return[];const{hashers:n,key:s}=t.type.asMap,i=n.length===1?[s]:r.lookup.getSiType(s).def.asTuple;return decodeHashers(r,e,n.map((a,o)=>[a,i[o]]))}function getMeta(r){if(r instanceof StorageKey)return r.meta;if(isFunction$3(r))return r.meta;if(Array.isArray(r)){const[e]=r;return e.meta}}function getType(r,e){if(e instanceof StorageKey)return e.outputType;if(isFunction$3(e))return unwrapStorageType(r,e.meta.type);if(Array.isArray(e)){const[t]=e;if(t.meta)return unwrapStorageType(r,t.meta.type)}return"Raw"}var xr,Hn,_r,Gr,Kr;class StorageKey extends Bytes{constructor(t,n,s={}){const{key:i,method:a,section:o}=decodeStorageKey(n);super(t,i);_(this,xr,void 0);_(this,Hn,void 0);_(this,_r,void 0);_(this,Gr,void 0);_(this,Kr,void 0);Q(this,_r,getType(t,n)),this.setMeta(getMeta(n),s.section||o,s.method||a)}get args(){return b(this,xr)}get meta(){return b(this,Hn)}get method(){return b(this,Gr)}get outputType(){return b(this,_r)}get section(){return b(this,Kr)}is(t){return t.section===this.section&&t.method===this.method}setMeta(t,n,s){Q(this,Hn,t),Q(this,Gr,s||b(this,Gr)),Q(this,Kr,n||b(this,Kr)),t&&Q(this,_r,unwrapStorageType(this.registry,t.type));try{Q(this,xr,decodeArgsFromMeta(this.registry,this.toU8a(!0),t))}catch{}return this}toHuman(){return b(this,xr).length?b(this,xr).map(t=>t.toHuman()):super.toHuman()}toRawType(){return"StorageKey"}}xr=new WeakMap,Hn=new WeakMap,_r=new WeakMap,Gr=new WeakMap,Kr=new WeakMap;var baseTypes=Object.freeze(Object.defineProperty({__proto__:null,GenericExtrinsic,GenericExtrinsicEra,GenericMortalEra:MortalEra,GenericImmortalEra:ImmortalEra,GenericExtrinsicPayload,GenericExtrinsicPayloadUnknown,GenericExtrinsicUnknown,GenericSignerPayload,GenericExtrinsicV4,GenericExtrinsicPayloadV4,GenericExtrinsicSignatureV4,GenericAccountId,GenericAccountIndex,GenericBlock,GenericCall,GenericChainProperties,GenericConsensusEngineId,GenericEvent,GenericEventData,GenericLookupSource,GenericMultiAddress,GenericAddress:GenericMultiAddress,GenericVote,GenericEthereumAccountId,GenericEthereumLookupSource,BitVec,bool,Bool:bool,Bytes,f32,F32:f32,f64,F64:f64,i8,I8:i8,i16,I16:i16,i32,I32:i32,i64,I64:i64,i128,I128:i128,i256,I256:i256,Null,OptionBool,Text,Type,u8,U8:u8,u16,U16:u16,u32,U32:u32,u64,U64:u64,u128,U128:u128,u256,U256:u256,usize,USize:usize,Data,StorageKey},Symbol.toStringTag,{value:"Module"}));function createStorageHasher(r,e){return e.toNumber()>=2?r.createTypeUnsafe("StorageHasherV10",[e.toNumber()+1]):r.createTypeUnsafe("StorageHasherV10",[e])}function createStorageType(r,e){return e.isMap?[Je(Ve({},e.asMap),{hasher:createStorageHasher(r,e.asMap.hasher)}),1]:e.isDoubleMap?[Je(Ve({},e.asDoubleMap),{hasher:createStorageHasher(r,e.asDoubleMap.hasher),key2Hasher:createStorageHasher(r,e.asDoubleMap.key2Hasher)}),2]:[e.asPlain,0]}function convertModule(r,e){const t=e.storage.unwrapOr(null);return r.createTypeUnsafe("ModuleMetadataV10",[Je(Ve({},e),{storage:t?Je(Ve({},t),{items:t.items.map(n=>Je(Ve({},n),{type:r.createTypeUnsafe("StorageEntryTypeV10",createStorageType(r,n.type))}))}):null})])}function toV10(r,{modules:e}){return r.createTypeUnsafe("MetadataV10",[{modules:e.map(t=>convertModule(r,t))}])}function toV11(r,{modules:e}){return r.createTypeUnsafe("MetadataV11",[{extrinsic:{signedExtensions:[],version:0},modules:e}])}function toV12(r,{extrinsic:e,modules:t}){return r.createTypeUnsafe("MetadataV12",[{extrinsic:e,modules:t.map(n=>r.createTypeUnsafe("ModuleMetadataV12",[Je(Ve({},n),{index:255})]))}])}function toV13(r,e){return r.createTypeUnsafe("MetadataV13",[e])}const typesAlias={assets:{Approval:"AssetApproval",ApprovalKey:"AssetApprovalKey",Balance:"TAssetBalance",DestroyWitness:"AssetDestroyWitness"},babe:{EquivocationProof:"BabeEquivocationProof"},balances:{Status:"BalanceStatus"},beefy:{AuthorityId:"BeefyId"},contracts:{StorageKey:"ContractStorageKey"},electionProviderMultiPhase:{Phase:"ElectionPhase"},ethereum:{Block:"EthBlock",Header:"EthHeader",Receipt:"EthReceipt",Transaction:"EthTransaction",TransactionStatus:"EthTransactionStatus"},evm:{Account:"EvmAccount",Log:"EvmLog",Vicinity:"EvmVicinity"},grandpa:{Equivocation:"GrandpaEquivocation",EquivocationProof:"GrandpaEquivocationProof"},identity:{Judgement:"IdentityJudgement"},inclusion:{ValidatorIndex:"ParaValidatorIndex"},paraDisputes:{ValidatorIndex:"ParaValidatorIndex"},paraInclusion:{ValidatorIndex:"ParaValidatorIndex"},paraScheduler:{ValidatorIndex:"ParaValidatorIndex"},paraShared:{ValidatorIndex:"ParaValidatorIndex"},parachains:{Id:"ParaId"},parasDisputes:{ValidatorIndex:"ParaValidatorIndex"},parasInclusion:{ValidatorIndex:"ParaValidatorIndex"},parasScheduler:{ValidatorIndex:"ParaValidatorIndex"},parasShared:{ValidatorIndex:"ParaValidatorIndex"},proposeParachain:{Proposal:"ParachainProposal"},proxy:{Announcement:"ProxyAnnouncement"},scheduler:{ValidatorIndex:"ParaValidatorIndex"},shared:{ValidatorIndex:"ParaValidatorIndex"},society:{Judgement:"SocietyJudgement",Vote:"SocietyVote"},staking:{Compact:"CompactAssignments"},treasury:{Proposal:"TreasuryProposal"},xcm:{AssetId:"XcmAssetId"},xcmPallet:{AssetId:"XcmAssetId"}};function getAliasTypes({knownTypes:r},e){var t;return objectSpread({},typesAlias[e],(t=r.typesAlias)===null||t===void 0?void 0:t[e])}const BOXES=[["<",">"],["<",","],[",",">"],["(",")"],["(",","],[",",","],[",",")"]];function compatType(r,e){const t=e.toString(),n=r.findIndex(({def:s})=>s.HistoricMetaCompat===t);return n!==-1?n:r.push({def:{HistoricMetaCompat:t}})-1}function compatTypes(r,...e){for(let t=0;t<e.length;t++)compatType(r,e[t])}function makeTupleType(r,e){return r.push({def:{Tuple:e}})-1}function makeVariantType(r,e,t,n){return t.push({def:{Variant:{variants:n}},path:[`pallet_${r.toString()}`,"pallet",e]})-1}function registerOriginCaller(r,e,t){r.register({OriginCaller:{_enum:e.map((n,s)=>[n.name.toString(),t>=12?n.index.toNumber():s]).sort((n,s)=>n[1]-s[1]).reduce((n,[s,i])=>{for(let a=Object.keys(n).length;a<i;a++)n[`Empty${a}`]="Null";return n[s]=knownOrigins[s]||"Null",n},{})}})}function setTypeOverride(r,e){e.forEach(t=>{const n=Object.keys(r).find(s=>t.eq(s));if(n)t.setOverride(r[n]);else{const s=t.toString(),i=Object.entries(r).reduce((a,[o,c])=>BOXES.reduce((h,[p,x])=>h.replace(`${p}${o}${x}`,`${p}${c}${x}`),a),s);s!==i&&t.setOverride(i)}})}function convertCalls(r,e,t,n,s){const i=n.map(({args:a,docs:o,name:c},h)=>(setTypeOverride(s,a.map(({type:p})=>p)),e.createTypeUnsafe("SiVariant",[{docs:o,fields:a.map(({name:p,type:x})=>e.createTypeUnsafe("SiField",[{name:p,type:compatType(r,x)}])),index:h,name:c}])));return e.createTypeUnsafe("PalletCallMetadataV14",[{type:makeVariantType(t,"Call",r,i)}])}function convertConstants(r,e,t,n){return t.map(({docs:s,name:i,type:a,value:o})=>(setTypeOverride(n,[a]),e.createTypeUnsafe("PalletConstantMetadataV14",[{docs:s,name:i,type:compatType(r,a),value:o}])))}function convertErrors(r,e,t,n,s){const i=n.map(({docs:a,name:o},c)=>e.createTypeUnsafe("SiVariant",[{docs:a,fields:[],index:c,name:o}]));return e.createTypeUnsafe("PalletErrorMetadataV14",[{type:makeVariantType(t,"Error",r,i)}])}function convertEvents(r,e,t,n,s){const i=n.map(({args:a,docs:o,name:c},h)=>(setTypeOverride(s,a),e.createTypeUnsafe("SiVariant",[{docs:o,fields:a.map(p=>e.createTypeUnsafe("SiField",[{type:compatType(r,p)}])),index:h,name:c}])));return e.createTypeUnsafe("PalletEventMetadataV14",[{type:makeVariantType(t,"Event",r,i)}])}function createMapEntry(r,e,t,{hashers:n,isLinked:s,isOptional:i,keys:a,value:o}){return setTypeOverride(t,[o,...Array.isArray(a)?a:[a]]),e.createTypeUnsafe("StorageEntryTypeV14",[{Map:{hashers:n,key:n.length===1?compatType(r,a[0]):makeTupleType(r,a.map(c=>compatType(r,c))),value:s?compatType(r,`(${i?`Option<${o.toString()}>`:o.toString()}, Linkage<${a[0].toString()}>)`):compatType(r,o)}}])}function convertStorage(r,e,{items:t,prefix:n},s){return e.createTypeUnsafe("PalletStorageMetadataV14",[{items:t.map(({docs:i,fallback:a,modifier:o,name:c,type:h})=>{let p;if(h.isPlain){const x=h.asPlain;setTypeOverride(s,[x]),p=e.createTypeUnsafe("StorageEntryTypeV14",[{Plain:compatType(r,x)}])}else if(h.isMap){const x=h.asMap;p=createMapEntry(r,e,s,{hashers:[x.hasher],isLinked:x.linked.isTrue,isOptional:o.isOptional,keys:[x.key],value:x.value})}else if(h.isDoubleMap){const x=h.asDoubleMap;p=createMapEntry(r,e,s,{hashers:[x.hasher,x.key2Hasher],isLinked:!1,isOptional:o.isOptional,keys:[x.key1,x.key2],value:x.value})}else{const x=h.asNMap;p=createMapEntry(r,e,s,{hashers:x.hashers,isLinked:!1,isOptional:o.isOptional,keys:x.keyVec,value:x.value})}return e.createTypeUnsafe("StorageEntryMetadataV14",[{docs:i,fallback:a,modifier:o,name:c,type:p}])}),prefix:n}])}function convertExtrinsic(r,{signedExtensions:e,version:t}){return r.createTypeUnsafe("ExtrinsicMetadataV14",[{signedExtensions:e.map(n=>({identifier:n,type:0})),type:0,version:t}])}function createPallet(r,e,t,{calls:n,constants:s,errors:i,events:a,storage:o}){const c=getAliasTypes(e,stringCamelCase(t.name));return e.createTypeUnsafe("PalletMetadataV14",[{calls:n&&convertCalls(r,e,t.name,n,c),constants:convertConstants(r,e,s,c),errors:i&&convertErrors(r,e,t.name,i,c),events:a&&convertEvents(r,e,t.name,a,c),index:t.index,name:t.name,storage:o&&convertStorage(r,e,o,c)}])}function toV14(r,e,t){const n=[];compatTypes(n,"Null","u8","u16","u32","u64"),registerOriginCaller(r,e.modules,t);const s=convertExtrinsic(r,e.extrinsic),i=e.modules.map(a=>createPallet(n,r,a,{calls:a.calls.unwrapOr(null),constants:a.constants,errors:a.errors.length?a.errors:null,events:a.events.unwrapOr(null),storage:a.storage.unwrapOr(null)}));return r.createTypeUnsafe("MetadataV14",[{extrinsic:s,lookup:{types:n.map((a,o)=>r.createTypeUnsafe("PortableType",[{id:o,type:a}]))},pallets:i}])}function toLatest(r,e,t){return e}const MAGIC_NUMBER=1635018093;class MagicNumber extends u32{constructor(e,t){if(super(e,t),!this.isEmpty&&!this.eq(MAGIC_NUMBER))throw new Error(`MagicNumber mismatch: expected ${e.createTypeUnsafe("u32",[MAGIC_NUMBER]).toHex()}, found ${this.toHex()}`)}}const LATEST_VERSION=14;var Zr,Un,Qt,Yr;const Ms=class extends Struct{constructor(t,n){super(t,{magicNumber:MagicNumber,metadata:"MetadataAll"},n);_(this,Zr,new Map);_(this,Un,t=>{if(this.version>t)throw new Error(`Cannot convert metadata from version ${this.version} to ${t}`);return this.version===t});_(this,Qt,(t,n)=>{const s=`asV${t}`,i=t==="latest"?`asV${LATEST_VERSION}`:`asV${t-1}`;return t!=="latest"&&b(this,Un).call(this,t)?b(this,Yr).call(this)[s]:(b(this,Zr).has(t)||b(this,Zr).set(t,n(this.registry,this[i],this.version)),b(this,Zr).get(t))});_(this,Yr,()=>this.getT("metadata"))}get asCallsOnly(){return new Ms(this.registry,{magicNumber:this.magicNumber,metadata:this.registry.createTypeUnsafe("MetadataAll",[toCallsOnly(this.registry,this.asLatest),LATEST_VERSION])})}get asV9(){return b(this,Un).call(this,9),b(this,Yr).call(this).asV9}get asV10(){return b(this,Qt).call(this,10,toV10)}get asV11(){return b(this,Qt).call(this,11,toV11)}get asV12(){return b(this,Qt).call(this,12,toV12)}get asV13(){return b(this,Qt).call(this,13,toV13)}get asV14(){return b(this,Qt).call(this,14,toV14)}get asLatest(){return b(this,Qt).call(this,"latest",toLatest)}get magicNumber(){return this.getT("magicNumber")}get version(){return b(this,Yr).call(this).index}getUniqTypes(t){return getUniqTypes(this.registry,this.asLatest,t)}toJSON(){return this.asLatest,super.toJSON()}};let MetadataVersioned=Ms;Zr=new WeakMap,Un=new WeakMap,Qt=new WeakMap,Yr=new WeakMap;const VERSION_IDX=4,EMPTY_METADATA=new Uint8Array([109,101,116,97,9]);function decodeU8a(r,e){const t=e.length===0?EMPTY_METADATA:e;if(t[VERSION_IDX]===9)try{return new MetadataVersioned(r,t)}catch{return t[VERSION_IDX]=10,t}return t}class Metadata extends MetadataVersioned{constructor(e,t){super(e,isU8a(t)||isString(t)?decodeU8a(e,u8aToU8a(t)):t)}}function convert(r){return({name:e})=>r(e)}const objectNameToCamel=convert(stringCamelCase),objectNameToString=convert(r=>r.toString());function decorateConstants(r,{pallets:e},t){const n={};for(let s=0;s<e.length;s++){const{constants:i,name:a}=e[s];i.isEmpty||lazyMethod(n,stringCamelCase(a),()=>lazyMethods({},i,o=>{const c=r.createTypeUnsafe(r.createLookupType(o.type),[hexToU8a(o.value.toHex())]);return c.meta=o,c},objectNameToCamel))}return n}function variantToMeta(r,e){return objectSpread({args:e.fields.map(({type:t})=>r.getTypeDef(t).type)},e)}function decorateErrors(r,{lookup:e,pallets:t},n){const s={};for(let i=0;i<t.length;i++){const{errors:a,index:o,name:c}=t[i];if(a.isSome){const h=n>=12?o.toNumber():i;lazyMethod(s,stringCamelCase(c),()=>lazyVariants(e,a.unwrap(),objectNameToString,p=>({is:x=>isCodec$1(x)&&isCodec$1(x.index)&&x.index.eq(h)&&(isU8a(x.error)?x.error[0]===p.index.toNumber():isCodec$1(x.error)&&x.error.eq(p.index)),meta:r.createTypeUnsafe("ErrorMetadataLatest",[variantToMeta(e,p)])})))}}return s}function filterEventsSome({events:r}){return r.isSome}function decorateEvents(r,{lookup:e,pallets:t},n){const s={},i=t.filter(filterEventsSome);for(let a=0;a<i.length;a++){const{events:o,index:c,name:h}=i[a],p=n>=12?c.toNumber():a;lazyMethod(s,stringCamelCase(h),()=>lazyVariants(e,o.unwrap(),objectNameToString,x=>({is:A=>isCodec$1(A)&&isU8a(A.index)&&p===A.index[0]&&x.index.eq(A.index[1]),meta:r.createTypeUnsafe("EventMetadataLatest",[variantToMeta(e,x)])})))}return s}function isTx(r,e){return r.callIndex[0]===e[0]&&r.callIndex[1]===e[1]}function createUnchecked(r,e,t,n){const s=n.fields,i=stringCamelCase(n.name),a=(...o)=>{if(s.length!==o.length)throw new Error(`Extrinsic ${e}.${i} expects ${s.length} arguments, got ${o.length}.`);return r.createTypeUnsafe("Call",[{args:o,callIndex:t},n])};return a.is=o=>isTx(o,t),a.callIndex=t,a.meta=n,a.method=i,a.section=e,a.toJSON=()=>n.toJSON(),a}function filterCallsSome({calls:r}){return r.isSome}function createCallFunction(r,e,t,n,s){const{fields:i,index:a}=t,o=new Array(i.length);for(let c=0;c<i.length;c++){const{name:h,type:p,typeName:x}=i[c];o[c]=objectSpread({name:stringCamelCase(h.unwrapOr(`param${c}`)),type:getSiName(e,p)},x.isSome?{typeName:x.unwrap()}:null)}return createUnchecked(r,n,new Uint8Array([s,a.toNumber()]),r.createTypeUnsafe("FunctionMetadataLatest",[objectSpread({args:o},t)]))}function decorateExtrinsics(r,{lookup:e,pallets:t},n){const s={},i=t.filter(filterCallsSome);for(let a=0;a<i.length;a++){const{calls:o,index:c,name:h}=i[a],p=stringCamelCase(h),x=n>=12?c.toNumber():a;lazyMethod(s,p,()=>lazyVariants(e,o.unwrap(),objectNameToCamel,A=>createCallFunction(r,e,A,p,x)))}return s}const DEFAULT_FN=r=>xxhashAsU8a(r,128),HASHERS={Blake2_128:r=>blake2AsU8a(r,128),Blake2_128Concat:r=>u8aConcat(blake2AsU8a(r,128),u8aToU8a(r)),Blake2_256:r=>blake2AsU8a(r,256),Identity:r=>u8aToU8a(r),Twox128:r=>xxhashAsU8a(r,128),Twox256:r=>xxhashAsU8a(r,256),Twox64Concat:r=>u8aConcat(xxhashAsU8a(r,64),u8aToU8a(r))};function getHasher(r){return HASHERS[r.type]||DEFAULT_FN}const NO_RAW_ARGS={args:[],hashers:[],keys:[]};function assertArgs({method:r,section:e},{args:t,keys:n}){if(Array.isArray(t)){if(t.filter(filterDefined).length!==n.length)throw new Error(`Call to ${stringCamelCase(e||"unknown")}.${stringCamelCase(r||"unknown")} needs ${n.length} arguments, found [${t.join(", ")}]`)}else throw new Error(`Call to ${stringCamelCase(e||"unknown")}.${stringCamelCase(r||"unknown")} needs ${n.length} arguments`)}function createKeyRawParts(r,e,{args:t,hashers:n,keys:s}){const i=new Array(s.length);for(let a=0;a<s.length;a++)i[a]=getHasher(n[a])(r.createTypeUnsafe(r.createLookupType(s[a]),[t[a]]).toU8a());return[[xxhashAsU8a(e.prefix,128),xxhashAsU8a(e.method,128)],i]}function createKeyInspect(r,e,t){assertArgs(e,t);const{meta:n}=e,[s,i]=createKeyRawParts(r,e,t);let a=[];if(n.type.isMap){const{hashers:c,key:h}=n.type.asMap;a=c.length===1?[`${c[0].type}(${getSiName(r.lookup,h)})`]:r.lookup.getSiType(h).def.asTuple.map((p,x)=>`${c[x].type}(${getSiName(r.lookup,p)})`)}const o=["module","method"].concat(...t.args.map((c,h)=>a[h]));return{inner:s.concat(...i).map((c,h)=>({name:o[h],outer:[c]}))}}function createKeyRaw(r,e,t){const[n,s]=createKeyRawParts(r,e,t);return u8aConcat(...n,...s)}function filterDefined(r){return!isUndefined(r)}function createKey(r,e,t){return assertArgs(e,t),compactAddLength(createKeyRaw(r,e,t))}function createStorageInspect(r,e,t){const{meta:{type:n}}=e;return(...s)=>{if(n.isPlain)return t.skipHashing?{inner:[],name:"wellKnown",outer:[u8aToU8a(t.key)]}:createKeyInspect(r,e,NO_RAW_ARGS);const{hashers:i,key:a}=n.asMap;return i.length===1?createKeyInspect(r,e,{args:s,hashers:i,keys:[a]}):createKeyInspect(r,e,{args:s,hashers:i,keys:r.lookup.getSiType(a).def.asTuple})}}function createStorageFn(r,e,t){const{meta:{type:n}}=e;let s=null;return(...i)=>{if(n.isPlain)return s||(s=t.skipHashing?compactAddLength(u8aToU8a(t.key)):createKey(r,e,NO_RAW_ARGS)),s;const{hashers:a,key:o}=n.asMap;return a.length===1?createKey(r,e,{args:i,hashers:a,keys:[o]}):createKey(r,e,{args:i,hashers:a,keys:r.lookup.getSiType(o).def.asTuple})}}function createWithMeta(r,e,t){const{meta:n,method:s,prefix:i,section:a}=e,o=createStorageFn(r,e,t);return o.inspect=createStorageInspect(r,e,t),o.meta=n,o.method=stringCamelCase(s),o.prefix=i,o.section=a,o.toJSON=()=>objectSpread({storage:{method:s,prefix:i,section:a}},n.toJSON()),o}function extendHeadMeta(r,{meta:{docs:e,name:t,type:n},section:s},{method:i},a){const o=r.createTypeUnsafe("StorageEntryMetadataLatest",[{docs:e,fallback:r.createTypeUnsafe("Bytes",[]),modifier:r.createTypeUnsafe("StorageEntryModifierLatest",[1]),name:t,type:r.createTypeUnsafe("StorageEntryTypeLatest",[n.asMap.key,0])}]);a.meta=o;const c=(...h)=>r.createTypeUnsafe("StorageKey",[a(...h),{method:i,section:s}]);return c.meta=o,c}function extendPrefixedMap(r,e,t){const{meta:{type:n},method:s,section:i}=e;return t.iterKey=extendHeadMeta(r,e,t,(...a)=>{if(a.length&&(n.isPlain||a.length>n.asMap.hashers.length))throw new Error(`Iteration ${stringCamelCase(i||"unknown")}.${stringCamelCase(s||"unknown")} needs arguments to be at least one less than the full arguments, found [${a.join(", ")}]`);if(a.length&&n.isMap){const{hashers:o,key:c}=n.asMap,h=o.length===1?[c]:r.lookup.getSiType(c).def.asTuple;return new Raw(r,createKeyRaw(r,e,{args:a,hashers:o.slice(0,a.length),keys:h.slice(0,a.length)}))}return new Raw(r,createKeyRaw(r,e,NO_RAW_ARGS))}),t}function createFunction(r,e,t){const{meta:{type:n}}=e,s=createWithMeta(r,e,t);return n.isMap&&extendPrefixedMap(r,e,s),s.keyPrefix=(...i)=>s.iterKey&&s.iterKey(...i)||compactStripLength(s())[1],s}function findSiPrimitive(r,e){const t=e.toLowerCase();return r.lookup.types.find(n=>n.type.def.isPrimitive&&n.type.def.asPrimitive.toString().toLowerCase()===t||n.type.def.isHistoricMetaCompat&&n.type.def.asHistoricMetaCompat.toString().toLowerCase()===t)}function findSiType(r,e){let t=findSiPrimitive(r,e);if(!t&&e==="Bytes"){const n=findSiPrimitive(r,"u8");n&&(t=r.lookup.types.find(s=>s.type.def.isSequence&&s.type.def.asSequence.type.eq(n.id)||s.type.def.isHistoricMetaCompat&&s.type.def.asHistoricMetaCompat.eq(e)))}return t||console.warn(`Unable to map ${e} to a lookup index`),t}function createRuntimeFunction({method:r,prefix:e,section:t},n,{docs:s,type:i}){return a=>{var o;return createFunction(a,{meta:a.createTypeUnsafe("StorageEntryMetadataLatest",[{docs:a.createTypeUnsafe("Vec<Text>",[[s]]),modifier:a.createTypeUnsafe("StorageEntryModifierLatest",["Required"]),name:a.createTypeUnsafe("Text",[r]),toJSON:()=>n,type:a.createTypeUnsafe("StorageEntryTypeLatest",[{Plain:((o=findSiType(a,i))===null||o===void 0?void 0:o.id)||0}])}]),method:r,prefix:e,section:t},{key:n,skipHashing:!0})}}const prefix="Substrate",section="substrate";function createSubstrateFn(r,e,t){return createRuntimeFunction({method:r,prefix,section},e,t)}const substrate={changesTrieConfig:createSubstrateFn("changesTrieConfig",":changes_trie",{docs:"Changes trie configuration is stored under this key.",type:"u32"}),childStorageKeyPrefix:createSubstrateFn("childStorageKeyPrefix",":child_storage:",{docs:"Prefix of child storage keys.",type:"u32"}),code:createSubstrateFn("code",":code",{docs:"Wasm code of the runtime.",type:"Bytes"}),extrinsicIndex:createSubstrateFn("extrinsicIndex",":extrinsic_index",{docs:"Current extrinsic index (u32) is stored under this key.",type:"u32"}),heapPages:createSubstrateFn("heapPages",":heappages",{docs:"Number of wasm linear memory pages required for execution of the runtime.",type:"u64"})};function getStorage(r){const e={},t=Object.entries(substrate);for(let n=0;n<t.length;n++)e[t[n][0]]=t[n][1](r);return{substrate:e}}const VERSION_NAME="palletVersion",VERSION_KEY=":__STORAGE_VERSION__:",VERSION_DOCS={docs:"Returns the current pallet version from storage",type:"u16"};function decorateStorage(r,{pallets:e},t){const n=getStorage(r);for(let s=0;s<e.length;s++){const{name:i,storage:a}=e[s];if(a.isSome){const o=stringCamelCase(i),{items:c,prefix:h}=a.unwrap(),p=h.toString();lazyMethod(n,o,()=>lazyMethods({palletVersion:createRuntimeFunction({method:VERSION_NAME,prefix:p,section:o},createKeyRaw(r,{method:VERSION_KEY,prefix:i.toString()},NO_RAW_ARGS),VERSION_DOCS)(r)},c,x=>createFunction(r,{meta:x,method:x.name.toString(),prefix:p,section:o},{}),objectNameToCamel))}}return n}function expandMetadata(r,e){if(!(e instanceof Metadata))throw new Error("You need to pass a valid Metadata instance to Decorated");const t=e.asLatest,n=e.version;return{consts:decorateConstants(r,t,n),errors:decorateErrors(r,t,n),events:decorateEvents(r,t,n),query:decorateStorage(r,t,n),registry:r,tx:decorateExtrinsics(r,t,n)}}function _classPrivateFieldBase(r,e){if(!Object.prototype.hasOwnProperty.call(r,e))throw new TypeError("attempted to use private field on non-instance");return r}var id=0;function _classPrivateFieldKey(r){return"__private_"+id+++"_"+r}const l$a=logger("PortableRegistry"),TYPE_UNWRAP={toNumber:()=>-1},PRIMITIVE_ALIAS={Char:"u32",Str:"Text"},PATHS_ALIAS=splitNamespace(["sp_core::crypto::AccountId32","sp_runtime::generic::era::Era","sp_runtime::multiaddress::MultiAddress","account::AccountId20","polkadot_runtime_common::claims::EthereumAddress","*_democracy::vote::Vote","*_conviction_voting::vote::Vote","*_identity::types::Data","primitive_types::*","sp_arithmetic::per_things::*","ink_env::types::*"]),PATHS_SET=splitNamespace(["pallet_identity::types::BitFlags"]),BITVEC_NS_LSB=["bitvec::order::Lsb0","BitOrderLsb0"],BITVEC_NS_MSB=["bitvec::order::Msb0","BitOrderMsb0"],BITVEC_NS=[...BITVEC_NS_LSB,...BITVEC_NS_MSB],WRAPPERS=["BoundedBTreeMap","BoundedBTreeSet","BoundedVec","Box","BTreeMap","BTreeSet","Cow","Option","Range","RangeInclusive","Result","WeakBoundedVec","WrapperKeepOpaque","WrapperOpaque"],RESERVED=["entries","hash","keys","new","size"],PATH_RM_INDEX_1=["generic","misc","pallet","traits","types"];function sanitizeDocs(r){const e=new Array(r.length);for(let t=0;t<r.length;t++)e[t]=r[t].toString();return e}function splitNamespace(r){const e=new Array(r.length);for(let t=0;t<r.length;t++)e[t]=r[t].split("::");return e}function matchParts(r,e){return r.length===e.length&&r.every((t,n)=>{const s=e[n].toString();if(t==="*"||t===s)return!0;if(t.includes("*")&&t.includes("_")&&s.includes("_")){let i=t.split("_"),a=s.split("_");if(i[0]==="*"){const o=a.indexOf(i[1]);o!==-1&&(i=i.slice(1),a=a.slice(o))}return i.length===2&&i[1]==="*"&&i[0]===a[0]?!0:matchParts(i,a)}return!1})}function getAliasPath(r){return r.length&&PATHS_ALIAS.some(e=>matchParts(e,r))?r[r.length-1].toString():null}function extractNameFlat(r,e,t,n,s=!1){const i=n.length;if(i===0||WRAPPERS.includes(n[i-1].toString()))return null;const a=new Array(i),o=new Array(i);for(let h=0;h<i;h++){const p=stringPascalCase(s?n[h].replace("pallet_",""):n[h]),x=p.toLowerCase();a[h]=p,o[h]=x}let c="";for(let h=0;h<i;h++){const p=o[h];(h!==1||!PATH_RM_INDEX_1.includes(p))&&p!==o[h+1]&&(c+=a[h])}if(a[1]==="RawOrigin"&&i===2&&t.length===2&&t[1].type.isSome){const h=r[t[1].type.unwrap().toNumber()];h.type.path.length===2&&(c=`${c}${h.type.path[1].toString()}`)}return{lookupIndex:e,name:c,params:t}}function extractName(r,e,{type:{params:t,path:n}}){return extractNameFlat(r,e,t,n)}function nextDupeMatches(r,e,t){const n=[t[e]];for(let s=e+1;s<t.length;s++){const i=t[s];i.name===r&&n.push(i)}return n}function rewriteDupes(r,e){const t=r.length;for(let n=0;n<t;n++){const s=r[n];for(let i=n+1;i<t;i++){const a=r[i];if(s.lookupIndex!==a.lookupIndex&&s.name===a.name)return!1}}for(let n=0;n<t;n++){const s=r[n];e[s.lookupIndex]=s.name}return!0}function removeDupeNames(r,e,t){const n={};return t.map((s,i)=>{const{lookupIndex:a,name:o,params:c}=s;if(o){if(n[a])return s}else return null;const h=nextDupeMatches(o,i,t);if(h.length===1||!h.some(k=>c.length!==k.params.length||c.some((U,D)=>!U.name.eq(k.params[D].name)||U.type.unwrapOr(TYPE_UNWRAP).toNumber()!==k.params[D].type.unwrapOr(TYPE_UNWRAP).toNumber())))return s;const x=c.findIndex(({type:k},U)=>h.every(({params:D},F)=>D[U].type.isSome&&(F===0||!D[U].type.eq(k))));if(x===-1)return s;const A=new Array(h.length);for(let k=0;k<h.length;k++){const{lookupIndex:U,name:D,params:F}=h[k],{def:q,path:ae}=r.getSiType(F[x].type.unwrap());if(!q.isPrimitive&&!ae.length)return null;A[k]={lookupIndex:U,name:q.isPrimitive?`${D}${q.asPrimitive.toString()}`:`${D}${ae[ae.length-1].toString()}`}}if(rewriteDupes(A,n))return s;for(let k=0;k<h.length;k++){const{lookupIndex:U,name:D,params:F}=h[k],{def:q,path:ae}=r.getSiType(F[x].type.unwrap()),Y=extractNameFlat(e,U,F,ae,!0);if(q.isPrimitive||!Y)return null;A[k]={lookupIndex:U,name:`${D}${Y.name}`}}return rewriteDupes(A,n)?s:null}).filter(s=>!!s).map(({lookupIndex:s,name:i,params:a})=>({lookupIndex:s,name:n[s]||i,params:a}))}function registerTypes(r,e,t,n){if(r.registry.register(e),n.SpRuntimeUncheckedExtrinsic){const[s,,i]=n.SpRuntimeUncheckedExtrinsic,a=r.getSiType(s.type.unwrap()),c=r.getSiType(i.type.unwrap()).path.join("::");let h=a.path.join("::");const p=h==="sp_runtime::multiaddress::MultiAddress";if(p){const[x]=a.params;h=r.getSiType(x.type.unwrap()).path.join("::")}r.registry.register({AccountId:["sp_core::crypto::AccountId32"].includes(h)?"AccountId32":["account::AccountId20","primitive_types::H160"].includes(h)?"AccountId20":"AccountId32",Address:p?"MultiAddress":"AccountId",ExtrinsicSignature:["sp_runtime::MultiSignature"].includes(c)?"MultiSignature":t[i.type.unwrap().toNumber()]||"MultiSignature"})}}function extractAliases(r,e){const t=Object.keys(r).some(s=>!s.startsWith("Pallet")),n={};if(r.SpRuntimeUncheckedExtrinsic){const[,{type:s}]=r.SpRuntimeUncheckedExtrinsic;n[s.unwrap().toNumber()]="Call"}else t&&!e&&l$a.warn("Unable to determine runtime Call type, cannot inspect sp_runtime::generic::unchecked_extrinsic::UncheckedExtrinsic");if(r.FrameSystemEventRecord){const[{type:s}]=r.FrameSystemEventRecord;n[s.unwrap().toNumber()]="Event"}else t&&!e&&l$a.warn("Unable to determine runtime Event type, cannot inspect frame_system::EventRecord");return n}function extractTypeInfo(r,e){const t=[],n={},s=e.length;for(let p=0;p<s;p++){const x=e[p],A=x.id.toNumber(),k=extractName(e,A,e[p]);k&&t.push(k),n[A]=x}const i={},a={},o={},c=removeDupeNames(r,e,t),h=c.length;for(let p=0;p<h;p++){const{lookupIndex:x,name:A,params:k}=c[p];a[x]=A,i[A]=r.registry.createLookupType(x),o[A]=k}return{lookups:i,names:a,params:o,types:n}}var _alias=_classPrivateFieldKey("alias"),_lookups=_classPrivateFieldKey("lookups"),_names=_classPrivateFieldKey("names"),_params=_classPrivateFieldKey("params"),_typeDefs=_classPrivateFieldKey("typeDefs"),_types=_classPrivateFieldKey("types"),_createSiDef=_classPrivateFieldKey("createSiDef"),_getLookupId=_classPrivateFieldKey("getLookupId"),_extract=_classPrivateFieldKey("extract"),_extractArray=_classPrivateFieldKey("extractArray"),_extractBitSequence=_classPrivateFieldKey("extractBitSequence"),_extractCompact=_classPrivateFieldKey("extractCompact"),_extractComposite=_classPrivateFieldKey("extractComposite"),_extractCompositeSet=_classPrivateFieldKey("extractCompositeSet"),_extractFields=_classPrivateFieldKey("extractFields"),_extractFieldsAlias=_classPrivateFieldKey("extractFieldsAlias"),_extractHistoric=_classPrivateFieldKey("extractHistoric"),_extractPrimitive=_classPrivateFieldKey("extractPrimitive"),_extractAliasPath=_classPrivateFieldKey("extractAliasPath"),_extractSequence=_classPrivateFieldKey("extractSequence"),_extractTuple=_classPrivateFieldKey("extractTuple"),_extractVariant=_classPrivateFieldKey("extractVariant"),_extractVariantEnum=_classPrivateFieldKey("extractVariantEnum");class PortableRegistry extends Struct{constructor(e,t,n){super(e,{types:"Vec<PortableType>"},t),Object.defineProperty(this,_extractVariantEnum,{value:_extractVariantEnum2}),Object.defineProperty(this,_extractVariant,{value:_extractVariant2}),Object.defineProperty(this,_extractTuple,{value:_extractTuple2}),Object.defineProperty(this,_extractSequence,{value:_extractSequence2}),Object.defineProperty(this,_extractAliasPath,{value:_extractAliasPath2}),Object.defineProperty(this,_extractPrimitive,{value:_extractPrimitive2}),Object.defineProperty(this,_extractHistoric,{value:_extractHistoric2}),Object.defineProperty(this,_extractFieldsAlias,{value:_extractFieldsAlias2}),Object.defineProperty(this,_extractFields,{value:_extractFields2}),Object.defineProperty(this,_extractCompositeSet,{value:_extractCompositeSet2}),Object.defineProperty(this,_extractComposite,{value:_extractComposite2}),Object.defineProperty(this,_extractCompact,{value:_extractCompact2}),Object.defineProperty(this,_extractBitSequence,{value:_extractBitSequence2}),Object.defineProperty(this,_extractArray,{value:_extractArray2}),Object.defineProperty(this,_extract,{value:_extract2}),Object.defineProperty(this,_getLookupId,{value:_getLookupId2}),Object.defineProperty(this,_createSiDef,{value:_createSiDef2}),Object.defineProperty(this,_alias,{writable:!0,value:void 0}),Object.defineProperty(this,_lookups,{writable:!0,value:void 0}),Object.defineProperty(this,_names,{writable:!0,value:void 0}),Object.defineProperty(this,_params,{writable:!0,value:void 0}),Object.defineProperty(this,_typeDefs,{writable:!0,value:{}}),Object.defineProperty(this,_types,{writable:!0,value:void 0});const{lookups:s,names:i,params:a,types:o}=extractTypeInfo(this,this.types);_classPrivateFieldBase(this,_alias)[_alias]=extractAliases(a,n),_classPrivateFieldBase(this,_lookups)[_lookups]=s,_classPrivateFieldBase(this,_names)[_names]=i,_classPrivateFieldBase(this,_params)[_params]=a,_classPrivateFieldBase(this,_types)[_types]=o}get names(){return Object.values(_classPrivateFieldBase(this,_names)[_names]).sort()}get types(){return this.getT("types")}register(){registerTypes(this,_classPrivateFieldBase(this,_lookups)[_lookups],_classPrivateFieldBase(this,_names)[_names],_classPrivateFieldBase(this,_params)[_params])}getName(e){return _classPrivateFieldBase(this,_names)[_names][_classPrivateFieldBase(this,_getLookupId)[_getLookupId](e)]}getSiType(e){const t=(_classPrivateFieldBase(this,_types)[_types]||this.types)[_classPrivateFieldBase(this,_getLookupId)[_getLookupId](e)];if(!t)throw new Error(`PortableRegistry: Unable to find type with lookupId ${e.toString()}`);return t.type}getTypeDef(e){const t=_classPrivateFieldBase(this,_getLookupId)[_getLookupId](e);if(!_classPrivateFieldBase(this,_typeDefs)[_typeDefs][t]){const n=_classPrivateFieldBase(this,_names)[_names][t],s={info:TypeDefInfo.DoNotConstruct,lookupIndex:t,lookupName:n,type:this.registry.createLookupType(t)};n&&(_classPrivateFieldBase(this,_typeDefs)[_typeDefs][t]=s);const i=_classPrivateFieldBase(this,_extract)[_extract](this.getSiType(e),t);n||(_classPrivateFieldBase(this,_typeDefs)[_typeDefs][t]=s),Object.keys(i).forEach(a=>{(a!=="lookupName"||i[a])&&(_classPrivateFieldBase(this,_typeDefs)[_typeDefs][t][a]=i[a])}),i.info===TypeDefInfo.Plain&&(_classPrivateFieldBase(this,_typeDefs)[_typeDefs][t].lookupNameRoot=_classPrivateFieldBase(this,_typeDefs)[_typeDefs][t].lookupName,delete _classPrivateFieldBase(this,_typeDefs)[_typeDefs][t].lookupName)}return _classPrivateFieldBase(this,_typeDefs)[_typeDefs][t]}sanitizeField(e){let t=null,n=null;return e.isSome&&(t=stringCamelCase(e.unwrap()),t.includes("#")?(n=t,t=n.replace(/#/g,"_")):RESERVED.includes(t)&&(n=t,t=`${t}_`)),[t,n]}}function _createSiDef2(r){const e=this.getTypeDef(r),t=r.toNumber();return[TypeDefInfo.DoNotConstruct,TypeDefInfo.Enum,TypeDefInfo.Struct].includes(e.info)&&e.lookupName?{docs:e.docs,info:TypeDefInfo.Si,lookupIndex:t,lookupName:_classPrivateFieldBase(this,_names)[_names][t],type:this.registry.createLookupType(r)}:e}function _getLookupId2(r){if(isString(r)){if(!this.registry.isLookupType(r))throw new Error(`PortableRegistry: Expected a lookup string type, found ${r}`);return parseInt(r.replace("Lookup",""),10)}else if(isNumber(r))return r;return r.toNumber()}function _extract2(r,e){const t=r.path.join("::");let n;const s=_classPrivateFieldBase(this,_alias)[_alias][e]||getAliasPath(r.path);try{if(s)n=_classPrivateFieldBase(this,_extractAliasPath)[_extractAliasPath](e,s);else switch(r.def.type){case"Array":n=_classPrivateFieldBase(this,_extractArray)[_extractArray](e,r.def.asArray);break;case"BitSequence":n=_classPrivateFieldBase(this,_extractBitSequence)[_extractBitSequence](e,r.def.asBitSequence);break;case"Compact":n=_classPrivateFieldBase(this,_extractCompact)[_extractCompact](e,r.def.asCompact);break;case"Composite":n=_classPrivateFieldBase(this,_extractComposite)[_extractComposite](e,r,r.def.asComposite);break;case"HistoricMetaCompat":n=_classPrivateFieldBase(this,_extractHistoric)[_extractHistoric](e,r.def.asHistoricMetaCompat);break;case"Primitive":n=_classPrivateFieldBase(this,_extractPrimitive)[_extractPrimitive](e,r);break;case"Sequence":n=_classPrivateFieldBase(this,_extractSequence)[_extractSequence](e,r.def.asSequence);break;case"Tuple":n=_classPrivateFieldBase(this,_extractTuple)[_extractTuple](e,r.def.asTuple);break;case"Variant":n=_classPrivateFieldBase(this,_extractVariant)[_extractVariant](e,r,r.def.asVariant);break;default:assertUnreachable(r.def.type)}}catch(i){throw new Error(`PortableRegistry: ${e}${t?` (${t})`:""}: Error extracting ${stringify(r)}: ${i.message}`)}return objectSpread({docs:sanitizeDocs(r.docs),namespace:t},n)}function _extractArray2(r,{len:e,type:t}){const n=e.toNumber();if(n>2048)throw new Error("Only support for [Type; <length>], where length <= 2048");return withTypeString(this.registry,{info:TypeDefInfo.VecFixed,length:n,sub:_classPrivateFieldBase(this,_createSiDef)[_createSiDef](t)})}function _extractBitSequence2(r,{bitOrderType:e,bitStoreType:t}){const n=_classPrivateFieldBase(this,_createSiDef)[_createSiDef](e),s=_classPrivateFieldBase(this,_createSiDef)[_createSiDef](t),[i,a]=BITVEC_NS.includes(n.namespace||"")?[n,s]:[s,n];if(BITVEC_NS.includes(i.namespace||"")){if(a.info!==TypeDefInfo.Plain||a.type!=="u8")throw new Error(`Only u8 bitStore is currently supported, found ${a.type}`)}else throw new Error(`Unexpected bitOrder found as ${i.namespace||"<unknown>"}`);return{info:TypeDefInfo.Plain,type:"BitVec"}}function _extractCompact2(r,{type:e}){return withTypeString(this.registry,{info:TypeDefInfo.Compact,sub:_classPrivateFieldBase(this,_createSiDef)[_createSiDef](e)})}function _extractComposite2(r,{params:e,path:t},{fields:n}){const s=t[0].toString(),i=t[t.length-1].toString();return t.length===1&&s==="BTreeMap"?withTypeString(this.registry,{info:TypeDefInfo.BTreeMap,sub:e.map(({type:a})=>_classPrivateFieldBase(this,_createSiDef)[_createSiDef](a.unwrap()))}):t.length===1&&s==="BTreeSet"?withTypeString(this.registry,{info:TypeDefInfo.BTreeSet,sub:_classPrivateFieldBase(this,_createSiDef)[_createSiDef](e[0].type.unwrap())}):["Range","RangeInclusive"].includes(s)?withTypeString(this.registry,{info:s==="Range"?TypeDefInfo.Range:TypeDefInfo.RangeInclusive,sub:_classPrivateFieldBase(this,_createSiDef)[_createSiDef](e[0].type.unwrap()),type:s}):["WrapperKeepOpaque","WrapperOpaque"].includes(i)?withTypeString(this.registry,{info:i==="WrapperKeepOpaque"?TypeDefInfo.WrapperKeepOpaque:TypeDefInfo.WrapperOpaque,sub:_classPrivateFieldBase(this,_createSiDef)[_createSiDef](e[0].type.unwrap()),type:i}):PATHS_SET.some(a=>matchParts(a,t))?_classPrivateFieldBase(this,_extractCompositeSet)[_extractCompositeSet](r,e,n):_classPrivateFieldBase(this,_extractFields)[_extractFields](r,n)}function _extractCompositeSet2(r,e,t){if(e.length!==1||t.length!==1)throw new Error("Set handling expects param/field as single entries");return withTypeString(this.registry,{info:TypeDefInfo.Set,length:this.registry.createTypeUnsafe(this.registry.createLookupType(t[0].type),[]).bitLength(),sub:this.getSiType(e[0].type.unwrap()).def.asVariant.variants.map(({index:n,name:s})=>({index:n.toNumber(),info:TypeDefInfo.Plain,name:s.toString(),type:"Null"}))})}function _extractFields2(r,e){let t=!0,n=!0;for(let a=0;a<e.length;a++){const{name:o}=e[a];t=t&&o.isSome,n=n&&o.isNone}if(!n&&!t)throw new Error("Invalid fields type detected, expected either Tuple (all unnamed) or Struct (all named)");if(e.length===0)return{info:TypeDefInfo.Null,type:"Null"};if(n&&e.length===1){const a=_classPrivateFieldBase(this,_createSiDef)[_createSiDef](e[0].type);return objectSpread({},a,r===-1?null:{lookupIndex:r,lookupName:_classPrivateFieldBase(this,_names)[_names][r],lookupNameRoot:a.lookupName},e[0].typeName.isSome?{typeName:sanitize(e[0].typeName.unwrap())}:null)}const[s,i]=_classPrivateFieldBase(this,_extractFieldsAlias)[_extractFieldsAlias](e);return withTypeString(this.registry,objectSpread({info:n?TypeDefInfo.Tuple:TypeDefInfo.Struct,sub:s},i.size?{alias:i}:null,r===-1?null:{lookupIndex:r,lookupName:_classPrivateFieldBase(this,_names)[_names][r]}))}function _extractFieldsAlias2(r){const e=new Map,t=new Array(r.length);for(let n=0;n<r.length;n++){const{docs:s,name:i,type:a,typeName:o}=r[n],c=_classPrivateFieldBase(this,_createSiDef)[_createSiDef](a);if(i.isNone)t[n]=c;else{const[h,p]=this.sanitizeField(i);h&&p&&e.set(h,p),t[n]=objectSpread({docs:sanitizeDocs(s),name:h},c,o.isSome?{typeName:sanitize(o.unwrap())}:null)}}return[t,e]}function _extractHistoric2(r,e){return objectSpread({displayName:e.toString(),isFromSi:!0},getTypeDef(e))}function _extractPrimitive2(r,e){const t=e.def.asPrimitive.type.toString();return{info:TypeDefInfo.Plain,type:PRIMITIVE_ALIAS[t]||t.toLowerCase()}}function _extractAliasPath2(r,e){return{info:TypeDefInfo.Plain,type:e}}function _extractSequence2(r,{type:e}){const t=_classPrivateFieldBase(this,_createSiDef)[_createSiDef](e);return t.type==="u8"?{info:TypeDefInfo.Plain,type:"Bytes"}:withTypeString(this.registry,{info:TypeDefInfo.Vec,lookupIndex:r,lookupName:_classPrivateFieldBase(this,_names)[_names][r],sub:t})}function _extractTuple2(r,e){if(e.length===0)return{info:TypeDefInfo.Null,type:"Null"};if(e.length===1)return this.getTypeDef(e[0]);const t=e.map(n=>_classPrivateFieldBase(this,_createSiDef)[_createSiDef](n));return withTypeString(this.registry,{info:TypeDefInfo.Tuple,lookupIndex:r,lookupName:_classPrivateFieldBase(this,_names)[_names][r],sub:t})}function _extractVariant2(r,{params:e,path:t},{variants:n}){const s=t[0].toString();if(s==="Option"){const i=_classPrivateFieldBase(this,_createSiDef)[_createSiDef](e[0].type.unwrap());return withTypeString(this.registry,{info:TypeDefInfo.Option,sub:i})}else{if(s==="Result")return withTypeString(this.registry,{info:TypeDefInfo.Result,sub:e.map(({type:i},a)=>objectSpread({name:["Ok","Error"][a]},_classPrivateFieldBase(this,_createSiDef)[_createSiDef](i.unwrap())))});if(n.length===0)return{info:TypeDefInfo.Null,type:"Null"}}return _classPrivateFieldBase(this,_extractVariantEnum)[_extractVariantEnum](r,n)}function _extractVariantEnum2(r,e){const t=[];return e.slice().sort((n,s)=>n.index.cmp(s.index)).forEach(({fields:n,index:s,name:i})=>{const a=s.toNumber();for(;t.length!==a;)t.push({index:t.length,info:TypeDefInfo.Null,name:`__Unused${t.length}`,type:"Null"});t.push(objectSpread(_classPrivateFieldBase(this,_extractFields)[_extractFields](-1,n),{index:a,name:i.toString()}))}),withTypeString(this.registry,{info:TypeDefInfo.Enum,lookupIndex:r,lookupName:_classPrivateFieldBase(this,_names)[_names][r],sub:t})}function convertType(r){return(e,{type:t})=>e.createType("Si1TypeDef",{[r]:{type:t.toNumber()}})}function convertArray(r,{len:e,type:t}){return r.createType("Si1TypeDef",{Array:{len:e,type:t.toNumber()}})}function convertBitSequence(r,{bitOrderType:e,bitStoreType:t}){return r.createType("Si1TypeDef",{BitSequence:{bitOrderType:e.toNumber(),bitStoreType:t.toNumber()}})}const convertCompact=convertType("Compact");function convertComposite(r,{fields:e}){return r.createType("Si1TypeDef",{Composite:{fields:convertFields(r,e)}})}function convertFields(r,e){return e.map(({docs:t,name:n,type:s,typeName:i})=>r.createType("Si1Field",{docs:t,name:n,type:s.toNumber(),typeName:i}))}function convertPhantom(r,e){return console.warn(`Converting phantom type ${e.map(t=>t.toString()).join("::")} to empty tuple`),r.createType("Si1TypeDef",{Tuple:[]})}function convertPrimitive(r,e){return r.createType("Si1TypeDef",{Primitive:e.toString()})}const convertSequence=convertType("Sequence");function convertTuple(r,e){return r.createType("Si1TypeDef",{Tuple:e.map(t=>t.toNumber())})}function convertVariant(r,{variants:e}){return r.createType("Si1TypeDef",{Variant:{variants:e.map(({discriminant:t,docs:n,fields:s,name:i},a)=>r.createType("Si1Variant",{docs:n,fields:convertFields(r,s),index:t.isSome?t.unwrap().toNumber():a,name:i}))}})}function convertDef(r,{def:e,path:t}){let n;switch(e.type){case"Array":n=convertArray(r,e.asArray);break;case"BitSequence":n=convertBitSequence(r,e.asBitSequence);break;case"Compact":n=convertCompact(r,e.asCompact);break;case"Composite":n=convertComposite(r,e.asComposite);break;case"Phantom":n=convertPhantom(r,t);break;case"Primitive":n=convertPrimitive(r,e.asPrimitive);break;case"Sequence":n=convertSequence(r,e.asSequence);break;case"Tuple":n=convertTuple(r,e.asTuple);break;case"Variant":n=convertVariant(r,e.asVariant);break;default:assertUnreachable(e.type)}return n}function toV1(r,e){return e.map((t,n)=>r.createType("PortableType",{id:n+1,type:{def:convertDef(r,t),docs:[],params:t.params.map(s=>r.createType("Si1TypeParameter",{type:s.toNumber()})),path:t.path.map(s=>s.toString())}}))}const DEFAULT_FIRST_CALL_IDX=new Uint8Array(2),l$9=logger("registry");function sortDecimalStrings(r,e){return parseInt(r,10)-parseInt(e,10)}function valueToString(r){return r.toString()}function getFieldArgs(r,e){const t=new Array(e.length);for(let n=0;n<e.length;n++)t[n]=r.getTypeDef(e[n].type).type;return t}function clearRecord(r){const e=Object.keys(r);for(let t=0;t<e.length;t++)delete r[e[t]]}function getVariantStringIdx({index:r}){return r.toString()}function injectErrors(r,{lookup:e,pallets:t},n,s){clearRecord(s);for(let i=0;i<t.length;i++){const{errors:a,index:o,name:c}=t[i];if(a.isSome){const h=stringCamelCase(c);lazyMethod(s,n>=12?o.toNumber():i,()=>lazyVariants(e,a.unwrap(),getVariantStringIdx,({docs:p,fields:x,index:A,name:k})=>({args:getFieldArgs(e,x),docs:p.map(valueToString),fields:x,index:A.toNumber(),method:k.toString(),name:k.toString(),section:h})))}}}function injectEvents(r,{lookup:e,pallets:t},n,s){const i=t.filter(filterEventsSome);clearRecord(s);for(let a=0;a<i.length;a++){const{events:o,index:c,name:h}=i[a];lazyMethod(s,n>=12?c.toNumber():a,()=>lazyVariants(e,o.unwrap(),getVariantStringIdx,p=>{const x=r.createType("EventMetadataLatest",objectSpread({},p,{args:getFieldArgs(e,p.fields)}));return class extends GenericEventData{constructor(A,k){super(A,k,x,stringCamelCase(h),p.name.toString())}}}))}}function injectExtrinsics(r,{lookup:e,pallets:t},n,s){const i=t.filter(filterCallsSome);clearRecord(s);for(let a=0;a<i.length;a++){const{calls:o,index:c,name:h}=i[a],p=n>=12?c.toNumber():a;lazyMethod(s,p,()=>lazyVariants(e,o.unwrap(),getVariantStringIdx,x=>createCallFunction(r,e,x,stringCamelCase(h),p)))}}function extractProperties(r,e){const t=r.getChainProperties(),n=decorateConstants(r,e.asLatest,e.version),s=n.system&&(n.system.sS58Prefix||n.system.ss58Prefix);if(!s)return t;const{tokenDecimals:i,tokenSymbol:a}=t||{};return r.createTypeUnsafe("ChainProperties",[{ss58Format:s,tokenDecimals:i,tokenSymbol:a}])}var Lt,vr,Jr,Rn,Xt,wr,ar,Qr,$r,en,Wt,Fn,Sr,Ln,tn,or,Tr;class TypeRegistry{constructor(e){_(this,Lt,new Map);_(this,vr,new Map);_(this,Jr,null);_(this,Rn,void 0);_(this,Xt,void 0);_(this,wr,0);_(this,ar,{});_(this,Qr,{});_(this,$r,{});_(this,en,new Map);_(this,Wt,void 0);_(this,Fn,blake2AsU8a);_(this,Sr,void 0);_(this,Ln,void 0);_(this,tn,{});_(this,or,fallbackExtensions);_(this,Tr,void 0);Q(this,Sr,objectSpread({Json,Metadata,PortableRegistry,Raw},baseTypes)),Q(this,Ln,typeDefinitions);const t=Object.values(b(this,Ln));for(let n=0;n<t.length;n++)this.register(t[n].types);e&&(this.createdAtHash=this.createType("Hash",e))}get chainDecimals(){var e;if((e=b(this,Wt))!==null&&e!==void 0&&e.tokenDecimals.isSome){const t=b(this,Wt).tokenDecimals.unwrap();if(t.length)return t.map(n=>n.toNumber())}return[12]}get chainSS58(){var e;return(e=b(this,Wt))!==null&&e!==void 0&&e.ss58Format.isSome?b(this,Wt).ss58Format.unwrap().toNumber():void 0}get chainTokens(){var e;if((e=b(this,Wt))!==null&&e!==void 0&&e.tokenSymbol.isSome){const t=b(this,Wt).tokenSymbol.unwrap();if(t.length)return t.map(valueToString)}return[formatBalance.getDefaults().unit]}get firstCallIndex(){return b(this,Jr)||DEFAULT_FIRST_CALL_IDX}isLookupType(e){return/Lookup\d+$/.test(e)}createLookupType(e){return`Lookup${e.toString()}`}get knownTypes(){return b(this,tn)}get lookup(){return assertReturn(b(this,Rn),"Lookup has not been set on this registry")}get metadata(){return assertReturn(b(this,Xt),"Metadata has not been set on this registry")}get unknownTypes(){return[...b(this,en).keys()]}get signedExtensions(){return b(this,or)}clearCache(){Q(this,Lt,new Map)}createClass(e){return createClassUnsafe(this,e)}createClassUnsafe(e){return createClassUnsafe(this,e)}createType(e,...t){return createTypeUnsafe(this,e,t)}createTypeUnsafe(e,t,n){return createTypeUnsafe(this,e,t,n)}findMetaCall(e){const[t,n]=[e[0],e[1]];return assertReturn(b(this,ar)[`${t}`]&&b(this,ar)[`${t}`][`${n}`],()=>`findMetaCall: Unable to find Call with index [${t}, ${n}]/[${e.toString()}]`)}findMetaError(e){const[t,n]=isU8a(e)?[e[0],e[1]]:[e.index.toNumber(),isU8a(e.error)?e.error[0]:e.error.toNumber()];return assertReturn(b(this,Qr)[`${t}`]&&b(this,Qr)[`${t}`][`${n}`],()=>`findMetaError: Unable to find Error with index [${t}, ${n}]/[${e.toString()}]`)}findMetaEvent(e){const[t,n]=[e[0],e[1]];return assertReturn(b(this,$r)[`${t}`]&&b(this,$r)[`${t}`][`${n}`],()=>`findMetaEvent: Unable to find Event with index [${t}, ${n}]/[${e.toString()}]`)}get(e,t,n){return this.getUnsafe(e,t,n)}getUnsafe(e,t,n){let s=b(this,Lt).get(e)||b(this,Sr)[e];if(!s){const i=b(this,vr).get(e);let a;i?a=createClassUnsafe(this,i):n?a=constructTypeClass(this,n):t&&(l$9.warn(`Unable to resolve type ${e}, it will fail on construction`),b(this,en).set(e,!0),a=DoNotConstruct.with(e)),a&&(s=class extends a{},b(this,Lt).set(e,s),n&&isNumber(n.lookupIndex)&&b(this,Lt).set(this.createLookupType(n.lookupIndex),s))}return s}getChainProperties(){return b(this,Wt)}getClassName(e){const t=[];for(const[n,s]of Object.entries(b(this,Sr)))e===s&&t.push(n);for(const[n,s]of b(this,Lt).entries())e===s&&t.push(n);return t.sort().reverse(),t.length?t[0]:void 0}getDefinition(e){return b(this,vr).get(e)}getModuleInstances(e,t){var n,s,i,a,o;return(n=b(this,tn))===null||n===void 0||(s=n.typesBundle)===null||s===void 0||(i=s.spec)===null||i===void 0||(a=i[e])===null||a===void 0||(o=a.instances)===null||o===void 0?void 0:o[t]}getOrThrow(e,t){const n=this.get(e);if(!n)throw new Error(t||`type ${e} not found`);return n}getOrUnknown(e){return this.get(e,!0)}getSignedExtensionExtra(){return expandExtensionTypes(b(this,or),"payload",b(this,Tr))}getSignedExtensionTypes(){return expandExtensionTypes(b(this,or),"extrinsic",b(this,Tr))}hasClass(e){return b(this,Lt).has(e)||!!b(this,Sr)[e]}hasDef(e){return b(this,vr).has(e)}hasType(e){return!b(this,en).get(e)&&(this.hasClass(e)||this.hasDef(e))}hash(e){return this.createType("CodecHash",b(this,Fn).call(this,e))}register(e,t){if(isFunction$3(e))b(this,Lt).set(e.name,e);else if(isString(e)){if(isFunction$3(t)){if(e===t.toString())throw new Error(`Unable to register circular ${e} === ${e}`)}else throw new Error(`Expected class definition passed to '${e}' registration`);b(this,Lt).set(e,t)}else this._registerObject(e)}_registerObject(e){const t=Object.entries(e);for(let n=0;n<t.length;n++){const[s,i]=t[n];if(isFunction$3(i))b(this,Lt).set(s,i);else{const a=isString(i)?i:stringify(i);if(s===a)throw new Error(`Unable to register circular ${s} === ${a}`);b(this,Lt).has(s)&&b(this,Lt).delete(s),b(this,vr).set(s,a)}}}setChainProperties(e){e&&Q(this,Wt,e)}setHasher(e){Q(this,Fn,e||blake2AsU8a)}setKnownTypes(e){Q(this,tn,e)}setLookup(e){Q(this,Rn,e),e.register()}setMetadata(e,t,n){Q(this,Xt,e.asLatest),Q(this,wr,e.version),Q(this,Jr,null),this.setLookup(b(this,Xt).lookup),injectExtrinsics(this,b(this,Xt),b(this,wr),b(this,ar)),injectErrors(this,b(this,Xt),b(this,wr),b(this,Qr)),injectEvents(this,b(this,Xt),b(this,wr),b(this,$r));const[s]=Object.keys(b(this,ar)).sort(sortDecimalStrings);if(s){const[i]=Object.keys(b(this,ar)[s]).sort(sortDecimalStrings);i&&Q(this,Jr,new Uint8Array([parseInt(s,10),parseInt(i,10)]))}this.setSignedExtensions(t||(b(this,Xt).extrinsic.version.gt(BN_ZERO)?b(this,Xt).extrinsic.signedExtensions.map(({identifier:i})=>i.toString()):fallbackExtensions),n),this.setChainProperties(extractProperties(this,e))}setSignedExtensions(e=fallbackExtensions,t){Q(this,or,e),Q(this,Tr,t);const n=findUnknownExtensions(b(this,or),b(this,Tr));n.length&&l$9.warn(`Unknown signed extensions ${n.join(", ")} found, treating them as no-effect`)}}Lt=new WeakMap,vr=new WeakMap,Jr=new WeakMap,Rn=new WeakMap,Xt=new WeakMap,wr=new WeakMap,ar=new WeakMap,Qr=new WeakMap,$r=new WeakMap,en=new WeakMap,Wt=new WeakMap,Fn=new WeakMap,Sr=new WeakMap,Ln=new WeakMap,tn=new WeakMap,or=new WeakMap,Tr=new WeakMap;const packageInfo={name:"@polkadot/api",path:ns&&ns.url?new URL(ns.url).pathname.substring(0,new URL(ns.url).pathname.lastIndexOf("/")+1):"auto",type:"esm",version:"8.11.3"};function v0ToV1Names(r){return r.map(e=>objectSpread({},e,{name:Array.isArray(e.name)?e.name:[e.name]}))}function v0ToV1(r,e){return r.createType("ContractMetadataV1",objectSpread({},e,{spec:objectSpread({},e.spec,{constructors:v0ToV1Names(e.spec.constructors),messages:v0ToV1Names(e.spec.messages)}),types:toV1(r,e.types)}))}const ARG_TYPES={ContractConstructorSpec:"ContractMessageParamSpecV2",ContractEventSpec:"ContractEventParamSpecV2",ContractMessageSpec:"ContractMessageParamSpecV2"};function v1ToV2Label(r){return objectSpread({},r,{label:Array.isArray(r.name)?r.name.join("::"):r.name})}function v1ToV2Labels(r,e,t){return t.map(n=>r.createType(`${e}V2`,objectSpread(v1ToV2Label(n),{args:n.args.map(s=>r.createType(ARG_TYPES[e],v1ToV2Label(s)))})))}function v1ToV2(r,e){return r.createType("ContractMetadataV2",objectSpread({},e,{spec:objectSpread({},e.spec,{constructors:v1ToV2Labels(r,"ContractConstructorSpec",e.spec.constructors),events:v1ToV2Labels(r,"ContractEventSpec",e.spec.events),messages:v1ToV2Labels(r,"ContractMessageSpec",e.spec.messages)})}))}function v2ToV3(r,e){return r.createType("ContractMetadataV3",objectSpread({},e,{spec:objectSpread({},e.spec,{constructors:e.spec.constructors.map(t=>r.createType("ContractConstructorSpecV3",objectSpread({},t,{payable:!0})))})}))}function createConverter(r,e){return(t,n)=>r(t,e(t,n))}function v3ToLatest(r,e){return e}const v2ToLatest=createConverter(v3ToLatest,v2ToV3),v1ToLatest=createConverter(v2ToLatest,v1ToV2),v0ToLatest=createConverter(v1ToLatest,v0ToV1),enumVersions=["V3","V2","V1"],convertVersions=[["V3",v3ToLatest],["V2",v2ToLatest],["V1",v1ToLatest],["V0",v0ToLatest]],l$8=logger("Abi"),PRIMITIVE_ALWAYS=["AccountId","AccountIndex","Address","Balance"];function findMessage(r,e){const t=isNumber(e)?r[e]:isString(e)?r.find(({identifier:n})=>[n,stringCamelCase(n)].includes(e.toString())):e;return assertReturn(t,()=>`Attempted to call an invalid contract interface, ${stringify(e)}`)}function getLatestMeta(r,e){const t=enumVersions.find(i=>isObject$2(e[i])),n=r.createType("ContractMetadata",t?{[t]:e[t]}:{V0:e}),s=convertVersions.find(([i])=>n[`is${i}`]);return assert$1(s,()=>`Unable to convert ABI with version ${n.type} to latest`),s[1](r,n[`as${s[0]}`])}function parseJson(r,e){const t=new TypeRegistry,n=t.createType("ContractProjectInfo",r),s=getLatestMeta(t,r),i=t.createType("PortableRegistry",{types:s.types},!0);return t.setLookup(i),e&&t.setChainProperties(e),i.types.forEach(({id:a})=>i.getTypeDef(a)),[r,t,s,n]}var Dn,us,zn,jn,qn,ls;class Abi{constructor(e,t){_(this,Dn,(e,t)=>e.map(({label:n,type:s},i)=>{try{assert$1(isObject$2(s),"Invalid type definition found");const a=s.displayName.length?s.displayName[s.displayName.length-1].toString():void 0,o=stringCamelCase(n);if(a&&PRIMITIVE_ALWAYS.includes(a))return{name:o,type:{info:TypeDefInfo.Plain,type:a}};const c=this.registry.lookup.getTypeDef(s.type);return{name:o,type:a&&!c.type.startsWith(a)?Ve({displayName:a},c):c}}catch(a){throw l$8.error(`Error expanding argument ${i} in ${stringify(t)}`),a}}));_(this,us,(e,t)=>{const n=b(this,Dn).call(this,e.args,e),s={args:n,docs:e.docs.map(i=>i.toString()),fromU8a:i=>({args:b(this,jn).call(this,n,i),event:s}),identifier:e.label.toString(),index:t};return s});_(this,zn,(e,t,n={})=>{const s=b(this,Dn).call(this,e.args,e),i=e.label.toString(),a=Je(Ve({},n),{args:s,docs:e.docs.map(o=>o.toString()),fromU8a:o=>({args:b(this,jn).call(this,s,o),message:a}),identifier:i,index:t,method:stringCamelCase(i),path:i.split("::").map(o=>stringCamelCase(o)),selector:e.selector,toU8a:o=>b(this,ls).call(this,e,s,o)});return a});_(this,jn,(e,t)=>{let n=0;return e.map(({type:{lookupName:s,type:i}})=>{const a=this.registry.createType(s||i,t.subarray(n));return n+=a.encodedLength,a})});_(this,qn,(e,t,n)=>{const[,s]=compactStripLength(n),i=s.subarray(0,4),a=t.find(o=>o.selector.eq(i));return assert$1(a,`Unable to find ${e} with selector ${u8aToHex(i)}`),a.fromU8a(s.subarray(4))});_(this,ls,({label:e,selector:t},n,s)=>(assert$1(s.length===n.length,()=>`Expected ${n.length} arguments to contract message '${e.toString()}', found ${s.length}`),compactAddLength(u8aConcat(this.registry.createType("ContractSelector",t).toU8a(),...n.map(({type:{lookupName:i,type:a}},o)=>this.registry.createType(i||a,s[o]).toU8a())))));[this.json,this.registry,this.metadata,this.info]=parseJson(isString(e)?JSON.parse(e):e,t),this.constructors=this.metadata.spec.constructors.map((n,s)=>b(this,zn).call(this,n,s,{isConstructor:!0,isPayable:n.payable.isTrue})),this.events=this.metadata.spec.events.map((n,s)=>b(this,us).call(this,n,s)),this.messages=this.metadata.spec.messages.map((n,s)=>{const i=n.returnType.unwrapOr(null);return b(this,zn).call(this,n,s,{isMutating:n.mutates.isTrue,isPayable:n.payable.isTrue,returnType:i?this.registry.lookup.getTypeDef(i.type):null})})}decodeEvent(e){const t=e[0],n=this.events[t];return assert$1(n,()=>`Unable to find event with index ${t}`),n.fromU8a(e.subarray(1))}decodeConstructor(e){return b(this,qn).call(this,"message",this.constructors,e)}decodeMessage(e){return b(this,qn).call(this,"message",this.messages,e)}findConstructor(e){return findMessage(this.constructors,e)}findMessage(e){return findMessage(this.messages,e)}}Dn=new WeakMap,us=new WeakMap,zn=new WeakMap,jn=new WeakMap,qn=new WeakMap,ls=new WeakMap;const DEV_PHRASE="bottom drive obey lake curtain smoke basket hold race lonely fit walk",PKCS8_DIVIDER=new Uint8Array([161,35,3,33,0]),PKCS8_HEADER=new Uint8Array([48,83,2,1,1,48,5,6,3,43,101,112,4,34,4,32]),PUB_LENGTH=32,SEC_LENGTH=64,SEED_LENGTH=32,SEED_OFFSET=PKCS8_HEADER.length;function decodePair(r,e,t){const n=Array.isArray(t)||t===void 0?t:[t],s=jsonDecryptData(e,r,n),i=s.subarray(0,PKCS8_HEADER.length);assert$1(u8aEq(i,PKCS8_HEADER),"Invalid Pkcs8 header found in body");let a=s.subarray(SEED_OFFSET,SEED_OFFSET+SEC_LENGTH),o=SEED_OFFSET+SEC_LENGTH,c=s.subarray(o,o+PKCS8_DIVIDER.length);u8aEq(c,PKCS8_DIVIDER)||(o=SEED_OFFSET+SEED_LENGTH,a=s.subarray(SEED_OFFSET,o),c=s.subarray(o,o+PKCS8_DIVIDER.length),assert$1(u8aEq(c,PKCS8_DIVIDER),"Invalid Pkcs8 divider found in body"));const h=o+PKCS8_DIVIDER.length;return{publicKey:s.subarray(h,h+PUB_LENGTH),secretKey:a}}function encodePair({publicKey:r,secretKey:e},t){assert$1(e,"Expected a valid secretKey to be passed to encode");const n=u8aConcat(PKCS8_HEADER,e,PKCS8_DIVIDER,r);if(!t)return n;const{params:s,password:i,salt:a}=scryptEncode(t),{encrypted:o,nonce:c}=naclEncrypt(n,i.subarray(0,32));return u8aConcat(scryptToU8a(a,s),c,o)}function pairToJson(r,{address:e,meta:t},n,s){return objectSpread(jsonEncryptFormat(n,["pkcs8",r],s),{address:e,meta:t})}const SIG_TYPE_NONE=new Uint8Array,TYPE_FROM_SEED={ecdsa:secp256k1PairFromSeed,ed25519:ed25519PairFromSeed,ethereum:secp256k1PairFromSeed,sr25519:sr25519PairFromSeed},TYPE_PREFIX={ecdsa:new Uint8Array([2]),ed25519:new Uint8Array([0]),ethereum:new Uint8Array([2]),sr25519:new Uint8Array([1])},TYPE_SIGNATURE={ecdsa:(r,e)=>secp256k1Sign(r,e,"blake2"),ed25519:ed25519Sign,ethereum:(r,e)=>secp256k1Sign(r,e,"keccak"),sr25519:sr25519Sign},TYPE_ADDRESS={ecdsa:r=>r.length>32?blake2AsU8a(r):r,ed25519:r=>r,ethereum:r=>r.length===20?r:keccakAsU8a(secp256k1Expand(r)),sr25519:r=>r};function isLocked(r){return!r||u8aEmpty(r)}function vrfHash(r,e,t){return blake2AsU8a(u8aConcat(e||"",t||"",r))}function createPair({toSS58:r,type:e},{publicKey:t,secretKey:n},s={},i=null,a){const o=(p,x)=>{const A=decodePair(p,x||i,a);if(A.secretKey.length===64)t=A.publicKey,n=A.secretKey;else{const k=TYPE_FROM_SEED[e](A.secretKey);t=k.publicKey,n=k.secretKey}},c=p=>(isLocked(n)&&i&&o(p,i),i=encodePair({publicKey:t,secretKey:n},p),a=void 0,i),h=()=>{const p=TYPE_ADDRESS[e](t);return e==="ethereum"?ethereumEncode(p):r(p)};return{get address(){return h()},get addressRaw(){const p=TYPE_ADDRESS[e](t);return e==="ethereum"?p.slice(-20):p},get isLocked(){return isLocked(n)},get meta(){return s},get publicKey(){return t},get type(){return e},decodePkcs8:o,decryptMessage:(p,x)=>{assert$1(!isLocked(n),"Cannot encrypt with a locked key pair"),assert$1(!["ecdsa","ethereum"].includes(e),"Secp256k1 not supported yet");const A=u8aToU8a(p);return naclOpen(A.slice(24,A.length),A.slice(0,24),convertPublicKeyToCurve25519(u8aToU8a(x)),convertSecretKeyToCurve25519(n))},derive:(p,x)=>{assert$1(e!=="ethereum","Unable to derive on this keypair"),assert$1(!isLocked(n),"Cannot derive on a locked keypair");const{path:A}=keyExtractPath(p),k=keyFromPath({publicKey:t,secretKey:n},A,e);return createPair({toSS58:r,type:e},k,x,null)},encodePkcs8:p=>c(p),encryptMessage:(p,x,A)=>{assert$1(!isLocked(n),"Cannot encrypt with a locked key pair"),assert$1(!["ecdsa","ethereum"].includes(e),"Secp256k1 not supported yet");const{nonce:k,sealed:U}=naclSeal(u8aToU8a(p),convertSecretKeyToCurve25519(n),convertPublicKeyToCurve25519(u8aToU8a(x)),A);return u8aConcat(k,U)},lock:()=>{n=new Uint8Array},setMeta:p=>{s=objectSpread({},s,p)},sign:(p,x={})=>(assert$1(!isLocked(n),"Cannot sign with a locked key pair"),u8aConcat(x.withType?TYPE_PREFIX[e]:SIG_TYPE_NONE,TYPE_SIGNATURE[e](u8aToU8a(p),{publicKey:t,secretKey:n}))),toJson:p=>{const x=["ecdsa","ethereum"].includes(e)?t.length===20?u8aToHex(t):u8aToHex(secp256k1Compress(t)):h();return pairToJson(e,{address:x,meta:s},c(p),!!p)},unlock:p=>o(p),verify:(p,x,A)=>signatureVerify(p,x,TYPE_ADDRESS[e](u8aToU8a(A))).isValid,vrfSign:(p,x,A)=>{if(assert$1(!isLocked(n),"Cannot sign with a locked key pair"),e==="sr25519")return sr25519VrfSign(p,{secretKey:n},x,A);const k=TYPE_SIGNATURE[e](u8aToU8a(p),{publicKey:t,secretKey:n});return u8aConcat(vrfHash(k,x,A),k)},vrfVerify:(p,x,A,k,U)=>e==="sr25519"?sr25519VrfVerify(p,x,t,k,U):signatureVerify(p,u8aConcat(TYPE_PREFIX[e],x.subarray(32)),TYPE_ADDRESS[e](u8aToU8a(A))).isValid&&u8aEq(x.subarray(0,32),vrfHash(x.subarray(32),k,U))}}var Pr;class Pairs{constructor(){_(this,Pr,{})}add(e){return b(this,Pr)[decodeAddress(e.address).toString()]=e,e}all(){return Object.values(b(this,Pr))}get(e){const t=b(this,Pr)[decodeAddress(e).toString()];if(!t)throw new Error(`Unable to retrieve keypair '${isU8a(e)||isHex(e)?u8aToHex(u8aToU8a(e)):e}'`);return t}remove(e){delete b(this,Pr)[decodeAddress(e).toString()]}}Pr=new WeakMap;const PairFromSeed={ecdsa:r=>secp256k1PairFromSeed(r),ed25519:r=>ed25519PairFromSeed(r),ethereum:r=>secp256k1PairFromSeed(r),sr25519:r=>sr25519PairFromSeed(r)};function pairToPublic({publicKey:r}){return r}var Kt,Xn,rn;class Keyring$1{constructor(e={}){_(this,Kt,void 0);_(this,Xn,void 0);_(this,rn,void 0);Ae(this,"decodeAddress",decodeAddress);Ae(this,"encodeAddress",(e,t)=>this.type==="ethereum"?ethereumEncode(e):encodeAddress(e,t===void 0?b(this,rn):t));if(e.type=e.type||"ed25519",!["ecdsa","ethereum","ed25519","sr25519"].includes(e.type||"undefined"))throw new Error(`Expected a keyring type of either 'ed25519', 'sr25519', 'ethereum' or 'ecdsa', found '${e.type||"unknown"}`);Q(this,Kt,new Pairs),Q(this,rn,e.ss58Format),Q(this,Xn,e.type)}get pairs(){return this.getPairs()}get publicKeys(){return this.getPublicKeys()}get type(){return b(this,Xn)}addPair(e){return b(this,Kt).add(e)}addFromAddress(e,t={},n=null,s=this.type,i,a){const o=this.decodeAddress(e,i);return this.addPair(createPair({toSS58:this.encodeAddress,type:s},{publicKey:o,secretKey:new Uint8Array},t,n,a))}addFromJson(e,t){return this.addPair(this.createFromJson(e,t))}addFromMnemonic(e,t={},n=this.type){return this.addFromUri(e,t,n)}addFromPair(e,t={},n=this.type){return this.addPair(this.createFromPair(e,t,n))}addFromSeed(e,t={},n=this.type){return this.addPair(createPair({toSS58:this.encodeAddress,type:n},PairFromSeed[n](e),t,null))}addFromUri(e,t={},n=this.type){return this.addPair(this.createFromUri(e,t,n))}createFromJson({address:e,encoded:t,encoding:{content:n,type:s,version:i},meta:a},o){if(i==="3"&&n[0]!=="pkcs8")throw new Error(`Unable to decode non-pkcs8 type, [${n.join(",")}] found}`);const c=i==="0"||!Array.isArray(n)?this.type:n[1],h=Array.isArray(s)?s:[s];if(!["ed25519","sr25519","ecdsa","ethereum"].includes(c))throw new Error(`Unknown crypto type ${c}`);const p=isHex(e)?hexToU8a(e):this.decodeAddress(e,o),x=isHex(t)?hexToU8a(t):base64Decode(t);return createPair({toSS58:this.encodeAddress,type:c},{publicKey:p,secretKey:new Uint8Array},a,x,h)}createFromPair(e,t={},n=this.type){return createPair({toSS58:this.encodeAddress,type:n},e,t,null)}createFromUri(e,t={},n=this.type){const s=e.startsWith("//")?`${DEV_PHRASE}${e}`:e,{derivePath:i,password:a,path:o,phrase:c}=keyExtractSuri(s);let h;const p=isHex(c,256);if(p)h=hexToU8a(c);else{const A=c.split(" ");if([12,15,18,21,24].includes(A.length))h=n==="ethereum"?mnemonicToLegacySeed(c,"",!1,64):mnemonicToMiniSecret(c,a);else{if(c.length>32)throw new Error("specified phrase is not a valid mnemonic and is invalid as a raw seed at > 32 bytes");h=stringToU8a(c.padEnd(32))}}const x=n==="ethereum"?p?PairFromSeed[n](h):hdEthereum(h,i.substring(1)):keyFromPath(PairFromSeed[n](h),o,n);return createPair({toSS58:this.encodeAddress,type:n},x,t,null)}getPair(e){return b(this,Kt).get(e)}getPairs(){return b(this,Kt).all()}getPublicKeys(){return b(this,Kt).all().map(pairToPublic)}removePair(e){b(this,Kt).remove(e)}setSS58Format(e){Q(this,rn,e)}toJson(e,t){return b(this,Kt).get(e).toJson(t)}}Kt=new WeakMap,Xn=new WeakMap,rn=new WeakMap;const PAIRSSR25519=[{publicKey:hexToU8a("0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d"),secretKey:hexToU8a("0x98319d4ff8a9508c4bb0cf0b5a78d760a0b2082c02775e6e82370816fedfff48925a225d97aa00682d6a59b95b18780c10d7032336e88f3442b42361f4a66011"),seed:"Alice",type:"sr25519"},{publicKey:hexToU8a("0xbe5ddb1579b72e84524fc29e78609e3caf42e85aa118ebfe0b0ad404b5bdd25f"),secretKey:hexToU8a("0xe8da6c9d810e020f5e3c7f5af2dea314cbeaa0d72bc6421e92c0808a0c584a6046ab28e97c3ffc77fe12b5a4d37e8cd4afbfebbf2391ffc7cb07c0f38c023efd"),seed:"Alice//stash",type:"sr25519"},{publicKey:hexToU8a("0x8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48"),secretKey:hexToU8a("0x081ff694633e255136bdb456c20a5fc8fed21f8b964c11bb17ff534ce80ebd5941ae88f85d0c1bfc37be41c904e1dfc01de8c8067b0d6d5df25dd1ac0894a325"),seed:"Bob",type:"sr25519"},{publicKey:hexToU8a("0xfe65717dad0447d715f660a0a58411de509b42e6efb8375f562f58a554d5860e"),secretKey:hexToU8a("0xc006507cdfc267a21532394c49ca9b754ca71de21e15a1cdf807c7ceab6d0b6c3ed408d9d35311540dcd54931933e67cf1ea10d46f75408f82b789d9bd212fde"),seed:"Bob//stash",type:"sr25519"},{publicKey:hexToU8a("0x90b5ab205c6974c9ea841be688864633dc9ca8a357843eeacf2314649965fe22"),secretKey:hexToU8a("0xa8f2d83016052e5d6d77b2f6fd5d59418922a09024cda701b3c34369ec43a7668faf12ff39cd4e5d92bb773972f41a7a5279ebc2ed92264bed8f47d344f8f18c"),seed:"Charlie",type:"sr25519"},{publicKey:hexToU8a("0x306721211d5404bd9da88e0204360a1a9ab8b87c66c1bc2fcdd37f3c2222cc20"),secretKey:hexToU8a("0x20e05482ca4677e0edbc58ae9a3a59f6ed3b1a9484ba17e64d6fe8688b2b7b5d108c4487b9323b98b11fe36cb301b084e920f7b7895536809a6d62a451b25568"),seed:"Dave",type:"sr25519"},{publicKey:hexToU8a("0xe659a7a1628cdd93febc04a4e0646ea20e9f5f0ce097d9a05290d4a9e054df4e"),secretKey:hexToU8a("0x683576abfd5dc35273e4264c23095a1bf21c14517bece57c7f0cc5c0ed4ce06a3dbf386b7828f348abe15d76973a72009e6ef86a5c91db2990cb36bb657c6587"),seed:"Eve",type:"sr25519"},{publicKey:hexToU8a("0x1cbd2d43530a44705ad088af313e18f80b53ef16b36177cd4b77b846f2a5f07c"),secretKey:hexToU8a("0xb835c20f450079cf4f513900ae9faf8df06ad86c681884122c752a4b2bf74d4303e4f21bc6cc62bb4eeed5a9cce642c25e2d2ac1464093b50f6196d78e3a7426"),seed:"Ferdie",type:"sr25519"}],PAIRSETHEREUM=[{name:"Alith",publicKey:hexToU8a("0x02509540919faacf9ab52146c9aa40db68172d83777250b28e4679176e49ccdd9f"),secretKey:hexToU8a("0x5fb92d6e98884f76de468fa3f6278f8807c48bebc13595d45af5bdc4da702133"),type:"ethereum"},{name:"Baltathar",publicKey:hexToU8a("0x033bc19e36ff1673910575b6727a974a9abd80c9a875d41ab3e2648dbfb9e4b518"),secretKey:hexToU8a("0x8075991ce870b93a8870eca0c0f91913d12f47948ca0fd25b49c6fa7cdbeee8b"),type:"ethereum"},{name:"Charleth",publicKey:hexToU8a("0x0234637bdc0e89b5d46543bcbf8edff329d2702bc995e27e9af4b1ba009a3c2a5e"),secretKey:hexToU8a("0x0b6e18cafb6ed99687ec547bd28139cafdd2bffe70e6b688025de6b445aa5c5b"),type:"ethereum"},{name:"Dorothy",publicKey:hexToU8a("0x02a00d60b2b408c2a14c5d70cdd2c205db8985ef737a7e55ad20ea32cc9e7c417c"),secretKey:hexToU8a("0x39539ab1876910bbf3a223d84a29e28f1cb4e2e456503e7e91ed39b2e7223d68"),type:"ethereum"},{name:"Ethan",publicKey:hexToU8a("0x025cdc005b752651cd3f728fb9192182acb3a9c89e19072cbd5b03f3ee1f1b3ffa"),secretKey:hexToU8a("0x7dce9bc8babb68fec1409be38c8e1a52650206a7ed90ff956ae8a6d15eeaaef4"),type:"ethereum"},{name:"Faith",publicKey:hexToU8a("0x037964b6c9d546da4646ada28a99e34acaa1d14e7aba861a9055f9bd200c8abf74"),secretKey:hexToU8a("0xb9d2ea9a615f3165812e8d44de0d24da9bbd164b65c4f0573e1ce2c8dbd9c8df"),type:"ethereum"}];function createMeta(r,e){if(!r&&!e)throw new Error("Testing pair should have either a name or a seed");return{isTesting:!0,name:r||e&&e.replace("//","_").toLowerCase()}}function createTestKeyring(r={},e=!0){const t=new Keyring$1(r),n=r.type&&r.type==="ethereum"?PAIRSETHEREUM:PAIRSSR25519;for(const{name:s,publicKey:i,secretKey:a,seed:o,type:c}of n){const h=createMeta(s,o),p=!e&&!s&&o?t.addFromUri(o,h,r.type):t.addPair(createPair({toSS58:t.encodeAddress,type:c},{publicKey:i,secretKey:a},h));p.lock=()=>{}}return t}const UNKNOWN=-99999;function extend(r,e,t){Object.defineProperty(r,e,{configurable:!0,enumerable:!1,value:t})}class RpcError extends Error{constructor(e="",t=UNKNOWN,n){if(super(),extend(this,"message",String(e)),extend(this,"name",this.constructor.name),extend(this,"data",n),extend(this,"code",t),isFunction$3(Error.captureStackTrace))Error.captureStackTrace(this,this.constructor);else{const{stack:s}=new Error(e);s&&extend(this,"stack",s)}}}Ae(RpcError,"CODES",{ASSERT:-90009,INVALID_JSONRPC:-99998,METHOD_NOT_FOUND:-32601,UNKNOWN});function formatErrorData(r){if(isUndefined(r))return"";const e=`: ${isString(r)?r.replace(/Error\("/g,"").replace(/\("/g,"(").replace(/"\)/g,")").replace(/\(/g,", ").replace(/\)/g,""):stringify(r)}`;return e.length<=256?e:`${e.substring(0,255)}\u2026`}function checkError(r){if(r){const{code:e,data:t,message:n}=r;throw new RpcError(`${e}: ${n}${formatErrorData(t)}`,e,t)}}var ds;class RpcCoder{constructor(){_(this,ds,0)}decodeResponse(e){if(!e||e.jsonrpc!=="2.0")throw new Error("Invalid jsonrpc field in decoded object");const t=!isUndefined(e.params)&&!isUndefined(e.method);if(!isNumber(e.id)&&(!t||!isNumber(e.params.subscription)&&!isString(e.params.subscription)))throw new Error("Invalid id field in decoded object");if(checkError(e.error),e.result===void 0&&!t)throw new Error("No result found in jsonrpc response");return t?(checkError(e.params.error),e.params.result):e.result}encodeJson(e,t){const[n,s]=this.encodeObject(e,t);return[n,stringify(s)]}encodeObject(e,t){const n=++Ns(this,ds)._;return[n,{id:n,jsonrpc:"2.0",method:e,params:t}]}}ds=new WeakMap;const HTTP_URL="http://127.0.0.1:9933",WS_URL="ws://127.0.0.1:9944";var defaults={HTTP_URL,WS_URL};const DEFAULT_CAPACITY=128;class LRUNode{constructor(e){this.key=e,this.next=this.prev=this}}var _data=_classPrivateFieldKey("data"),_refs=_classPrivateFieldKey("refs"),_length=_classPrivateFieldKey("length"),_head=_classPrivateFieldKey("head"),_tail=_classPrivateFieldKey("tail"),_toHead=_classPrivateFieldKey("toHead");class LRUCache{constructor(e=DEFAULT_CAPACITY){Object.defineProperty(this,_toHead,{value:_toHead2}),this.capacity=void 0,Object.defineProperty(this,_data,{writable:!0,value:new Map}),Object.defineProperty(this,_refs,{writable:!0,value:new Map}),Object.defineProperty(this,_length,{writable:!0,value:0}),Object.defineProperty(this,_head,{writable:!0,value:void 0}),Object.defineProperty(this,_tail,{writable:!0,value:void 0}),this.capacity=e,_classPrivateFieldBase(this,_head)[_head]=_classPrivateFieldBase(this,_tail)[_tail]=new LRUNode("<empty>")}get length(){return _classPrivateFieldBase(this,_length)[_length]}get lengthData(){return _classPrivateFieldBase(this,_data)[_data].size}get lengthRefs(){return _classPrivateFieldBase(this,_refs)[_refs].size}entries(){const e=this.keys(),t=new Array(e.length);for(let n=0;n<e.length;n++){const s=e[n];t[n]=[s,_classPrivateFieldBase(this,_data)[_data].get(s)]}return t}keys(){const e=[];if(_classPrivateFieldBase(this,_length)[_length]){let t=_classPrivateFieldBase(this,_head)[_head];for(;t!==_classPrivateFieldBase(this,_tail)[_tail];)e.push(t.key),t=t.next;e.push(t.key)}return e}get(e){const t=_classPrivateFieldBase(this,_data)[_data].get(e);return t?(_classPrivateFieldBase(this,_toHead)[_toHead](e),t):null}set(e,t){if(_classPrivateFieldBase(this,_data)[_data].has(e))_classPrivateFieldBase(this,_toHead)[_toHead](e);else{const n=new LRUNode(e);_classPrivateFieldBase(this,_refs)[_refs].set(n.key,n),this.length===0?_classPrivateFieldBase(this,_head)[_head]=_classPrivateFieldBase(this,_tail)[_tail]=n:(_classPrivateFieldBase(this,_head)[_head].prev=n,n.next=_classPrivateFieldBase(this,_head)[_head],_classPrivateFieldBase(this,_head)[_head]=n),_classPrivateFieldBase(this,_length)[_length]===this.capacity?(_classPrivateFieldBase(this,_data)[_data].delete(_classPrivateFieldBase(this,_tail)[_tail].key),_classPrivateFieldBase(this,_refs)[_refs].delete(_classPrivateFieldBase(this,_tail)[_tail].key),_classPrivateFieldBase(this,_tail)[_tail]=_classPrivateFieldBase(this,_tail)[_tail].prev,_classPrivateFieldBase(this,_tail)[_tail].next=_classPrivateFieldBase(this,_head)[_head]):_classPrivateFieldBase(this,_length)[_length]+=1}_classPrivateFieldBase(this,_data)[_data].set(e,t)}}function _toHead2(r){const e=_classPrivateFieldBase(this,_refs)[_refs].get(r);e&&e!==_classPrivateFieldBase(this,_head)[_head]&&(e.prev.next=e.next,e.next.prev=e.prev,e.next=_classPrivateFieldBase(this,_head)[_head],_classPrivateFieldBase(this,_head)[_head].prev=e,_classPrivateFieldBase(this,_head)[_head]=e)}var eventemitter3={exports:{}};(function(r){var e=Object.prototype.hasOwnProperty,t="~";function n(){}Object.create&&(n.prototype=Object.create(null),new n().__proto__||(t=!1));function s(c,h,p){this.fn=c,this.context=h,this.once=p||!1}function i(c,h,p,x,A){if(typeof p!="function")throw new TypeError("The listener must be a function");var k=new s(p,x||c,A),U=t?t+h:h;return c._events[U]?c._events[U].fn?c._events[U]=[c._events[U],k]:c._events[U].push(k):(c._events[U]=k,c._eventsCount++),c}function a(c,h){--c._eventsCount===0?c._events=new n:delete c._events[h]}function o(){this._events=new n,this._eventsCount=0}o.prototype.eventNames=function(){var h=[],p,x;if(this._eventsCount===0)return h;for(x in p=this._events)e.call(p,x)&&h.push(t?x.slice(1):x);return Object.getOwnPropertySymbols?h.concat(Object.getOwnPropertySymbols(p)):h},o.prototype.listeners=function(h){var p=t?t+h:h,x=this._events[p];if(!x)return[];if(x.fn)return[x.fn];for(var A=0,k=x.length,U=new Array(k);A<k;A++)U[A]=x[A].fn;return U},o.prototype.listenerCount=function(h){var p=t?t+h:h,x=this._events[p];return x?x.fn?1:x.length:0},o.prototype.emit=function(h,p,x,A,k,U){var D=t?t+h:h;if(!this._events[D])return!1;var F=this._events[D],q=arguments.length,ae,Y;if(F.fn){switch(F.once&&this.removeListener(h,F.fn,void 0,!0),q){case 1:return F.fn.call(F.context),!0;case 2:return F.fn.call(F.context,p),!0;case 3:return F.fn.call(F.context,p,x),!0;case 4:return F.fn.call(F.context,p,x,A),!0;case 5:return F.fn.call(F.context,p,x,A,k),!0;case 6:return F.fn.call(F.context,p,x,A,k,U),!0}for(Y=1,ae=new Array(q-1);Y<q;Y++)ae[Y-1]=arguments[Y];F.fn.apply(F.context,ae)}else{var de=F.length,fe;for(Y=0;Y<de;Y++)switch(F[Y].once&&this.removeListener(h,F[Y].fn,void 0,!0),q){case 1:F[Y].fn.call(F[Y].context);break;case 2:F[Y].fn.call(F[Y].context,p);break;case 3:F[Y].fn.call(F[Y].context,p,x);break;case 4:F[Y].fn.call(F[Y].context,p,x,A);break;default:if(!ae)for(fe=1,ae=new Array(q-1);fe<q;fe++)ae[fe-1]=arguments[fe];F[Y].fn.apply(F[Y].context,ae)}}return!0},o.prototype.on=function(h,p,x){return i(this,h,p,x,!1)},o.prototype.once=function(h,p,x){return i(this,h,p,x,!0)},o.prototype.removeListener=function(h,p,x,A){var k=t?t+h:h;if(!this._events[k])return this;if(!p)return a(this,k),this;var U=this._events[k];if(U.fn)U.fn===p&&(!A||U.once)&&(!x||U.context===x)&&a(this,k);else{for(var D=0,F=[],q=U.length;D<q;D++)(U[D].fn!==p||A&&!U[D].once||x&&U[D].context!==x)&&F.push(U[D]);F.length?this._events[k]=F.length===1?F[0]:F:a(this,k)}return this},o.prototype.removeAllListeners=function(h){var p;return h?(p=t?t+h:h,this._events[p]&&a(this,p)):(this._events=new n,this._eventsCount=0),this},o.prototype.off=o.prototype.removeListener,o.prototype.addListener=o.prototype.on,o.prefixed=t,o.EventEmitter=o,r.exports=o})(eventemitter3);var EventEmitter=eventemitter3.exports;function evaluateThis$1(r){return r("return this")}const xglobal$1=typeof globalThis!="undefined"?globalThis:typeof global!="undefined"?global:typeof self!="undefined"?self:typeof window!="undefined"?window:evaluateThis$1(Function);function evaluateThis(r){return r("return this")}const xglobal=typeof globalThis!="undefined"?globalThis:typeof global!="undefined"?global:typeof self!="undefined"?self:typeof window!="undefined"?window:evaluateThis(Function),WebSocket=xglobal.WebSocket,known={1e3:"Normal Closure",1001:"Going Away",1002:"Protocol Error",1003:"Unsupported Data",1004:"(For future)",1005:"No Status Received",1006:"Abnormal Closure",1007:"Invalid frame payload data",1008:"Policy Violation",1009:"Message too big",1010:"Missing Extension",1011:"Internal Error",1012:"Service Restart",1013:"Try Again Later",1014:"Bad Gateway",1015:"TLS Handshake"};function getUnmapped(r){if(r<=1999)return"(For WebSocket standard)";if(r<=2999)return"(For WebSocket extensions)";if(r<=3999)return"(For libraries and frameworks)";if(r<=4999)return"(For applications)"}function getWSErrorString(r){return r>=0&&r<=999?"(Unused)":known[r]||getUnmapped(r)||"(Unknown)"}const ALIASES={chain_finalisedHead:"chain_finalizedHead",chain_subscribeFinalisedHeads:"chain_subscribeFinalizedHeads",chain_unsubscribeFinalisedHeads:"chain_unsubscribeFinalizedHeads"},RETRY_DELAY=2500,DEFAULT_TIMEOUT_MS=60*1e3,TIMEOUT_INTERVAL=5e3,MEGABYTE=1024*1024,l$7=logger("api-ws");function eraseRecord(r,e){Object.keys(r).forEach(t=>{e&&e(r[t]),delete r[t]})}var _callCache=_classPrivateFieldKey("callCache"),_coder=_classPrivateFieldKey("coder"),_endpoints=_classPrivateFieldKey("endpoints"),_headers=_classPrivateFieldKey("headers"),_eventemitter=_classPrivateFieldKey("eventemitter"),_handlers=_classPrivateFieldKey("handlers"),_isReadyPromise=_classPrivateFieldKey("isReadyPromise"),_stats=_classPrivateFieldKey("stats"),_waitingForId=_classPrivateFieldKey("waitingForId"),_autoConnectMs=_classPrivateFieldKey("autoConnectMs"),_endpointIndex=_classPrivateFieldKey("endpointIndex"),_isConnected=_classPrivateFieldKey("isConnected"),_subscriptions=_classPrivateFieldKey("subscriptions"),_timeoutId=_classPrivateFieldKey("timeoutId"),_websocket=_classPrivateFieldKey("websocket"),_timeout=_classPrivateFieldKey("timeout"),_send=_classPrivateFieldKey("send"),_emit=_classPrivateFieldKey("emit"),_onSocketClose=_classPrivateFieldKey("onSocketClose"),_onSocketError=_classPrivateFieldKey("onSocketError"),_onSocketMessage=_classPrivateFieldKey("onSocketMessage"),_onSocketMessageResult=_classPrivateFieldKey("onSocketMessageResult"),_onSocketMessageSubscribe=_classPrivateFieldKey("onSocketMessageSubscribe"),_onSocketOpen=_classPrivateFieldKey("onSocketOpen"),_resubscribe=_classPrivateFieldKey("resubscribe"),_timeoutHandlers=_classPrivateFieldKey("timeoutHandlers");class WsProvider{constructor(e=defaults.WS_URL,t=RETRY_DELAY,n={},s){Object.defineProperty(this,_send,{value:_send2}),Object.defineProperty(this,_callCache,{writable:!0,value:new LRUCache}),Object.defineProperty(this,_coder,{writable:!0,value:void 0}),Object.defineProperty(this,_endpoints,{writable:!0,value:void 0}),Object.defineProperty(this,_headers,{writable:!0,value:void 0}),Object.defineProperty(this,_eventemitter,{writable:!0,value:void 0}),Object.defineProperty(this,_handlers,{writable:!0,value:{}}),Object.defineProperty(this,_isReadyPromise,{writable:!0,value:void 0}),Object.defineProperty(this,_stats,{writable:!0,value:void 0}),Object.defineProperty(this,_waitingForId,{writable:!0,value:{}}),Object.defineProperty(this,_autoConnectMs,{writable:!0,value:void 0}),Object.defineProperty(this,_endpointIndex,{writable:!0,value:void 0}),Object.defineProperty(this,_isConnected,{writable:!0,value:!1}),Object.defineProperty(this,_subscriptions,{writable:!0,value:{}}),Object.defineProperty(this,_timeoutId,{writable:!0,value:null}),Object.defineProperty(this,_websocket,{writable:!0,value:void 0}),Object.defineProperty(this,_timeout,{writable:!0,value:void 0}),Object.defineProperty(this,_emit,{writable:!0,value:(a,...o)=>{_classPrivateFieldBase(this,_eventemitter)[_eventemitter].emit(a,...o)}}),Object.defineProperty(this,_onSocketClose,{writable:!0,value:a=>{const o=new Error(`disconnected from ${_classPrivateFieldBase(this,_endpoints)[_endpoints][_classPrivateFieldBase(this,_endpointIndex)[_endpointIndex]]}: ${a.code}:: ${a.reason||getWSErrorString(a.code)}`);_classPrivateFieldBase(this,_autoConnectMs)[_autoConnectMs]>0&&l$7.error(o.message),_classPrivateFieldBase(this,_isConnected)[_isConnected]=!1,_classPrivateFieldBase(this,_websocket)[_websocket]&&(_classPrivateFieldBase(this,_websocket)[_websocket].onclose=null,_classPrivateFieldBase(this,_websocket)[_websocket].onerror=null,_classPrivateFieldBase(this,_websocket)[_websocket].onmessage=null,_classPrivateFieldBase(this,_websocket)[_websocket].onopen=null,_classPrivateFieldBase(this,_websocket)[_websocket]=null),_classPrivateFieldBase(this,_timeoutId)[_timeoutId]&&(clearInterval(_classPrivateFieldBase(this,_timeoutId)[_timeoutId]),_classPrivateFieldBase(this,_timeoutId)[_timeoutId]=null),_classPrivateFieldBase(this,_emit)[_emit]("disconnected"),eraseRecord(_classPrivateFieldBase(this,_handlers)[_handlers],c=>{try{c.callback(o,void 0)}catch(h){l$7.error(h)}}),eraseRecord(_classPrivateFieldBase(this,_waitingForId)[_waitingForId]),_classPrivateFieldBase(this,_autoConnectMs)[_autoConnectMs]>0&&setTimeout(()=>{this.connectWithRetry().catch(()=>{})},_classPrivateFieldBase(this,_autoConnectMs)[_autoConnectMs])}}),Object.defineProperty(this,_onSocketError,{writable:!0,value:a=>{l$7.debug(()=>["socket error",a]),_classPrivateFieldBase(this,_emit)[_emit]("error",a)}}),Object.defineProperty(this,_onSocketMessage,{writable:!0,value:a=>{l$7.debug(()=>["received",a.data]),_classPrivateFieldBase(this,_stats)[_stats].total.bytesRecv+=a.data.length;const o=JSON.parse(a.data);return isUndefined(o.method)?_classPrivateFieldBase(this,_onSocketMessageResult)[_onSocketMessageResult](o):_classPrivateFieldBase(this,_onSocketMessageSubscribe)[_onSocketMessageSubscribe](o)}}),Object.defineProperty(this,_onSocketMessageResult,{writable:!0,value:a=>{const o=_classPrivateFieldBase(this,_handlers)[_handlers][a.id];if(!o){l$7.debug(()=>`Unable to find handler for id=${a.id}`);return}try{const{method:c,params:h,subscription:p}=o,x=_classPrivateFieldBase(this,_coder)[_coder].decodeResponse(a);if(o.callback(null,x),p){const A=`${p.type}::${x}`;_classPrivateFieldBase(this,_subscriptions)[_subscriptions][A]=objectSpread({},p,{method:c,params:h}),_classPrivateFieldBase(this,_waitingForId)[_waitingForId][A]&&_classPrivateFieldBase(this,_onSocketMessageSubscribe)[_onSocketMessageSubscribe](_classPrivateFieldBase(this,_waitingForId)[_waitingForId][A])}}catch(c){_classPrivateFieldBase(this,_stats)[_stats].total.errors++,o.callback(c,void 0)}delete _classPrivateFieldBase(this,_handlers)[_handlers][a.id]}}),Object.defineProperty(this,_onSocketMessageSubscribe,{writable:!0,value:a=>{const c=`${ALIASES[a.method]||a.method||"invalid"}::${a.params.subscription}`,h=_classPrivateFieldBase(this,_subscriptions)[_subscriptions][c];if(!h){_classPrivateFieldBase(this,_waitingForId)[_waitingForId][c]=a,l$7.debug(()=>`Unable to find handler for subscription=${c}`);return}delete _classPrivateFieldBase(this,_waitingForId)[_waitingForId][c];try{const p=_classPrivateFieldBase(this,_coder)[_coder].decodeResponse(a);h.callback(null,p)}catch(p){_classPrivateFieldBase(this,_stats)[_stats].total.errors++,h.callback(p,void 0)}}}),Object.defineProperty(this,_onSocketOpen,{writable:!0,value:()=>{if(_classPrivateFieldBase(this,_websocket)[_websocket]===null)throw new Error("WebSocket cannot be null in onOpen");return l$7.debug(()=>["connected to",_classPrivateFieldBase(this,_endpoints)[_endpoints][_classPrivateFieldBase(this,_endpointIndex)[_endpointIndex]]]),_classPrivateFieldBase(this,_isConnected)[_isConnected]=!0,_classPrivateFieldBase(this,_emit)[_emit]("connected"),_classPrivateFieldBase(this,_resubscribe)[_resubscribe](),!0}}),Object.defineProperty(this,_resubscribe,{writable:!0,value:()=>{const a=_classPrivateFieldBase(this,_subscriptions)[_subscriptions];_classPrivateFieldBase(this,_subscriptions)[_subscriptions]={},Promise.all(Object.keys(a).map(async o=>{const{callback:c,method:h,params:p,type:x}=a[o];if(!x.startsWith("author_"))try{await this.subscribe(x,h,p,c)}catch(A){l$7.error(A)}})).catch(l$7.error)}}),Object.defineProperty(this,_timeoutHandlers,{writable:!0,value:()=>{const a=Date.now(),o=Object.keys(_classPrivateFieldBase(this,_handlers)[_handlers]);for(let c=0;c<o.length;c++){const h=_classPrivateFieldBase(this,_handlers)[_handlers][o[c]];if(a-h.start>_classPrivateFieldBase(this,_timeout)[_timeout]){try{h.callback(new Error(`No response received from RPC endpoint in ${_classPrivateFieldBase(this,_timeout)[_timeout]/1e3}s`),void 0)}catch{}_classPrivateFieldBase(this,_stats)[_stats].total.timeout++,delete _classPrivateFieldBase(this,_handlers)[_handlers][o[c]]}}}});const i=Array.isArray(e)?e:[e];if(i.length===0)throw new Error("WsProvider requires at least one Endpoint");i.forEach(a=>{if(!/^(wss|ws):\/\//.test(a))throw new Error(`Endpoint should start with 'ws://', received '${a}'`)}),_classPrivateFieldBase(this,_eventemitter)[_eventemitter]=new EventEmitter,_classPrivateFieldBase(this,_autoConnectMs)[_autoConnectMs]=t||0,_classPrivateFieldBase(this,_coder)[_coder]=new RpcCoder,_classPrivateFieldBase(this,_endpointIndex)[_endpointIndex]=-1,_classPrivateFieldBase(this,_endpoints)[_endpoints]=i,_classPrivateFieldBase(this,_headers)[_headers]=n,_classPrivateFieldBase(this,_websocket)[_websocket]=null,_classPrivateFieldBase(this,_stats)[_stats]={active:{requests:0,subscriptions:0},total:{bytesRecv:0,bytesSent:0,cached:0,errors:0,requests:0,subscriptions:0,timeout:0}},_classPrivateFieldBase(this,_timeout)[_timeout]=s||DEFAULT_TIMEOUT_MS,t>0&&this.connectWithRetry().catch(()=>{}),_classPrivateFieldBase(this,_isReadyPromise)[_isReadyPromise]=new Promise(a=>{_classPrivateFieldBase(this,_eventemitter)[_eventemitter].once("connected",()=>{a(this)})})}get hasSubscriptions(){return!0}get isConnected(){return _classPrivateFieldBase(this,_isConnected)[_isConnected]}get isReady(){return _classPrivateFieldBase(this,_isReadyPromise)[_isReadyPromise]}clone(){return new WsProvider(_classPrivateFieldBase(this,_endpoints)[_endpoints])}async connect(){try{_classPrivateFieldBase(this,_endpointIndex)[_endpointIndex]=(_classPrivateFieldBase(this,_endpointIndex)[_endpointIndex]+1)%_classPrivateFieldBase(this,_endpoints)[_endpoints].length,_classPrivateFieldBase(this,_websocket)[_websocket]=typeof xglobal$1.WebSocket!="undefined"&&isChildClass(xglobal$1.WebSocket,WebSocket)?new WebSocket(_classPrivateFieldBase(this,_endpoints)[_endpoints][_classPrivateFieldBase(this,_endpointIndex)[_endpointIndex]]):new WebSocket(_classPrivateFieldBase(this,_endpoints)[_endpoints][_classPrivateFieldBase(this,_endpointIndex)[_endpointIndex]],void 0,void 0,_classPrivateFieldBase(this,_headers)[_headers],void 0,{fragmentOutgoingMessages:!0,fragmentationThreshold:1*MEGABYTE,maxReceivedFrameSize:24*MEGABYTE,maxReceivedMessageSize:24*MEGABYTE}),_classPrivateFieldBase(this,_websocket)[_websocket].onclose=_classPrivateFieldBase(this,_onSocketClose)[_onSocketClose],_classPrivateFieldBase(this,_websocket)[_websocket].onerror=_classPrivateFieldBase(this,_onSocketError)[_onSocketError],_classPrivateFieldBase(this,_websocket)[_websocket].onmessage=_classPrivateFieldBase(this,_onSocketMessage)[_onSocketMessage],_classPrivateFieldBase(this,_websocket)[_websocket].onopen=_classPrivateFieldBase(this,_onSocketOpen)[_onSocketOpen],_classPrivateFieldBase(this,_timeoutId)[_timeoutId]=setInterval(()=>_classPrivateFieldBase(this,_timeoutHandlers)[_timeoutHandlers](),TIMEOUT_INTERVAL)}catch(e){throw l$7.error(e),_classPrivateFieldBase(this,_emit)[_emit]("error",e),e}}async connectWithRetry(){if(_classPrivateFieldBase(this,_autoConnectMs)[_autoConnectMs]>0)try{await this.connect()}catch{setTimeout(()=>{this.connectWithRetry().catch(()=>{})},_classPrivateFieldBase(this,_autoConnectMs)[_autoConnectMs])}}async disconnect(){_classPrivateFieldBase(this,_autoConnectMs)[_autoConnectMs]=0;try{_classPrivateFieldBase(this,_websocket)[_websocket]&&_classPrivateFieldBase(this,_websocket)[_websocket].close(1e3)}catch(e){throw l$7.error(e),_classPrivateFieldBase(this,_emit)[_emit]("error",e),e}}get stats(){return{active:{requests:Object.keys(_classPrivateFieldBase(this,_handlers)[_handlers]).length,subscriptions:Object.keys(_classPrivateFieldBase(this,_subscriptions)[_subscriptions]).length},total:_classPrivateFieldBase(this,_stats)[_stats].total}}on(e,t){return _classPrivateFieldBase(this,_eventemitter)[_eventemitter].on(e,t),()=>{_classPrivateFieldBase(this,_eventemitter)[_eventemitter].removeListener(e,t)}}send(e,t,n,s){_classPrivateFieldBase(this,_stats)[_stats].total.requests++;const[i,a]=_classPrivateFieldBase(this,_coder)[_coder].encodeJson(e,t);let o=n?_classPrivateFieldBase(this,_callCache)[_callCache].get(a):null;return o?_classPrivateFieldBase(this,_stats)[_stats].total.cached++:(o=_classPrivateFieldBase(this,_send)[_send](i,a,e,t,s),n&&_classPrivateFieldBase(this,_callCache)[_callCache].set(a,o)),o}subscribe(e,t,n,s){return _classPrivateFieldBase(this,_stats)[_stats].total.subscriptions++,this.send(t,n,!1,{callback:s,type:e})}async unsubscribe(e,t,n){const s=`${e}::${n}`;if(isUndefined(_classPrivateFieldBase(this,_subscriptions)[_subscriptions][s]))return l$7.debug(()=>`Unable to find active subscription=${s}`),!1;delete _classPrivateFieldBase(this,_subscriptions)[_subscriptions][s];try{return this.isConnected&&!isNull(_classPrivateFieldBase(this,_websocket)[_websocket])?this.send(t,[n]):!0}catch{return!1}}}async function _send2(r,e,t,n,s){return new Promise((i,a)=>{try{if(!this.isConnected||_classPrivateFieldBase(this,_websocket)[_websocket]===null)throw new Error("WebSocket is not connected");const o=(c,h)=>{c?a(c):i(h)};l$7.debug(()=>["calling",t,e]),_classPrivateFieldBase(this,_handlers)[_handlers][r]={callback:o,method:t,params:n,start:Date.now(),subscription:s},_classPrivateFieldBase(this,_stats)[_stats].total.bytesSent+=e.length,_classPrivateFieldBase(this,_websocket)[_websocket].send(e)}catch(o){_classPrivateFieldBase(this,_stats)[_stats].total.errors++,a(o)}})}var extendStatics=function(r,e){return extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&(t[s]=n[s])},extendStatics(r,e)};function __extends(r,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");extendStatics(r,e);function t(){this.constructor=r}r.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}function __awaiter(r,e,t,n){function s(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function o(p){try{h(n.next(p))}catch(x){a(x)}}function c(p){try{h(n.throw(p))}catch(x){a(x)}}function h(p){p.done?i(p.value):s(p.value).then(o,c)}h((n=n.apply(r,e||[])).next())})}function __generator(r,e){var t={label:0,sent:function(){if(i[0]&1)throw i[1];return i[1]},trys:[],ops:[]},n,s,i,a;return a={next:o(0),throw:o(1),return:o(2)},typeof Symbol=="function"&&(a[Symbol.iterator]=function(){return this}),a;function o(h){return function(p){return c([h,p])}}function c(h){if(n)throw new TypeError("Generator is already executing.");for(;t;)try{if(n=1,s&&(i=h[0]&2?s.return:h[0]?s.throw||((i=s.return)&&i.call(s),0):s.next)&&!(i=i.call(s,h[1])).done)return i;switch(s=0,i&&(h=[h[0]&2,i.value]),h[0]){case 0:case 1:i=h;break;case 4:return t.label++,{value:h[1],done:!1};case 5:t.label++,s=h[1],h=[0];continue;case 7:h=t.ops.pop(),t.trys.pop();continue;default:if(i=t.trys,!(i=i.length>0&&i[i.length-1])&&(h[0]===6||h[0]===2)){t=0;continue}if(h[0]===3&&(!i||h[1]>i[0]&&h[1]<i[3])){t.label=h[1];break}if(h[0]===6&&t.label<i[1]){t.label=i[1],i=h;break}if(i&&t.label<i[2]){t.label=i[2],t.ops.push(h);break}i[2]&&t.ops.pop(),t.trys.pop();continue}h=e.call(r,t)}catch(p){h=[6,p],s=0}finally{n=i=0}if(h[0]&5)throw h[1];return{value:h[0]?h[1]:void 0,done:!0}}}function __values(r){var e=typeof Symbol=="function"&&Symbol.iterator,t=e&&r[e],n=0;if(t)return t.call(r);if(r&&typeof r.length=="number")return{next:function(){return r&&n>=r.length&&(r=void 0),{value:r&&r[n++],done:!r}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function __read(r,e){var t=typeof Symbol=="function"&&r[Symbol.iterator];if(!t)return r;var n=t.call(r),s,i=[],a;try{for(;(e===void 0||e-- >0)&&!(s=n.next()).done;)i.push(s.value)}catch(o){a={error:o}}finally{try{s&&!s.done&&(t=n.return)&&t.call(n)}finally{if(a)throw a.error}}return i}function __spreadArray(r,e,t){if(t||arguments.length===2)for(var n=0,s=e.length,i;n<s;n++)(i||!(n in e))&&(i||(i=Array.prototype.slice.call(e,0,n)),i[n]=e[n]);return r.concat(i||Array.prototype.slice.call(e))}function __await(r){return this instanceof __await?(this.v=r,this):new __await(r)}function __asyncGenerator(r,e,t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n=t.apply(r,e||[]),s,i=[];return s={},a("next"),a("throw"),a("return"),s[Symbol.asyncIterator]=function(){return this},s;function a(A){n[A]&&(s[A]=function(k){return new Promise(function(U,D){i.push([A,k,U,D])>1||o(A,k)})})}function o(A,k){try{c(n[A](k))}catch(U){x(i[0][3],U)}}function c(A){A.value instanceof __await?Promise.resolve(A.value.v).then(h,p):x(i[0][2],A)}function h(A){o("next",A)}function p(A){o("throw",A)}function x(A,k){A(k),i.shift(),i.length&&o(i[0][0],i[0][1])}}function __asyncValues(r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=r[Symbol.asyncIterator],t;return e?e.call(r):(r=typeof __values=="function"?__values(r):r[Symbol.iterator](),t={},n("next"),n("throw"),n("return"),t[Symbol.asyncIterator]=function(){return this},t);function n(i){t[i]=r[i]&&function(a){return new Promise(function(o,c){a=r[i](a),s(o,c,a.done,a.value)})}}function s(i,a,o,c){Promise.resolve(c).then(function(h){i({value:h,done:o})},a)}}function isFunction$2(r){return typeof r=="function"}function createErrorClass(r){var e=function(n){Error.call(n),n.stack=new Error().stack},t=r(e);return t.prototype=Object.create(Error.prototype),t.prototype.constructor=t,t}var UnsubscriptionError=createErrorClass(function(r){return function(t){r(this),this.message=t?t.length+` errors occurred during unsubscription:
`+t.map(function(n,s){return s+1+") "+n.toString()}).join(`
  `):"",this.name="UnsubscriptionError",this.errors=t}});function arrRemove(r,e){if(r){var t=r.indexOf(e);0<=t&&r.splice(t,1)}}var Subscription=function(){function r(e){this.initialTeardown=e,this.closed=!1,this._parentage=null,this._finalizers=null}return r.prototype.unsubscribe=function(){var e,t,n,s,i;if(!this.closed){this.closed=!0;var a=this._parentage;if(a)if(this._parentage=null,Array.isArray(a))try{for(var o=__values(a),c=o.next();!c.done;c=o.next()){var h=c.value;h.remove(this)}}catch(D){e={error:D}}finally{try{c&&!c.done&&(t=o.return)&&t.call(o)}finally{if(e)throw e.error}}else a.remove(this);var p=this.initialTeardown;if(isFunction$2(p))try{p()}catch(D){i=D instanceof UnsubscriptionError?D.errors:[D]}var x=this._finalizers;if(x){this._finalizers=null;try{for(var A=__values(x),k=A.next();!k.done;k=A.next()){var U=k.value;try{execFinalizer(U)}catch(D){i=i!=null?i:[],D instanceof UnsubscriptionError?i=__spreadArray(__spreadArray([],__read(i)),__read(D.errors)):i.push(D)}}}catch(D){n={error:D}}finally{try{k&&!k.done&&(s=A.return)&&s.call(A)}finally{if(n)throw n.error}}}if(i)throw new UnsubscriptionError(i)}},r.prototype.add=function(e){var t;if(e&&e!==this)if(this.closed)execFinalizer(e);else{if(e instanceof r){if(e.closed||e._hasParent(this))return;e._addParent(this)}(this._finalizers=(t=this._finalizers)!==null&&t!==void 0?t:[]).push(e)}},r.prototype._hasParent=function(e){var t=this._parentage;return t===e||Array.isArray(t)&&t.includes(e)},r.prototype._addParent=function(e){var t=this._parentage;this._parentage=Array.isArray(t)?(t.push(e),t):t?[t,e]:e},r.prototype._removeParent=function(e){var t=this._parentage;t===e?this._parentage=null:Array.isArray(t)&&arrRemove(t,e)},r.prototype.remove=function(e){var t=this._finalizers;t&&arrRemove(t,e),e instanceof r&&e._removeParent(this)},r.EMPTY=function(){var e=new r;return e.closed=!0,e}(),r}(),EMPTY_SUBSCRIPTION=Subscription.EMPTY;function isSubscription(r){return r instanceof Subscription||r&&"closed"in r&&isFunction$2(r.remove)&&isFunction$2(r.add)&&isFunction$2(r.unsubscribe)}function execFinalizer(r){isFunction$2(r)?r():r.unsubscribe()}var config={onUnhandledError:null,onStoppedNotification:null,Promise:void 0,useDeprecatedSynchronousErrorHandling:!1,useDeprecatedNextContext:!1},timeoutProvider={setTimeout:function(r,e){for(var t=[],n=2;n<arguments.length;n++)t[n-2]=arguments[n];var s=timeoutProvider.delegate;return s!=null&&s.setTimeout?s.setTimeout.apply(s,__spreadArray([r,e],__read(t))):setTimeout.apply(void 0,__spreadArray([r,e],__read(t)))},clearTimeout:function(r){var e=timeoutProvider.delegate;return((e==null?void 0:e.clearTimeout)||clearTimeout)(r)},delegate:void 0};function reportUnhandledError(r){timeoutProvider.setTimeout(function(){throw r})}function noop(){}var COMPLETE_NOTIFICATION=function(){return createNotification("C",void 0,void 0)}();function errorNotification(r){return createNotification("E",void 0,r)}function nextNotification(r){return createNotification("N",r,void 0)}function createNotification(r,e,t){return{kind:r,value:e,error:t}}function errorContext(r){r()}var Subscriber=function(r){__extends(e,r);function e(t){var n=r.call(this)||this;return n.isStopped=!1,t?(n.destination=t,isSubscription(t)&&t.add(n)):n.destination=EMPTY_OBSERVER,n}return e.create=function(t,n,s){return new SafeSubscriber(t,n,s)},e.prototype.next=function(t){this.isStopped?handleStoppedNotification(nextNotification(t),this):this._next(t)},e.prototype.error=function(t){this.isStopped?handleStoppedNotification(errorNotification(t),this):(this.isStopped=!0,this._error(t))},e.prototype.complete=function(){this.isStopped?handleStoppedNotification(COMPLETE_NOTIFICATION,this):(this.isStopped=!0,this._complete())},e.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,r.prototype.unsubscribe.call(this),this.destination=null)},e.prototype._next=function(t){this.destination.next(t)},e.prototype._error=function(t){try{this.destination.error(t)}finally{this.unsubscribe()}},e.prototype._complete=function(){try{this.destination.complete()}finally{this.unsubscribe()}},e}(Subscription),_bind=Function.prototype.bind;function bind$2(r,e){return _bind.call(r,e)}var ConsumerObserver=function(){function r(e){this.partialObserver=e}return r.prototype.next=function(e){var t=this.partialObserver;if(t.next)try{t.next(e)}catch(n){handleUnhandledError(n)}},r.prototype.error=function(e){var t=this.partialObserver;if(t.error)try{t.error(e)}catch(n){handleUnhandledError(n)}else handleUnhandledError(e)},r.prototype.complete=function(){var e=this.partialObserver;if(e.complete)try{e.complete()}catch(t){handleUnhandledError(t)}},r}(),SafeSubscriber=function(r){__extends(e,r);function e(t,n,s){var i=r.call(this)||this,a;if(isFunction$2(t)||!t)a={next:t!=null?t:void 0,error:n!=null?n:void 0,complete:s!=null?s:void 0};else{var o;i&&config.useDeprecatedNextContext?(o=Object.create(t),o.unsubscribe=function(){return i.unsubscribe()},a={next:t.next&&bind$2(t.next,o),error:t.error&&bind$2(t.error,o),complete:t.complete&&bind$2(t.complete,o)}):a=t}return i.destination=new ConsumerObserver(a),i}return e}(Subscriber);function handleUnhandledError(r){reportUnhandledError(r)}function defaultErrorHandler(r){throw r}function handleStoppedNotification(r,e){var t=config.onStoppedNotification;t&&timeoutProvider.setTimeout(function(){return t(r,e)})}var EMPTY_OBSERVER={closed:!0,next:noop,error:defaultErrorHandler,complete:noop},observable=function(){return typeof Symbol=="function"&&Symbol.observable||"@@observable"}();function identity$2(r){return r}function pipeFromArray(r){return r.length===0?identity$2:r.length===1?r[0]:function(t){return r.reduce(function(n,s){return s(n)},t)}}var Observable=function(){function r(e){e&&(this._subscribe=e)}return r.prototype.lift=function(e){var t=new r;return t.source=this,t.operator=e,t},r.prototype.subscribe=function(e,t,n){var s=this,i=isSubscriber(e)?e:new SafeSubscriber(e,t,n);return errorContext(function(){var a=s,o=a.operator,c=a.source;i.add(o?o.call(i,c):c?s._subscribe(i):s._trySubscribe(i))}),i},r.prototype._trySubscribe=function(e){try{return this._subscribe(e)}catch(t){e.error(t)}},r.prototype.forEach=function(e,t){var n=this;return t=getPromiseCtor(t),new t(function(s,i){var a=new SafeSubscriber({next:function(o){try{e(o)}catch(c){i(c),a.unsubscribe()}},error:i,complete:s});n.subscribe(a)})},r.prototype._subscribe=function(e){var t;return(t=this.source)===null||t===void 0?void 0:t.subscribe(e)},r.prototype[observable]=function(){return this},r.prototype.pipe=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return pipeFromArray(e)(this)},r.prototype.toPromise=function(e){var t=this;return e=getPromiseCtor(e),new e(function(n,s){var i;t.subscribe(function(a){return i=a},function(a){return s(a)},function(){return n(i)})})},r.create=function(e){return new r(e)},r}();function getPromiseCtor(r){var e;return(e=r!=null?r:config.Promise)!==null&&e!==void 0?e:Promise}function isObserver(r){return r&&isFunction$2(r.next)&&isFunction$2(r.error)&&isFunction$2(r.complete)}function isSubscriber(r){return r&&r instanceof Subscriber||isObserver(r)&&isSubscription(r)}function hasLift(r){return isFunction$2(r==null?void 0:r.lift)}function operate(r){return function(e){if(hasLift(e))return e.lift(function(t){try{return r(t,this)}catch(n){this.error(n)}});throw new TypeError("Unable to lift unknown Observable type")}}function createOperatorSubscriber(r,e,t,n,s){return new OperatorSubscriber(r,e,t,n,s)}var OperatorSubscriber=function(r){__extends(e,r);function e(t,n,s,i,a,o){var c=r.call(this,t)||this;return c.onFinalize=a,c.shouldUnsubscribe=o,c._next=n?function(h){try{n(h)}catch(p){t.error(p)}}:r.prototype._next,c._error=i?function(h){try{i(h)}catch(p){t.error(p)}finally{this.unsubscribe()}}:r.prototype._error,c._complete=s?function(){try{s()}catch(h){t.error(h)}finally{this.unsubscribe()}}:r.prototype._complete,c}return e.prototype.unsubscribe=function(){var t;if(!this.shouldUnsubscribe||this.shouldUnsubscribe()){var n=this.closed;r.prototype.unsubscribe.call(this),!n&&((t=this.onFinalize)===null||t===void 0||t.call(this))}},e}(Subscriber);function refCount(){return operate(function(r,e){var t=null;r._refCount++;var n=createOperatorSubscriber(e,void 0,void 0,void 0,function(){if(!r||r._refCount<=0||0<--r._refCount){t=null;return}var s=r._connection,i=t;t=null,s&&(!i||s===i)&&s.unsubscribe(),e.unsubscribe()});r.subscribe(n),n.closed||(t=r.connect())})}var ConnectableObservable=function(r){__extends(e,r);function e(t,n){var s=r.call(this)||this;return s.source=t,s.subjectFactory=n,s._subject=null,s._refCount=0,s._connection=null,hasLift(t)&&(s.lift=t.lift),s}return e.prototype._subscribe=function(t){return this.getSubject().subscribe(t)},e.prototype.getSubject=function(){var t=this._subject;return(!t||t.isStopped)&&(this._subject=this.subjectFactory()),this._subject},e.prototype._teardown=function(){this._refCount=0;var t=this._connection;this._subject=this._connection=null,t==null||t.unsubscribe()},e.prototype.connect=function(){var t=this,n=this._connection;if(!n){n=this._connection=new Subscription;var s=this.getSubject();n.add(this.source.subscribe(createOperatorSubscriber(s,void 0,function(){t._teardown(),s.complete()},function(i){t._teardown(),s.error(i)},function(){return t._teardown()}))),n.closed&&(this._connection=null,n=Subscription.EMPTY)}return n},e.prototype.refCount=function(){return refCount()(this)},e}(Observable),ObjectUnsubscribedError=createErrorClass(function(r){return function(){r(this),this.name="ObjectUnsubscribedError",this.message="object unsubscribed"}}),Subject=function(r){__extends(e,r);function e(){var t=r.call(this)||this;return t.closed=!1,t.currentObservers=null,t.observers=[],t.isStopped=!1,t.hasError=!1,t.thrownError=null,t}return e.prototype.lift=function(t){var n=new AnonymousSubject(this,this);return n.operator=t,n},e.prototype._throwIfClosed=function(){if(this.closed)throw new ObjectUnsubscribedError},e.prototype.next=function(t){var n=this;errorContext(function(){var s,i;if(n._throwIfClosed(),!n.isStopped){n.currentObservers||(n.currentObservers=Array.from(n.observers));try{for(var a=__values(n.currentObservers),o=a.next();!o.done;o=a.next()){var c=o.value;c.next(t)}}catch(h){s={error:h}}finally{try{o&&!o.done&&(i=a.return)&&i.call(a)}finally{if(s)throw s.error}}}})},e.prototype.error=function(t){var n=this;errorContext(function(){if(n._throwIfClosed(),!n.isStopped){n.hasError=n.isStopped=!0,n.thrownError=t;for(var s=n.observers;s.length;)s.shift().error(t)}})},e.prototype.complete=function(){var t=this;errorContext(function(){if(t._throwIfClosed(),!t.isStopped){t.isStopped=!0;for(var n=t.observers;n.length;)n.shift().complete()}})},e.prototype.unsubscribe=function(){this.isStopped=this.closed=!0,this.observers=this.currentObservers=null},Object.defineProperty(e.prototype,"observed",{get:function(){var t;return((t=this.observers)===null||t===void 0?void 0:t.length)>0},enumerable:!1,configurable:!0}),e.prototype._trySubscribe=function(t){return this._throwIfClosed(),r.prototype._trySubscribe.call(this,t)},e.prototype._subscribe=function(t){return this._throwIfClosed(),this._checkFinalizedStatuses(t),this._innerSubscribe(t)},e.prototype._innerSubscribe=function(t){var n=this,s=this,i=s.hasError,a=s.isStopped,o=s.observers;return i||a?EMPTY_SUBSCRIPTION:(this.currentObservers=null,o.push(t),new Subscription(function(){n.currentObservers=null,arrRemove(o,t)}))},e.prototype._checkFinalizedStatuses=function(t){var n=this,s=n.hasError,i=n.thrownError,a=n.isStopped;s?t.error(i):a&&t.complete()},e.prototype.asObservable=function(){var t=new Observable;return t.source=this,t},e.create=function(t,n){return new AnonymousSubject(t,n)},e}(Observable),AnonymousSubject=function(r){__extends(e,r);function e(t,n){var s=r.call(this)||this;return s.destination=t,s.source=n,s}return e.prototype.next=function(t){var n,s;(s=(n=this.destination)===null||n===void 0?void 0:n.next)===null||s===void 0||s.call(n,t)},e.prototype.error=function(t){var n,s;(s=(n=this.destination)===null||n===void 0?void 0:n.error)===null||s===void 0||s.call(n,t)},e.prototype.complete=function(){var t,n;(n=(t=this.destination)===null||t===void 0?void 0:t.complete)===null||n===void 0||n.call(t)},e.prototype._subscribe=function(t){var n,s;return(s=(n=this.source)===null||n===void 0?void 0:n.subscribe(t))!==null&&s!==void 0?s:EMPTY_SUBSCRIPTION},e}(Subject),BehaviorSubject=function(r){__extends(e,r);function e(t){var n=r.call(this)||this;return n._value=t,n}return Object.defineProperty(e.prototype,"value",{get:function(){return this.getValue()},enumerable:!1,configurable:!0}),e.prototype._subscribe=function(t){var n=r.prototype._subscribe.call(this,t);return!n.closed&&t.next(this._value),n},e.prototype.getValue=function(){var t=this,n=t.hasError,s=t.thrownError,i=t._value;if(n)throw s;return this._throwIfClosed(),i},e.prototype.next=function(t){r.prototype.next.call(this,this._value=t)},e}(Subject),dateTimestampProvider={now:function(){return(dateTimestampProvider.delegate||Date).now()},delegate:void 0},ReplaySubject=function(r){__extends(e,r);function e(t,n,s){t===void 0&&(t=1/0),n===void 0&&(n=1/0),s===void 0&&(s=dateTimestampProvider);var i=r.call(this)||this;return i._bufferSize=t,i._windowTime=n,i._timestampProvider=s,i._buffer=[],i._infiniteTimeWindow=!0,i._infiniteTimeWindow=n===1/0,i._bufferSize=Math.max(1,t),i._windowTime=Math.max(1,n),i}return e.prototype.next=function(t){var n=this,s=n.isStopped,i=n._buffer,a=n._infiniteTimeWindow,o=n._timestampProvider,c=n._windowTime;s||(i.push(t),!a&&i.push(o.now()+c)),this._trimBuffer(),r.prototype.next.call(this,t)},e.prototype._subscribe=function(t){this._throwIfClosed(),this._trimBuffer();for(var n=this._innerSubscribe(t),s=this,i=s._infiniteTimeWindow,a=s._buffer,o=a.slice(),c=0;c<o.length&&!t.closed;c+=i?1:2)t.next(o[c]);return this._checkFinalizedStatuses(t),n},e.prototype._trimBuffer=function(){var t=this,n=t._bufferSize,s=t._timestampProvider,i=t._buffer,a=t._infiniteTimeWindow,o=(a?1:2)*n;if(n<1/0&&o<i.length&&i.splice(0,i.length-o),!a){for(var c=s.now(),h=0,p=1;p<i.length&&i[p]<=c;p+=2)h=p;h&&i.splice(0,h+1)}},e}(Subject),Action=function(r){__extends(e,r);function e(t,n){return r.call(this)||this}return e.prototype.schedule=function(t,n){return this},e}(Subscription),intervalProvider={setInterval:function(r,e){for(var t=[],n=2;n<arguments.length;n++)t[n-2]=arguments[n];var s=intervalProvider.delegate;return s!=null&&s.setInterval?s.setInterval.apply(s,__spreadArray([r,e],__read(t))):setInterval.apply(void 0,__spreadArray([r,e],__read(t)))},clearInterval:function(r){var e=intervalProvider.delegate;return((e==null?void 0:e.clearInterval)||clearInterval)(r)},delegate:void 0},AsyncAction=function(r){__extends(e,r);function e(t,n){var s=r.call(this,t,n)||this;return s.scheduler=t,s.work=n,s.pending=!1,s}return e.prototype.schedule=function(t,n){if(n===void 0&&(n=0),this.closed)return this;this.state=t;var s=this.id,i=this.scheduler;return s!=null&&(this.id=this.recycleAsyncId(i,s,n)),this.pending=!0,this.delay=n,this.id=this.id||this.requestAsyncId(i,this.id,n),this},e.prototype.requestAsyncId=function(t,n,s){return s===void 0&&(s=0),intervalProvider.setInterval(t.flush.bind(t,this),s)},e.prototype.recycleAsyncId=function(t,n,s){if(s===void 0&&(s=0),s!=null&&this.delay===s&&this.pending===!1)return n;intervalProvider.clearInterval(n)},e.prototype.execute=function(t,n){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;var s=this._execute(t,n);if(s)return s;this.pending===!1&&this.id!=null&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))},e.prototype._execute=function(t,n){var s=!1,i;try{this.work(t)}catch(a){s=!0,i=a||new Error("Scheduled action threw falsy error")}if(s)return this.unsubscribe(),i},e.prototype.unsubscribe=function(){if(!this.closed){var t=this,n=t.id,s=t.scheduler,i=s.actions;this.work=this.state=this.scheduler=null,this.pending=!1,arrRemove(i,this),n!=null&&(this.id=this.recycleAsyncId(s,n,null)),this.delay=null,r.prototype.unsubscribe.call(this)}},e}(Action),nextHandle=1,resolved,activeHandles={};function findAndClearHandle(r){return r in activeHandles?(delete activeHandles[r],!0):!1}var Immediate={setImmediate:function(r){var e=nextHandle++;return activeHandles[e]=!0,resolved||(resolved=Promise.resolve()),resolved.then(function(){return findAndClearHandle(e)&&r()}),e},clearImmediate:function(r){findAndClearHandle(r)}},setImmediate=Immediate.setImmediate,clearImmediate=Immediate.clearImmediate,immediateProvider={setImmediate:function(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];var t=immediateProvider.delegate;return((t==null?void 0:t.setImmediate)||setImmediate).apply(void 0,__spreadArray([],__read(r)))},clearImmediate:function(r){var e=immediateProvider.delegate;return((e==null?void 0:e.clearImmediate)||clearImmediate)(r)},delegate:void 0},AsapAction=function(r){__extends(e,r);function e(t,n){var s=r.call(this,t,n)||this;return s.scheduler=t,s.work=n,s}return e.prototype.requestAsyncId=function(t,n,s){return s===void 0&&(s=0),s!==null&&s>0?r.prototype.requestAsyncId.call(this,t,n,s):(t.actions.push(this),t._scheduled||(t._scheduled=immediateProvider.setImmediate(t.flush.bind(t,void 0))))},e.prototype.recycleAsyncId=function(t,n,s){if(s===void 0&&(s=0),s!=null&&s>0||s==null&&this.delay>0)return r.prototype.recycleAsyncId.call(this,t,n,s);t.actions.some(function(i){return i.id===n})||(immediateProvider.clearImmediate(n),t._scheduled=void 0)},e}(AsyncAction),Scheduler=function(){function r(e,t){t===void 0&&(t=r.now),this.schedulerActionCtor=e,this.now=t}return r.prototype.schedule=function(e,t,n){return t===void 0&&(t=0),new this.schedulerActionCtor(this,e).schedule(n,t)},r.now=dateTimestampProvider.now,r}(),AsyncScheduler=function(r){__extends(e,r);function e(t,n){n===void 0&&(n=Scheduler.now);var s=r.call(this,t,n)||this;return s.actions=[],s._active=!1,s._scheduled=void 0,s}return e.prototype.flush=function(t){var n=this.actions;if(this._active){n.push(t);return}var s;this._active=!0;do if(s=t.execute(t.state,t.delay))break;while(t=n.shift());if(this._active=!1,s){for(;t=n.shift();)t.unsubscribe();throw s}},e}(Scheduler),AsapScheduler=function(r){__extends(e,r);function e(){return r!==null&&r.apply(this,arguments)||this}return e.prototype.flush=function(t){this._active=!0;var n=this._scheduled;this._scheduled=void 0;var s=this.actions,i;t=t||s.shift();do if(i=t.execute(t.state,t.delay))break;while((t=s[0])&&t.id===n&&s.shift());if(this._active=!1,i){for(;(t=s[0])&&t.id===n&&s.shift();)t.unsubscribe();throw i}},e}(AsyncScheduler),asapScheduler=new AsapScheduler(AsapAction),EMPTY=new Observable(function(r){return r.complete()});function isScheduler(r){return r&&isFunction$2(r.schedule)}function last(r){return r[r.length-1]}function popResultSelector(r){return isFunction$2(last(r))?r.pop():void 0}function popScheduler(r){return isScheduler(last(r))?r.pop():void 0}var isArrayLike=function(r){return r&&typeof r.length=="number"&&typeof r!="function"};function isPromise(r){return isFunction$2(r==null?void 0:r.then)}function isInteropObservable(r){return isFunction$2(r[observable])}function isAsyncIterable(r){return Symbol.asyncIterator&&isFunction$2(r==null?void 0:r[Symbol.asyncIterator])}function createInvalidObservableTypeError(r){return new TypeError("You provided "+(r!==null&&typeof r=="object"?"an invalid object":"'"+r+"'")+" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.")}function getSymbolIterator(){return typeof Symbol!="function"||!Symbol.iterator?"@@iterator":Symbol.iterator}var iterator=getSymbolIterator();function isIterable(r){return isFunction$2(r==null?void 0:r[iterator])}function readableStreamLikeToAsyncGenerator(r){return __asyncGenerator(this,arguments,function(){var t,n,s,i;return __generator(this,function(a){switch(a.label){case 0:t=r.getReader(),a.label=1;case 1:a.trys.push([1,,9,10]),a.label=2;case 2:return[4,__await(t.read())];case 3:return n=a.sent(),s=n.value,i=n.done,i?[4,__await(void 0)]:[3,5];case 4:return[2,a.sent()];case 5:return[4,__await(s)];case 6:return[4,a.sent()];case 7:return a.sent(),[3,2];case 8:return[3,10];case 9:return t.releaseLock(),[7];case 10:return[2]}})})}function isReadableStreamLike(r){return isFunction$2(r==null?void 0:r.getReader)}function innerFrom(r){if(r instanceof Observable)return r;if(r!=null){if(isInteropObservable(r))return fromInteropObservable(r);if(isArrayLike(r))return fromArrayLike(r);if(isPromise(r))return fromPromise(r);if(isAsyncIterable(r))return fromAsyncIterable(r);if(isIterable(r))return fromIterable(r);if(isReadableStreamLike(r))return fromReadableStreamLike(r)}throw createInvalidObservableTypeError(r)}function fromInteropObservable(r){return new Observable(function(e){var t=r[observable]();if(isFunction$2(t.subscribe))return t.subscribe(e);throw new TypeError("Provided object does not correctly implement Symbol.observable")})}function fromArrayLike(r){return new Observable(function(e){for(var t=0;t<r.length&&!e.closed;t++)e.next(r[t]);e.complete()})}function fromPromise(r){return new Observable(function(e){r.then(function(t){e.closed||(e.next(t),e.complete())},function(t){return e.error(t)}).then(null,reportUnhandledError)})}function fromIterable(r){return new Observable(function(e){var t,n;try{for(var s=__values(r),i=s.next();!i.done;i=s.next()){var a=i.value;if(e.next(a),e.closed)return}}catch(o){t={error:o}}finally{try{i&&!i.done&&(n=s.return)&&n.call(s)}finally{if(t)throw t.error}}e.complete()})}function fromAsyncIterable(r){return new Observable(function(e){process$1(r,e).catch(function(t){return e.error(t)})})}function fromReadableStreamLike(r){return fromAsyncIterable(readableStreamLikeToAsyncGenerator(r))}function process$1(r,e){var t,n,s,i;return __awaiter(this,void 0,void 0,function(){var a,o;return __generator(this,function(c){switch(c.label){case 0:c.trys.push([0,5,6,11]),t=__asyncValues(r),c.label=1;case 1:return[4,t.next()];case 2:if(n=c.sent(),!!n.done)return[3,4];if(a=n.value,e.next(a),e.closed)return[2];c.label=3;case 3:return[3,1];case 4:return[3,11];case 5:return o=c.sent(),s={error:o},[3,11];case 6:return c.trys.push([6,,9,10]),n&&!n.done&&(i=t.return)?[4,i.call(t)]:[3,8];case 7:c.sent(),c.label=8;case 8:return[3,10];case 9:if(s)throw s.error;return[7];case 10:return[7];case 11:return e.complete(),[2]}})})}function executeSchedule(r,e,t,n,s){n===void 0&&(n=0),s===void 0&&(s=!1);var i=e.schedule(function(){t(),s?r.add(this.schedule(null,n)):this.unsubscribe()},n);if(r.add(i),!s)return i}function observeOn(r,e){return e===void 0&&(e=0),operate(function(t,n){t.subscribe(createOperatorSubscriber(n,function(s){return executeSchedule(n,r,function(){return n.next(s)},e)},function(){return executeSchedule(n,r,function(){return n.complete()},e)},function(s){return executeSchedule(n,r,function(){return n.error(s)},e)}))})}function subscribeOn(r,e){return e===void 0&&(e=0),operate(function(t,n){n.add(r.schedule(function(){return t.subscribe(n)},e))})}function scheduleObservable(r,e){return innerFrom(r).pipe(subscribeOn(e),observeOn(e))}function schedulePromise(r,e){return innerFrom(r).pipe(subscribeOn(e),observeOn(e))}function scheduleArray(r,e){return new Observable(function(t){var n=0;return e.schedule(function(){n===r.length?t.complete():(t.next(r[n++]),t.closed||this.schedule())})})}function scheduleIterable(r,e){return new Observable(function(t){var n;return executeSchedule(t,e,function(){n=r[iterator](),executeSchedule(t,e,function(){var s,i,a;try{s=n.next(),i=s.value,a=s.done}catch(o){t.error(o);return}a?t.complete():t.next(i)},0,!0)}),function(){return isFunction$2(n==null?void 0:n.return)&&n.return()}})}function scheduleAsyncIterable(r,e){if(!r)throw new Error("Iterable cannot be null");return new Observable(function(t){executeSchedule(t,e,function(){var n=r[Symbol.asyncIterator]();executeSchedule(t,e,function(){n.next().then(function(s){s.done?t.complete():t.next(s.value)})},0,!0)})})}function scheduleReadableStreamLike(r,e){return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(r),e)}function scheduled(r,e){if(r!=null){if(isInteropObservable(r))return scheduleObservable(r,e);if(isArrayLike(r))return scheduleArray(r,e);if(isPromise(r))return schedulePromise(r,e);if(isAsyncIterable(r))return scheduleAsyncIterable(r,e);if(isIterable(r))return scheduleIterable(r,e);if(isReadableStreamLike(r))return scheduleReadableStreamLike(r,e)}throw createInvalidObservableTypeError(r)}function from(r,e){return e?scheduled(r,e):innerFrom(r)}function of(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];var t=popScheduler(r);return from(r,t)}var EmptyError=createErrorClass(function(r){return function(){r(this),this.name="EmptyError",this.message="no elements in sequence"}});function firstValueFrom(r,e){var t=typeof e=="object";return new Promise(function(n,s){var i=new SafeSubscriber({next:function(a){n(a),i.unsubscribe()},error:s,complete:function(){t?n(e.defaultValue):s(new EmptyError)}});r.subscribe(i)})}function map$1(r,e){return operate(function(t,n){var s=0;t.subscribe(createOperatorSubscriber(n,function(i){n.next(r.call(e,i,s++))}))})}var isArray$1=Array.isArray;function callOrApply(r,e){return isArray$1(e)?r.apply(void 0,__spreadArray([],__read(e))):r(e)}function mapOneOrManyArgs(r){return map$1(function(e){return callOrApply(r,e)})}var isArray=Array.isArray,getPrototypeOf=Object.getPrototypeOf,objectProto=Object.prototype,getKeys=Object.keys;function argsArgArrayOrObject(r){if(r.length===1){var e=r[0];if(isArray(e))return{args:e,keys:null};if(isPOJO(e)){var t=getKeys(e);return{args:t.map(function(n){return e[n]}),keys:t}}}return{args:r,keys:null}}function isPOJO(r){return r&&typeof r=="object"&&getPrototypeOf(r)===objectProto}function createObject(r,e){return r.reduce(function(t,n,s){return t[n]=e[s],t},{})}function combineLatest(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];var t=popScheduler(r),n=popResultSelector(r),s=argsArgArrayOrObject(r),i=s.args,a=s.keys;if(i.length===0)return from([],t);var o=new Observable(combineLatestInit(i,t,a?function(c){return createObject(a,c)}:identity$2));return n?o.pipe(mapOneOrManyArgs(n)):o}function combineLatestInit(r,e,t){return t===void 0&&(t=identity$2),function(n){maybeSchedule(e,function(){for(var s=r.length,i=new Array(s),a=s,o=s,c=function(p){maybeSchedule(e,function(){var x=from(r[p],e),A=!1;x.subscribe(createOperatorSubscriber(n,function(k){i[p]=k,A||(A=!0,o--),o||n.next(t(i.slice()))},function(){--a||n.complete()}))},n)},h=0;h<s;h++)c(h)},n)}}function maybeSchedule(r,e,t){r?executeSchedule(t,r,e):e()}function mergeInternals(r,e,t,n,s,i,a,o){var c=[],h=0,p=0,x=!1,A=function(){x&&!c.length&&!h&&e.complete()},k=function(D){return h<n?U(D):c.push(D)},U=function(D){i&&e.next(D),h++;var F=!1;innerFrom(t(D,p++)).subscribe(createOperatorSubscriber(e,function(q){s==null||s(q),i?k(q):e.next(q)},function(){F=!0},void 0,function(){if(F)try{h--;for(var q=function(){var ae=c.shift();a?executeSchedule(e,a,function(){return U(ae)}):U(ae)};c.length&&h<n;)q();A()}catch(ae){e.error(ae)}}))};return r.subscribe(createOperatorSubscriber(e,k,function(){x=!0,A()})),function(){o==null||o()}}function mergeMap(r,e,t){return t===void 0&&(t=1/0),isFunction$2(e)?mergeMap(function(n,s){return map$1(function(i,a){return e(n,i,s,a)})(innerFrom(r(n,s)))},t):(typeof e=="number"&&(t=e),operate(function(n,s){return mergeInternals(n,s,r,t)}))}function mergeAll(r){return r===void 0&&(r=1/0),mergeMap(identity$2,r)}function concatAll(){return mergeAll(1)}function concat(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];return concatAll()(from(r,popScheduler(r)))}function filter(r,e){return operate(function(t,n){var s=0;t.subscribe(createOperatorSubscriber(n,function(i){return r.call(e,i,s++)&&n.next(i)}))})}function catchError(r){return operate(function(e,t){var n=null,s=!1,i;n=e.subscribe(createOperatorSubscriber(t,void 0,void 0,function(a){i=innerFrom(r(a,catchError(r)(e))),n?(n.unsubscribe(),n=null,i.subscribe(t)):s=!0})),s&&(n.unsubscribe(),n=null,i.subscribe(t))})}function scanInternals(r,e,t,n,s){return function(i,a){var o=t,c=e,h=0;i.subscribe(createOperatorSubscriber(a,function(p){var x=h++;c=o?r(c,p,x):(o=!0,p),n&&a.next(c)},s&&function(){o&&a.next(c),a.complete()}))}}function reduce(r,e){return operate(scanInternals(r,e,arguments.length>=2,!1,!0))}var arrReducer=function(r,e){return r.push(e),r};function toArray(){return operate(function(r,e){reduce(arrReducer,[])(r).subscribe(e)})}function fromSubscribable(r){return new Observable(function(e){return r.subscribe(e)})}var DEFAULT_CONFIG={connector:function(){return new Subject}};function connect(r,e){e===void 0&&(e=DEFAULT_CONFIG);var t=e.connector;return operate(function(n,s){var i=t();from(r(fromSubscribable(i))).subscribe(s),s.add(n.subscribe(i))})}function defaultIfEmpty(r){return operate(function(e,t){var n=!1;e.subscribe(createOperatorSubscriber(t,function(s){n=!0,t.next(s)},function(){n||t.next(r),t.complete()}))})}function take(r){return r<=0?function(){return EMPTY}:operate(function(e,t){var n=0;e.subscribe(createOperatorSubscriber(t,function(s){++n<=r&&(t.next(s),r<=n&&t.complete())}))})}function mapTo(r){return map$1(function(){return r})}function distinctUntilChanged(r,e){return e===void 0&&(e=identity$2),r=r!=null?r:defaultCompare,operate(function(t,n){var s,i=!0;t.subscribe(createOperatorSubscriber(n,function(a){var o=e(a);(i||!r(s,o))&&(i=!1,s=o,n.next(a))}))})}function defaultCompare(r,e){return r===e}function throwIfEmpty(r){return r===void 0&&(r=defaultErrorFactory),operate(function(e,t){var n=!1;e.subscribe(createOperatorSubscriber(t,function(s){n=!0,t.next(s)},function(){return n?t.complete():t.error(r())}))})}function defaultErrorFactory(){return new EmptyError}function first(r,e){var t=arguments.length>=2;return function(n){return n.pipe(r?filter(function(s,i){return r(s,i,n)}):identity$2,take(1),t?defaultIfEmpty(e):throwIfEmpty(function(){return new EmptyError}))}}function multicast(r,e){var t=isFunction$2(r)?r:function(){return r};return isFunction$2(e)?connect(e,{connector:t}):function(n){return new ConnectableObservable(n,t)}}function publishReplay(r,e,t,n){t&&!isFunction$2(t)&&(n=t);var s=isFunction$2(t)?t:void 0;return function(i){return multicast(new ReplaySubject(r,e,n),s)(i)}}function startWith(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];var t=popScheduler(r);return operate(function(n,s){(t?concat(r,n,t):concat(r,n)).subscribe(s)})}function switchMap(r,e){return operate(function(t,n){var s=null,i=0,a=!1,o=function(){return a&&!s&&n.complete()};t.subscribe(createOperatorSubscriber(n,function(c){s==null||s.unsubscribe();var h=0,p=i++;innerFrom(r(c,p)).subscribe(s=createOperatorSubscriber(n,function(x){return n.next(e?e(c,x,p,h++):x)},function(){s=null,o()}))},function(){a=!0,o()}))})}function tap(r,e,t){var n=isFunction$2(r)||e||t?{next:r,error:e,complete:t}:r;return n?operate(function(s,i){var a;(a=n.subscribe)===null||a===void 0||a.call(n);var o=!0;s.subscribe(createOperatorSubscriber(i,function(c){var h;(h=n.next)===null||h===void 0||h.call(n,c),i.next(c)},function(){var c;o=!1,(c=n.complete)===null||c===void 0||c.call(n),i.complete()},function(c){var h;o=!1,(h=n.error)===null||h===void 0||h.call(n,c),i.error(c)},function(){var c,h;o&&((c=n.unsubscribe)===null||c===void 0||c.call(n)),(h=n.finalize)===null||h===void 0||h.call(n)}))}):identity$2}function refCountDelay(r=1750){return e=>{let[t,n,s,i]=[0,0,Subscription.EMPTY,Subscription.EMPTY];return new Observable(a=>(e.subscribe(a),n++===0&&(t===1?i.unsubscribe():s=e.connect(),t=3),()=>{--n===0&&(t===2?(t=0,i.unsubscribe()):(t=1,i=asapScheduler.schedule(()=>{t=0,s.unsubscribe()},r)))}))}}const l$6=logger("drr"),CMP=(r,e)=>stringify({t:r})===stringify({t:e}),ERR=r=>{throw l$6.error(r.message),r},NOOP=()=>{},drr=({delay:r,skipChange:e=!1,skipTimeout:t=!1}={})=>n=>n.pipe(catchError(ERR),e?tap(NOOP):distinctUntilChanged(CMP),publishReplay(1),t?refCount():refCountDelay(r));function memo(r,e){const n=memoize((...s)=>new Observable(i=>{const a=e(...s).subscribe(i);return()=>{n.unmemoize(...s),a.unsubscribe()}}).pipe(drr()),{getInstanceId:()=>r});return n}const l$5=logger("rpc-core"),EMPTY_META={fallback:void 0,modifier:{isOptional:!0},type:{asMap:{linked:{isTrue:!1}},isMap:!1}};function logErrorMessage(r,{noErrorLog:e,params:t,type:n},s){if(e)return;const i=t.map(({isOptional:a,name:o,type:c})=>`${o}${a?"?":""}: ${c}`).join(", ");l$5.error(`${r}(${i}): ${n}:: ${s.message}`)}function isTreatAsHex(r){return["0x3a636f6465"].includes(r.toHex())}var Er,nn,sn,Wn,_n;class RpcCore{constructor(e,t,n,s={}){_(this,Er,void 0);_(this,nn,void 0);_(this,sn,void 0);_(this,Wn,void 0);_(this,_n,new Map);Ae(this,"mapping",new Map);Ae(this,"sections",[]);if(!n||!isFunction$3(n.send))throw new Error("Expected Provider to API create");Q(this,Er,e),Q(this,nn,t),this.provider=n;const i=Object.keys(rpcDefinitions);this.sections.push(...i),this.addUserInterfaces(s)}get isConnected(){return this.provider.isConnected}connect(){return this.provider.connect()}disconnect(){return this.provider.disconnect()}setRegistrySwap(e){Q(this,sn,memoize(e,{getInstanceId:()=>b(this,Er)}))}setResolveBlockHash(e){Q(this,Wn,memoize(e,{getInstanceId:()=>b(this,Er)}))}addUserInterfaces(e){this.sections.push(...Object.keys(e).filter(t=>!this.sections.includes(t)));for(let t=0;t<this.sections.length;t++){const n=this.sections[t],s=objectSpread({},rpcDefinitions[n],e[n]),i=Object.keys(s);for(let a=0;a<i.length;a++){const o=i[a],c=s[o],h=c.endpoint||`${n}_${o}`;if(!this.mapping.has(h)){const p=!!c.pubsub;this[n]||(this[n]={}),this.mapping.set(h,objectSpread({},c,{isSubscription:p,jsonrpc:h,method:o,section:n})),lazyMethod(this[n],o,()=>p?this._createMethodSubscribe(n,o,c):this._createMethodSend(n,o,c))}}}}_memomize(e,t){const n={getInstanceId:()=>b(this,Er)},s=memoize(e(!0),n);return s.raw=memoize(e(!1),n),s.meta=t,s}_formatResult(e,t,n,s,i,a,o){return e?this._formatOutput(t,n,s,i,a,o):o}_createMethodSend(e,t,n){const s=n.endpoint||`${e}_${t}`,i=n.params.findIndex(({isHistoric:h})=>h);let a=null;const o=async(h,p)=>{var x;const A=i===-1?null:p[i],k=A&&n.params[i].type==="BlockNumber"?await((x=b(this,Wn))===null||x===void 0?void 0:x.call(this,A)):A,{registry:U}=h&&k&&b(this,sn)?await b(this,sn).call(this,u8aToU8a(k)):{registry:b(this,nn)},D=this._formatInputs(U,null,n,p),F=await this.provider.send(s,D.map(q=>q.toJSON()),!!k);return this._formatResult(h,U,k,t,n,D,F)},c=h=>(...p)=>{const x=h&&i!==-1&&!!p[i];return new Observable(A=>(o(h,p).then(k=>{A.next(k),A.complete()}).catch(k=>{logErrorMessage(t,n,k),A.error(k),A.complete()}),()=>{if(h){var k;(k=a)===null||k===void 0||k.unmemoize(...p)}else{var U;(U=a)===null||U===void 0||U.raw.unmemoize(...p)}})).pipe(publishReplay(1),x?refCountDelay():refCount())};return a=this._memomize(c,n),a}_createSubscriber({paramsJson:e,subName:t,subType:n,update:s},i){return new Promise((a,o)=>{this.provider.subscribe(n,t,e,s).then(a).catch(c=>{i(c),o(c)})})}_createMethodSubscribe(e,t,n){const[s,i,a]=n.pubsub,o=`${e}_${i}`,c=`${e}_${a}`,h=`${e}_${s}`;let p=null;const x=A=>(...k)=>new Observable(U=>{let D=Promise.resolve(null);const F=b(this,nn),q=ae=>{logErrorMessage(t,n,ae),U.error(ae)};try{const ae=this._formatInputs(F,null,n,k),Y=ae.map(fe=>fe.toJSON()),de=(fe,be)=>{if(fe){logErrorMessage(t,n,fe);return}try{U.next(this._formatResult(A,F,null,t,n,ae,be))}catch(Ie){U.error(Ie)}};D=this._createSubscriber({paramsJson:Y,subName:o,subType:h,update:de},q)}catch(ae){q(ae)}return()=>{if(A){var ae;(ae=p)===null||ae===void 0||ae.unmemoize(...k)}else{var Y;(Y=p)===null||Y===void 0||Y.raw.unmemoize(...k)}D.then(de=>isNull(de)?Promise.resolve(!1):this.provider.unsubscribe(h,c,de)).catch(de=>logErrorMessage(t,n,de))}}).pipe(drr());return p=this._memomize(x,n),p}_formatInputs(e,t,n,s){const i=n.params.filter(({isOptional:o})=>!o).length,a=i===n.params.length?"":` (${n.params.length-i} optional)`;if(s.length<i||s.length>n.params.length)throw new Error(`Expected ${n.params.length} parameters${a}, ${s.length} found instead`);return s.map((o,c)=>e.createTypeUnsafe(n.params[c].type,[o],{blockHash:t}))}_formatOutput(e,t,n,s,i,a){if(s.type==="StorageData"){const o=i[0];return this._formatStorageData(e,t,o,a)}else if(s.type==="StorageChangeSet"){const o=i[0];return o?this._formatStorageSet(e,a.block,o,a.changes):e.createType("StorageChangeSet",a)}else if(s.type==="Vec<StorageChangeSet>"){const o=a.map(({block:c,changes:h})=>[e.createType("Hash",c),this._formatStorageSet(e,c,i[0],h)]);return n==="queryStorageAt"?o[0][1]:o}return e.createTypeUnsafe(s.type,[a],{blockHash:t})}_formatStorageData(e,t,n,s){const i=isNull(s),a=i?null:isTreatAsHex(n)?s:u8aToU8a(s);return this._newType(e,t,n,a,i)}_formatStorageSet(e,t,n,s){const i=n.length!==1;return n.reduce((a,o,c)=>(a.push(this._formatStorageSetEntry(e,t,o,s,i,c)),a),[])}_formatStorageSetEntry(e,t,n,s,i,a){const o=n.toHex(),c=s.find(([U])=>U===o),h=isUndefined(c);if(h&&i){const U=b(this,_n).get(o);if(U)return U}const p=h?null:c[1],x=isNull(p),A=x||isTreatAsHex(n)?p:u8aToU8a(p),k=this._newType(e,t,n,A,x,a);return b(this,_n).set(o,k),k}_newType(e,t,n,s,i,a=-1){const o=n.outputType||"Raw",c=n.meta||EMPTY_META,h=a===-1?"":` entry ${a}:`;try{return e.createTypeUnsafe(o,[i?c.fallback?o.includes("Linkage<")?u8aConcat(hexToU8a(c.fallback.toHex()),new Uint8Array(2)):hexToU8a(c.fallback.toHex()):void 0:c.modifier.isOptional?e.createTypeUnsafe(o,[s],{blockHash:t,isPedantic:!0}):s],{blockHash:t,isOptional:c.modifier.isOptional,isPedantic:!c.modifier.isOptional})}catch(p){throw new Error(`Unable to decode storage ${n.section||"unknown"}.${n.method||"unknown"}:${h}: ${p.message}`)}}}Er=new WeakMap,nn=new WeakMap,sn=new WeakMap,Wn=new WeakMap,_n=new WeakMap;const deriveNoopCache={del:()=>{},forEach:()=>{},get:()=>{},set:(r,e)=>e},CHACHE_EXPIRY=7*(24*60)*(60*1e3);let deriveCache;function wrapCache(r,e){return{del:t=>e.del(`${r}${t}`),forEach:e.forEach,get:t=>{const n=`${r}${t}`,s=e.get(n);if(s)return s.x=Date.now(),e.set(n,s),s.v},set:(t,n)=>{e.set(`${r}${t}`,{v:n,x:Date.now()})}}}function clearCache(r){const e=Date.now(),t=[];r.forEach((n,{x:s})=>{e-s>CHACHE_EXPIRY&&t.push(n)}),t.forEach(n=>r.del(n))}function setDeriveCache(r="",e){deriveCache=e?wrapCache(`derive:${r}:`,e):deriveNoopCache,e&&clearCache(e)}setDeriveCache();function firstObservable(r){return r.pipe(map$1(([e])=>e))}function firstMemo(r){return(e,t)=>memo(e,(...n)=>firstObservable(r(t,...n)))}function lazyDeriveSection(r,e,t,n){lazyMethod(r,e,()=>lazyMethods({},t(e),s=>n(e,s)))}function accountId(r,e){return memo(r,t=>{const n=isU8a(t)?t:decodeAddress((t||"").toString());if(n.length>8)return of(e.registry.createType("AccountId",n));const s=e.registry.createType("AccountIndex",n);return e.derive.accounts.indexToId(s.toString()).pipe(map$1(i=>assertReturn(i,"Unable to retrieve accountId")))})}function parseFlags(r,[e,t,n,s,i]){const a=r&&r.toString(),o=c=>c.toString()===a;return{isCouncil:((e==null?void 0:e.map(c=>Array.isArray(c)?c[0]:c.who))||t||[]).some(o),isSociety:(s||[]).some(o),isSudo:(i==null?void 0:i.toString())===a,isTechCommittee:(n||[]).some(o)}}function _flags(r,e){return memo(r,()=>{var t,n,s,i,a;const o=[void 0,[],[],[],void 0],c=[(t=e.query.phragmenElection||e.query.electionsPhragmen||e.query.elections)===null||t===void 0?void 0:t.members,(n=e.query.council)===null||n===void 0?void 0:n.members,(s=e.query.technicalCommittee)===null||s===void 0?void 0:s.members,(i=e.query.society)===null||i===void 0?void 0:i.members,(a=e.query.sudo)===null||a===void 0?void 0:a.key],h=c.filter(p=>p);return h.length?e.queryMulti(h).pipe(map$1(p=>{let x=-1;for(let A=0;A<c.length;A++)isFunction$3(c[A])&&(o[A]=p[++x]);return o})):of(o)})}function flags(r,e){return memo(r,t=>e.derive.accounts._flags().pipe(map$1(n=>parseFlags(t,n))))}function idAndIndex(r,e){return memo(r,t=>{try{const n=isU8a(t)?t:decodeAddress((t||"").toString());if(n.length>8){const i=e.registry.createType("AccountId",n);return e.derive.accounts.idToIndex(i).pipe(map$1(a=>[i,a]))}const s=e.registry.createType("AccountIndex",n);return e.derive.accounts.indexToId(s.toString()).pipe(map$1(i=>[i,s]))}catch{return of([void 0,void 0])}})}function idToIndex(r,e){return memo(r,t=>e.derive.accounts.indexes().pipe(map$1(n=>(n||{})[t.toString()])))}const UNDEF_HEX={toHex:()=>{}};function dataAsString(r){return r.isRaw?u8aToString(r.asRaw.toU8a(!0)):r.isNone?void 0:r.toHex()}function extractOther(r){return r.reduce((e,[t,n])=>{const s=dataAsString(t),i=dataAsString(n);return s&&i&&(e[s]=i),e},{})}function extractIdentity(r,e){if(!(r!=null&&r.isSome))return{judgements:[]};const{info:t,judgements:n}=r.unwrap(),s=dataAsString(t.display);return{display:e&&dataAsString(e[1])||s,displayParent:e&&s,email:dataAsString(t.email),image:dataAsString(t.image),judgements:n,legal:dataAsString(t.legal),other:extractOther(t.additional),parent:e&&e[0],pgp:t.pgpFingerprint.unwrapOr(UNDEF_HEX).toHex(),riot:dataAsString(t.riot),twitter:dataAsString(t.twitter),web:dataAsString(t.web)}}function getParent(r,e,t){if(e!=null&&e.isSome)return of([e,void 0]);if(t!=null&&t.isSome){const n=t.unwrap();return combineLatest([r.derive.accounts._identity(n[0]).pipe(map$1(([s])=>s)),of(n)])}return of([void 0,void 0])}function _identity(r,e){return memo(r,t=>{var n;return t&&(n=e.query.identity)!==null&&n!==void 0&&n.identityOf?combineLatest([e.query.identity.identityOf(t),e.query.identity.superOf(t)]):of([void 0,void 0])})}function identity$1(r,e){return memo(r,t=>e.derive.accounts._identity(t).pipe(switchMap(([n,s])=>getParent(e,n,s)),map$1(([n,s])=>extractIdentity(n,s))))}const hasIdentity=firstMemo((r,e)=>r.derive.accounts.hasIdentityMulti([e]));function hasIdentityMulti(r,e){return memo(r,t=>{var n;return(n=e.query.identity)!==null&&n!==void 0&&n.identityOf?combineLatest([e.query.identity.identityOf.multi(t),e.query.identity.superOf.multi(t)]).pipe(map$1(([s,i])=>s.map((a,o)=>{const c=i[o],h=c&&c.isSome?c.unwrap()[0].toString():void 0;let p;if(a&&a.isSome){const x=dataAsString(a.unwrap().info.display);x&&!isHex(x)&&(p=x)}return{display:p,hasIdentity:!!(p||h),parentId:h}}))):of(t.map(()=>({hasIdentity:!1})))})}function indexToId(r,e){return memo(r,t=>e.query.indices?e.query.indices.accounts(t).pipe(map$1(n=>n.unwrapOr([])[0])):of(void 0))}let indicesCache=null;function queryAccounts(r){return r.query.indices.accounts.entries().pipe(map$1(e=>e.reduce((t,[n,s])=>(s.isSome&&(t[s.unwrap()[0].toString()]=r.registry.createType("AccountIndex",n.args[0])),t),{})))}function indexes$1(r,e){return memo(r,()=>indicesCache?of(indicesCache):(e.query.indices?queryAccounts(e).pipe(startWith({})):of({})).pipe(map$1(t=>(indicesCache=t,t))))}function retrieveNick(r,e){var t;return(e&&(t=r.query.nicks)!==null&&t!==void 0&&t.nameOf?r.query.nicks.nameOf(e):of(void 0)).pipe(map$1(n=>n!=null&&n.isSome?u8aToString(n.unwrap()[0]).substring(0,r.consts.nicks.maxLength.toNumber()):void 0))}function info$4(r,e){return memo(r,t=>e.derive.accounts.idAndIndex(t).pipe(switchMap(([n,s])=>combineLatest([of({accountId:n,accountIndex:s}),e.derive.accounts.identity(n),retrieveNick(e,n)])),map$1(([{accountId:n,accountIndex:s},i,a])=>({accountId:n,accountIndex:s,identity:i,nickname:a}))))}var accounts$2=Object.freeze(Object.defineProperty({__proto__:null,accountId,_flags,flags,idAndIndex,idToIndex,_identity,identity:identity$1,hasIdentity,hasIdentityMulti,indexToId,indexes:indexes$1,info:info$4},Symbol.toStringTag,{value:"Module"}));function orderBags(r,e){const t=r.map((s,i)=>({bag:e[i].unwrapOr(null),id:s,key:s.toString()})).sort((s,i)=>i.id.cmp(s.id)).map((s,i)=>Je(Ve({},s),{bagLower:BN_ZERO,bagUpper:s.id,index:i})),n=t.length-1;return t.map((s,i)=>i===n?s:Je(Ve({},s),{bagLower:t[i+1].bagUpper}))}function _getIds(r,e){return memo(r,t=>{const n=t.map(s=>bnToBn(s));return n.length?(e.query.voterList||e.query.bagsList).listBags.multi(n).pipe(map$1(s=>orderBags(n,s))):of([])})}function all$2(r,e){return memo(r,()=>(e.query.voterList||e.query.bagsList).listBags.keys().pipe(switchMap(t=>e.derive.bagsList._getIds(t.map(({args:[n]})=>n))),map$1(t=>t.filter(({bag:n})=>n))))}function get(r,e){return memo(r,t=>e.derive.bagsList._getIds([bnToBn(t)]).pipe(map$1(n=>n[0])))}function expand(r,e){return memo(r,t=>e.derive.bagsList.listNodes(t.bag).pipe(map$1(n=>Je(Ve({},t),{nodes:n}))))}function getExpanded(r,e){return memo(r,t=>e.derive.bagsList.get(t).pipe(switchMap(n=>e.derive.bagsList.expand(n))))}function traverseLinks(r,e){const t=new BehaviorSubject(e);return t.pipe(switchMap(n=>(r.query.voterList||r.query.bagsList).listNodes(n)),tap(n=>{nextTick(()=>{n.isSome&&n.value.next.isSome?t.next(n.unwrap().next.unwrap()):t.complete()})}),toArray(),map$1(n=>n.map(s=>s.unwrap())))}function listNodes(r,e){return memo(r,t=>t&&t.head.isSome?traverseLinks(e,t.head.unwrap()):of([]))}var bagsList=Object.freeze(Object.defineProperty({__proto__:null,_getIds,all:all$2,get,expand,getExpanded,listNodes},Symbol.toStringTag,{value:"Module"}));const VESTING_ID="0x76657374696e6720";function calcLocked(r,e,t){let n=r.registry.createType("Balance"),s=[],i=r.registry.createType("Balance"),a=!1;if(Array.isArray(t)){s=t.filter(({until:c})=>!c||e&&c.gt(e)),a=s.some(({amount:c})=>c&&c.isMax()),i=r.registry.createType("Balance",s.filter(({id:c})=>c.eq(VESTING_ID)).reduce((c,{amount:h})=>c.iadd(h),new BN(0)));const o=s.filter(({amount:c})=>c&&!c.isMax());o.length&&(n=r.registry.createType("Balance",bnMax(...o.map(({amount:c})=>c))))}return{allLocked:a,lockedBalance:n,lockedBreakdown:s,vestingLocked:i}}function calcShared(r,e,t,n){const{allLocked:s,lockedBalance:i,lockedBreakdown:a,vestingLocked:o}=calcLocked(r,e,n);return Je(Ve({},t),{availableBalance:r.registry.createType("Balance",s?0:bnMax(new BN(0),t.freeBalance.sub(i))),lockedBalance:i,lockedBreakdown:a,vestingLocked:o})}function calcVesting(r,e,t){const n=t||[],s=!e.vestingLocked.isZero(),i=n.map(({locked:c,perBlock:h,startingBlock:p})=>r.gt(p)?bnMin(c,h.mul(r.sub(p))):BN_ZERO),a=i.reduce((c,h)=>c.iadd(h),new BN(0)),o=n.reduce((c,{locked:h})=>c.iadd(h),new BN(0));return{isVesting:s,vestedBalance:a,vestedClaimable:s?e.vestingLocked.sub(o.sub(a)):BN_ZERO,vesting:n.map(({locked:c,perBlock:h,startingBlock:p},x)=>({endBlock:c.div(h).iadd(p),locked:c,perBlock:h,startingBlock:p,vested:i[x]})).filter(({locked:c})=>!c.isZero()),vestingTotal:o}}function calcBalances$1(r,[e,[t,n,s],i]){const a=calcShared(r,i,e,n[0]);return Je(Ve(Ve({},a),calcVesting(i,a,t)),{accountId:e.accountId,accountNonce:e.accountNonce,additional:n.filter((o,c)=>c!==0).map((o,c)=>calcShared(r,i,e.additional[c],o)),namedReserves:s})}function queryOld(r,e){return combineLatest([r.query.balances.locks(e),r.query.balances.vesting(e)]).pipe(map$1(([t,n])=>{let s=null;if(n.isSome){const{offset:i,perBlock:a,startingBlock:o}=n.unwrap();s=r.registry.createType("VestingInfo",{locked:i,perBlock:a,startingBlock:o})}return[s?[s]:null,[t],[]]}))}const isNonNullable=r=>!!r;function createCalls(r){return[r.map(e=>!e),r.filter(isNonNullable)]}function queryCurrent(r,e,t=["balances"]){var n;const[s,i]=createCalls(t.map(c=>{var h,p;return((h=r.derive[c])===null||h===void 0?void 0:h.customLocks)||((p=r.query[c])===null||p===void 0?void 0:p.locks)})),[a,o]=createCalls(t.map(c=>{var h;return(h=r.query[c])===null||h===void 0?void 0:h.reserves}));return combineLatest([(n=r.query.vesting)!==null&&n!==void 0&&n.vesting?r.query.vesting.vesting(e):of(r.registry.createType("Option<VestingInfo>")),i.length?combineLatest(i.map(c=>c(e))):of([]),o.length?combineLatest(o.map(c=>c(e))):of([])]).pipe(map$1(([c,h,p])=>{let x=-1,A=-1;const k=c.unwrapOr(null);return[k?Array.isArray(k)?k:[k]:null,s.map(U=>U?r.registry.createType("Vec<BalanceLock>"):h[++x]),a.map(U=>U?r.registry.createType("Vec<PalletBalancesReserveData>"):p[++A])]}))}function all$1(r,e){const t=e.registry.getModuleInstances(e.runtimeVersion.specName.toString(),"balances");return memo(r,n=>{var s,i;return combineLatest([e.derive.balances.account(n),isFunction$3((s=e.query.system)===null||s===void 0?void 0:s.account)||isFunction$3((i=e.query.balances)===null||i===void 0?void 0:i.account)?queryCurrent(e,n,t):queryOld(e,n)]).pipe(switchMap(([a,o])=>combineLatest([of(a),of(o),e.derive.chain.bestNumber()])),map$1(a=>calcBalances$1(e,a)))})}function zeroBalance(r){return r.registry.createType("Balance")}function getBalance(r,[e,t,n,s]){const i=r.registry.createType("Balance",e.toBn());return{freeBalance:e,frozenFee:n,frozenMisc:s,reservedBalance:t,votingBalance:i}}function calcBalances(r,[e,[t,[n,...s]]]){return Ve({accountId:e,accountNonce:t,additional:s.map(i=>getBalance(r,i))},getBalance(r,n))}function queryBalancesFree(r,e){return combineLatest([r.query.balances.freeBalance(e),r.query.balances.reservedBalance(e),r.query.system.accountNonce(e)]).pipe(map$1(([t,n,s])=>[s,[[t,n,zeroBalance(r),zeroBalance(r)]]]))}function queryNonceOnly(r,e){const t=n=>[n,[[zeroBalance(r),zeroBalance(r),zeroBalance(r),zeroBalance(r)]]];return isFunction$3(r.query.system.account)?r.query.system.account(e).pipe(map$1(({nonce:n})=>t(n))):isFunction$3(r.query.system.accountNonce)?r.query.system.accountNonce(e).pipe(map$1(n=>t(n))):of(t(r.registry.createType("Index")))}function queryBalancesAccount(r,e,t=["balances"]){const n=t.map(i=>{var a,o;return((a=r.derive[i])===null||a===void 0?void 0:a.customAccount)||((o=r.query[i])===null||o===void 0?void 0:o.account)}).filter(i=>isFunction$3(i)),s=(i,a)=>[i,a.map(({feeFrozen:o,free:c,miscFrozen:h,reserved:p})=>[c,p,o,h])];return n.length?isFunction$3(r.query.system.account)?combineLatest([r.query.system.account(e),...n.map(i=>i(e))]).pipe(map$1(([{nonce:i},...a])=>s(i,a))):combineLatest([r.query.system.accountNonce(e),...n.map(i=>i(e))]).pipe(map$1(([i,...a])=>s(i,a))):queryNonceOnly(r,e)}function querySystemAccount(r,e){return r.query.system.account(e).pipe(map$1(t=>{const n=t.nonce?t.data:t[1],s=t.nonce||t[0];if(!n||n.isEmpty)return[s,[[zeroBalance(r),zeroBalance(r),zeroBalance(r),zeroBalance(r)]]];const{feeFrozen:i,free:a,miscFrozen:o,reserved:c}=n;return[s,[[a,c,i,o]]]}))}function account$1(r,e){const t=e.registry.getModuleInstances(e.runtimeVersion.specName.toString(),"balances");return memo(r,n=>e.derive.accounts.accountId(n).pipe(switchMap(s=>{var i,a,o;return s?combineLatest([of(s),t?queryBalancesAccount(e,s,t):isFunction$3((i=e.query.system)===null||i===void 0?void 0:i.account)?querySystemAccount(e,s):isFunction$3((a=e.query.balances)===null||a===void 0?void 0:a.account)?queryBalancesAccount(e,s):isFunction$3((o=e.query.balances)===null||o===void 0?void 0:o.freeBalance)?queryBalancesFree(e,s):queryNonceOnly(e,s)]):of([e.registry.createType("AccountId"),[e.registry.createType("Index"),[[zeroBalance(e),zeroBalance(e),zeroBalance(e),zeroBalance(e)]]]])}),map$1(s=>calcBalances(e,s))))}function votingBalances(r,e){return memo(r,t=>!t||!t.length?of([]):combineLatest(t.map(n=>e.derive.balances.account(n))))}const votingBalance=all$1;var balances=Object.freeze(Object.defineProperty({__proto__:null,all:all$1,votingBalance,account:account$1,votingBalances},Symbol.toStringTag,{value:"Module"}));function filterBountiesProposals(r,e){const t=r.tx.bounties?r.tx.bounties:r.tx.treasury,n=[t.approveBounty,t.closeBounty,t.proposeCurator,t.unassignCurator];return e.filter(s=>n.find(i=>s.proposal&&i.is(s.proposal)))}function parseResult$2([r,e,t,n]){const s=[];return r.forEach((i,a)=>{i.isSome&&s.push({bounty:i.unwrap(),description:e[a].unwrapOrDefault().toUtf8(),index:t[a],proposals:n.filter(o=>o.proposal&&t[a].eq(o.proposal.args[0]))})}),s}function bounties$1(r,e){const t=e.query.bounties||e.query.treasury;return memo(r,()=>t.bounties?combineLatest([t.bountyCount(),e.query.council?e.query.council.proposalCount():of(0)]).pipe(switchMap(()=>combineLatest([t.bounties.keys(),e.derive.council?e.derive.council.proposals():of([])])),switchMap(([n,s])=>{const i=n.map(({args:[a]})=>a);return combineLatest([t.bounties.multi(i),t.bountyDescriptions.multi(i),of(i),of(filterBountiesProposals(e,s))])}),map$1(parseResult$2)):of(parseResult$2([[],[],[],[]])))}var bounties=Object.freeze(Object.defineProperty({__proto__:null,bounties:bounties$1},Symbol.toStringTag,{value:"Module"}));function unwrapBlockNumber(r){return(e,t)=>memo(e,()=>r(t).pipe(map$1(n=>n.number.unwrap())))}const bestNumber=unwrapBlockNumber(r=>r.derive.chain.subscribeNewHeads()),bestNumberFinalized=unwrapBlockNumber(r=>r.rpc.chain.subscribeFinalizedHeads());function bestNumberLag(r,e){return memo(r,()=>combineLatest([e.derive.chain.bestNumber(),e.derive.chain.bestNumberFinalized()]).pipe(map$1(([t,n])=>e.registry.createType("BlockNumber",t.sub(n)))))}function extractAuthor(r,e=[]){const[t]=r.logs.filter(a=>a.isConsensus),[n]=r.logs.filter(a=>a.isPreRuntime),[s]=r.logs.filter(a=>a.isSeal);let i;try{if(n){const[a,o]=n.asPreRuntime;i=a.extractAuthor(o,e)}if(!i&&t){const[a,o]=t.asConsensus;i=a.extractAuthor(o,e)}if(!i&&s){const[a,o]=s.asSeal;i=a.extractAuthor(o,e)}}catch{}return i}function createHeaderExtended(r,e,t){var i,a;const n=r.createClass("Header");class s extends n{constructor(h,p,x){super(h,p);_(this,i,void 0);_(this,a,void 0);Q(this,i,extractAuthor(this.digest,x)),Q(this,a,x),this.createdAtHash=p==null?void 0:p.createdAtHash}get author(){return b(this,i)}get validators(){return b(this,a)}}return i=new WeakMap,a=new WeakMap,new s(r,e,t)}function mapExtrinsics(r,e){return r.map((t,n)=>{let s,i;const a=e.filter(({phase:o})=>o.isApplyExtrinsic&&o.asApplyExtrinsic.eq(n)).map(({event:o})=>(o.section==="system"&&(o.method==="ExtrinsicSuccess"?i=o.data[0]:o.method==="ExtrinsicFailed"&&(s=o.data[0],i=o.data[1])),o));return{dispatchError:s,dispatchInfo:i,events:a,extrinsic:t}})}function createSignedBlockExtended(r,e,t,n){var a,o,c;const s=r.createClass("SignedBlock");class i extends s{constructor(x,A,k,U){super(x,A);_(this,a,void 0);_(this,o,void 0);_(this,c,void 0);Q(this,a,extractAuthor(this.block.header.digest,U)),Q(this,o,k||[]),Q(this,c,mapExtrinsics(this.block.extrinsics,b(this,o))),this.createdAtHash=A==null?void 0:A.createdAtHash}get author(){return b(this,a)}get events(){return b(this,o)}get extrinsics(){return b(this,c)}}return a=new WeakMap,o=new WeakMap,c=new WeakMap,new i(r,e,t,n)}function getHeader(r,e){return memo(r,t=>combineLatest([e.rpc.chain.getHeader(t),e.queryAt(t).pipe(switchMap(n=>n.session?n.session.validators():of([])))]).pipe(map$1(([n,s])=>createHeaderExtended(n.registry,n,s)),catchError(()=>of())))}function getBlock(r,e){return memo(r,t=>combineLatest([e.rpc.chain.getBlock(t),e.queryAt(t).pipe(switchMap(n=>combineLatest([n.system.events(),n.session?n.session.validators():of([])])))]).pipe(map$1(([n,[s,i]])=>createSignedBlockExtended(e.registry,n,s,i)),catchError(()=>of())))}function getBlockByNumber(r,e){return memo(r,t=>e.rpc.chain.getBlockHash(t).pipe(switchMap(n=>e.derive.chain.getBlock(n))))}function subscribeNewBlocks(r,e){return memo(r,()=>e.derive.chain.subscribeNewHeads().pipe(switchMap(t=>{const n=t.createdAtHash||t.hash;return combineLatest([of(t),e.rpc.chain.getBlock(n),e.queryAt(n).pipe(switchMap(s=>s.system.events()))])}),map$1(([t,n,s])=>createSignedBlockExtended(n.registry,n,s,t.validators))))}function subscribeNewHeads(r,e){return memo(r,()=>combineLatest([e.rpc.chain.subscribeNewHeads(),e.query.session?e.query.session.validators():of(void 0)]).pipe(map$1(([t,n])=>(t.createdAtHash=t.hash,createHeaderExtended(t.registry,t,n)))))}var chain=Object.freeze(Object.defineProperty({__proto__:null,bestNumber,bestNumberFinalized,bestNumberLag,getHeader,getBlock,getBlockByNumber,subscribeNewBlocks,subscribeNewHeads},Symbol.toStringTag,{value:"Module"}));function queryConstants(r){return of([r.consts.contracts.callBaseFee||r.registry.createType("Balance"),r.consts.contracts.contractFee||r.registry.createType("Balance"),r.consts.contracts.creationFee||r.registry.createType("Balance"),r.consts.contracts.transactionBaseFee||r.registry.createType("Balance"),r.consts.contracts.transactionByteFee||r.registry.createType("Balance"),r.consts.contracts.transferFee||r.registry.createType("Balance"),r.consts.contracts.rentByteFee,r.consts.contracts.rentDepositOffset,r.consts.contracts.surchargeReward,r.consts.contracts.tombstoneDeposit])}function fees(r,e){return memo(r,()=>queryConstants(e).pipe(map$1(([t,n,s,i,a,o,c,h,p,x])=>({callBaseFee:t,contractFee:n,creationFee:s,rentByteFee:c,rentDepositOffset:h,surchargeReward:p,tombstoneDeposit:x,transactionBaseFee:i,transactionByteFee:a,transferFee:o}))))}var contracts$1=Object.freeze(Object.defineProperty({__proto__:null,fees},Symbol.toStringTag,{value:"Module"}));function getInstance(r,e){const t=r.registry.getModuleInstances(r.runtimeVersion.specName.toString(),e),n=t&&t.length?t[0]:e;return r.query[n]}function withSection(r,e){return(t,n)=>memo(t,e(getInstance(n,r),n,t))}function callMethod(r,e){return t=>withSection(t,n=>()=>isFunction$3(n==null?void 0:n[r])?n[r]():of(e))}const members$4=callMethod("members",[]);function prime$3(r){return withSection(r,e=>()=>isFunction$3(e==null?void 0:e.prime)?e.prime().pipe(map$1(t=>t.unwrapOr(null))):of(null))}function parse$4(r,[e,t,n]){return t.map((s,i)=>({hash:r.registry.createType("Hash",e[i]),proposal:s&&s.isSome?s.unwrap():null,votes:n[i].unwrapOr(null)}))}function _proposalsFrom(r,e,t){return(isFunction$3(e==null?void 0:e.proposals)&&t.length?combineLatest([of(t),e.proposalOf.multi(t).pipe(catchError(()=>of(t.map(()=>null)))),e.voting.multi(t)]):of([[],[],[]])).pipe(map$1(n=>parse$4(r,n)))}function hasProposals$3(r){return withSection(r,e=>()=>of(isFunction$3(e==null?void 0:e.proposals)))}function proposals$5(r){return withSection(r,(e,t)=>()=>t.derive[r].proposalHashes().pipe(switchMap(n=>_proposalsFrom(t,e,n))))}function proposal$3(r){return withSection(r,(e,t)=>n=>isFunction$3(e==null?void 0:e.proposals)?firstObservable(_proposalsFrom(t,e,[n])):of(null))}const proposalCount$3=callMethod("proposalCount",null),proposalHashes$3=callMethod("proposals",[]);function isVoter(r){return!Array.isArray(r)}function retrieveStakeOf(r){return r.stakeOf.entries().pipe(map$1(e=>e.map(([{args:[t]},n])=>[t,n])))}function retrieveVoteOf(r){return r.votesOf.entries().pipe(map$1(e=>e.map(([{args:[t]},n])=>[t,n])))}function retrievePrev(r,e){return combineLatest([retrieveStakeOf(e),retrieveVoteOf(e)]).pipe(map$1(([t,n])=>{const s=[];return n.forEach(([i,a])=>{s.push([i,{stake:r.registry.createType("Balance"),votes:a}])}),t.forEach(([i,a])=>{const o=s.find(([c])=>c.eq(i));o?o[1].stake=a:s.push([i,{stake:a,votes:[]}])}),s}))}function retrieveCurrent(r){return r.voting.entries().pipe(map$1(e=>e.map(([{args:[t]},n])=>[t,isVoter(n)?{stake:n.stake,votes:n.votes}:{stake:n[0],votes:n[1]}])))}function votes(r,e){const t=e.query.phragmenElection||e.query.electionsPhragmen||e.query.elections;return memo(r,()=>t?t.stakeOf?retrievePrev(e,t):retrieveCurrent(t):of([]))}function votesOf(r,e){return memo(r,t=>e.derive.council.votes().pipe(map$1(n=>(n.find(([s])=>s.eq(t))||[null,{stake:e.registry.createType("Balance"),votes:[]}])[1])))}const members$3=members$4("council"),hasProposals$2=hasProposals$3("council"),proposal$2=proposal$3("council"),proposalCount$2=proposalCount$3("council"),proposalHashes$2=proposalHashes$3("council"),proposals$4=proposals$5("council"),prime$2=prime$3("council");var council=Object.freeze(Object.defineProperty({__proto__:null,members:members$3,hasProposals:hasProposals$2,proposal:proposal$2,proposalCount:proposalCount$2,proposalHashes:proposalHashes$2,proposals:proposals$4,prime:prime$2,votes,votesOf},Symbol.toStringTag,{value:"Module"}));function createChildKey(r){return u8aToHex(u8aConcat(":child_storage:default:",blake2AsU8a(u8aConcat("crowdloan",(r.fundIndex||r.trieIndex).toU8a()))))}function childKey(r,e){return memo(r,t=>e.query.crowdloan.funds(t).pipe(map$1(n=>n.isSome?createChildKey(n.unwrap()):null)))}function extractContributed(r,e){var t;const n=[],s=[];return e.filter(({event:{data:[,i],method:a,section:o}})=>o==="crowdloan"&&["Contributed","Withdrew"].includes(a)&&i.eq(r)).reduce((i,{event:{data:[a],method:o}})=>(o==="Contributed"?i.added.push(a.toHex()):i.removed.push(a.toHex()),i),{added:n,blockHash:((t=e.createdAtHash)===null||t===void 0?void 0:t.toHex())||"-",removed:s})}const PAGE_SIZE_K$1=1e3;function _getUpdates(r,e){let t=[],n=[];return r.query.system.events().pipe(switchMap(s=>{const i=extractContributed(e,s);if(i.added.length||i.removed.length){var a;return t=t.concat(...i.added),n=n.concat(...i.removed),of({added:t,addedDelta:i.added,blockHash:((a=s.createdAtHash)===null||a===void 0?void 0:a.toHex())||"-",removed:n,removedDelta:i.removed})}return EMPTY}),startWith({added:t,addedDelta:[],blockHash:"-",removed:n,removedDelta:[]}))}function _eventTriggerAll(r,e){return r.query.system.events().pipe(switchMap(t=>{var n;return t.filter(({event:{data:[i],method:a,section:o}})=>o==="crowdloan"&&["AllRefunded","Dissolved","PartiallyRefunded"].includes(a)&&i.eq(e)).length?of(((n=t.createdAtHash)===null||n===void 0?void 0:n.toHex())||"-"):EMPTY}),startWith("-"))}function _getKeysPaged(r,e){const t=new BehaviorSubject(void 0);return t.pipe(switchMap(n=>r.rpc.childstate.getKeysPaged(e,"0x",PAGE_SIZE_K$1,n)),tap(n=>{nextTick(()=>{n.length===PAGE_SIZE_K$1?t.next(n[PAGE_SIZE_K$1-1].toHex()):t.complete()})}),toArray(),map$1(n=>arrayFlatten(n)))}function _getAll(r,e,t){return _eventTriggerAll(r,e).pipe(switchMap(()=>isFunction$3(r.rpc.childstate.getKeysPaged)?_getKeysPaged(r,t):r.rpc.childstate.getKeys(t,"0x")),map$1(n=>n.map(s=>s.toHex())))}function _contributions$1(r,e,t){return combineLatest([_getAll(r,e,t),_getUpdates(r,e)]).pipe(map$1(([n,{added:s,blockHash:i,removed:a}])=>{const o={};return n.forEach(c=>{o[c]=!0}),s.forEach(c=>{o[c]=!0}),a.forEach(c=>{delete o[c]}),{blockHash:i,contributorsHex:Object.keys(o)}}))}function contributions(r,e){return memo(r,t=>e.derive.crowdloan.childKey(t).pipe(switchMap(n=>n?_contributions$1(e,t,n):of({blockHash:"-",contributorsHex:[]}))))}function _getValues(r,e,t){return combineLatest(t.map(n=>r.rpc.childstate.getStorage(e,n))).pipe(map$1(n=>n.map(s=>r.registry.createType("Option<StorageData>",s)).map(s=>s.isSome?r.registry.createType("Balance",s.unwrap()):r.registry.createType("Balance")).reduce((s,i,a)=>Je(Ve({},s),{[t[a]]:i}),{})))}function _watchOwnChanges(r,e,t,n){return r.query.system.events().pipe(switchMap(s=>{const i=extractContributed(e,s),a=n.filter(o=>i.added.includes(o)||i.removed.includes(o));return a.length?_getValues(r,t,a):EMPTY}),startWith({}))}function _contributions(r,e,t,n){return combineLatest([_getValues(r,t,n),_watchOwnChanges(r,e,t,n)]).pipe(map$1(([s,i])=>Ve(Ve({},s),i)))}function ownContributions(r,e){return memo(r,(t,n)=>e.derive.crowdloan.childKey(t).pipe(switchMap(s=>s&&n.length?_contributions(e,t,s,n):of({}))))}var crowdloan=Object.freeze(Object.defineProperty({__proto__:null,childKey,contributions,ownContributions},Symbol.toStringTag,{value:"Module"}));const DEMOCRACY_ID=stringToHex("democrac");function isMaybeHashed(r){return r instanceof Enum}function queryQueue(r){return r.query.democracy.dispatchQueue().pipe(switchMap(e=>combineLatest([of(e),r.derive.democracy.preimages(e.map(([,t])=>t))])),map$1(([e,t])=>e.map(([n,s,i],a)=>({at:n,image:t[a],imageHash:s,index:i}))))}function schedulerEntries(r){return r.derive.democracy.referendumsFinished().pipe(switchMap(()=>r.query.scheduler.agenda.keys()),switchMap(e=>{const t=e.map(({args:[n]})=>n);return t.length?combineLatest([of(t),r.query.scheduler.agenda.multi(t).pipe(catchError(()=>of(t.map(()=>[]))))]):of([[],[]])}))}function queryScheduler(r){return schedulerEntries(r).pipe(switchMap(([e,t])=>{const n=[];return e.forEach((s,i)=>{(t[i]||[]).filter(a=>a.isSome).forEach(a=>{const o=a.unwrap();if(o.maybeId.isSome){const c=o.maybeId.unwrap().toHex();if(c.startsWith(DEMOCRACY_ID)){const h=isMaybeHashed(o.call)?o.call.isHash?o.call.asHash:o.call.asValue.args[0]:o.call.args[0];n.push({at:s,imageHash:h,index:r.registry.createType("(u64, ReferendumIndex)",c)[1]})}}})}),combineLatest([of(n),n.length?r.derive.democracy.preimages(n.map(({imageHash:s})=>s)):of([])])}),map$1(([e,t])=>e.map((n,s)=>Je(Ve({},n),{image:t[s]}))))}function dispatchQueue(r,e){return memo(r,()=>{var t;return isFunction$3((t=e.query.scheduler)===null||t===void 0?void 0:t.agenda)?queryScheduler(e):e.query.democracy.dispatchQueue?queryQueue(e):of([])})}const LOCKUPS=[0,1,2,4,8,16,32];function parseEnd(r,e,{approved:t,end:n}){return[n,t.isTrue&&e.isAye||t.isFalse&&e.isNay?n.add((r.consts.democracy.voteLockingPeriod||r.consts.democracy.enactmentPeriod).muln(LOCKUPS[e.conviction.index])):BN_ZERO]}function parseLock(r,[e,t],n){const{balance:s,vote:i}=t.asStandard,[a,o]=n.isFinished?parseEnd(r,i,n.asFinished):[BN_ZERO,BN_ZERO];return{balance:s,isDelegated:!1,isFinished:n.isFinished,referendumEnd:a,referendumId:e,unlockAt:o,vote:i}}function delegateLocks(r,{balance:e,conviction:t,target:n}){return r.derive.democracy.locks(n).pipe(map$1(s=>s.map(({isFinished:i,referendumEnd:a,referendumId:o,unlockAt:c,vote:h})=>({balance:e,isDelegated:!0,isFinished:i,referendumEnd:a,referendumId:o,unlockAt:c.isZero()?c:a.add((r.consts.democracy.voteLockingPeriod||r.consts.democracy.enactmentPeriod).muln(LOCKUPS[t.index])),vote:r.registry.createType("Vote",{aye:h.isAye,conviction:t})}))))}function directLocks(r,{votes:e}){return e.length?r.query.democracy.referendumInfoOf.multi(e.map(([t])=>t)).pipe(map$1(t=>e.map((n,s)=>[n,t[s].unwrapOr(null)]).filter(n=>!!n[1]&&isUndefined(n[1].end)&&n[0][1].isStandard).map(([n,s])=>parseLock(r,n,s)))):of([])}function locks(r,e){return memo(r,t=>e.query.democracy.votingOf?e.query.democracy.votingOf(t).pipe(switchMap(n=>n.isDirect?directLocks(e,n.asDirect):n.isDelegating?delegateLocks(e,n.asDelegating):of([]))):of([]))}function withImage(r,e){if(e.isNone)return of(null);const[t,n]=e.unwrap();return r.derive.democracy.preimage(t).pipe(map$1(s=>({image:s,imageHash:t,threshold:n})))}function nextExternal(r,e){return memo(r,()=>{var t;return(t=e.query.democracy)!==null&&t!==void 0&&t.nextExternal?e.query.democracy.nextExternal().pipe(switchMap(n=>withImage(e,n))):of(null)})}function isDemocracyPreimage(r,e){return!!e&&!r.query.democracy.dispatchQueue}function constructProposal(r,[e,t,n,s]){let i;try{i=r.registry.createType("Proposal",e.toU8a(!0))}catch(a){console.error(a)}return{at:s,balance:n,proposal:i,proposer:t}}function parseDemocracy(r,e){if(!e.isNone){if(isDemocracyPreimage(r,e)){const t=e.unwrap();if(t.isMissing)return;const{data:n,deposit:s,provider:i,since:a}=t.asAvailable;return constructProposal(r,[n,i,s,a])}return constructProposal(r,e.unwrap())}}function getDemocracyImages(r,e){return r.query.democracy.preimages.multi(e).pipe(map$1(t=>t.map(n=>parseDemocracy(r,n))))}function preimages(r,e){return memo(r,t=>t.length?isFunction$3(e.query.democracy.preimages)?getDemocracyImages(e,t):of([]):of([]))}const preimage=firstMemo((r,e)=>r.derive.democracy.preimages([e]));function isNewDepositors(r){return isFunction$3(r[1].mul)}function parse$3([r,e,t]){return r.filter(([,,n],s)=>{var i;return!!((i=t[s])!==null&&i!==void 0&&i.isSome)&&!n.isEmpty}).map(([n,s,i],a)=>{const o=t[a].unwrap();return Je(Ve({},isNewDepositors(o)?{balance:o[1],seconds:o[0]}:{balance:o[0],seconds:o[1]}),{image:e[a],imageHash:s,index:n,proposer:i})})}function proposals$3(r,e){return memo(r,()=>{var t,n;return isFunction$3((t=e.query.democracy)===null||t===void 0?void 0:t.publicProps)&&isFunction$3((n=e.query.democracy)===null||n===void 0?void 0:n.preimages)?e.query.democracy.publicProps().pipe(switchMap(s=>s.length?combineLatest([of(s),e.derive.democracy.preimages(s.map(([,i])=>i)),e.query.democracy.depositOf.multi(s.map(([i])=>i))]):of([[],[],[]])),map$1(parse$3)):of([])})}function referendumIds(r,e){return memo(r,()=>{var t;return(t=e.query.democracy)!==null&&t!==void 0&&t.lowestUnbaked?e.queryMulti([e.query.democracy.lowestUnbaked,e.query.democracy.referendumCount]).pipe(map$1(([n,s])=>s.gt(n)?[...Array(s.sub(n).toNumber())].map((i,a)=>n.addn(a)):[])):of([])})}function referendums(r,e){return memo(r,()=>e.derive.democracy.referendumsActive().pipe(switchMap(t=>t.length?combineLatest([of(t),e.derive.democracy._referendumsVotes(t)]):of([[],[]])),map$1(([t,n])=>t.map((s,i)=>Ve(Ve({},s),n[i])))))}function referendumsActive(r,e){return memo(r,()=>e.derive.democracy.referendumIds().pipe(switchMap(t=>t.length?e.derive.democracy.referendumsInfo(t):of([]))))}function referendumsFinished(r,e){return memo(r,()=>e.derive.democracy.referendumIds().pipe(switchMap(t=>e.query.democracy.referendumInfoOf.multi(t)),map$1(t=>t.map(n=>n.unwrapOr(null)).filter(n=>!!n&&n.isFinished).map(n=>n.asFinished))))}function isOldInfo(r){return!!r.proposalHash}function isCurrentStatus(r){return!!r.tally}function compareRationals(r,e,t,n){for(;;){const s=r.div(e),i=t.div(n);if(s.lt(i))return!0;if(i.lt(s))return!1;const a=r.mod(e),o=t.mod(n);if(o.isZero())return!1;if(a.isZero())return!0;r=n,t=e,e=o,n=a}}function calcPassingOther(r,e,{votedAye:t,votedNay:n,votedTotal:s}){const i=bnSqrt(s);return i.isZero()?!1:r.isSuperMajorityApprove?compareRationals(n,i,t,e):compareRationals(n,e,t,i)}function calcPassing(r,e,t){return r.isSimpleMajority?t.votedAye.gt(t.votedNay):calcPassingOther(r,e,t)}function calcVotesPrev(r){return r.reduce((e,t)=>{const{balance:n,vote:s}=t,i=s.conviction.index===0,a=n.muln(i?1:s.conviction.index).divn(i?10:1);return s.isAye?(e.allAye.push(t),e.voteCountAye++,e.votedAye.iadd(a)):(e.allNay.push(t),e.voteCountNay++,e.votedNay.iadd(a)),e.voteCount++,e.votedTotal.iadd(a),e},{allAye:[],allNay:[],voteCount:0,voteCountAye:0,voteCountNay:0,votedAye:new BN(0),votedNay:new BN(0),votedTotal:new BN(0)})}function calcVotesCurrent(r,e){const t=[],n=[];return e.forEach(s=>{s.vote.isAye?t.push(s):n.push(s)}),{allAye:t,allNay:n,voteCount:t.length+n.length,voteCountAye:t.length,voteCountNay:n.length,votedAye:r.ayes,votedNay:r.nays,votedTotal:r.turnout}}function calcVotes(r,e,t){const n=isCurrentStatus(e.status)?calcVotesCurrent(e.status.tally,t):calcVotesPrev(t);return Je(Ve({},n),{isPassing:calcPassing(e.status.threshold,r,n),votes:t})}function getStatus(r){if(r.isNone)return null;const e=r.unwrap();return isOldInfo(e)?e:e.isOngoing?e.asOngoing:null}function votesPrev(r,e){return r.query.democracy.votersFor(e).pipe(switchMap(t=>combineLatest([of(t),t.length?r.query.democracy.voteOf.multi(t.map(n=>[e,n])):of([]),r.derive.balances.votingBalances(t)])),map$1(([t,n,s])=>t.map((i,a)=>({accountId:i,balance:s[a].votingBalance||r.registry.createType("Balance"),isDelegating:!1,vote:n[a]||r.registry.createType("Vote")}))))}function extractVotes(r,e){return r.filter(([,t])=>t.isDirect).map(([t,n])=>[t,n.asDirect.votes.filter(([s])=>s.eq(e))]).filter(([,t])=>!!t.length).reduce((t,[n,s])=>s.reduce((i,[,a])=>(a.isStandard&&i.push(Ve({accountId:n,isDelegating:!1},a.asStandard)),i),t),[])}function votesCurr(r,e){return r.query.democracy.votingOf.entries().pipe(map$1(t=>{const n=t.map(([{args:[a]},o])=>[a,o]),s=extractVotes(n,e),i=n.filter(([,a])=>a.isDelegating).map(([a,o])=>[a,o.asDelegating]);return i.forEach(([a,{balance:o,conviction:c,target:h}])=>{const p=i.find(([A])=>A.eq(h)),x=s.find(({accountId:A})=>A.eq(p?p[0]:h));x&&s.push({accountId:a,balance:o,isDelegating:!0,vote:r.registry.createType("Vote",{aye:x.vote.isAye,conviction:c})})}),s}))}function _referendumVotes(r,e){return memo(r,t=>combineLatest([e.derive.democracy.sqrtElectorate(),isFunction$3(e.query.democracy.votingOf)?votesCurr(e,t.index):votesPrev(e,t.index)]).pipe(map$1(([n,s])=>calcVotes(n,t,s))))}function _referendumsVotes(r,e){return memo(r,t=>t.length?combineLatest(t.map(n=>e.derive.democracy._referendumVotes(n))):of([]))}function _referendumInfo(r,e){return memo(r,(t,n)=>{const s=getStatus(n);return s?e.derive.democracy.preimage(s.proposalHash).pipe(map$1(i=>({image:i,imageHash:s.proposalHash,index:e.registry.createType("ReferendumIndex",t),status:s}))):of(null)})}function referendumsInfo(r,e){return memo(r,t=>t.length?e.query.democracy.referendumInfoOf.multi(t).pipe(switchMap(n=>combineLatest(t.map((s,i)=>e.derive.democracy._referendumInfo(s,n[i])))),map$1(n=>n.filter(s=>!!s))):of([]))}function sqrtElectorate(r,e){return memo(r,()=>e.query.balances.totalIssuance().pipe(map$1(bnSqrt)))}var democracy=Object.freeze(Object.defineProperty({__proto__:null,dispatchQueue,locks,nextExternal,preimages,preimage,proposals:proposals$3,referendumIds,referendums,referendumsActive,referendumsFinished,_referendumVotes,_referendumsVotes,_referendumInfo,referendumsInfo,sqrtElectorate},Symbol.toStringTag,{value:"Module"}));function isSeatHolder(r){return!Array.isArray(r)}function isCandidateTuple(r){return Array.isArray(r)}function getAccountTuple(r){return isSeatHolder(r)?[r.who,r.stake]:r}function getCandidate(r){return isCandidateTuple(r)?r[0]:r}function sortAccounts([,r],[,e]){return e.cmp(r)}function getConstants(r,e){return e?{candidacyBond:r.consts[e].candidacyBond,desiredRunnersUp:r.consts[e].desiredRunnersUp,desiredSeats:r.consts[e].desiredMembers,termDuration:r.consts[e].termDuration,votingBond:r.consts[e].votingBond}:{}}function getModules(r){const[e]=r.registry.getModuleInstances(r.runtimeVersion.specName.toString(),"council")||["council"],t=r.query.phragmenElection?"phragmenElection":r.query.electionsPhragmen?"electionsPhragmen":r.query.elections?"elections":null;return[e,t]}function queryAll(r,e,t){return r.queryMulti([r.query[e].members,r.query[t].candidates,r.query[t].members,r.query[t].runnersUp])}function queryCouncil(r,e){return combineLatest([r.query[e].members(),of([]),of([]),of([])])}function info$3(r,e){return memo(r,()=>{const[t,n]=getModules(e);return(n?queryAll(e,t,n):queryCouncil(e,t)).pipe(map$1(([s,i,a,o])=>Je(Ve({},getConstants(e,n)),{candidateCount:e.registry.createType("u32",i.length),candidates:i.map(getCandidate),members:a.length?a.map(getAccountTuple).sort(sortAccounts):s.map(c=>[c,e.registry.createType("Balance")]),runnersUp:o.map(getAccountTuple).sort(sortAccounts)})))})}var elections=Object.freeze(Object.defineProperty({__proto__:null,info:info$3},Symbol.toStringTag,{value:"Module"}));function mapResult([r,e,t,n]){return e.forEach((s,i)=>{const a=s.toString(),o=n[i],c=!t[i].isEmpty,h=r[a];(!h||h.hasMessage!==c||!h.blockCount.eq(o))&&(r[a]={blockCount:o,hasMessage:c,isOnline:c||o.gt(BN_ZERO)})}),r}function receivedHeartbeats(r,e){return memo(r,()=>{var t;return(t=e.query.imOnline)!==null&&t!==void 0&&t.receivedHeartbeats?e.derive.staking.overview().pipe(switchMap(({currentIndex:n,validators:s})=>combineLatest([of({}),of(s),e.query.imOnline.receivedHeartbeats.multi(s.map((i,a)=>[n,a])),e.query.imOnline.authoredBlocks.multi(s.map(i=>[n,i]))])),map$1(mapResult)):of({})})}var imOnline=Object.freeze(Object.defineProperty({__proto__:null,receivedHeartbeats},Symbol.toStringTag,{value:"Module"}));const members$2=members$4("membership"),hasProposals$1=hasProposals$3("membership"),proposal$1=proposal$3("membership"),proposalCount$1=proposalCount$3("membership"),proposalHashes$1=proposalHashes$3("membership"),proposals$2=proposals$5("membership"),prime$1=prime$3("membership");var membership=Object.freeze(Object.defineProperty({__proto__:null,members:members$2,hasProposals:hasProposals$1,proposal:proposal$1,proposalCount:proposalCount$1,proposalHashes:proposalHashes$1,proposals:proposals$2,prime:prime$1},Symbol.toStringTag,{value:"Module"}));function didUpdateToBool(r,e){return r.isSome?r.unwrap().some(t=>t.eq(e)):!1}function parseActive(r,e){const t=e.find(([n])=>n===r);if(t&&t[1].isSome){const[n,s]=t[1].unwrap();return Ve({collatorId:n},s.isWithRetries?{isRetriable:!0,retries:s.asWithRetries.toNumber()}:{isRetriable:!1,retries:0})}return null}function parseCollators(r,e){return e.map(t=>{const n=t.find(([s])=>s===r);return n?n[1]:null})}function parse$2(r,[e,t,n,s,i,a,o,c]){return i.isNone?null:{active:parseActive(r,e),didUpdate:didUpdateToBool(s,r),heads:o,id:r,info:Ve({id:r},i.unwrap()),pendingSwapId:a.unwrapOr(null),relayDispatchQueue:c,retryCollators:parseCollators(r,t),selectedCollators:parseCollators(r,n)}}function info$2(r,e){return memo(r,t=>e.query.registrar&&e.query.parachains?e.queryMulti([e.query.registrar.active,e.query.registrar.retryQueue,e.query.registrar.selectedThreads,e.query.parachains.didUpdate,[e.query.registrar.paras,t],[e.query.registrar.pendingSwap,t],[e.query.parachains.heads,t],[e.query.parachains.relayDispatchQueue,t]]).pipe(map$1(n=>parse$2(e.registry.createType("ParaId",t),n))):of(null))}function parse$1([r,e,t,n,s]){return r.map((i,a)=>({didUpdate:didUpdateToBool(e,i),id:i,info:Ve({id:i},t[a].unwrapOr(null)),pendingSwapId:n[a].unwrapOr(null),relayDispatchQueueSize:s[a][0].toNumber()}))}function overview$1(r,e){return memo(r,()=>{var t;return(t=e.query.registrar)!==null&&t!==void 0&&t.parachains&&e.query.parachains?e.query.registrar.parachains().pipe(switchMap(n=>combineLatest([of(n),e.query.parachains.didUpdate(),e.query.registrar.paras.multi(n),e.query.registrar.pendingSwap.multi(n),e.query.parachains.relayDispatchQueueSize.multi(n)])),map$1(parse$1)):of([])})}var parachains=Object.freeze(Object.defineProperty({__proto__:null,info:info$2,overview:overview$1},Symbol.toStringTag,{value:"Module"}));function parse([r,e,t,n,s]){return{activeEra:e,activeEraStart:t,currentEra:n,currentIndex:r,validatorCount:s}}function queryStaking(r){return r.queryMulti([r.query.session.currentIndex,r.query.staking.activeEra,r.query.staking.currentEra,r.query.staking.validatorCount]).pipe(map$1(([e,t,n,s])=>{const{index:i,start:a}=t.unwrapOrDefault();return parse([e,i,a,n.unwrapOrDefault(),s])}))}function querySession(r){return r.query.session.currentIndex().pipe(map$1(e=>parse([e,r.registry.createType("EraIndex"),r.registry.createType("Option<Moment>"),r.registry.createType("EraIndex"),r.registry.createType("u32")])))}function empty(r){return of(parse([r.registry.createType("SessionIndex",1),r.registry.createType("EraIndex"),r.registry.createType("Option<Moment>"),r.registry.createType("EraIndex"),r.registry.createType("u32")]))}function indexes(r,e){return memo(r,()=>e.query.session?e.query.staking?queryStaking(e):querySession(e):empty(e))}function info$1(r,e){return memo(r,()=>e.derive.session.indexes().pipe(map$1(t=>{var n,s,i,a;const o=((n=e.consts)===null||n===void 0||(s=n.babe)===null||s===void 0?void 0:s.epochDuration)||e.registry.createType("u64",1),c=((i=e.consts)===null||i===void 0||(a=i.staking)===null||a===void 0?void 0:a.sessionsPerEra)||e.registry.createType("SessionIndex",1);return Je(Ve({},t),{eraLength:e.registry.createType("BlockNumber",c.mul(o)),isEpoch:!!e.query.babe,sessionLength:o,sessionsPerEra:c})})))}function withProgressField(r){return(e,t)=>memo(e,()=>t.derive.session.progress().pipe(map$1(n=>n[r])))}function createDerive(r,e,[t,n,s,i]){const a=n.mul(e.sessionLength).iadd(s),o=t.sub(a),c=e.currentIndex.sub(i).imul(e.sessionLength).iadd(o);return Je(Ve({},e),{eraProgress:r.registry.createType("BlockNumber",c),sessionProgress:r.registry.createType("BlockNumber",o)})}function queryAura(r){return r.derive.session.info().pipe(map$1(e=>Je(Ve({},e),{eraProgress:r.registry.createType("BlockNumber"),sessionProgress:r.registry.createType("BlockNumber")})))}function queryBabe(r){return r.derive.session.info().pipe(switchMap(e=>{var t;return combineLatest([of(e),(t=r.query.staking)!==null&&t!==void 0&&t.erasStartSessionIndex?r.queryMulti([r.query.babe.currentSlot,r.query.babe.epochIndex,r.query.babe.genesisSlot,[r.query.staking.erasStartSessionIndex,e.activeEra]]):r.queryMulti([r.query.babe.currentSlot,r.query.babe.epochIndex,r.query.babe.genesisSlot])])}),map$1(([e,[t,n,s,i]])=>[e,[t,n,s,i&&i.isSome?i.unwrap():r.registry.createType("SessionIndex",1)]]))}function progress(r,e){return memo(r,()=>e.query.babe?queryBabe(e).pipe(map$1(([t,n])=>createDerive(e,t,n))):queryAura(e))}const eraLength=withProgressField("eraLength"),eraProgress=withProgressField("eraProgress"),sessionProgress=withProgressField("sessionProgress");var session=Object.freeze(Object.defineProperty({__proto__:null,indexes,info:info$1,progress,eraLength,eraProgress,sessionProgress},Symbol.toStringTag,{value:"Module"}));function candidates(r,e){return memo(r,()=>e.query.society.candidates().pipe(switchMap(t=>combineLatest([of(t),e.query.society.suspendedCandidates.multi(t.map(({who:n})=>n))])),map$1(([t,n])=>t.map(({kind:s,value:i,who:a},o)=>({accountId:a,isSuspended:n[o].isSome,kind:s,value:i})))))}function info(r,e){return memo(r,()=>e.queryMulti([e.query.society.bids,e.query.society.defender,e.query.society.founder,e.query.society.head,e.query.society.maxMembers,e.query.society.pot]).pipe(map$1(([t,n,s,i,a,o])=>({bids:t,defender:n.unwrapOr(void 0),founder:s.unwrapOr(void 0),hasDefender:n.isSome&&i.isSome&&!i.eq(n)||!1,head:i.unwrapOr(void 0),maxMembers:a,pot:o}))))}function member(r,e){return memo(r,t=>e.derive.society._members([t]).pipe(map$1(([n])=>n)))}function _members(r,e){return memo(r,t=>combineLatest([of(t),e.query.society.payouts.multi(t),e.query.society.strikes.multi(t),e.query.society.defenderVotes.multi(t),e.query.society.suspendedMembers.multi(t),e.query.society.vouching.multi(t)]).pipe(map$1(([n,s,i,a,o,c])=>n.map((h,p)=>({accountId:h,isDefenderVoter:a[p].isSome,isSuspended:o[p].isTrue,payouts:s[p],strikes:i[p],vote:a[p].unwrapOr(void 0),vouching:c[p].unwrapOr(void 0)})))))}function members$1(r,e){return memo(r,()=>e.query.society.members().pipe(switchMap(t=>e.derive.society._members(t))))}var society=Object.freeze(Object.defineProperty({__proto__:null,candidates,info,member,_members,members:members$1},Symbol.toStringTag,{value:"Module"}));const QUERY_OPTS={withDestination:!0,withLedger:!0,withNominations:!0,withPrefs:!0};function groupByEra(r){return r.reduce((e,{era:t,value:n})=>{const s=t.toString();return e[s]=(e[s]||BN_ZERO).add(n.unwrap()),e},{})}function calculateUnlocking(r,e,t){const n=Object.entries(groupByEra(((e==null?void 0:e.unlocking)||[]).filter(({era:s})=>s.unwrap().gt(t.activeEra)))).map(([s,i])=>({remainingEras:new BN(s).isub(t.activeEra),value:r.registry.createType("Balance",i)}));return n.length?n:void 0}function redeemableSum(r,e,t){return r.registry.createType("Balance",((e==null?void 0:e.unlocking)||[]).reduce((n,{era:s,value:i})=>t.activeEra.gte(s.unwrap())?n.iadd(i.unwrap()):n,new BN(0)))}function parseResult$1(r,e,t,n){return Je(Ve(Ve({},t),n),{redeemable:redeemableSum(r,n.stakingLedger,e),unlocking:calculateUnlocking(r,n.stakingLedger,e)})}function accounts$1(r,e){return memo(r,t=>e.derive.session.info().pipe(switchMap(n=>combineLatest([e.derive.staking.keysMulti(t),e.derive.staking.queryMulti(t,QUERY_OPTS)]).pipe(map$1(([s,i])=>i.map((a,o)=>parseResult$1(e,n,s[o],a)))))))}const account=firstMemo((r,e)=>r.derive.staking.accounts([e]));function currentPoints(r,e){return memo(r,()=>e.derive.session.indexes().pipe(switchMap(({activeEra:t})=>e.query.staking.erasRewardPoints(t))))}function getEraCache(r,e,t){const n=`${r}-${e.toString()}`;return[n,t?void 0:deriveCache.get(n)]}function getEraMultiCache(r,e,t){return t?[]:e.map(s=>deriveCache.get(`${r}-${s.toString()}`)).filter(s=>!!s)}function setEraCache(r,e,t){return!e&&deriveCache.set(r,t),t}function setEraMultiCache(r,e,t){return!e&&t.forEach(n=>deriveCache.set(`${r}-${n.era.toString()}`,n)),t}function filterCachedEras(r,e,t){return r.map(n=>e.find(({era:s})=>n.eq(s))||t.find(({era:s})=>n.eq(s)))}const ERA_CHUNK_SIZE=14;function chunkEras(r,e){const t=arrayChunk(r,ERA_CHUNK_SIZE);let n=0;const s=new BehaviorSubject(t[n]);return s.pipe(switchMap(e),tap(()=>{nextTick(()=>{n++,n===t.length?s.complete():s.next(t[n])})}),toArray(),map$1(arrayFlatten))}function filterEras(r,e){return r.filter(t=>!e.some(({era:n})=>t.eq(n)))}function erasHistoricApply(r){return(e,t)=>memo(e,(n=!1)=>t.derive.staking.erasHistoric(n).pipe(switchMap(s=>t.derive.staking[r](s,n))))}function erasHistoricApplyAccount(r){return(e,t)=>memo(e,(n,s=!1)=>t.derive.staking.erasHistoric(s).pipe(switchMap(i=>t.derive.staking[r](n,i,s))))}function singleEra(r){return(e,t)=>memo(e,n=>t.derive.staking[r](n,!0))}function combineEras(r){return(e,t)=>memo(e,(n,s)=>n.length?chunkEras(n,i=>combineLatest(i.map(a=>t.derive.staking[r](a,s)))):of([]))}const CACHE_KEY$4="eraExposure";function mapStakers(r,e){const t={},n={};return e.forEach(([s,i])=>{const a=s.args[1].toString();n[a]=i,i.others.forEach(({who:o},c)=>{const h=o.toString();t[h]=t[h]||[],t[h].push({validatorId:a,validatorIndex:c})})}),{era:r,nominators:t,validators:n}}function _eraExposure(r,e){return memo(r,(t,n=!1)=>{const[s,i]=getEraCache(CACHE_KEY$4,t,n);return i?of(i):e.query.staking.erasStakersClipped.entries(t).pipe(map$1(a=>setEraCache(s,n,mapStakers(t,a))))})}const eraExposure=singleEra("_eraExposure"),_erasExposure=combineEras("_eraExposure"),erasExposure=erasHistoricApply("_erasExposure");function erasHistoric(r,e){return memo(r,t=>e.queryMulti([e.query.staking.activeEra,e.query.staking.historyDepth]).pipe(map$1(([n,s])=>{const i=[],a=s.toNumber(),o=n.unwrapOrDefault().index;let c=o;for(;c.gte(BN_ZERO)&&i.length<a;)(c!==o||t===!0)&&i.push(e.registry.createType("EraIndex",c)),c=c.sub(BN_ONE);return i.reverse()})))}const CACHE_KEY$3="eraPoints";function mapValidators({individual:r}){return[...r.entries()].filter(([,e])=>e.gt(BN_ZERO)).reduce((e,[t,n])=>(e[t.toString()]=n,e),{})}function mapPoints(r,e){return r.map((t,n)=>({era:t,eraPoints:e[n].total,validators:mapValidators(e[n])}))}function _erasPoints(r,e){return memo(r,(t,n)=>{if(!t.length)return of([]);const s=getEraMultiCache(CACHE_KEY$3,t,n),i=filterEras(t,s);return i.length?e.query.staking.erasRewardPoints.multi(i).pipe(map$1(a=>filterCachedEras(t,s,setEraMultiCache(CACHE_KEY$3,n,mapPoints(i,a))))):of(s)})}const erasPoints=erasHistoricApply("_erasPoints"),CACHE_KEY$2="eraPrefs";function mapPrefs(r,e){const t={};return e.forEach(([n,s])=>{t[n.args[1].toString()]=s}),{era:r,validators:t}}function _eraPrefs(r,e){return memo(r,(t,n)=>{const[s,i]=getEraCache(CACHE_KEY$2,t,n);return i?of(i):e.query.staking.erasValidatorPrefs.entries(t).pipe(map$1(a=>setEraCache(s,n,mapPrefs(t,a))))})}const eraPrefs=singleEra("_eraPrefs"),_erasPrefs=combineEras("_eraPrefs"),erasPrefs=erasHistoricApply("_erasPrefs"),CACHE_KEY$1="eraRewards";function mapRewards(r,e){return r.map((t,n)=>({era:t,eraReward:e[n].unwrapOrDefault()}))}function _erasRewards(r,e){return memo(r,(t,n)=>{if(!t.length)return of([]);const s=getEraMultiCache(CACHE_KEY$1,t,n),i=filterEras(t,s);return i.length?e.query.staking.erasValidatorReward.multi(i).pipe(map$1(a=>filterCachedEras(t,s,setEraMultiCache(CACHE_KEY$1,n,mapRewards(i,a))))):of(s)})}const erasRewards=erasHistoricApply("_erasRewards"),CACHE_KEY="eraSlashes";function mapSlashes(r,e,t){const n={},s={};return e.forEach(([i,a])=>{n[i.args[1].toString()]=a.unwrap()}),t.forEach(([i,a])=>{s[i.args[1].toString()]=a.unwrapOrDefault()[1]}),{era:r,nominators:n,validators:s}}function _eraSlashes(r,e){return memo(r,(t,n)=>{const[s,i]=getEraCache(CACHE_KEY,t,n);return i?of(i):combineLatest([e.query.staking.nominatorSlashInEra.entries(t),e.query.staking.validatorSlashInEra.entries(t)]).pipe(map$1(([a,o])=>setEraCache(s,n,mapSlashes(t,a,o))))})}const eraSlashes=singleEra("_eraSlashes"),_erasSlashes=combineEras("_eraSlashes"),erasSlashes=erasHistoricApply("_erasSlashes"),DEFAULT_FLAGS$1={withController:!0,withExposure:!0,withPrefs:!0};function combineAccounts(r,e){return arrayFlatten([r,e.filter(t=>!r.find(n=>n.eq(t)))])}function electedInfo(r,e){return memo(r,(t=DEFAULT_FLAGS$1)=>e.derive.staking.validators().pipe(switchMap(({nextElected:n,validators:s})=>e.derive.staking.queryMulti(combineAccounts(n,s),t).pipe(map$1(i=>({info:i,nextElected:n,validators:s}))))))}function extractsIds(r,e,t){const n=(e.find(([i])=>i.eq(r))||[void 0,[]])[1],s=t.unwrapOr([]);return{nextSessionIds:Array.isArray(s)?s:[...s.values()],sessionIds:Array.isArray(n)?n:[...n.values()]}}const keys=firstMemo((r,e)=>r.derive.staking.keysMulti([e]));function keysMulti(r,e){return memo(r,t=>t.length?e.query.session.queuedKeys().pipe(switchMap(n=>{var s;return combineLatest([of(n),(s=e.consts.session)!==null&&s!==void 0&&s.dedupKeyPrefix?e.query.session.nextKeys.multi(t.map(i=>[e.consts.session.dedupKeyPrefix,i])):combineLatest(t.map(i=>e.query.session.nextKeys(i)))])}),map$1(([n,s])=>t.map((i,a)=>extractsIds(i,n,s[a])))):of([]))}function overview(r,e){return memo(r,()=>combineLatest([e.derive.session.indexes(),e.derive.staking.validators()]).pipe(map$1(([t,{nextElected:n,validators:s}])=>Je(Ve({},t),{nextElected:n,validators:s}))))}function _ownExposures(r,e){return memo(r,(t,n,s)=>n.length?combineLatest([combineLatest(n.map(i=>e.query.staking.erasStakersClipped(i,t))),combineLatest(n.map(i=>e.query.staking.erasStakers(i,t)))]).pipe(map$1(([i,a])=>n.map((o,c)=>({clipped:i[c],era:o,exposure:a[c]})))):of([]))}const ownExposure=firstMemo((r,e,t)=>r.derive.staking._ownExposures(e,[t],!0)),ownExposures=erasHistoricApplyAccount("_ownExposures");function _ownSlashes(r,e){return memo(r,(t,n,s)=>n.length?combineLatest([combineLatest(n.map(i=>e.query.staking.validatorSlashInEra(i,t))),combineLatest(n.map(i=>e.query.staking.nominatorSlashInEra(i,t)))]).pipe(map$1(([i,a])=>n.map((o,c)=>({era:o,total:i[c].isSome?i[c].unwrap()[1]:a[c].unwrapOrDefault()})))):of([]))}const ownSlash=firstMemo((r,e,t)=>r.derive.staking._ownSlashes(e,[t],!0)),ownSlashes=erasHistoricApplyAccount("_ownSlashes");function parseDetails(r,e,t,n,s,i,a){return{accountId:r,controllerId:e&&e.unwrapOr(null),exposure:i,nominators:t.isSome?t.unwrap().targets:[],rewardDestination:n,stakingLedger:a.unwrapOrDefault(),stashId:r,validatorPrefs:s}}function getLedgers(r,e,{withLedger:t=!1}){const n=e.filter(i=>t&&!!i&&i.isSome).map(i=>i.unwrap()),s=r.registry.createType("Option<StakingLedger>");return(n.length?combineLatest(n.map(i=>r.query.staking.ledger(i))):of([])).pipe(map$1(i=>{let a=-1;return e.map(o=>o&&o.isSome&&i[++a]||s)}))}function getStashInfo(r,e,t,{withController:n,withDestination:s,withExposure:i,withLedger:a,withNominations:o,withPrefs:c}){const h=r.registry.createType("Option<Nominations>"),p=r.registry.createType("RewardDestination"),x=r.registry.createType("Exposure"),A=r.registry.createType("ValidatorPrefs");return combineLatest([n||a?combineLatest(e.map(k=>r.query.staking.bonded(k))):of(e.map(()=>null)),o?combineLatest(e.map(k=>r.query.staking.nominators(k))):of(e.map(()=>h)),s?combineLatest(e.map(k=>r.query.staking.payee(k))):of(e.map(()=>p)),c?combineLatest(e.map(k=>r.query.staking.validators(k))):of(e.map(()=>A)),i?combineLatest(e.map(k=>r.query.staking.erasStakers(t,k))):of(e.map(()=>x))])}function getBatch(r,e,t,n){return getStashInfo(r,t,e,n).pipe(switchMap(([s,i,a,o,c])=>getLedgers(r,s,n).pipe(map$1(h=>t.map((p,x)=>parseDetails(p,s[x],i[x],a[x],o[x],c[x],h[x]))))))}const query=firstMemo((r,e,t)=>r.derive.staking.queryMulti([e],t));function queryMulti(r,e){return memo(r,(t,n)=>t.length?e.derive.session.indexes().pipe(switchMap(({activeEra:s})=>{const i=t.map(a=>e.registry.createType("AccountId",a));return getBatch(e,s,i,n)})):of([]))}function _stakerExposures(r,e){return memo(r,(t,n,s=!1)=>{const i=t.map(a=>e.registry.createType("AccountId",a).toString());return e.derive.staking._erasExposure(n,s).pipe(map$1(a=>i.map(o=>a.map(({era:c,nominators:h,validators:p})=>{const x=!!p[o],A={},k=h[o]||[];return x?A[o]=p[o]:k&&k.forEach(({validatorId:U})=>{A[U]=p[U]}),{era:c,isEmpty:!Object.keys(A).length,isValidator:x,nominating:k,validators:A}}))))})}function stakerExposures(r,e){return memo(r,(t,n=!1)=>e.derive.staking.erasHistoric(n).pipe(switchMap(s=>e.derive.staking._stakerExposures(t,s,n))))}const stakerExposure=firstMemo((r,e,t)=>r.derive.staking.stakerExposures([e],t));function _stakerPoints(r,e){return memo(r,(t,n,s)=>{const i=e.registry.createType("AccountId",t).toString();return e.derive.staking._erasPoints(n,s).pipe(map$1(a=>a.map(({era:o,eraPoints:c,validators:h})=>({era:o,eraPoints:c,points:h[i]||e.registry.createType("RewardPoint")}))))})}const stakerPoints=erasHistoricApplyAccount("_stakerPoints");function _stakerPrefs(r,e){return memo(r,(t,n,s)=>e.query.staking.erasValidatorPrefs.multi(n.map(i=>[i,t])).pipe(map$1(i=>i.map((a,o)=>({era:n[o],validatorPrefs:a})))))}const stakerPrefs=erasHistoricApplyAccount("_stakerPrefs");function parseRewards(r,e,[t,n,s],i){return i.map(({era:a,isEmpty:o,isValidator:c,nominating:h,validators:p})=>{const{eraPoints:x,validators:A}=t.find(q=>q.era.eq(a))||{eraPoints:BN_ZERO,validators:{}},{eraReward:k}=s.find(q=>q.era.eq(a))||{eraReward:r.registry.createType("Balance")},{validators:U}=n.find(q=>q.era.eq(a))||{validators:{}},D={},F=e.toString();return Object.entries(p).forEach(([q,ae])=>{var Y,de;const fe=A[q]||BN_ZERO,be=((Y=U[q])===null||Y===void 0?void 0:Y.commission.unwrap())||BN_ZERO,Ie=((de=ae.total)===null||de===void 0?void 0:de.unwrap())||BN_ZERO;let Be=BN_ZERO,Ue;if(!(Ie.isZero()||fe.isZero()||x.isZero())){Be=k.mul(fe).div(x);const re=be.mul(Be).div(BN_BILLION);let ee;if(q===F)ee=ae.own.unwrap();else{const K=ae.others.find(({who:T})=>T.eq(F));ee=K?K.value.unwrap():BN_ZERO}Ue=Be.sub(re).imul(ee).div(Ie).iadd(q===F?re:BN_ZERO)}D[q]={total:r.registry.createType("Balance",Be),value:r.registry.createType("Balance",Ue)}}),{era:a,eraReward:k,isEmpty:o,isValidator:c,nominating:h,validators:D}})}function allUniqValidators(r){return r.reduce(([e,t],n)=>{const s=[];return t.push(s),n.forEach(({validators:i})=>Object.keys(i).forEach(a=>{s.includes(a)||(s.push(a),e.includes(a)||e.push(a))})),[e,t]},[[],[]])}function removeClaimed(r,e,t){const n=[];Object.keys(t.validators).forEach(s=>{const i=r.indexOf(s);if(i!==-1){const a=e[i].stakingLedger;a!=null&&a.claimedRewards.some(o=>t.era.eq(o))&&n.push(s)}}),n.forEach(s=>{delete t.validators[s]})}function filterRewards(r,e,{rewards:t,stakingLedger:n}){const s=r.filter(o=>!n.claimedRewards.some(c=>c.eq(o))),i=e.map(([o])=>o),a=e.map(([,o])=>o);return t.filter(({isEmpty:o})=>!o).filter(o=>s.some(c=>o.era.eq(c))?(removeClaimed(i,a,o),!0):!1).filter(({validators:o})=>Object.keys(o).length!==0).map(o=>Je(Ve({},o),{nominators:o.nominating.filter(c=>o.validators[c.validatorId])}))}function _stakerRewardsEras(r,e){return memo(r,(t,n=!1)=>combineLatest([e.derive.staking._erasPoints(t,n),e.derive.staking._erasPrefs(t,n),e.derive.staking._erasRewards(t,n)]))}function _stakerRewards(r,e){return memo(r,(t,n,s=!1)=>combineLatest([e.derive.staking.queryMulti(t,{withLedger:!0}),e.derive.staking._stakerExposures(t,n,s),e.derive.staking._stakerRewardsEras(n,s)]).pipe(switchMap(([i,a,o])=>{const c=i.map(({stakingLedger:x,stashId:A},k)=>!A||!x?[]:parseRewards(e,A,o,a[k]));if(s)return of(c);const[h,p]=allUniqValidators(c);return e.derive.staking.queryMulti(h,{withLedger:!0}).pipe(map$1(x=>i.map(({stakingLedger:A},k)=>filterRewards(n,p[k].map(U=>[U,x.find(D=>D.accountId.eq(U))]),{rewards:c[k],stakingLedger:A}))))})))}const stakerRewards=firstMemo((r,e,t)=>r.derive.staking.erasHistoric(t).pipe(switchMap(n=>r.derive.staking._stakerRewards([e],n,t))));function stakerRewardsMultiEras(r,e){return memo(r,(t,n)=>t.length&&n.length?e.derive.staking._stakerRewards(t,n,!1):of([]))}function stakerRewardsMulti(r,e){return memo(r,(t,n=!1)=>e.derive.staking.erasHistoric(n).pipe(switchMap(s=>e.derive.staking.stakerRewardsMultiEras(t,s))))}function _stakerSlashes(r,e){return memo(r,(t,n,s)=>{const i=e.registry.createType("AccountId",t).toString();return e.derive.staking._erasSlashes(n,s).pipe(map$1(a=>a.map(({era:o,nominators:c,validators:h})=>({era:o,total:c[i]||h[i]||e.registry.createType("Balance")}))))})}const stakerSlashes=erasHistoricApplyAccount("_stakerSlashes");function onBondedEvent(r){let e=Date.now();return r.query.system.events().pipe(map$1(t=>(e=t.filter(({event:n,phase:s})=>{try{return s.isApplyExtrinsic&&n.section==="staking"&&n.method==="Bonded"}catch{return!1}})?Date.now():e,e)),startWith(e),drr({skipTimeout:!0}))}function stashes(r,e){return memo(r,()=>onBondedEvent(e).pipe(switchMap(()=>e.query.staking.validators.keys()),map$1(t=>t.map(({args:[n]})=>n).filter(n=>n))))}function nextElected(r,e){return memo(r,()=>e.query.staking.erasStakers?e.derive.session.indexes().pipe(switchMap(({currentEra:t})=>e.query.staking.erasStakers.keys(t)),map$1(t=>t.map(({args:[,n]})=>n))):e.query.staking.currentElected())}function validators(r,e){return memo(r,()=>combineLatest([e.query.session?e.query.session.validators():of([]),e.query.staking?e.derive.staking.nextElected():of([])]).pipe(map$1(([t,n])=>({nextElected:n.length?n:t,validators:t}))))}const DEFAULT_FLAGS={withController:!0,withPrefs:!0};function waitingInfo(r,e){return memo(r,(t=DEFAULT_FLAGS)=>combineLatest([e.derive.staking.validators(),e.derive.staking.stashes()]).pipe(switchMap(([{nextElected:n},s])=>{const i=n.map(o=>o.toString()),a=s.filter(o=>!i.includes(o.toString()));return e.derive.staking.queryMulti(a,t).pipe(map$1(o=>({info:o,waiting:a})))})))}var staking=Object.freeze(Object.defineProperty({__proto__:null,accounts:accounts$1,account,currentPoints,_eraExposure,eraExposure,_erasExposure,erasExposure,erasHistoric,_erasPoints,erasPoints,_eraPrefs,eraPrefs,_erasPrefs,erasPrefs,_erasRewards,erasRewards,_eraSlashes,eraSlashes,_erasSlashes,erasSlashes,electedInfo,keys,keysMulti,overview,_ownExposures,ownExposure,ownExposures,_ownSlashes,ownSlash,ownSlashes,query,queryMulti,_stakerExposures,stakerExposures,stakerExposure,_stakerPoints,stakerPoints,_stakerPrefs,stakerPrefs,_stakerRewardsEras,_stakerRewards,stakerRewards,stakerRewardsMultiEras,stakerRewardsMulti,_stakerSlashes,stakerSlashes,stashes,nextElected,validators,waitingInfo},Symbol.toStringTag,{value:"Module"}));const members=members$4("technicalCommittee"),hasProposals=hasProposals$3("technicalCommittee"),proposal=proposal$3("technicalCommittee"),proposalCount=proposalCount$3("technicalCommittee"),proposalHashes=proposalHashes$3("technicalCommittee"),proposals$1=proposals$5("technicalCommittee"),prime=prime$3("technicalCommittee");var technicalCommittee=Object.freeze(Object.defineProperty({__proto__:null,members,hasProposals,proposal,proposalCount,proposalHashes,proposals:proposals$1,prime},Symbol.toStringTag,{value:"Module"}));function parseResult(r,{allIds:e,allProposals:t,approvalIds:n,councilProposals:s,proposalCount:i}){const a=[],o=[],c=s.filter(({proposal:h})=>h&&(r.tx.treasury.approveProposal.is(h)||r.tx.treasury.rejectProposal.is(h)));return e.forEach((h,p)=>{if(t[p].isSome){const x=c.filter(({proposal:U})=>U&&h.eq(U.args[0])).sort((U,D)=>U.proposal&&D.proposal?U.proposal.method.localeCompare(D.proposal.method):U.proposal?-1:1),A=n.some(U=>U.eq(h)),k={council:x,id:h,proposal:t[p].unwrap()};A?a.push(k):o.push(k)}}),{approvals:a,proposalCount:i,proposals:o}}function retrieveProposals(r,e,t){const n=[],s=e.toNumber();for(let a=0;a<s;a++)t.some(o=>o.eqn(a))||n.push(r.registry.createType("ProposalIndex",a));const i=[...n,...t];return combineLatest([r.query.treasury.proposals.multi(i),r.derive.council?r.derive.council.proposals():of([])]).pipe(map$1(([a,o])=>parseResult(r,{allIds:i,allProposals:a,approvalIds:t,councilProposals:o,proposalCount:e})))}function proposals(r,e){return memo(r,()=>e.query.treasury?combineLatest([e.query.treasury.proposalCount(),e.query.treasury.approvals()]).pipe(switchMap(([t,n])=>retrieveProposals(e,t,n))):of({approvals:[],proposalCount:e.registry.createType("ProposalIndex"),proposals:[]}))}var treasury=Object.freeze(Object.defineProperty({__proto__:null,proposals},Symbol.toStringTag,{value:"Module"}));function events(r,e){return memo(r,t=>combineLatest([e.rpc.chain.getBlock(t),e.queryAt(t).pipe(switchMap(n=>n.system.events()))]).pipe(map$1(([n,s])=>({block:n,events:s}))))}const FALLBACK_MAX_HASH_COUNT=250,FALLBACK_PERIOD=new BN(6*1e3),MAX_FINALITY_LAG=new BN(5),MORTAL_PERIOD=new BN(5*60*1e3);function latestNonce(r,e){return r.derive.balances.account(e).pipe(map$1(({accountNonce:t})=>t))}function nextNonce(r,e){var t;return(t=r.rpc.system)!==null&&t!==void 0&&t.accountNextIndex?r.rpc.system.accountNextIndex(e):latestNonce(r,e)}function signingHeader(r){return combineLatest([r.rpc.chain.getHeader().pipe(switchMap(e=>e.parentHash.isEmpty?of(e):r.rpc.chain.getHeader(e.parentHash))),r.rpc.chain.getFinalizedHead().pipe(switchMap(e=>r.rpc.chain.getHeader(e)))]).pipe(map$1(([e,t])=>e.number.unwrap().sub(t.number.unwrap()).gt(MAX_FINALITY_LAG)?e:t))}function signingInfo(r,e){return(t,n,s)=>combineLatest([isUndefined(n)?latestNonce(e,t):n===-1?nextNonce(e,t):of(e.registry.createType("Index",n)),isUndefined(s)||isNumber(s)&&s>0?signingHeader(e):of(null)]).pipe(map$1(([i,a])=>{var o,c,h,p;return{header:a,mortalLength:Math.min(((o=e.consts.system)===null||o===void 0||(c=o.blockHashCount)===null||c===void 0?void 0:c.toNumber())||FALLBACK_MAX_HASH_COUNT,MORTAL_PERIOD.div(((h=e.consts.babe)===null||h===void 0?void 0:h.expectedBlockTime)||((p=e.consts.timestamp)===null||p===void 0?void 0:p.minimumPeriod.muln(2))||FALLBACK_PERIOD).iadd(MAX_FINALITY_LAG).toNumber()),nonce:i}}))}var tx=Object.freeze(Object.defineProperty({__proto__:null,events,signingInfo},Symbol.toStringTag,{value:"Module"}));const derive={accounts:accounts$2,bagsList,balances,bounties,chain,contracts:contracts$1,council,crowdloan,democracy,elections,imOnline,membership,parachains,session,society,staking,technicalCommittee,treasury,tx},checks={bagsList:{instances:["voterList","bagsList"],methods:[],withDetect:!0},contracts:{instances:["contracts"],methods:[]},council:{instances:["council"],methods:[],withDetect:!0},crowdloan:{instances:["crowdloan"],methods:[]},democracy:{instances:["democracy"],methods:[]},elections:{instances:["phragmenElection","electionsPhragmen","elections","council"],methods:[],withDetect:!0},imOnline:{instances:["imOnline"],methods:[]},membership:{instances:["membership"],methods:[]},parachains:{instances:["parachains","registrar"],methods:[]},session:{instances:["session"],methods:[]},society:{instances:["society"],methods:[]},staking:{instances:["staking"],methods:["erasRewardPoints"]},technicalCommittee:{instances:["technicalCommittee"],methods:[],withDetect:!0},treasury:{instances:["treasury"],methods:[]}};function getModuleInstances(r,e,t){return r.registry.getModuleInstances(e,t)||[]}function injectFunctions(r,e,t){const n={},s=Object.keys(t),i=Object.keys(e.query),a=e.runtimeVersion.specName.toString(),o=k=>i.includes(k),c=k=>getModuleInstances(e,a,k).some(o),h=k=>U=>k.some(D=>i.includes(D)&&e.query[D][U]),p=k=>Object.keys(t[k]),x=(k,U)=>t[k][U](r,e),A=k=>!checks[k]||checks[k].instances.some(o)&&(!checks[k].methods.length||checks[k].methods.every(h(checks[k].instances)))||checks[k].withDetect&&checks[k].instances.some(c);for(let k=0;k<s.length;k++){const U=s[k];A(U)&&lazyDeriveSection(n,U,p,x)}return n}function getAvailableDerives(r,e,t={}){return Ve(Ve({},injectFunctions(r,e,derive)),injectFunctions(r,e,t))}function decorateDeriveSections(r,e){const t=a=>Object.keys(e[a]),n=(a,o)=>r(e[a][o]),s={},i=Object.keys(e);for(let a=0;a<i.length;a++)lazyDeriveSection(s,i[a],t,n);return s}const l$4=logger("api/util");function filterEvents(r,{block:{extrinsics:e,header:t}},n,s){for(const[i,a]of e.entries())if(a.hash.eq(r))return{events:n.filter(({phase:o})=>o.isApplyExtrinsic&&o.asApplyExtrinsic.eqn(i)),txIndex:i};if(s.isInBlock){const i=e.map(a=>a.hash.toHex());l$4.warn(`block ${t.hash.toHex()}: Unable to find extrinsic ${r.toHex()} inside ${i.join(", ")}`)}return{}}function isKeyringPair(r){return isFunction$3(r.sign)}const recordIdentity=r=>r;function filterAndApply(r,e,t,n){return r.filter(({event:s})=>e===s.section&&t.includes(s.method)).map(s=>n(s))}function getDispatchError({event:{data:[r]}}){return r}function getDispatchInfo({event:{data:r,method:e}}){return e==="ExtrinsicSuccess"?r[0]:r[1]}function extractError(r=[]){return filterAndApply(r,"system",["ExtrinsicFailed"],getDispatchError)[0]}function extractInfo(r=[]){return filterAndApply(r,"system",["ExtrinsicFailed","ExtrinsicSuccess"],getDispatchInfo)[0]}class SubmittableResult{constructor({dispatchError:e,dispatchInfo:t,events:n,internalError:s,status:i,txHash:a,txIndex:o}){this.dispatchError=e||extractError(n),this.dispatchInfo=t||extractInfo(n),this.events=n||[],this.internalError=s,this.status=i,this.txHash=a,this.txIndex=o}get isCompleted(){return this.isError||this.status.isInBlock||this.status.isFinalized}get isError(){return this.status.isDropped||this.status.isFinalityTimeout||this.status.isInvalid||this.status.isUsurped}get isFinalized(){return this.status.isFinalized}get isInBlock(){return this.status.isInBlock}get isWarning(){return this.status.isRetracted}filterRecords(e,t){return filterAndApply(this.events,e,Array.isArray(t)?t:[t],recordIdentity)}findRecord(e,t){return this.filterRecords(e,t)[0]}toHuman(e){var t,n,s;return{dispatchError:(t=this.dispatchError)===null||t===void 0?void 0:t.toHuman(),dispatchInfo:(n=this.dispatchInfo)===null||n===void 0?void 0:n.toHuman(),events:this.events.map(i=>i.toHuman(e)),internalError:(s=this.internalError)===null||s===void 0?void 0:s.message.toString(),status:this.status.toHuman(e)}}}const identity=r=>r;function makeEraOptions(r,e,t,{header:n,mortalLength:s,nonce:i}){return n?makeSignOptions(r,t,{blockHash:n.hash,era:e.createTypeUnsafe("ExtrinsicEra",[{current:n.number,period:t.era||s}]),nonce:i}):(assert$1(t.era===0||!isUndefined(t.blockHash),"Expected blockHash to be passed alongside non-immortal era options"),isNumber(t.era)&&(delete t.era,delete t.blockHash),makeSignOptions(r,t,{nonce:i}))}function makeSignAndSendOptions(r,e){let t={};return isFunction$3(r)?e=r:t=objectSpread({},r),[t,e]}function makeSignOptions(r,e,t){return objectSpread({blockHash:r.genesisHash,genesisHash:r.genesisHash},e,t,{runtimeVersion:r.runtimeVersion,signedExtensions:r.registry.signedExtensions,version:r.extrinsicType})}function optionsOrNonce(r={}){return isBn(r)||isNumber(r)?{nonce:r}:r}function createClass({api:r,apiType:e,blockHash:t,decorateMethod:n}){var a,o,c,h,p,x,A,k;const s=r.registry.createClass("Extrinsic");class i extends s{constructor(F,q){super(F,q,{version:r.extrinsicType});_(this,a,void 0);_(this,o,identity);_(this,c,(F,q)=>{const ae=isKeyringPair(F)?F.address:F.toString(),Y=optionsOrNonce(q);return r.derive.tx.signingInfo(ae,Y.nonce,Y.era).pipe(first(),mergeMap(async de=>{const fe=makeEraOptions(r,this.registry,Y,de);let be=-1;return isKeyringPair(F)?this.sign(F,fe):be=await b(this,A).call(this,ae,fe,de.header),{options:fe,updateId:be}}))});_(this,h,(F,q)=>{if(!q.isFinalized&&!q.isInBlock)return of(b(this,o).call(this,new SubmittableResult({status:q,txHash:F})));const ae=q.isInBlock?q.asInBlock:q.asFinalized;return r.derive.tx.events(ae).pipe(map$1(({block:Y,events:de})=>b(this,o).call(this,new SubmittableResult(Je(Ve({},filterEvents(F,Y,de,q)),{status:q,txHash:F})))),catchError(Y=>of(b(this,o).call(this,new SubmittableResult({internalError:Y,status:q,txHash:F})))))});_(this,p,F=>r.rpc.author.submitExtrinsic(this).pipe(tap(q=>{b(this,k).call(this,q,F)})));_(this,x,F=>{const q=this.hash;return r.rpc.author.submitAndWatchExtrinsic(this).pipe(switchMap(ae=>b(this,h).call(this,q,ae)),tap(ae=>{b(this,k).call(this,ae,F)}))});_(this,A,async(F,q,ae)=>{const Y=q.signer||r.signer;assert$1(Y,"No signer specified, either via api.setSigner or via sign options. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.");const de=this.registry.createTypeUnsafe("SignerPayload",[objectSpread({},q,{address:F,blockNumber:ae?ae.number:0,method:this.method})]);let fe;if(isFunction$3(Y.signPayload))fe=await Y.signPayload(de.toPayload());else if(isFunction$3(Y.signRaw))fe=await Y.signRaw(de.toRaw());else throw new Error("Invalid signer interface, it should implement either signPayload or signRaw (or both)");return super.addSignature(F,fe.signature,de.toPayload()),fe.id});_(this,k,(F,q)=>{if(q&&q.updateId!==-1){const{options:ae,updateId:Y}=q,de=ae.signer||r.signer;de&&isFunction$3(de.update)&&de.update(Y,F)}});Q(this,a,e==="rxjs")}dryRun(F,q){return t||isString(q)||isU8a(q)?n(()=>r.rpc.system.dryRun(this.toHex(),t||q)):n(()=>b(this,c).call(this,F,q).pipe(switchMap(()=>r.rpc.system.dryRun(this.toHex()))))()}paymentInfo(F,q){if(t||isString(q)||isU8a(q))return n(()=>r.rpc.payment.queryInfo(this.toHex(),t||q));const[ae]=makeSignAndSendOptions(q),Y=isKeyringPair(F)?F.address:F.toString();return n(()=>r.derive.tx.signingInfo(Y,ae.nonce,ae.era).pipe(first(),switchMap(de=>{const fe=makeEraOptions(r,this.registry,ae,de),be=makeSignOptions(r,fe,{});return r.rpc.payment.queryInfo(this.isSigned?r.tx(this).signFake(Y,be).toHex():this.signFake(Y,be).toHex())})))()}send(F){const q=r.hasSubscriptions&&(b(this,a)||!!F);return n(q?b(this,x):b(this,p))(F)}sign(F,q){return super.sign(F,makeSignOptions(r,optionsOrNonce(q),{})),this}signAsync(F,q){return n(()=>b(this,c).call(this,F,q).pipe(mapTo(this)))()}signAndSend(F,q,ae){const[Y,de]=makeSignAndSendOptions(q,ae),fe=r.hasSubscriptions&&(b(this,a)||!!de);return n(()=>b(this,c).call(this,F,Y).pipe(switchMap(be=>fe?b(this,x).call(this,be):b(this,p).call(this,be))))(de)}withResultTransform(F){return Q(this,o,F),this}}return a=new WeakMap,o=new WeakMap,c=new WeakMap,h=new WeakMap,p=new WeakMap,x=new WeakMap,A=new WeakMap,k=new WeakMap,i}function createSubmittable(r,e,t,n,s){const i=createClass({api:e,apiType:r,blockHash:s,decorateMethod:t});return a=>new i(n||e.registry,a)}function findCall(r,e){return r.findMetaCall(u8aToU8a(e))}function findError(r,e){return r.findMetaError(u8aToU8a(e))}const typesChain={};var typesChain$1=typesChain;const sharedTypes$5={AnchorData:{anchoredBlock:"u64",docRoot:"H256",id:"H256"},DispatchErrorModule:"DispatchErrorModuleU8",PreCommitData:{expirationBlock:"u64",identity:"H256",signingRoot:"H256"},Fee:{key:"Hash",price:"Balance"},MultiAccountData:{deposit:"Balance",depositor:"AccountId",signatories:"Vec<AccountId>",threshold:"u16"},ChainId:"u8",DepositNonce:"u64",ResourceId:"[u8; 32]","chainbridge::ChainId":"u8",RegistryId:"H160",TokenId:"U256",AssetId:{registryId:"RegistryId",tokenId:"TokenId"},AssetInfo:{metadata:"Bytes"},MintInfo:{anchorId:"Hash",proofs:"Vec<ProofMint>",staticHashes:"[Hash; 3]"},Proof:{leafHash:"H256",sortedHashes:"H256"},ProofMint:{hashes:"Vec<Hash>",property:"Bytes",salt:"[u8; 32]",value:"Bytes"},RegistryInfo:{fields:"Vec<Bytes>",ownerCanBurn:"bool"},ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","NonProxy"]}},standaloneTypes=objectSpread({},sharedTypes$5,{AccountInfo:"AccountInfoWithRefCount",Address:"LookupSource",LookupSource:"IndicesLookupSource",Multiplier:"Fixed64",RefCount:"RefCountTo259"}),versioned$8=[{minmax:[240,243],types:objectSpread({},standaloneTypes,{ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","Vesting"]}})},{minmax:[244,999],types:objectSpread({},standaloneTypes)},{minmax:[1e3,void 0],types:objectSpread({},sharedTypes$5)}];var centrifugeChain=versioned$8;const sharedTypes$4={CompactAssignments:"CompactAssignmentsWith24",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith24",Keys:"SessionKeys6",ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","IdentityJudgement","CancelProxy","Auction"]}},addrIndicesTypes={AccountInfo:"AccountInfoWithRefCount",Address:"LookupSource",CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith16",Keys:"SessionKeys5",LookupSource:"IndicesLookupSource",ValidatorPrefs:"ValidatorPrefsWithCommission"},addrAccountIdTypes$2={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith16",Keys:"SessionKeys5",LookupSource:"AccountId",ValidatorPrefs:"ValidatorPrefsWithCommission"},versioned$7=[{minmax:[1019,1031],types:objectSpread({},addrIndicesTypes,{BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchError:"DispatchErrorTo198",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",IdentityInfo:"IdentityInfoTo198",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",SlashingSpans:"SlashingSpansTo204",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"})},{minmax:[1032,1042],types:objectSpread({},addrIndicesTypes,{BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",SlashingSpans:"SlashingSpansTo204",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"})},{minmax:[1043,1045],types:objectSpread({},addrIndicesTypes,{BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"})},{minmax:[1046,1050],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",StakingLedger:"StakingLedgerTo223",Weight:"u32"})},{minmax:[1051,1054],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",StakingLedger:"StakingLedgerTo240",Weight:"u32"})},{minmax:[1055,1056],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",StakingLedger:"StakingLedgerTo240",Weight:"u32"})},{minmax:[1057,1061],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"})},{minmax:[1062,2012],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2,{CompactAssignments:"CompactAssignmentsTo257",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"})},{minmax:[2013,2022],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2,{CompactAssignments:"CompactAssignmentsTo257",RefCount:"RefCountTo259"})},{minmax:[2023,2024],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2,{RefCount:"RefCountTo259"})},{minmax:[2025,2027],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2)},{minmax:[2028,2029],types:objectSpread({},sharedTypes$4,{AccountInfo:"AccountInfoWithDualRefCount",CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16"})},{minmax:[2030,9e3],types:objectSpread({},sharedTypes$4,{CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16"})},{minmax:[9010,9099],types:objectSpread({},sharedTypes$4,mapXcmTypes("V0"))},{minmax:[9100,9105],types:objectSpread({},sharedTypes$4,mapXcmTypes("V1"))},{minmax:[9106,void 0],types:{}}];var kusama$1=versioned$7;const versioned$6=[{minmax:[0,void 0],types:{}}];var node=versioned$6;const versioned$5=[{minmax:[0,void 0],types:{}}];var nodeTemplate=versioned$5;const sharedTypes$3={CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith16",Keys:"SessionKeys6",ProxyType:{_enum:{Any:0,NonTransfer:1,Governance:2,Staking:3,UnusedSudoBalances:4,IdentityJudgement:5,CancelProxy:6,Auction:7}}},addrAccountIdTypes$1={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",DispatchErrorModule:"DispatchErrorModuleU8",Keys:"SessionKeys5",LookupSource:"AccountId",ValidatorPrefs:"ValidatorPrefsWithCommission"},versioned$4=[{minmax:[0,12],types:objectSpread({},sharedTypes$3,addrAccountIdTypes$1,{CompactAssignments:"CompactAssignmentsTo257",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"})},{minmax:[13,22],types:objectSpread({},sharedTypes$3,addrAccountIdTypes$1,{CompactAssignments:"CompactAssignmentsTo257",RefCount:"RefCountTo259"})},{minmax:[23,24],types:objectSpread({},sharedTypes$3,addrAccountIdTypes$1,{RefCount:"RefCountTo259"})},{minmax:[25,27],types:objectSpread({},sharedTypes$3,addrAccountIdTypes$1)},{minmax:[28,29],types:objectSpread({},sharedTypes$3,{AccountInfo:"AccountInfoWithDualRefCount"})},{minmax:[30,9109],types:objectSpread({},sharedTypes$3)},{minmax:[9110,void 0],types:{}}];var polkadot$1=versioned$4;const sharedTypes$2={DispatchErrorModule:"DispatchErrorModuleU8",FullIdentification:"()",Keys:"SessionKeys7B"},versioned$3=[{minmax:[0,200],types:objectSpread({},sharedTypes$2,{AccountInfo:"AccountInfoWithDualRefCount",Address:"AccountId",LookupSource:"AccountId"})},{minmax:[201,214],types:objectSpread({},sharedTypes$2,{AccountInfo:"AccountInfoWithDualRefCount"})},{minmax:[215,228],types:objectSpread({},sharedTypes$2,{Keys:"SessionKeys6"})},{minmax:[229,9099],types:objectSpread({},sharedTypes$2,mapXcmTypes("V0"))},{minmax:[9100,9105],types:objectSpread({},sharedTypes$2,mapXcmTypes("V1"))},{minmax:[9106,void 0],types:{}}];var rococo=versioned$3;const versioned$2=[{minmax:[0,void 0],types:{}}];var shell=versioned$2;const sharedTypes$1={DispatchErrorModule:"DispatchErrorModuleU8",TAssetBalance:"u128",ProxyType:{_enum:["Any","NonTransfer","CancelProxy","Assets","AssetOwner","AssetManager","Staking"]}},versioned$1=[{minmax:[0,3],types:objectSpread({},sharedTypes$1,mapXcmTypes("V0"))},{minmax:[4,5],types:objectSpread({},sharedTypes$1,mapXcmTypes("V1"))},{minmax:[500,void 0],types:{}}];var statemint=versioned$1;const sharedTypes={CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith16",Keys:"SessionKeys6",ProxyType:{_enum:["Any","NonTransfer","Staking","SudoBalances","IdentityJudgement","CancelProxy"]}},addrAccountIdTypes={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",LookupSource:"AccountId",Keys:"SessionKeys5",RawSolution:"RawSolutionWith16",ValidatorPrefs:"ValidatorPrefsWithCommission"},versioned=[{minmax:[1,2],types:objectSpread({},sharedTypes,addrAccountIdTypes,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",Weight:"u32"})},{minmax:[3,22],types:objectSpread({},sharedTypes,addrAccountIdTypes,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"})},{minmax:[23,42],types:objectSpread({},sharedTypes,addrAccountIdTypes,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",RefCount:"RefCountTo259"})},{minmax:[43,44],types:objectSpread({},sharedTypes,addrAccountIdTypes,{DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",RefCount:"RefCountTo259"})},{minmax:[45,47],types:objectSpread({},sharedTypes,addrAccountIdTypes)},{minmax:[48,49],types:objectSpread({},sharedTypes,{AccountInfo:"AccountInfoWithDualRefCount"})},{minmax:[50,9099],types:objectSpread({},sharedTypes,mapXcmTypes("V0"))},{minmax:[9100,9105],types:objectSpread({},sharedTypes,mapXcmTypes("V1"))},{minmax:[9106,void 0],types:{}}];var westend$1=versioned;const typesSpec={"centrifuge-chain":centrifugeChain,kusama:kusama$1,node,"node-template":nodeTemplate,polkadot:polkadot$1,rococo,shell,statemine:statemint,statemint,westend:westend$1,westmint:statemint};var typesSpec$1=typesSpec;const upgrades$4=[[0,1020],[26669,1021],[38245,1022],[54248,1023],[59659,1024],[67651,1025],[82191,1027],[83238,1028],[101503,1029],[203466,1030],[295787,1031],[461692,1032],[504329,1033],[569327,1038],[587687,1039],[653183,1040],[693488,1042],[901442,1045],[1375086,1050],[1445458,1051],[1472960,1052],[1475648,1053],[1491596,1054],[1574408,1055],[2064961,1058],[2201991,1062],[2671528,2005],[2704202,2007],[2728002,2008],[2832534,2011],[2962294,2012],[324e4,2013],[3274408,2015],[3323565,2019],[3534175,2022],[3860281,2023],[4143129,2024],[4401242,2025],[4841367,2026],[5961600,2027],[6137912,2028],[6561855,2029],[7100891,2030],[7468792,9010],[7668600,9030],[7812476,9040],[8010981,9050],[8073833,9070],[8555825,9080],[8945245,9090],[9611377,9100],[9625129,9111],[9866422,9122],[10403784,9130],[10960765,9150],[11006614,9151],[11404482,9160],[11601803,9170],[12008022,9180],[12405451,9190],[12665416,9200],[12909508,9220],[13109752,9230]];var kusama=upgrades$4;const upgrades$3=[[0,0],[29231,1],[188836,5],[199405,6],[214264,7],[244358,8],[303079,9],[314201,10],[342400,11],[443963,12],[528470,13],[687751,14],[746085,15],[787923,16],[799302,17],[1205128,18],[1603423,23],[1733218,24],[2005673,25],[2436698,26],[3613564,27],[3899547,28],[4345767,29],[4876134,30],[5661442,9050],[6321619,9080],[6713249,9090],[7217907,9100],[7229126,9110],[7560558,9122],[8115869,9140],[8638103,9151],[9280179,9170],[9738717,9180],[10156856,9190],[10458576,9200],[10655116,9220]];var polkadot=upgrades$3;const upgrades$2=[[214356,4],[392764,7],[409740,8],[809976,20],[877581,24],[879238,25],[889472,26],[902937,27],[932751,28],[991142,29],[1030162,31],[1119657,32],[1199282,33],[1342534,34],[1392263,35],[1431703,36],[1433369,37],[1490972,41],[2087397,43],[2316688,44],[2549864,45],[3925782,46],[3925843,47],[4207800,48],[4627944,49],[5124076,50],[5478664,900],[5482450,9e3],[5584305,9010],[5784566,9030],[5879822,9031],[5896856,9032],[5897316,9033],[6117927,9050],[6210274,9070],[6379314,9080],[6979141,9090],[7568453,9100],[7766394,9111],[7911691,9120],[7968866,9121],[7982889,9122],[8514322,9130],[9091726,9140],[9091774,9150],[9406726,9160],[9921066,9170],[10007115,9180],[10480973,9190],[10578091,9200],[10678509,9210],[10811001,9220],[11096116,9230],[11409279,9250]];var westend=upgrades$2;const allKnown={kusama,polkadot,westend},NET_EXTRA={westend:{genesisHash:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"]}};function checkOrder(r,e){const t=e.filter((n,s)=>{const i=e[s-1];return s===0?!1:n[0]<=i[0]||n[1]<=i[1]});if(t.length)throw new Error(`${r}: Mismatched upgrade ordering: ${stringify(t)}`);return e}function mapRaw([r,e]){const t=selectableNetworks.find(n=>n.network===r)||NET_EXTRA[r];if(!t)throw new Error(`Unable to find info for chain ${r}`);return{genesisHash:hexToU8a(t.genesisHash[0]),network:r,versions:checkOrder(r,e).map(([n,s])=>({blockNumber:new BN(n),specVersion:new BN(s)}))}}const upgrades=Object.entries(allKnown).map(mapRaw);var upgrades$1=upgrades;function withNames(r,e,t){return t(r.toString(),e.toString())}function filterVersions(r=[],e){return r.filter(({minmax:[t,n]})=>(t==null||e>=t)&&(n==null||e<=n)).reduce((t,{types:n})=>objectSpread(t,n),{})}function getSpecExtensions({knownTypes:r},e,t){return withNames(e,t,(n,s)=>{var i,a,o,c,h,p;return objectSpread({},(i=r.typesBundle)===null||i===void 0||(a=i.spec)===null||a===void 0||(o=a[s])===null||o===void 0?void 0:o.signedExtensions,(c=r.typesBundle)===null||c===void 0||(h=c.chain)===null||h===void 0||(p=h[n])===null||p===void 0?void 0:p.signedExtensions)})}function getSpecTypes({knownTypes:r},e,t,n){const s=bnToBn(n).toNumber();return withNames(e,t,(i,a)=>{var o,c,h,p,x,A,k,U;return objectSpread({},filterVersions(typesSpec$1[a],s),filterVersions(typesChain$1[i],s),filterVersions((o=r.typesBundle)===null||o===void 0||(c=o.spec)===null||c===void 0||(h=c[a])===null||h===void 0?void 0:h.types,s),filterVersions((p=r.typesBundle)===null||p===void 0||(x=p.chain)===null||x===void 0||(A=x[i])===null||A===void 0?void 0:A.types,s),(k=r.typesSpec)===null||k===void 0?void 0:k[a],(U=r.typesChain)===null||U===void 0?void 0:U[i],r.types)})}function getSpecHasher({knownTypes:r},e,t){return withNames(e,t,(n,s)=>{var i,a,o,c,h,p;return r.hasher||((i=r.typesBundle)===null||i===void 0||(a=i.chain)===null||a===void 0||(o=a[n])===null||o===void 0?void 0:o.hasher)||((c=r.typesBundle)===null||c===void 0||(h=c.spec)===null||h===void 0||(p=h[s])===null||p===void 0?void 0:p.hasher)||null})}function getSpecRpc({knownTypes:r},e,t){return withNames(e,t,(n,s)=>{var i,a,o,c,h,p;return objectSpread({},(i=r.typesBundle)===null||i===void 0||(a=i.spec)===null||a===void 0||(o=a[s])===null||o===void 0?void 0:o.rpc,(c=r.typesBundle)===null||c===void 0||(h=c.chain)===null||h===void 0||(p=h[n])===null||p===void 0?void 0:p.rpc)})}function getSpecRuntime({knownTypes:r},e,t){return withNames(e,t,(n,s)=>{var i,a,o,c,h,p;return objectSpread({},(i=r.typesBundle)===null||i===void 0||(a=i.spec)===null||a===void 0||(o=a[s])===null||o===void 0?void 0:o.runtime,(c=r.typesBundle)===null||c===void 0||(h=c.chain)===null||h===void 0||(p=h[n])===null||p===void 0?void 0:p.runtime)})}function getSpecAlias({knownTypes:r},e,t){return withNames(e,t,(n,s)=>{var i,a,o,c,h,p;return objectSpread({},(i=r.typesBundle)===null||i===void 0||(a=i.spec)===null||a===void 0||(o=a[s])===null||o===void 0?void 0:o.alias,(c=r.typesBundle)===null||c===void 0||(h=c.chain)===null||h===void 0||(p=h[n])===null||p===void 0?void 0:p.alias,r.typesAlias)})}function getUpgradeVersion(r,e){const t=upgrades$1.find(n=>r.eq(n.genesisHash));return t?[t.versions.reduce((n,s)=>e.gt(s.blockNumber)?s:n,void 0),t.versions.find(n=>e.lte(n.blockNumber))]:[void 0,void 0]}const l$3=logger("api/augment");function logLength(r,e,t=[]){return e.length?` ${e.length} ${r}${t.length?" and":""}`:""}function logValues(r,e){return e.length?`
	${r.padStart(7)}: ${e.sort().join(", ")}`:""}function warn(r,e,[t,n]){(t.length||n.length)&&l$3.warn(`api.${r}: Found${logLength("added",t,n)}${logLength("removed",n)} ${e}:${logValues("added",t)}${logValues("removed",n)}`)}function findSectionExcludes(r,e){return r.filter(t=>!e.includes(t))}function findSectionIncludes(r,e){return r.filter(t=>e.includes(t))}function extractSections(r,e){const t=Object.keys(r),n=Object.keys(e);return[findSectionExcludes(t,n),findSectionExcludes(n,t)]}function findMethodExcludes(r,e){const t=Object.keys(r),n=findSectionIncludes(Object.keys(e),t),s=[];for(let i=0;i<n.length;i++){const a=n[i],o=Object.keys(r[a]),c=Object.keys(e[a]);s.push(...c.filter(h=>!o.includes(h)).map(h=>`${a}.${h}`))}return s}function extractMethods(r,e){return[findMethodExcludes(e,r),findMethodExcludes(r,e)]}function lazySection(r,e){const t=s=>r[s],n=Object.keys(r);for(let s=0;s<n.length;s++){const i=n[s];Object.prototype.hasOwnProperty.call(e,i)||lazyMethod(e,i,t)}}function augmentObject(r,e,t,n=!1){n&&objectClear(t),r&&Object.keys(t).length&&(warn(r,"modules",extractSections(e,t)),warn(r,"calls",extractMethods(e,t)));const s=Object.keys(e);for(let i=0;i<s.length;i++){const a=s[i];t[a]||(t[a]={}),lazySection(e[a],t[a])}return t}function sig({lookup:r},{method:e,section:t},n){return`${t}.${e}(${n.map(s=>r.getTypeDef(s).type).join(", ")})`}function extractStorageArgs(r,e,t){const n=t.filter(s=>!isUndefined(s));if(e.meta.type.isPlain)assert$1(n.length===0,()=>`${sig(r,e,[])} does not take any arguments, ${n.length} found`);else{const{hashers:s,key:i}=e.meta.type.asMap,a=s.length===1?[i]:r.lookup.getSiType(i).def.asTuple.map(o=>o);assert$1(n.length===a.length,()=>`${sig(r,e,a)} is a map, requiring ${a.length} arguments, ${n.length} found`)}return[e,n]}var Ar;class Events{constructor(){_(this,Ar,new EventEmitter)}emit(e,...t){return b(this,Ar).emit(e,...t)}on(e,t){return b(this,Ar).on(e,t),this}off(e,t){return b(this,Ar).removeListener(e,t),this}once(e,t){return b(this,Ar).once(e,t),this}}Ar=new WeakMap;const PAGE_SIZE_K=1e3,PAGE_SIZE_V=250,PAGE_SIZE_Q=50,l$2=logger("api/init");let instanceCounter=0;function getAtQueryFn(r,{method:e,section:t}){return assertReturn(r.rx.query[t]&&r.rx.query[t][e],()=>`query.${t}.${e} is not available in this version of the metadata`)}var Ot,Ut,fs,Gn;class Decorate extends Events{constructor(t,n,s){var i;super();_(this,Ot,void 0);_(this,Ut,void 0);_(this,fs,[]);_(this,Gn,[]);Ae(this,"__phantom",new BN(0));Ae(this,"_call",{});Ae(this,"_consts",{});Ae(this,"_errors",{});Ae(this,"_events",{});Ae(this,"_extrinsicType",4);Ae(this,"_isReady",!1);Ae(this,"_query",{});Ae(this,"_runtimeMap",{});Ae(this,"_rx",{consts:{},query:{},tx:{}});Ae(this,"_rxDecorateMethod",t=>t);Q(this,Ot,`${++instanceCounter}`),Q(this,Ut,((i=t.source)===null||i===void 0?void 0:i.registry)||t.registry||new TypeRegistry),this._rx.queryAt=(o,c)=>from(this.at(o,c)).pipe(map$1(h=>h.rx.query)),this._rx.registry=b(this,Ut);const a=t.source?t.source._rpcCore.provider.clone():t.provider||new WsProvider;this._decorateMethod=s,this._options=t,this._type=n,this._rpcCore=new RpcCore(b(this,Ot),b(this,Ut),a,this._options.rpc),this._isConnected=new BehaviorSubject(this._rpcCore.provider.isConnected),this._rx.hasSubscriptions=this._rpcCore.provider.hasSubscriptions}get registry(){return b(this,Ut)}createType(t,...n){return b(this,Ut).createType(t,...n)}registerTypes(t){t&&b(this,Ut).register(t)}get hasSubscriptions(){return this._rpcCore.provider.hasSubscriptions}get supportMulti(){return this._rpcCore.provider.hasSubscriptions||!!this._rpcCore.state.queryStorageAt}_emptyDecorated(t,n){return{call:{},consts:{},errors:{},events:{},query:{},registry:t,rx:{query:{}},tx:createSubmittable(this._type,this._rx,this._decorateMethod,t,n)}}_createDecorated(t,n,s,i){s||(s=this._emptyDecorated(t.registry,i)),(n||!t.decoratedMeta)&&(t.decoratedMeta=expandMetadata(t.registry,t.metadata));const a=this._decorateCalls(t,this._decorateMethod,i),o=this._decorateStorage(t.decoratedMeta,this._decorateMethod,i),c=this._decorateStorage(t.decoratedMeta,this._rxDecorateMethod,i);return augmentObject("consts",t.decoratedMeta.consts,s.consts,n),augmentObject("errors",t.decoratedMeta.errors,s.errors,n),augmentObject("events",t.decoratedMeta.events,s.events,n),augmentObject("query",o,s.query,n),augmentObject("query",c,s.rx.query,n),augmentObject("call",a,s.call,n),s.findCall=h=>findCall(t.registry,h),s.findError=h=>findError(t.registry,h),s.queryMulti=i?this._decorateMultiAt(s,this._decorateMethod,i):this._decorateMulti(this._decorateMethod),s.runtimeVersion=t.runtimeVersion,{decoratedApi:s,decoratedMeta:t.decoratedMeta}}_injectMetadata(t,n=!1){(n||!t.decoratedApi)&&(t.decoratedApi=this._emptyDecorated(t.registry));const{decoratedApi:s,decoratedMeta:i}=this._createDecorated(t,n,t.decoratedApi);this._call=s.call,this._consts=s.consts,this._errors=s.errors,this._events=s.events,this._query=s.query,this._rx.query=s.rx.query;const a=this._decorateExtrinsics(i,this._decorateMethod),o=this._decorateExtrinsics(i,this._rxDecorateMethod);n||!this._extrinsics?(this._extrinsics=a,this._rx.tx=o):(augmentObject("tx",a,this._extrinsics,!1),augmentObject(null,o,this._rx.tx,!1)),augmentObject(null,i.consts,this._rx.consts,n),this.emit("decorated")}injectMetadata(t,n,s){this._injectMetadata({metadata:t,registry:s||b(this,Ut),runtimeVersion:b(this,Ut).createType("RuntimeVersionPartial")},n)}_decorateFunctionMeta(t,n){return n.meta=t.meta,n.method=t.method,n.section=t.section,n.toJSON=t.toJSON,t.callIndex&&(n.callIndex=t.callIndex),n}_filterRpc(t,n){Object.keys(n).length!==0&&(this._rpcCore.addUserInterfaces(n),this._decorateRpc(this._rpcCore,this._decorateMethod,this._rpc),this._decorateRpc(this._rpcCore,this._rxDecorateMethod,this._rx.rpc));const s={};for(let a=0;a<t.length;a++){const[o]=t[a].split("_");s[o]=!0}const i=Object.keys(s);for(let a=0;a<i.length;a++){const o=stringUpperFirst(i[a]),c=`${o}Api`;this._runtimeMap[blake2AsHex(o,64)]=o,this._runtimeMap[blake2AsHex(c,64)]=c}this._filterRpcMethods(t)}_filterRpcMethods(t){const n=t.length!==0,s=[...this._rpcCore.mapping.entries()],i=[];for(let c=0;c<s.length;c++){const[,{alias:h,endpoint:p,method:x,pubsub:A,section:k}]=s[c];i.push(`${k}_${x}`),A&&(i.push(`${k}_${A[1]}`),i.push(`${k}_${A[2]}`)),h&&i.push(...h),p&&i.push(p)}const a=c=>!i.includes(c),o=t.filter(a);o.length&&l$2.warn(`RPC methods not decorated: ${o.join(", ")}`);for(let c=0;c<s.length;c++){const[h,{method:p,section:x}]=s[c];n&&!t.includes(h)&&h!=="rpc_methods"&&this._rpc[x]&&(delete this._rpc[x][p],delete this._rx.rpc[x][p])}}_decorateRpc(t,n,s={}){const i=s,a=(o,c)=>{const h=t[o][c],p=n(h,{methodName:c});return p.meta=h.meta,p.raw=n(h.raw,{methodName:c}),p};for(let o=0;o<t.sections.length;o++){const c=t.sections[o];if(!Object.prototype.hasOwnProperty.call(i,c)){const h=Object.keys(t[c]),p=x=>a(c,x);for(let x=0;x<h.length;x++){const A=h[x];(this.hasSubscriptions||!(A.startsWith("subscribe")||A.startsWith("unsubscribe")))&&(Object.prototype.hasOwnProperty.call(i,c)||(i[c]={}),lazyMethod(i[c],A,p))}}}return i}_addRuntimeDef(t,n){if(!n)return;const s=Object.entries(n);for(let i=0;i<s.length;i++){const[a,o]=s[i];if(t[a])for(let c=0;c<o.length;c++){const h=o[c],p=t[a].find(({version:x})=>h.version===x);p?objectSpread(p.methods,h.methods):t[a].push(h)}else t[a]=o}}_getRuntimeDefs(t,n,s=""){const i={},a=Object.values(typeDefinitions);for(let o=0;o<a.length;o++)this._addRuntimeDef(i,a[o].runtime);return this._addRuntimeDef(i,getSpecRuntime(t,s,n)),this._addRuntimeDef(i,this._options.runtime),Object.entries(i)}_decorateCalls({registry:t,runtimeVersion:{apis:n,specName:s}},i,a){const o={},c={},h={},p=this._getRuntimeDefs(t,s,this._runtimeChain),x=[];for(let F=0;F<p.length;F++){const[q,ae]=p[F],Y=blake2AsHex(q,64),de=n.find(([fe])=>fe.eq(Y));if(h[Y]=!0,de){const fe=ae.map(({version:Ie})=>Ie).sort(),be=ae.find(({version:Ie})=>de[1].eq(Ie));if(be){const Ie=stringCamelCase(q),Be=Object.entries(be.methods);if(Be.length){c[Ie]||(c[Ie]={});for(let Ue=0;Ue<Be.length;Ue++){const[re,ee]=Be[Ue],K=stringCamelCase(re);c[Ie][K]=objectSpread({method:K,name:`${q}_${re}`,section:Ie,sectionHash:Y},ee)}}}else x.push(`${q}/${de[1].toString()} (${fe.join("/")} known)`)}}const A=n.map(([F,q])=>[F.toHex(),q.toString()]).filter(([F])=>!h[F]).map(([F,q])=>`${this._runtimeMap[F]||F}/${q}`);x.length&&l$2.warn(`Not decorating runtime apis without matching versions: ${x.join(", ")}`),A.length&&l$2.warn(`Not decorating unknown runtime apis: ${A.join(", ")}`);const k=a?(F,q)=>this._rpcCore.state.call(F,q,a):(F,q)=>this._rpcCore.state.call(F,q),U=F=>lazyMethods({},Object.keys(c[F]),q=>this._decorateCall(t,c[F][q],k,i)),D=Object.keys(c);for(let F=0;F<D.length;F++)lazyMethod(o,D[F],U);return o}_decorateCall(t,n,s,i){const a=i((...o)=>{if(o.length!==n.params.length)throw new Error(`${n.name}:: Expected ${n.params.length} arguments, found ${o.length}`);const c=t.createType("Raw",u8aConcatStrict(o.map((h,p)=>t.createTypeUnsafe(n.params[p].type,[h]).toU8a())));return s(n.name,c).pipe(map$1(h=>t.createTypeUnsafe(n.type,[h])))});return a.meta=n,a}_decorateMulti(t){return t(n=>(this.hasSubscriptions?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt)(n.map(s=>Array.isArray(s)?s[0].creator.meta.type.isPlain?[s[0].creator]:s[0].creator.meta.type.asMap.hashers.length===1?[s[0].creator,s.slice(1)]:[s[0].creator,...s.slice(1)]:[s.creator])))}_decorateMultiAt(t,n,s){return n(i=>this._rpcCore.state.queryStorageAt(i.map(a=>{if(Array.isArray(a)){const{creator:o}=getAtQueryFn(t,a[0].creator);return o.meta.type.isPlain?[o]:o.meta.type.asMap.hashers.length===1?[o,a.slice(1)]:[o,...a.slice(1)]}return[getAtQueryFn(t,a.creator).creator]}),s))}_decorateExtrinsics({tx:t},n){const s=createSubmittable(this._type,this._rx,n),i=o=>lazyMethods({},Object.keys(t[o]),c=>this._decorateExtrinsicEntry(t[o][c],s)),a=Object.keys(t);for(let o=0;o<a.length;o++)lazyMethod(s,a[o],i);return s}_decorateExtrinsicEntry(t,n){const s=(...i)=>n(t(...i));return s.is=i=>t.is(i),this._decorateFunctionMeta(t,s)}_decorateStorage({query:t,registry:n},s,i){const a={},o=h=>lazyMethods({},Object.keys(t[h]),p=>i?this._decorateStorageEntryAt(n,t[h][p],s,i):this._decorateStorageEntry(t[h][p],s)),c=Object.keys(t);for(let h=0;h<c.length;h++)lazyMethod(a,c[h],o);return a}_decorateStorageEntry(t,n){const s=(o,c)=>extractStorageArgs(c||b(this,Ut),t,o),i=o=>from(this.at(o)).pipe(map$1(c=>getAtQueryFn(c,t))),a=this._decorateStorageCall(t,n);return a.creator=t,a.at=n((o,...c)=>i(o).pipe(switchMap(h=>h(...c)))),a.hash=n((...o)=>this._rpcCore.state.getStorageHash(s(o))),a.is=o=>o.section===t.section&&o.method===t.method,a.key=(...o)=>u8aToHex(compactStripLength(t(...o))[1]),a.keyPrefix=(...o)=>u8aToHex(t.keyPrefix(...o)),a.range=n((o,...c)=>this._decorateStorageRange(a,c,o)),a.size=n((...o)=>this._rpcCore.state.getStorageSize(s(o))),a.sizeAt=n((o,...c)=>i(o).pipe(switchMap(h=>this._rpcCore.state.getStorageSize(s(c,h.creator.meta.registry),o)))),t.iterKey&&t.meta.type.isMap&&(a.entries=n(memo(b(this,Ot),(...o)=>this._retrieveMapEntries(t,null,o))),a.entriesAt=n(memo(b(this,Ot),(o,...c)=>i(o).pipe(switchMap(h=>this._retrieveMapEntries(h.creator,o,c))))),a.entriesPaged=n(memo(b(this,Ot),o=>this._retrieveMapEntriesPaged(t,void 0,o))),a.keys=n(memo(b(this,Ot),(...o)=>this._retrieveMapKeys(t,null,o))),a.keysAt=n(memo(b(this,Ot),(o,...c)=>i(o).pipe(switchMap(h=>this._retrieveMapKeys(h.creator,o,c))))),a.keysPaged=n(memo(b(this,Ot),o=>this._retrieveMapKeysPaged(t,void 0,o)))),this.supportMulti&&t.meta.type.isMap&&(a.multi=n(o=>t.meta.type.asMap.hashers.length===1?this._retrieveMulti(o.map(c=>[t,[c]])):this._retrieveMulti(o.map(c=>[t,c])))),this._decorateFunctionMeta(t,a)}_decorateStorageEntryAt(t,n,s,i){const a=c=>extractStorageArgs(t,n,c),o=s((...c)=>this._rpcCore.state.getStorage(a(c),i));return o.creator=n,o.hash=s((...c)=>this._rpcCore.state.getStorageHash(a(c),i)),o.is=c=>c.section===n.section&&c.method===n.method,o.key=(...c)=>u8aToHex(compactStripLength(n(n.meta.type.isPlain?void 0:c))[1]),o.keyPrefix=(...c)=>u8aToHex(n.keyPrefix(...c)),o.size=s((...c)=>this._rpcCore.state.getStorageSize(a(c),i)),n.iterKey&&n.meta.type.isMap&&(o.entries=s(memo(b(this,Ot),(...c)=>this._retrieveMapEntries(n,i,c))),o.entriesPaged=s(memo(b(this,Ot),c=>this._retrieveMapEntriesPaged(n,i,c))),o.keys=s(memo(b(this,Ot),(...c)=>this._retrieveMapKeys(n,i,c))),o.keysPaged=s(memo(b(this,Ot),c=>this._retrieveMapKeysPaged(n,i,c)))),this.supportMulti&&n.meta.type.isMap&&(o.multi=s(c=>n.meta.type.asMap.hashers.length===1?this._retrieveMulti(c.map(h=>[n,[h]]),i):this._retrieveMulti(c.map(h=>[n,h]),i))),this._decorateFunctionMeta(n,o)}_queueStorage(t,n){const s=n===b(this,Gn)?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt;let i=n.length-1,a=0,o;return i===-1||!n[i]||n[i][1].length===PAGE_SIZE_Q?(i++,o=from(Promise.resolve().then(()=>{const c=n[i][1];return delete n[i],c})).pipe(switchMap(c=>s(c))),n.push([o,[t]])):(o=n[i][0],a=n[i][1].length,n[i][1].push(t)),o.pipe(map$1(c=>c[a]))}_decorateStorageCall(t,n){return n((...s)=>{const i=extractStorageArgs(b(this,Ut),t,s);return this.hasSubscriptions?this._queueStorage(i,b(this,Gn)):this._rpcCore.state.getStorage(i)},{methodName:t.method,overrideNoSub:(...s)=>this._queueStorage(extractStorageArgs(b(this,Ut),t,s),b(this,fs))})}_decorateStorageRange(t,n,s){const i=unwrapStorageType(b(this,Ut),t.creator.meta.type,t.creator.meta.modifier.isOptional);return this._rpcCore.state.queryStorage([t.key(...n)],...s).pipe(map$1(a=>a.map(([o,[c]])=>[o,this.createType(i,c.isSome?c.unwrap().toHex():void 0)])))}_retrieveMulti(t,n){if(!t.length)return of([]);const s=this.hasSubscriptions&&!n?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt;return t.length<=PAGE_SIZE_V?n?s(t,n):s(t):combineLatest(arrayChunk(t,PAGE_SIZE_V).map(i=>n?s(i,n):s(i))).pipe(map$1(arrayFlatten))}_retrieveMapKeys({iterKey:t,meta:n,method:s,section:i},a,o){assert$1(t&&n.type.isMap,"keys can only be retrieved on maps");const c=t(...o).toHex(),h=new BehaviorSubject(c),p=a?A=>this._rpcCore.state.getKeysPaged(c,PAGE_SIZE_K,A,a):A=>this._rpcCore.state.getKeysPaged(c,PAGE_SIZE_K,A),x=A=>A.setMeta(n,i,s);return h.pipe(switchMap(p),map$1(A=>A.map(x)),tap(A=>nextTick(()=>{A.length===PAGE_SIZE_K?h.next(A[PAGE_SIZE_K-1].toHex()):h.complete()})),toArray(),map$1(arrayFlatten))}_retrieveMapKeysPaged({iterKey:t,meta:n,method:s,section:i},a,o){assert$1(t&&n.type.isMap,"keys can only be retrieved on maps");const c=p=>p.setMeta(n,i,s);return(a?p=>this._rpcCore.state.getKeysPaged(p,o.pageSize,o.startKey||p,a):p=>this._rpcCore.state.getKeysPaged(p,o.pageSize,o.startKey||p))(t(...o.args).toHex()).pipe(map$1(p=>p.map(c)))}_retrieveMapEntries(t,n,s){const i=n?a=>this._rpcCore.state.queryStorageAt(a,n):a=>this._rpcCore.state.queryStorageAt(a);return this._retrieveMapKeys(t,n,s).pipe(switchMap(a=>a.length?combineLatest(arrayChunk(a,PAGE_SIZE_V).map(i)).pipe(map$1(o=>arrayFlatten(o).map((c,h)=>[a[h],c]))):of([])))}_retrieveMapEntriesPaged(t,n,s){const i=n?a=>this._rpcCore.state.queryStorageAt(a,n):a=>this._rpcCore.state.queryStorageAt(a);return this._retrieveMapKeysPaged(t,n,s).pipe(switchMap(a=>a.length?i(a).pipe(map$1(o=>o.map((c,h)=>[a[h],c]))):of([])))}_decorateDeriveRx(t){var n,s,i,a;const o=(n=this._runtimeVersion)===null||n===void 0?void 0:n.specName.toString(),c=getAvailableDerives(b(this,Ot),this._rx,objectSpread({},this._options.derives,(s=this._options.typesBundle)===null||s===void 0||(i=s.spec)===null||i===void 0||(a=i[o||""])===null||a===void 0?void 0:a.derives));return decorateDeriveSections(t,c)}_decorateDerive(t){return decorateDeriveSections(t,this._rx.derive)}}Ot=new WeakMap,Ut=new WeakMap,fs=new WeakMap,Gn=new WeakMap;const KEEPALIVE_INTERVAL=1e4,l$1=logger("api/init");function textToString(r){return r.toString()}var _healthTimer=_classPrivateFieldKey("healthTimer"),_registries=_classPrivateFieldKey("registries"),_updateSub=_classPrivateFieldKey("updateSub"),_waitingRegistries=_classPrivateFieldKey("waitingRegistries"),_onProviderConnect=_classPrivateFieldKey("onProviderConnect"),_onProviderDisconnect=_classPrivateFieldKey("onProviderDisconnect"),_onProviderError=_classPrivateFieldKey("onProviderError");class Init extends Decorate{constructor(e,t,n){super(e,t,n),Object.defineProperty(this,_onProviderError,{value:_onProviderError2}),Object.defineProperty(this,_onProviderDisconnect,{value:_onProviderDisconnect2}),Object.defineProperty(this,_onProviderConnect,{value:_onProviderConnect2}),Object.defineProperty(this,_healthTimer,{writable:!0,value:null}),Object.defineProperty(this,_registries,{writable:!0,value:[]}),Object.defineProperty(this,_updateSub,{writable:!0,value:null}),Object.defineProperty(this,_waitingRegistries,{writable:!0,value:{}}),this.registry.setKnownTypes(e),e.source?_classPrivateFieldBase(this,_registries)[_registries]=_classPrivateFieldBase(e.source,_registries)[_registries]:this.registerTypes(e.types),this._rpc=this._decorateRpc(this._rpcCore,this._decorateMethod),this._rx.rpc=this._decorateRpc(this._rpcCore,this._rxDecorateMethod),this.supportMulti&&(this._queryMulti=this._decorateMulti(this._decorateMethod),this._rx.queryMulti=this._decorateMulti(this._rxDecorateMethod)),this._rx.signer=e.signer,this._rpcCore.setRegistrySwap(s=>this.getBlockRegistry(s)),this._rpcCore.setResolveBlockHash(s=>firstValueFrom(this._rpcCore.chain.getBlockHash(s))),this.hasSubscriptions?(this._rpcCore.provider.on("disconnected",()=>_classPrivateFieldBase(this,_onProviderDisconnect)[_onProviderDisconnect]()),this._rpcCore.provider.on("error",s=>_classPrivateFieldBase(this,_onProviderError)[_onProviderError](s)),this._rpcCore.provider.on("connected",()=>_classPrivateFieldBase(this,_onProviderConnect)[_onProviderConnect]())):l$1.warn("Api will be available in a limited mode since the provider does not support subscriptions"),this._rpcCore.provider.isConnected&&_classPrivateFieldBase(this,_onProviderConnect)[_onProviderConnect]()}_initRegistry(e,t,n,s,i){e.clearCache(),e.setChainProperties(i||this.registry.getChainProperties()),e.setKnownTypes(this._options),e.register(getSpecTypes(e,t,n.specName,n.specVersion)),e.setHasher(getSpecHasher(e,t,n.specName)),e.knownTypes.typesBundle&&(e.knownTypes.typesAlias=getSpecAlias(e,t,n.specName)),e.setMetadata(s,void 0,objectSpread({},getSpecExtensions(e,t,n.specName),this._options.signedExtensions))}_getDefaultRegistry(){return assertReturn(_classPrivateFieldBase(this,_registries)[_registries].find(({isDefault:e})=>e),"Initialization error, cannot find the default registry")}async at(e,t){const n=u8aToU8a(e),s=await this.getBlockRegistry(n,t);return this._createDecorated(s,!0,null,n).decoratedApi}async _createBlockRegistry(e,t,n){const s=new TypeRegistry(e),i=new Metadata(s,await firstValueFrom(this._rpcCore.state.getMetadata.raw(t.parentHash)));this._initRegistry(s,this._runtimeChain,n,i);const a={lastBlockHash:e,metadata:i,registry:s,runtimeVersion:n};return _classPrivateFieldBase(this,_registries)[_registries].push(a),a}_cacheBlockRegistryProgress(e,t){let n=_classPrivateFieldBase(this,_waitingRegistries)[_waitingRegistries][e];return isUndefined(n)&&(n=_classPrivateFieldBase(this,_waitingRegistries)[_waitingRegistries][e]=new Promise((s,i)=>{t().then(a=>{delete _classPrivateFieldBase(this,_waitingRegistries)[_waitingRegistries][e],s(a)}).catch(a=>{delete _classPrivateFieldBase(this,_waitingRegistries)[_waitingRegistries][e],i(a)})})),n}_getBlockRegistryViaVersion(e,t){if(t){const n=_classPrivateFieldBase(this,_registries)[_registries].find(({runtimeVersion:{specName:s,specVersion:i}})=>s.eq(t.specName)&&i.eq(t.specVersion));if(n)return n.lastBlockHash=e,n}return null}async _getBlockRegistryViaHash(e){assert$1(this._genesisHash&&this._runtimeVersion,"Cannot retrieve data on an uninitialized chain");const t=this.registry.createType("HeaderPartial",this._genesisHash.eq(e)?{number:BN_ZERO,parentHash:this._genesisHash}:await firstValueFrom(this._rpcCore.chain.getHeader.raw(e)));assert$1(!t.parentHash.isEmpty,"Unable to retrieve header and parent from supplied hash");const[n,s]=getUpgradeVersion(this._genesisHash,t.number),i=this.registry.createType("RuntimeVersionPartial",n&&(s||n.specVersion.eq(this._runtimeVersion.specVersion))?{specName:this._runtimeVersion.specName,specVersion:n.specVersion}:await firstValueFrom(this._rpcCore.state.getRuntimeVersion.raw(t.parentHash)));return this._getBlockRegistryViaVersion(e,i)||await this._cacheBlockRegistryProgress(i.toHex(),()=>this._createBlockRegistry(e,t,i))}async getBlockRegistry(e,t){return _classPrivateFieldBase(this,_registries)[_registries].find(({lastBlockHash:n})=>n&&u8aEq(n,e))||this._getBlockRegistryViaVersion(e,t)||await this._cacheBlockRegistryProgress(u8aToHex(e),()=>this._getBlockRegistryViaHash(e))}async _loadMeta(){var e;return this._isReady?!0:(this._unsubscribeUpdates(),[this._genesisHash,this._runtimeMetadata]=(e=this._options.source)!==null&&e!==void 0&&e._isReady?await this._metaFromSource(this._options.source):await this._metaFromChain(this._options.metadata),this._initFromMeta(this._runtimeMetadata))}async _metaFromSource(e){this._extrinsicType=e.extrinsicVersion,this._runtimeChain=e.runtimeChain,this._runtimeVersion=e.runtimeVersion;const t=Object.keys(e.rpc),n=[];for(let s=0;s<t.length;s++){const i=t[s],a=Object.keys(e.rpc[i]);for(let o=0;o<a.length;o++)n.push(`${i}_${a[o]}`)}return this._filterRpc(n,getSpecRpc(this.registry,e.runtimeChain,e.runtimeVersion.specName)),[e.genesisHash,e.runtimeMetadata]}_subscribeUpdates(){_classPrivateFieldBase(this,_updateSub)[_updateSub]||!this.hasSubscriptions||(_classPrivateFieldBase(this,_updateSub)[_updateSub]=this._rpcCore.state.subscribeRuntimeVersion().pipe(switchMap(e=>{var t;return(t=this._runtimeVersion)!==null&&t!==void 0&&t.specVersion.eq(e.specVersion)?of(!1):this._rpcCore.state.getMetadata().pipe(map$1(n=>{l$1.log(`Runtime version updated to spec=${e.specVersion.toString()}, tx=${e.transactionVersion.toString()}`),this._runtimeMetadata=n,this._runtimeVersion=e,this._rx.runtimeVersion=e;const s=this._getDefaultRegistry();return s.metadata=n,s.runtimeVersion=e,this._initRegistry(this.registry,this._runtimeChain,e,n),this._injectMetadata(s,!0),!0}))})).subscribe())}async _metaFromChain(e){const[t,n,s,i,a,o]=await Promise.all([firstValueFrom(this._rpcCore.chain.getBlockHash(0)),firstValueFrom(this._rpcCore.state.getRuntimeVersion()),firstValueFrom(this._rpcCore.system.chain()),firstValueFrom(this._rpcCore.system.properties()),firstValueFrom(this._rpcCore.rpc.methods()),e?Promise.resolve(null):firstValueFrom(this._rpcCore.state.getMetadata())]);this._runtimeChain=s,this._runtimeVersion=n,this._rx.runtimeVersion=n;const c=`${t.toHex()||"0x"}-${n.specVersion.toString()}`,h=o||(e&&e[c]?new Metadata(this.registry,e[c]):await firstValueFrom(this._rpcCore.state.getMetadata()));return this._initRegistry(this.registry,s,n,h,i),this._filterRpc(a.methods.map(textToString),getSpecRpc(this.registry,s,n.specName)),this._subscribeUpdates(),_classPrivateFieldBase(this,_registries)[_registries].length||_classPrivateFieldBase(this,_registries)[_registries].push({isDefault:!0,metadata:h,registry:this.registry,runtimeVersion:n}),h.getUniqTypes(this._options.throwOnUnknown||!1),[t,h]}_initFromMeta(e){return this._extrinsicType=e.asLatest.extrinsic.version.toNumber(),this._rx.extrinsicType=this._extrinsicType,this._rx.genesisHash=this._genesisHash,this._rx.runtimeVersion=this._runtimeVersion,this._injectMetadata(this._getDefaultRegistry(),!0),this._rx.derive=this._decorateDeriveRx(this._rxDecorateMethod),this._derive=this._decorateDerive(this._decorateMethod),!0}_subscribeHealth(){_classPrivateFieldBase(this,_healthTimer)[_healthTimer]=this.hasSubscriptions?setInterval(()=>{firstValueFrom(this._rpcCore.system.health.raw()).catch(()=>{})},KEEPALIVE_INTERVAL):null}_unsubscribeHealth(){_classPrivateFieldBase(this,_healthTimer)[_healthTimer]&&(clearInterval(_classPrivateFieldBase(this,_healthTimer)[_healthTimer]),_classPrivateFieldBase(this,_healthTimer)[_healthTimer]=null)}_unsubscribeUpdates(){_classPrivateFieldBase(this,_updateSub)[_updateSub]&&(_classPrivateFieldBase(this,_updateSub)[_updateSub].unsubscribe(),_classPrivateFieldBase(this,_updateSub)[_updateSub]=null)}_unsubscribe(){this._unsubscribeHealth(),this._unsubscribeUpdates()}}async function _onProviderConnect2(){this._isConnected.next(!0),this.emit("connected");try{const r=this._options.initWasm===!1?!0:await cryptoWaitReady(),e=await this._loadMeta();this._subscribeHealth(),e&&!this._isReady&&r&&(this._isReady=!0,this.emit("ready",this))}catch(r){const e=new Error(`FATAL: Unable to initialize the API: ${r.message}`);l$1.error(e),this.emit("error",e)}}function _onProviderDisconnect2(){this._isConnected.next(!1),this._unsubscribeHealth(),this.emit("disconnected")}function _onProviderError2(r){this.emit("error",r)}function assertResult(r){if(r===void 0)throw new Error("Api interfaces needs to be initialized before using, wait for 'isReady'");return r}class Getters extends Init{get call(){return assertResult(this._call)}get consts(){return assertResult(this._consts)}get derive(){return assertResult(this._derive)}get errors(){return assertResult(this._errors)}get events(){return assertResult(this._events)}get extrinsicVersion(){return this._extrinsicType}get genesisHash(){return assertResult(this._genesisHash)}get isConnected(){return this._isConnected.getValue()}get libraryInfo(){return`${packageInfo.name} v${packageInfo.version}`}get query(){return assertResult(this._query)}get queryMulti(){return assertResult(this._queryMulti)}get rpc(){return assertResult(this._rpc)}get runtimeChain(){return assertResult(this._runtimeChain)}get runtimeMetadata(){return assertResult(this._runtimeMetadata)}get runtimeVersion(){return assertResult(this._runtimeVersion)}get rx(){return assertResult(this._rx)}get stats(){return this._rpcCore.provider.stats}get type(){return this._type}get tx(){return assertResult(this._extrinsics)}findCall(e){return findCall(this.registry,e)}findError(e){return findError(this.registry,e)}}class ApiBase extends Getters{constructor(e={},t,n){super(e,t,n)}connect(){return this._rpcCore.connect()}disconnect(){return this._unsubscribe(),this._rpcCore.disconnect()}setSigner(e){this._rx.signer=e}async sign(e,t,{signer:n}={}){if(isString(e)){const s=n||this._rx.signer;return assert$1(s==null?void 0:s.signRaw,"No signer exists with a signRaw interface. You possibly need to pass through an explicit keypair for the origin so it can be used for signing."),(await s.signRaw(objectSpread({type:"bytes"},t,{address:e}))).signature}return u8aToHex(e.sign(u8aToU8a(t.data)))}}var an,on,cn,hs,un,Kn,Zn;class Combinator{constructor(e,t){_(this,an,!1);_(this,on,void 0);_(this,cn,[]);_(this,hs,[]);_(this,un,!0);_(this,Kn,[]);_(this,Zn,[]);Q(this,on,t),Q(this,Zn,e.map(async(n,s)=>{const[i,...a]=Array.isArray(n)?n:[n];return b(this,cn).push(!1),b(this,hs).push(i),i(...a,this._createCallback(s))}))}_allHasFired(){return b(this,an)||Q(this,an,b(this,cn).filter(e=>!e).length===0),b(this,an)}_createCallback(e){return t=>{b(this,cn)[e]=!0,b(this,Kn)[e]=t,this._triggerUpdate()}}_triggerUpdate(){if(!(!b(this,un)||!isFunction$3(b(this,on))||!this._allHasFired()))try{b(this,on).call(this,b(this,Kn))}catch{}}unsubscribe(){!b(this,un)||(Q(this,un,!1),b(this,Zn).forEach(async e=>{try{const t=await e;isFunction$3(t)&&t()}catch{}}))}}an=new WeakMap,on=new WeakMap,cn=new WeakMap,hs=new WeakMap,un=new WeakMap,Kn=new WeakMap,Zn=new WeakMap;function promiseTracker(r,e){let t=!1;return{reject:n=>(t||(t=!0,e(n)),EMPTY),resolve:n=>{t||(t=!0,r(n))}}}function extractArgs(r,e){const t=r.slice(),n=r.length&&isFunction$3(r[r.length-1])?t.pop():void 0;return assert$1(!e||isFunction$3(n),"Expected a callback to be passed with subscriptions"),[t,n]}function decorateCall(r,e){return new Promise((t,n)=>{const s=promiseTracker(t,n),i=r(...e).pipe(catchError(a=>s.reject(a))).subscribe(a=>{s.resolve(a),nextTick(()=>i.unsubscribe())})})}function decorateSubscribe(r,e,t){return new Promise((n,s)=>{const i=promiseTracker(n,s),a=r(...e).pipe(catchError(o=>i.reject(o)),tap(()=>i.resolve(()=>a.unsubscribe()))).subscribe(o=>{nextTick(()=>t(o))})})}function toPromiseMethod(r,e){const t=!!(e&&e.methodName&&e.methodName.includes("subscribe"));return function(...n){const[s,i]=extractArgs(n,t);return i?decorateSubscribe(r,s,i):decorateCall((e==null?void 0:e.overrideNoSub)||r,s)}}var Yn,Jn;const ps=class extends ApiBase{constructor(t){super(t,"promise",toPromiseMethod);_(this,Yn,void 0);_(this,Jn,void 0);Q(this,Yn,new Promise(n=>{super.once("ready",()=>n(this))})),Q(this,Jn,new Promise((n,s)=>{const i=promiseTracker(n,s);super.once("ready",()=>i.resolve(this)),super.once("error",a=>i.reject(a))}))}static create(t){const n=new ps(t);return t&&t.throwOnConnect?n.isReadyOrError:(n.isReadyOrError.catch(()=>{}),n.isReady)}get isReady(){return b(this,Yn)}get isReadyOrError(){return b(this,Jn)}clone(){return new ps(objectSpread({},this._options,{source:this}))}async combineLatest(t,n){const s=new Combinator(t,n);return()=>{s.unsubscribe()}}};let ApiPromise=ps;Yn=new WeakMap,Jn=new WeakMap;function applyOnEvent(r,e,t){if(r.isInBlock||r.isFinalized){const n=r.filterRecords("contracts",e);if(n.length)return t(n)}}function isOptions(r){return!(isBn(r)||isBigInt(r)||isNumber(r)||isString(r))}function extractOptions(r,e){return[{gasLimit:e.shift(),value:r},e]}class Base$1{constructor(e,t,n){this.abi=t instanceof Abi?t:new Abi(t,e.registry.getChainProperties()),this.api=e,this._decorateMethod=n,assert$1(!!(e&&e.isConnected&&e.tx),"Your API has not been initialized correctly and is not connected to a chain"),assert$1(!!(e.tx.contracts&&Object.keys(e.tx.contracts).length),"You need to connect to a chain with a runtime that supports contracts"),assert$1(isFunction$3(e.tx.contracts.instantiateWithCode),"You need to connect to a chain with a runtime with a V3 contracts module. The runtime does not expose api.tx.contracts.instantiateWithCode")}get registry(){return this.api.registry}}const EMPTY_SALT=new Uint8Array;function withMeta(r,e){return e.meta=r,e}function createBluePrintTx(r,e){return withMeta(r,(t,...n)=>isOptions(t)?e(t,n):e(...extractOptions(t,n)))}function encodeSalt(r=randomAsU8a()){return r instanceof Bytes?r:r&&r.length?compactAddLength(u8aToU8a(r)):EMPTY_SALT}const MAX_CALL_GAS=new BN(5e12).isub(BN_ONE),ERROR_NO_CALL="Your node does not expose the contracts.call RPC. This is most probably due to a runtime configuration.",l=logger("Contract");function createQuery(r,e){return withMeta(r,(t,n,...s)=>isOptions(n)?e(t,n,s):e(t,...extractOptions(n,s)))}function createTx(r,e){return withMeta(r,(t,...n)=>isOptions(t)?e(t,n):e(...extractOptions(t,n)))}class ContractSubmittableResult extends SubmittableResult{constructor(e,t){super(e),this.contractEvents=t}}var ln,dn,fn,ms,ys;class Contract extends Base$1{constructor(t,n,s,i){super(t,n,i);_(this,ln,{});_(this,dn,{});_(this,fn,(t,n=!1)=>{const s=bnToBn(t);return s.lte(BN_ZERO)?n?MAX_CALL_GAS:(this.api.consts.system.blockWeights?this.api.consts.system.blockWeights.maxBlock:this.api.consts.system.maximumBlockWeight).muln(64).div(BN_HUNDRED):s});_(this,ms,(t,{gasLimit:n=BN_ZERO,storageDepositLimit:s=null,value:i=BN_ZERO},a)=>{const o=this.api.tx.contracts.call.meta.args.length===5,c=b(this,fn).call(this,n),h=this.abi.findMessage(t).toU8a(a);return(o?this.api.tx.contracts.call(this.address,i,c,s,h):this.api.tx.contracts.call(this.address,i,c,h)).withResultTransform(x=>new ContractSubmittableResult(x,applyOnEvent(x,["ContractEmitted","ContractExecution"],A=>A.map(({event:{data:[,k]}})=>{try{return this.abi.decodeEvent(k)}catch(U){return l.error(`Unable to decode contract event: ${U.message}`),null}}).filter(k=>!!k))))});_(this,ys,(t,{gasLimit:n=BN_ZERO,storageDepositLimit:s=null,value:i=BN_ZERO},a)=>{assert$1(this.hasRpcContractsCall,ERROR_NO_CALL);const o=this.abi.findMessage(t);return{send:this._decorateMethod(c=>{const h=this.api.tx.contracts.call.meta.args.length===5,p=o.toU8a(a),x=h?this.api.rx.rpc.contracts.call({dest:this.address,gasLimit:b(this,fn).call(this,n,!0),inputData:p,origin:c,storageDepositLimit:s,value:i}):this.api.rx.rpc.contracts.call({dest:this.address,gasLimit:b(this,fn).call(this,n,!0),inputData:p,origin:c,value:i}),A=({debugMessage:k,gasConsumed:U,gasRequired:D,result:F,storageDeposit:q})=>({debugMessage:k,gasConsumed:U,gasRequired:D&&!D.isZero()?D:U,output:F.isOk&&o.returnType?this.abi.registry.createTypeUnsafe(o.returnType.lookupName||o.returnType.type,[F.asOk.data.toU8a(!0)],{isPedantic:!0}):null,result:F,storageDeposit:q});return x.pipe(map$1(A))})}});this.address=this.registry.createType("AccountId",s),this.abi.messages.forEach(a=>{isUndefined(b(this,dn)[a.method])&&(b(this,dn)[a.method]=createTx(a,(o,c)=>b(this,ms).call(this,a,o,c))),isUndefined(b(this,ln)[a.method])&&(b(this,ln)[a.method]=createQuery(a,(o,c,h)=>b(this,ys).call(this,a,c,h).send(o)))})}get hasRpcContractsCall(){var t;return isFunction$3((t=this.api.rx.rpc.contracts)===null||t===void 0?void 0:t.call)}get query(){return assert$1(this.hasRpcContractsCall,ERROR_NO_CALL),b(this,ln)}get tx(){return b(this,dn)}}ln=new WeakMap,dn=new WeakMap,fn=new WeakMap,ms=new WeakMap,ys=new WeakMap;class BlueprintSubmittableResult extends SubmittableResult{constructor(e,t){super(e),this.contract=t}}var hn,gs;class Blueprint extends Base$1{constructor(t,n,s,i){super(t,n,i);_(this,hn,{});_(this,gs,(t,{gasLimit:n=BN_ZERO,salt:s,storageDepositLimit:i=null,value:a=BN_ZERO},o)=>{const c=this.api.tx.contracts.instantiate.meta.args.length===6,h=this.abi.findConstructor(t).toU8a(o),p=encodeSalt(s);return(c?this.api.tx.contracts.instantiate(a,n,i,this.codeHash,h,p):this.api.tx.contracts.instantiate(a,n,this.codeHash,h,p)).withResultTransform(A=>new BlueprintSubmittableResult(A,applyOnEvent(A,["Instantiated"],([k])=>new Contract(this.api,this.abi,k.event.data[1],this._decorateMethod))))});this.codeHash=this.registry.createType("Hash",s),this.abi.constructors.forEach(a=>{isUndefined(b(this,hn)[a.method])&&(b(this,hn)[a.method]=createBluePrintTx(a,(o,c)=>b(this,gs).call(this,a,o,c)))})}get tx(){return b(this,hn)}}hn=new WeakMap,gs=new WeakMap;class CodeSubmittableResult extends SubmittableResult{constructor(e,t,n){super(e),this.blueprint=t,this.contract=n}}var pn,bs;class Code extends Base$1{constructor(t,n,s,i){super(t,n,i);_(this,pn,{});_(this,bs,(t,{gasLimit:n=BN_ZERO,salt:s,storageDepositLimit:i=null,value:a=BN_ZERO},o)=>{const c=this.api.tx.contracts.instantiateWithCode.meta.args.length===6,h=compactAddLength(this.code),p=this.abi.findConstructor(t).toU8a(o),x=encodeSalt(s);return(c?this.api.tx.contracts.instantiateWithCode(a,n,i,h,p,x):this.api.tx.contracts.instantiateWithCode(a,n,h,p,x)).withResultTransform(k=>new CodeSubmittableResult(k,...applyOnEvent(k,["CodeStored","Instantiated"],U=>U.reduce(([D,F],{event:q})=>this.api.events.contracts.Instantiated.is(q)?[D,new Contract(this.api,this.abi,q.data[1],this._decorateMethod)]:this.api.events.contracts.CodeStored.is(q)?[new Blueprint(this.api,this.abi,q.data[0],this._decorateMethod),F]:[D,F],[]))||[]))});this.code=isWasm(this.abi.info.source.wasm)?this.abi.info.source.wasm:u8aToU8a(s),assert$1(isWasm(this.code),"No WASM code provided"),this.abi.constructors.forEach(a=>{isUndefined(b(this,pn)[a.method])&&(b(this,pn)[a.method]=createBluePrintTx(a,(o,c)=>b(this,bs).call(this,a,o,c)))})}get tx(){return b(this,pn)}}pn=new WeakMap,bs=new WeakMap;class BlueprintPromise extends Blueprint{constructor(e,t,n){super(e,t,n,toPromiseMethod)}}class CodePromise extends Code{constructor(e,t,n){super(e,t,n,toPromiseMethod)}}class ContractPromise extends Contract{constructor(e,t,n){super(e,t,n,toPromiseMethod)}}var assign=make_assign(),create$1=make_create(),trim$1=make_trim(),Global$5=typeof window!="undefined"?window:commonjsGlobal,util$6={assign,create:create$1,trim:trim$1,bind:bind$1,slice:slice$1,each:each$7,map,pluck:pluck$1,isList:isList$1,isFunction:isFunction$1,isObject:isObject$1,Global:Global$5};function make_assign(){return Object.assign?Object.assign:function(e,t,n,s){for(var i=1;i<arguments.length;i++)each$7(Object(arguments[i]),function(a,o){e[o]=a});return e}}function make_create(){if(Object.create)return function(e,t,n,s){var i=slice$1(arguments,1);return assign.apply(this,[Object.create(e)].concat(i))};{let r=function(){};return function(t,n,s,i){var a=slice$1(arguments,1);return r.prototype=t,assign.apply(this,[new r].concat(a))}}}function make_trim(){return String.prototype.trim?function(e){return String.prototype.trim.call(e)}:function(e){return e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}}function bind$1(r,e){return function(){return e.apply(r,Array.prototype.slice.call(arguments,0))}}function slice$1(r,e){return Array.prototype.slice.call(r,e||0)}function each$7(r,e){pluck$1(r,function(t,n){return e(t,n),!1})}function map(r,e){var t=isList$1(r)?[]:{};return pluck$1(r,function(n,s){return t[s]=e(n,s),!1}),t}function pluck$1(r,e){if(isList$1(r)){for(var t=0;t<r.length;t++)if(e(r[t],t))return r[t]}else for(var n in r)if(r.hasOwnProperty(n)&&e(r[n],n))return r[n]}function isList$1(r){return r!=null&&typeof r!="function"&&typeof r.length=="number"}function isFunction$1(r){return r&&{}.toString.call(r)==="[object Function]"}function isObject$1(r){return r&&{}.toString.call(r)==="[object Object]"}var util$5=util$6,slice=util$5.slice,pluck=util$5.pluck,each$6=util$5.each,bind=util$5.bind,create=util$5.create,isList=util$5.isList,isFunction=util$5.isFunction,isObject=util$5.isObject,storeEngine={createStore},storeAPI={version:"2.0.12",enabled:!1,get:function(r,e){var t=this.storage.read(this._namespacePrefix+r);return this._deserialize(t,e)},set:function(r,e){return e===void 0?this.remove(r):(this.storage.write(this._namespacePrefix+r,this._serialize(e)),e)},remove:function(r){this.storage.remove(this._namespacePrefix+r)},each:function(r){var e=this;this.storage.each(function(t,n){r.call(e,e._deserialize(t),(n||"").replace(e._namespaceRegexp,""))})},clearAll:function(){this.storage.clearAll()},hasNamespace:function(r){return this._namespacePrefix=="__storejs_"+r+"_"},createStore:function(){return createStore.apply(this,arguments)},addPlugin:function(r){this._addPlugin(r)},namespace:function(r){return createStore(this.storage,this.plugins,r)}};function _warn(){var r=typeof console=="undefined"?null:console;if(!!r){var e=r.warn?r.warn:r.log;e.apply(r,arguments)}}function createStore(r,e,t){t||(t=""),r&&!isList(r)&&(r=[r]),e&&!isList(e)&&(e=[e]);var n=t?"__storejs_"+t+"_":"",s=t?new RegExp("^"+n):null,i=/^[a-zA-Z0-9_\-]*$/;if(!i.test(t))throw new Error("store.js namespaces can only have alphanumerics + underscores and dashes");var a={_namespacePrefix:n,_namespaceRegexp:s,_testStorage:function(c){try{var h="__storejs__test__";c.write(h,h);var p=c.read(h)===h;return c.remove(h),p}catch{return!1}},_assignPluginFnProp:function(c,h){var p=this[h];this[h]=function(){var A=slice(arguments,0),k=this;function U(){if(!!p)return each$6(arguments,function(F,q){A[q]=F}),p.apply(k,A)}var D=[U].concat(A);return c.apply(k,D)}},_serialize:function(c){return JSON.stringify(c)},_deserialize:function(c,h){if(!c)return h;var p="";try{p=JSON.parse(c)}catch{p=c}return p!==void 0?p:h},_addStorage:function(c){this.enabled||this._testStorage(c)&&(this.storage=c,this.enabled=!0)},_addPlugin:function(c){var h=this;if(isList(c)){each$6(c,function(A){h._addPlugin(A)});return}var p=pluck(this.plugins,function(A){return c===A});if(!p){if(this.plugins.push(c),!isFunction(c))throw new Error("Plugins must be function values that return objects");var x=c.call(this);if(!isObject(x))throw new Error("Plugins must return an object of function properties");each$6(x,function(A,k){if(!isFunction(A))throw new Error("Bad plugin property: "+k+" from plugin "+c.name+". Plugins should only return functions.");h._assignPluginFnProp(A,k)})}},addStorage:function(c){_warn("store.addStorage(storage) is deprecated. Use createStore([storages])"),this._addStorage(c)}},o=create(a,storeAPI,{plugins:[]});return o.raw={},each$6(o,function(c,h){isFunction(c)&&(o.raw[h]=bind(o,c))}),each$6(r,function(c){o._addStorage(c)}),each$6(e,function(c){o._addPlugin(c)}),o}var util$4=util$6,Global$4=util$4.Global,localStorage_1={name:"localStorage",read:read$5,write:write$5,each:each$5,remove:remove$5,clearAll:clearAll$5};function localStorage(){return Global$4.localStorage}function read$5(r){return localStorage().getItem(r)}function write$5(r,e){return localStorage().setItem(r,e)}function each$5(r){for(var e=localStorage().length-1;e>=0;e--){var t=localStorage().key(e);r(read$5(t),t)}}function remove$5(r){return localStorage().removeItem(r)}function clearAll$5(){return localStorage().clear()}var util$3=util$6,Global$3=util$3.Global,oldFFGlobalStorage={name:"oldFF-globalStorage",read:read$4,write:write$4,each:each$4,remove:remove$4,clearAll:clearAll$4},globalStorage=Global$3.globalStorage;function read$4(r){return globalStorage[r]}function write$4(r,e){globalStorage[r]=e}function each$4(r){for(var e=globalStorage.length-1;e>=0;e--){var t=globalStorage.key(e);r(globalStorage[t],t)}}function remove$4(r){return globalStorage.removeItem(r)}function clearAll$4(){each$4(function(r,e){delete globalStorage[r]})}var util$2=util$6,Global$2=util$2.Global,oldIEUserDataStorage={name:"oldIE-userDataStorage",write:write$3,read:read$3,each:each$3,remove:remove$3,clearAll:clearAll$3},storageName="storejs",doc$1=Global$2.document,_withStorageEl=_makeIEStorageElFunction(),disable=(Global$2.navigator?Global$2.navigator.userAgent:"").match(/ (MSIE 8|MSIE 9|MSIE 10)\./);function write$3(r,e){if(!disable){var t=fixKey(r);_withStorageEl(function(n){n.setAttribute(t,e),n.save(storageName)})}}function read$3(r){if(!disable){var e=fixKey(r),t=null;return _withStorageEl(function(n){t=n.getAttribute(e)}),t}}function each$3(r){_withStorageEl(function(e){for(var t=e.XMLDocument.documentElement.attributes,n=t.length-1;n>=0;n--){var s=t[n];r(e.getAttribute(s.name),s.name)}})}function remove$3(r){var e=fixKey(r);_withStorageEl(function(t){t.removeAttribute(e),t.save(storageName)})}function clearAll$3(){_withStorageEl(function(r){var e=r.XMLDocument.documentElement.attributes;r.load(storageName);for(var t=e.length-1;t>=0;t--)r.removeAttribute(e[t].name);r.save(storageName)})}var forbiddenCharsRegex=new RegExp("[!\"#$%&'()*+,/\\\\:;<=>?@[\\]^`{|}~]","g");function fixKey(r){return r.replace(/^\d/,"___$&").replace(forbiddenCharsRegex,"___")}function _makeIEStorageElFunction(){if(!doc$1||!doc$1.documentElement||!doc$1.documentElement.addBehavior)return null;var r="script",e,t,n;try{t=new ActiveXObject("htmlfile"),t.open(),t.write("<"+r+">document.w=window</"+r+'><iframe src="/favicon.ico"></iframe>'),t.close(),e=t.w.frames[0].document,n=e.createElement("div")}catch{n=doc$1.createElement("div"),e=doc$1.body}return function(s){var i=[].slice.call(arguments,0);i.unshift(n),e.appendChild(n),n.addBehavior("#default#userData"),n.load(storageName),s.apply(this,i),e.removeChild(n)}}var util$1=util$6,Global$1=util$1.Global,trim=util$1.trim,cookieStorage={name:"cookieStorage",read:read$2,write:write$2,each:each$2,remove:remove$2,clearAll:clearAll$2},doc=Global$1.document;function read$2(r){if(!r||!_has(r))return null;var e="(?:^|.*;\\s*)"+escape(r).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=\\s*((?:[^;](?!;))*[^;]?).*";return unescape(doc.cookie.replace(new RegExp(e),"$1"))}function each$2(r){for(var e=doc.cookie.split(/; ?/g),t=e.length-1;t>=0;t--)if(!!trim(e[t])){var n=e[t].split("="),s=unescape(n[0]),i=unescape(n[1]);r(i,s)}}function write$2(r,e){!r||(doc.cookie=escape(r)+"="+escape(e)+"; expires=Tue, 19 Jan 2038 03:14:07 GMT; path=/")}function remove$2(r){!r||!_has(r)||(doc.cookie=escape(r)+"=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/")}function clearAll$2(){each$2(function(r,e){remove$2(e)})}function _has(r){return new RegExp("(?:^|;\\s*)"+escape(r).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=").test(doc.cookie)}var util=util$6,Global=util.Global,sessionStorage_1={name:"sessionStorage",read:read$1,write:write$1,each:each$1,remove:remove$1,clearAll:clearAll$1};function sessionStorage(){return Global.sessionStorage}function read$1(r){return sessionStorage().getItem(r)}function write$1(r,e){return sessionStorage().setItem(r,e)}function each$1(r){for(var e=sessionStorage().length-1;e>=0;e--){var t=sessionStorage().key(e);r(read$1(t),t)}}function remove$1(r){return sessionStorage().removeItem(r)}function clearAll$1(){return sessionStorage().clear()}var memoryStorage_1={name:"memoryStorage",read,write,each,remove,clearAll},memoryStorage={};function read(r){return memoryStorage[r]}function write(r,e){memoryStorage[r]=e}function each(r){for(var e in memoryStorage)memoryStorage.hasOwnProperty(e)&&r(memoryStorage[e],e)}function remove(r){delete memoryStorage[r]}function clearAll(r){memoryStorage={}}var all=[localStorage_1,oldFFGlobalStorage,oldIEUserDataStorage,cookieStorage,sessionStorage_1,memoryStorage_1];typeof JSON!="object"&&(JSON={});(function(){var rx_one=/^[\],:{}\s]*$/,rx_two=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,rx_three=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,rx_four=/(?:^|:|,)(?:\s*\[)+/g,rx_escapable=/[\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,rx_dangerous=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;function f(r){return r<10?"0"+r:r}function this_value(){return this.valueOf()}typeof Date.prototype.toJSON!="function"&&(Date.prototype.toJSON=function(){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null},Boolean.prototype.toJSON=this_value,Number.prototype.toJSON=this_value,String.prototype.toJSON=this_value);var gap,indent,meta,rep;function quote(r){return rx_escapable.lastIndex=0,rx_escapable.test(r)?'"'+r.replace(rx_escapable,function(e){var t=meta[e];return typeof t=="string"?t:"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+r+'"'}function str(r,e){var t,n,s,i,a=gap,o,c=e[r];switch(c&&typeof c=="object"&&typeof c.toJSON=="function"&&(c=c.toJSON(r)),typeof rep=="function"&&(c=rep.call(e,r,c)),typeof c){case"string":return quote(c);case"number":return isFinite(c)?String(c):"null";case"boolean":case"null":return String(c);case"object":if(!c)return"null";if(gap+=indent,o=[],Object.prototype.toString.apply(c)==="[object Array]"){for(i=c.length,t=0;t<i;t+=1)o[t]=str(t,c)||"null";return s=o.length===0?"[]":gap?`[
`+gap+o.join(`,
`+gap)+`
`+a+"]":"["+o.join(",")+"]",gap=a,s}if(rep&&typeof rep=="object")for(i=rep.length,t=0;t<i;t+=1)typeof rep[t]=="string"&&(n=rep[t],s=str(n,c),s&&o.push(quote(n)+(gap?": ":":")+s));else for(n in c)Object.prototype.hasOwnProperty.call(c,n)&&(s=str(n,c),s&&o.push(quote(n)+(gap?": ":":")+s));return s=o.length===0?"{}":gap?`{
`+gap+o.join(`,
`+gap)+`
`+a+"}":"{"+o.join(",")+"}",gap=a,s}}typeof JSON.stringify!="function"&&(meta={"\b":"\\b","	":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},JSON.stringify=function(r,e,t){var n;if(gap="",indent="",typeof t=="number")for(n=0;n<t;n+=1)indent+=" ";else typeof t=="string"&&(indent=t);if(rep=e,e&&typeof e!="function"&&(typeof e!="object"||typeof e.length!="number"))throw new Error("JSON.stringify");return str("",{"":r})}),typeof JSON.parse!="function"&&(JSON.parse=function(text,reviver){var j;function walk(r,e){var t,n,s=r[e];if(s&&typeof s=="object")for(t in s)Object.prototype.hasOwnProperty.call(s,t)&&(n=walk(s,t),n!==void 0?s[t]=n:delete s[t]);return reviver.call(r,e,s)}if(text=String(text),rx_dangerous.lastIndex=0,rx_dangerous.test(text)&&(text=text.replace(rx_dangerous,function(r){return"\\u"+("0000"+r.charCodeAt(0).toString(16)).slice(-4)})),rx_one.test(text.replace(rx_two,"@").replace(rx_three,"]").replace(rx_four,"")))return j=eval("("+text+")"),typeof reviver=="function"?walk({"":j},""):j;throw new SyntaxError("JSON.parse")})})();var json2=json2Plugin;function json2Plugin(){return{}}var engine=storeEngine,storages=all,plugins=[json2],store_legacy=engine.createStore(storages,plugins);const chains=selectableNetworks.filter(r=>r.genesisHash.length).reduce((r,{genesisHash:e,network:t})=>objectSpread(r,{[t]:e}),{}),subject=new BehaviorSubject(!1),env={isDevelopment:()=>subject.getValue(),set:r=>{subject.next(r)},subject},ACCOUNT_PREFIX="account:",ADDRESS_PREFIX="address:",CONTRACT_PREFIX="contract:";function toHex(r){return u8aToHex(decodeAddress(r,!0))}const accountKey=r=>`${ACCOUNT_PREFIX}${toHex(r)}`,addressKey=r=>`${ADDRESS_PREFIX}${toHex(r)}`,contractKey=r=>`${CONTRACT_PREFIX}${toHex(r)}`,accountRegex=new RegExp(`^${ACCOUNT_PREFIX}0x[0-9a-f]*`,""),addressRegex=new RegExp(`^${ADDRESS_PREFIX}0x[0-9a-f]*`,""),contractRegex=new RegExp(`^${CONTRACT_PREFIX}0x[0-9a-f]*`,"");function createOptionItem(r,e){const t=isUndefined(e)?r.length>15?`${r.slice(0,6)}\u2026${r.slice(-6)}`:r:e;return{key:r,name:t,value:r}}function callNext(r,e,t){const n=env.isDevelopment(),s={};Object.keys(r).forEach(i=>{const{json:{meta:{isTesting:a=!1}={}}={}}=r[i];(!t||n||a!==!0)&&(s[i]=r[i])}),e.next(s)}function genericSubject(r,e=!1){let t={};const n=new BehaviorSubject({}),s=()=>callNext(t,n,e);return env.subject.subscribe(s),{add:(i,a,o,c)=>(t=objectCopy(t),t[a]={json:objectSpread({},o,{address:a}),option:createOptionItem(a,o.meta.name),type:c},!o.meta.isInjected&&(!o.meta.isTesting||env.isDevelopment())&&i.set(r(a),o),s(),t[a]),remove:(i,a)=>{t=objectCopy(t),delete t[a],i.remove(r(a)),s()},subject:n}}const accounts=genericSubject(accountKey,!0),addresses=genericSubject(addressKey),contracts=genericSubject(contractKey);class BrowserStore{all(e){store_legacy.each((t,n)=>{e(n,t)})}get(e,t){t(store_legacy.get(e))}remove(e,t){store_legacy.remove(e),t&&t()}set(e,t,n){store_legacy.set(e,t),n&&n()}}var Qn,$n,es,cr;class Base{constructor(){_(this,Qn,void 0);_(this,$n,void 0);_(this,es,void 0);_(this,cr,void 0);Ae(this,"_genesisHashAdd",[]);Ae(this,"decodeAddress",(e,t,n)=>this.keyring.decodeAddress(e,t,n));Ae(this,"encodeAddress",(e,t)=>this.keyring.encodeAddress(e,t));Q(this,Qn,accounts),Q(this,$n,addresses),Q(this,es,contracts),this._store=new BrowserStore}get accounts(){return b(this,Qn)}get addresses(){return b(this,$n)}get contracts(){return b(this,es)}get keyring(){if(b(this,cr))return b(this,cr);throw new Error("Keyring should be initialised via 'loadAll' before use")}get genesisHash(){return this._genesisHash}get genesisHashes(){return this._genesisHash?[this._genesisHash,...this._genesisHashAdd]:[...this._genesisHashAdd]}getPair(e){return this.keyring.getPair(e)}getPairs(){return this.keyring.getPairs().filter(e=>env.isDevelopment()||e.meta.isTesting!==!0)}isAvailable(e){const t=this.accounts.subject.getValue(),n=this.addresses.subject.getValue(),s=this.contracts.subject.getValue(),i=isString(e)?e:this.encodeAddress(e);return!t[i]&&!n[i]&&!s[i]}isPassValid(e){return e.length>0}setSS58Format(e){b(this,cr)&&isNumber(e)&&b(this,cr).setSS58Format(e)}setDevMode(e){env.set(e)}initKeyring(e){const t=createTestKeyring(e,!0);isBoolean(e.isDevelopment)&&this.setDevMode(e.isDevelopment),Q(this,cr,t),this._genesisHash=e.genesisHash&&(isString(e.genesisHash)?e.genesisHash.toString():e.genesisHash.toHex()),this._genesisHashAdd=e.genesisHashAdd||[],this._store=e.store||this._store,this.addAccountPairs()}addAccountPairs(){this.keyring.getPairs().forEach(({address:e,meta:t})=>{this.accounts.add(this._store,e,{address:e,meta:t})})}addTimestamp(e){e.meta.whenCreated||e.setMeta({whenCreated:Date.now()})}}Qn=new WeakMap,$n=new WeakMap,es=new WeakMap,cr=new WeakMap;const obervableAll=combineLatest([accounts.subject,addresses.subject,contracts.subject]).pipe(map$1(([r,e,t])=>({accounts:r,addresses:e,contracts:t})));let hasCalledInitOptions=!1;const sortByName=(r,e)=>{const t=r.option.name,n=e.option.name;return t.localeCompare(n)},sortByCreated=(r,e)=>{const t=r.json.meta.whenCreated||0,n=e.json.meta.whenCreated||0;return t<n?1:t>n?-1:0};class KeyringOption{constructor(){Ae(this,"optionsSubject",new BehaviorSubject(this.emptyOptions()))}createOptionHeader(e){return{key:`header-${e.toLowerCase()}`,name:e,value:null}}init(e){assert$1(!hasCalledInitOptions,"Unable to initialise options more than once"),obervableAll.subscribe(()=>{const t=this.emptyOptions();this.addAccounts(e,t),this.addAddresses(e,t),this.addContracts(e,t),t.address=this.linkItems({Addresses:t.address,Recent:t.recent}),t.account=this.linkItems({Accounts:t.account,Development:t.testing}),t.contract=this.linkItems({Contracts:t.contract}),t.all=[].concat(t.account,t.address),t.allPlus=[].concat(t.account,t.address,t.contract),this.optionsSubject.next(t)}),hasCalledInitOptions=!0}linkItems(e){return Object.keys(e).reduce((t,n)=>{const s=e[n];return t.concat(s.length?[this.createOptionHeader(n)]:[],s)},[])}addAccounts(e,t){const n=e.accounts.subject.getValue();Object.values(n).sort(sortByName).forEach(({json:{meta:{isTesting:s=!1}},option:i})=>{s?t.testing.push(i):t.account.push(i)})}addAddresses(e,t){const n=e.addresses.subject.getValue();Object.values(n).filter(({json:s})=>!!s.meta.isRecent).sort(sortByCreated).forEach(({option:s})=>{t.recent.push(s)}),Object.values(n).filter(({json:s})=>!s.meta.isRecent).sort(sortByName).forEach(({option:s})=>{t.address.push(s)})}addContracts(e,t){const n=e.contracts.subject.getValue();Object.values(n).sort(sortByName).forEach(({option:s})=>{t.contract.push(s)})}emptyOptions(){return{account:[],address:[],all:[],allPlus:[],contract:[],recent:[],testing:[]}}}const RECENT_EXPIRY=24*60*60;var mn;class Keyring extends Base{constructor(){super(...arguments);Ae(this,"keyringOption",new KeyringOption);_(this,mn,{account:()=>this.accounts,address:()=>this.addresses,contract:()=>this.contracts})}addExternal(t,n={}){const s=this.keyring.addFromAddress(t,objectSpread({},n,{isExternal:!0}),null);return{json:this.saveAccount(s),pair:s}}addHardware(t,n,s={}){return this.addExternal(t,objectSpread({},s,{hardwareType:n,isHardware:!0}))}addMultisig(t,n,s={}){const i=createKeyMulti(t,n),a=u8aSorted(t.map(o=>this.decodeAddress(o))).map(o=>this.encodeAddress(o));return this.addExternal(i,objectSpread({},s,{isMultisig:!0,threshold:bnToBn(n).toNumber(),who:a}))}addPair(t,n){return this.keyring.addPair(t),{json:this.saveAccount(t,n),pair:t}}addUri(t,n,s={},i){const a=this.keyring.addFromUri(t,s,i);return{json:this.saveAccount(a,n),pair:a}}backupAccount(t,n){return t.isLocked||t.lock(),t.decodePkcs8(n),t.toJson(n)}async backupAccounts(t,n){const s=t.map(a=>new Promise(o=>{this._store.get(accountKey(a),o)})),i=await Promise.all(s);return objectSpread({},jsonEncrypt(stringToU8a(JSON.stringify(i)),["batch-pkcs8"],n),{accounts:i.map(a=>({address:a.address,meta:a.meta}))})}createFromJson(t,n={}){return this.keyring.createFromJson(objectSpread({},t,{meta:objectSpread({},t.meta,n)}))}createFromUri(t,n={},s){return this.keyring.createFromUri(t,n,s)}encryptAccount(t,n){const s=t.toJson(n);s.meta.whenEdited=Date.now(),this.keyring.addFromJson(s),this.accounts.add(this._store,t.address,s,t.type)}forgetAccount(t){this.keyring.removePair(t),this.accounts.remove(this._store,t)}forgetAddress(t){this.addresses.remove(this._store,t)}forgetContract(t){this.contracts.remove(this._store,t)}getAccount(t){return this.getAddress(t,"account")}getAccounts(){const t=this.accounts.subject.getValue();return Object.keys(t).map(n=>this.getAddress(n,"account")).filter(n=>env.isDevelopment()||n.meta.isTesting!==!0)}getAddress(t,n=null){const s=isString(t)?t:this.encodeAddress(t),i=this.decodeAddress(s),o=(n?[b(this,mn)[n]]:Object.values(b(this,mn))).reduce((c,h)=>h().subject.getValue()[s]||c,void 0);return o&&{address:s,meta:o.json.meta,publicKey:i}}getAddresses(){const t=this.addresses.subject.getValue();return Object.keys(t).map(n=>this.getAddress(n))}getContract(t){return this.getAddress(t,"contract")}getContracts(){const t=this.contracts.subject.getValue();return Object.entries(t).filter(([,{json:{meta:{contract:n}}}])=>!!n&&n.genesisHash===this.genesisHash).map(([n])=>this.getContract(n))}rewriteKey(t,n,s,i){s.substr(0,2)!=="0x"&&(this._store.remove(n),this._store.set(i(s),t))}loadAccount(t,n){if(!t.meta.isTesting&&t.encoded){const i=this.keyring.addFromJson(t,!0);this.accounts.add(this._store,i.address,t,i.type)}const[,s]=n.split(":");this.rewriteKey(t,n,s.trim(),accountKey)}loadAddress(t,n){const{isRecent:s,whenCreated:i=0}=t.meta;if(s&&Date.now()-i>RECENT_EXPIRY){this._store.remove(n);return}const a=isHex(t.address)&&t.address.length!==66?t.address:this.encodeAddress(isHex(t.address)?hexToU8a(t.address):this.decodeAddress(t.address,!0)),[,o]=n.split(":");this.addresses.add(this._store,a,t),this.rewriteKey(t,n,o,addressKey)}loadContract(t,n){const s=this.encodeAddress(this.decodeAddress(t.address)),[,i]=n.split(":");t.meta.genesisHash=t.meta.genesisHash||t.meta.contract&&t.meta.contract.genesisHash,this.contracts.add(this._store,s,t),this.rewriteKey(t,n,i,contractKey)}loadInjected(t,n,s){const i={address:t,meta:objectSpread({},n,{isInjected:!0})},a=this.keyring.addFromAddress(t,i.meta,null,s);this.accounts.add(this._store,a.address,i,a.type)}allowGenesis(t){if(t&&t.meta&&this.genesisHash){const n=Object.values(chains).find(s=>s.includes(this.genesisHash||""))||[this.genesisHash];if(t.meta.genesisHash)return n.includes(t.meta.genesisHash)||this.genesisHashes.includes(t.meta.genesisHash);if(t.meta.contract)return n.includes(t.meta.contract.genesisHash)}return!0}loadAll(t,n=[]){super.initKeyring(t),this._store.all((s,i)=>{if(!isFunction$3(t.filter)||t.filter(i))try{this.allowGenesis(i)&&(accountRegex.test(s)?this.loadAccount(i,s):addressRegex.test(s)?this.loadAddress(i,s):contractRegex.test(s)&&this.loadContract(i,s))}catch{console.warn(`Keyring: Unable to load ${s}:${stringify(i)}`)}}),n.forEach(s=>{if(this.allowGenesis(s))try{this.loadInjected(s.address,s.meta,s.type)}catch{console.warn(`Keyring: Unable to inject ${stringify(s)}`)}}),this.keyringOption.init(this)}restoreAccount(t,n){const s=Array.isArray(t.encoding.content)?t.encoding.content[1]:"ed25519",i=Array.isArray(t.encoding.type)?t.encoding.type:[t.encoding.type],a=createPair({toSS58:this.encodeAddress,type:s},{publicKey:this.decodeAddress(t.address,!0)},t.meta,isHex(t.encoded)?hexToU8a(t.encoded):base64Decode(t.encoded),i);return a.decodePkcs8(n),this.addPair(a,n),a.lock(),a}restoreAccounts(t,n){JSON.parse(u8aToString(jsonDecrypt(t,n))).forEach(i=>{this.loadAccount(i,accountKey(i.address))})}saveAccount(t,n){this.addTimestamp(t);const s=t.toJson(n);return this.keyring.addFromJson(s),this.accounts.add(this._store,t.address,s,t.type),s}saveAccountMeta(t,n){const s=t.address;this._store.get(accountKey(s),i=>{t.setMeta(n),i.meta=t.meta,this.accounts.add(this._store,s,i,t.type)})}saveAddress(t,n,s="address"){const i=this.addresses.subject.getValue(),a=i[t]&&i[t].json||{address:t,meta:{isRecent:void 0,whenCreated:Date.now()}};return Object.keys(n).forEach(o=>{a.meta[o]=n[o]}),delete a.meta.isRecent,b(this,mn)[s]().add(this._store,t,a),a}saveContract(t,n){return this.saveAddress(t,n,"contract")}saveRecent(t){return this.addresses.subject.getValue()[t]||this.addresses.add(this._store,t,{address:t,meta:{genesisHash:this.genesisHash,isRecent:!0,whenCreated:Date.now()}}),this.addresses.subject.getValue()[t]}}mn=new WeakMap;const keyring=new Keyring;function documentReadyPromise(r){return new Promise(e=>{document.readyState==="complete"?e(r()):window.addEventListener("load",()=>e(r()))})}const win=window;win.injectedWeb3=win.injectedWeb3||{};function web3IsInjected(){return Object.keys(win.injectedWeb3).length!==0}function throwError(r){throw new Error(`${r}: web3Enable(originName) needs to be called before ${r}`)}function mapAccounts(r,e,t){return e.map(({address:n,genesisHash:s,name:i,type:a})=>({address:n.length===42?n:encodeAddress(decodeAddress(n),t),meta:{genesisHash:s,name:i,source:r},type:a}))}web3IsInjected();let web3EnablePromise=null;function getWindowExtensions(r){return Promise.all(Object.entries(win.injectedWeb3).map(([e,{enable:t,version:n}])=>Promise.all([Promise.resolve({name:e,version:n}),t(r).catch(s=>{console.error(`Error initializing ${e}: ${s.message}`)})])))}function web3Enable(r,e=[]){if(!r)throw new Error("You must pass a name for your app to the web3Enable function");const t=e.length?Promise.all(e.map(n=>n().catch(()=>!1))):Promise.resolve([!0]);return web3EnablePromise=documentReadyPromise(()=>t.then(()=>getWindowExtensions(r).then(n=>n.filter(s=>!!s[1]).map(([s,i])=>(i.accounts.subscribe||(i.accounts.subscribe=a=>(i.accounts.get().then(a).catch(console.error),()=>{})),Ve(Ve({},s),i)))).catch(()=>[]).then(n=>{const s=n.map(({name:i,version:a})=>`${i}/${a}`);return web3IsInjected(),console.log(`web3Enable: Enabled ${n.length} extension${n.length!==1?"s":""}: ${s.join(", ")}`),n}))),web3EnablePromise}async function web3Accounts({accountType:r,extensions:e,ss58Format:t}={}){if(!web3EnablePromise)return throwError("web3Accounts");const n=[],s=await web3EnablePromise;(await Promise.all(s.filter(({name:o})=>!e||e.includes(o)).map(async({accounts:o,name:c})=>{try{const h=await o.get();return mapAccounts(c,h.filter(({type:p})=>p&&r?r.includes(p):!0),t)}catch{return[]}}))).forEach(o=>{n.push(...o)});const a=n.map(({address:o})=>o);return console.log(`web3Accounts: Found ${n.length} address${n.length!==1?"es":""}: ${a.join(", ")}`),n}async function web3FromSource(r){if(!web3EnablePromise)return throwError("web3FromSource");const e=await web3EnablePromise,t=r&&e.find(({name:n})=>n===r);if(!t)throw new Error(`web3FromSource: Unable to find an injected ${r}`);return t}async function web3FromAddress(r){if(!web3EnablePromise)return throwError("web3FromAddress");const e=await web3Accounts();let t;if(r){const n=decodeAddress(r);t=e.find(s=>u8aEq(decodeAddress(s.address),n))}if(!t)throw new Error(`web3FromAddress: Unable to find injected ${r}`);return web3FromSource(t.meta.source)}export{ApiPromise as A,BN_ZERO as B,CodePromise as C,BN_ONE as D,BN_MILLION as E,isUndefined as F,isNull as G,formatBalance as H,u8aToString as I,isWasm as J,__generator as K,__spreadArray as L,__read as M,isHex as N,hexToU8a as O,assert$1 as P,formatNumber as Q,randomAsHex as R,TypeDefInfo as T,WsProvider as W,__awaiter as _,BN as a,isNumber as b,BN_TEN as c,Bytes as d,compactAddLength as e,BlueprintPromise as f,getTypeDef as g,web3Accounts as h,isBn as i,isTestChain as j,keyring as k,TypeRegistry as l,BN_THOUSAND as m,web3FromAddress as n,encodeTypeDef as o,polkadotIcon as p,getAugmentedNamespace as q,randomAsU8a as r,commonjsGlobal as s,ContractPromise as t,u8aToU8a as u,Abi as v,web3Enable as w,BN_TWO as x,bnToBn as y,extractTime as z};
