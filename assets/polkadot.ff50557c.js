var Ss=Object.defineProperty,Ts=Object.defineProperties;var Ps=Object.getOwnPropertyDescriptors;var xs=Object.getOwnPropertySymbols;var As=Object.prototype.hasOwnProperty,Es=Object.prototype.propertyIsEnumerable;var cs=(r,e,t)=>e in r?Ss(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,Ce=(r,e)=>{for(var t in e||(e={}))As.call(e,t)&&cs(r,t,e[t]);if(xs)for(var t of xs(e))Es.call(e,t)&&cs(r,t,e[t]);return r},Je=(r,e)=>Ts(r,Ps(e));var je=(r,e,t)=>(cs(r,typeof e!="symbol"?e+"":e,t),t),vs=(r,e,t)=>{if(!e.has(r))throw TypeError("Cannot "+t)};var T=(r,e,t)=>(vs(r,e,"read from private field"),t?t.call(r):e.get(r)),G=(r,e,t)=>{if(e.has(r))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(r):e.set(r,t)},te=(r,e,t,n)=>(vs(r,e,"write to private field"),n?n.call(r,t):e.set(r,t),t),ws=(r,e,t,n)=>({set _(s){te(r,e,s,t)},get _(){return T(r,e,n)}});const Gn={};var commonjsGlobal=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};function getAugmentedNamespace(r){if(r.__esModule)return r;var e=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(r).forEach(function(t){var n=Object.getOwnPropertyDescriptor(r,t);Object.defineProperty(e,t,n.get?n:{enumerable:!0,get:function(){return r[t]}})}),e}function commonjsRequire(r){throw new Error('Could not dynamically require "'+r+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}function evaluateThis$5(r){return r("return this")}const xglobal$5=typeof globalThis!="undefined"?globalThis:typeof global!="undefined"?global:typeof self!="undefined"?self:typeof window!="undefined"?window:evaluateThis$5(Function);function extractGlobal$1(r,e){return typeof xglobal$5[r]=="undefined"?e:xglobal$5[r]}class TextDecoder$2{constructor(e){}decode(e){let t="";for(let n=0;n<e.length;n++)t+=String.fromCharCode(e[n]);return t}}const TextDecoder$1=extractGlobal$1("TextDecoder",TextDecoder$2);function evaluateThis$4(r){return r("return this")}const xglobal$4=typeof globalThis!="undefined"?globalThis:typeof global!="undefined"?global:typeof self!="undefined"?self:typeof window!="undefined"?window:evaluateThis$4(Function);function extractGlobal(r,e){return typeof xglobal$4[r]=="undefined"?e:xglobal$4[r]}class TextEncoder$2{encode(e){const t=new Uint8Array(e.length);for(let n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}}const TextEncoder$1=extractGlobal("TextEncoder",TextEncoder$2);function isFunction$3(r){return typeof r=="function"}function isNull(r){return r===null}function isUndefined(r){return typeof r=="undefined"}function assert(r,e){if(!r)throw new Error(isFunction$3(e)?e():e)}function assertReturn(r,e){return assert(!isUndefined(r)&&!isNull(r),e),r}function assertUnreachable(r){throw new Error(`This codepath should be unreachable. Unhandled input: ${r}`)}function arrayChunk(r,e){const t=Math.ceil(r.length/e),n=Array(t);for(let s=0;s<t;s++){const i=s*e;n[s]=r.slice(i,i+e)}return n}function arrayFlatten(r){let e=0;for(let s=0;s<r.length;s++)e+=r[s].length;const t=new Array(e);let n=-1;for(let s=0;s<r.length;s++){const i=r[s];for(let a=0;a<i.length;a++)t[++n]=i[a]}return t}function evaluateThis$3(r){return r("return this")}const xglobal$3=typeof globalThis!="undefined"?globalThis:typeof global!="undefined"?global:typeof self!="undefined"?self:typeof window!="undefined"?window:evaluateThis$3(Function),BigInt$1=typeof xglobal$3.BigInt=="function"&&typeof xglobal$3.BigInt.asIntN=="function"?xglobal$3.BigInt:()=>Number.NaN,_0n$2=BigInt$1(0),_1n$2=BigInt$1(1);BigInt$1(1e6);BigInt$1(1e9);BigInt$1(Number.MAX_SAFE_INTEGER);function objectKeys(r){return Object.keys(r)}function objectSpread(r,...e){for(let t=0;t<e.length;t++){const n=e[t];if(n){const s=objectKeys(n);for(let i=0;i<s.length;i++){const a=s[i];r[a]=n[a]}}}return r}const U8_MAX=BigInt$1(256),U16_MAX=BigInt$1(256*256);function xor(r){const e=new Uint8Array(r.length),t=new DataView(r.buffer,r.byteOffset),n=new DataView(e.buffer),s=r.length%2,i=r.length-s;for(let a=0;a<i;a+=2)n.setUint16(a,t.getUint16(a)^65535);return s&&n.setUint8(i,t.getUint8(i)^255),e}function toBigInt(r){const e=new DataView(r.buffer,r.byteOffset),t=r.length%2,n=r.length-t;let s=BigInt$1(0);for(let i=0;i<n;i+=2)s=s*U16_MAX+BigInt$1(e.getUint16(i));return t&&(s=s*U8_MAX+BigInt$1(e.getUint8(n))),s}function u8aToBigInt(r,e={}){if(!r||!r.length)return BigInt$1(0);const{isLe:t,isNegative:n}=objectSpread({isLe:!0,isNegative:!1},e),s=t?r.reverse():r;return n?toBigInt(xor(s))*-_1n$2-_1n$2:toBigInt(s)}const U8_TO_HEX=new Array(256),U16_TO_HEX=new Array(256*256),HEX_TO_U8={},HEX_TO_U16={};for(let r=0;r<256;r++){const e=r.toString(16).padStart(2,"0");U8_TO_HEX[r]=e,HEX_TO_U8[e]=r}for(let r=0;r<256;r++)for(let e=0;e<256;e++){const t=U8_TO_HEX[r]+U8_TO_HEX[e],n=r<<8|e;U16_TO_HEX[n]=t,HEX_TO_U16[t]=n}const REGEX_HEX_PREFIXED=/^0x[\da-fA-F]+$/,REGEX_HEX_NOPREFIX=/^[\da-fA-F]+$/;function isHex(r,e=-1,t){return typeof r=="string"&&(r==="0x"||REGEX_HEX_PREFIXED.test(r))&&(e===-1?t||r.length%2===0:r.length===2+Math.ceil(e/4))}function hexStripPrefix(r){if(!r||r==="0x")return"";if(REGEX_HEX_PREFIXED.test(r))return r.substr(2);if(REGEX_HEX_NOPREFIX.test(r))return r;throw new Error(`Expected hex value to convert, found '${r}'`)}function hexToU8a(r,e=-1){if(!r)return new Uint8Array;const t=hexStripPrefix(r).toLowerCase(),n=t.length/2,s=Math.ceil(e===-1?n:e/8),i=new Uint8Array(s),a=s>n?s-n:0,o=new DataView(i.buffer,a),c=(s-a)%2,h=s-a-c;for(let y=0;y<h;y+=2)o.setUint16(y,HEX_TO_U16[t.substr(y*2,4)]);return c&&o.setUint8(h,HEX_TO_U8[t.substr(t.length-2,2)]),i}function hexToBigInt(r,e={}){return!r||r==="0x"?BigInt$1(0):u8aToBigInt(hexToU8a(r),objectSpread({isLe:!1,isNegative:!1},e))}var bn={exports:{}};(function(r){(function(e,t){function n(b,u){if(!b)throw new Error(u||"Assertion failed")}function s(b,u){b.super_=u;var p=function(){};p.prototype=u.prototype,b.prototype=new p,b.prototype.constructor=b}function i(b,u,p){if(i.isBN(b))return b;this.negative=0,this.words=null,this.length=0,this.red=null,b!==null&&((u==="le"||u==="be")&&(p=u,u=10),this._init(b||0,u||10,p||"be"))}typeof e=="object"?e.exports=i:t.BN=i,i.BN=i,i.wordSize=26;var a;try{typeof window!="undefined"&&typeof window.Buffer!="undefined"?a=window.Buffer:a=require("buffer").Buffer}catch{}i.isBN=function(u){return u instanceof i?!0:u!==null&&typeof u=="object"&&u.constructor.wordSize===i.wordSize&&Array.isArray(u.words)},i.max=function(u,p){return u.cmp(p)>0?u:p},i.min=function(u,p){return u.cmp(p)<0?u:p},i.prototype._init=function(u,p,v){if(typeof u=="number")return this._initNumber(u,p,v);if(typeof u=="object")return this._initArray(u,p,v);p==="hex"&&(p=16),n(p===(p|0)&&p>=2&&p<=36),u=u.toString().replace(/\s+/g,"");var M=0;u[0]==="-"&&(M++,this.negative=1),M<u.length&&(p===16?this._parseHex(u,M,v):(this._parseBase(u,p,M),v==="le"&&this._initArray(this.toArray(),p,v)))},i.prototype._initNumber=function(u,p,v){u<0&&(this.negative=1,u=-u),u<67108864?(this.words=[u&67108863],this.length=1):u<4503599627370496?(this.words=[u&67108863,u/67108864&67108863],this.length=2):(n(u<9007199254740992),this.words=[u&67108863,u/67108864&67108863,1],this.length=3),v==="le"&&this._initArray(this.toArray(),p,v)},i.prototype._initArray=function(u,p,v){if(n(typeof u.length=="number"),u.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(u.length/3),this.words=new Array(this.length);for(var M=0;M<this.length;M++)this.words[M]=0;var B,U,z=0;if(v==="be")for(M=u.length-1,B=0;M>=0;M-=3)U=u[M]|u[M-1]<<8|u[M-2]<<16,this.words[B]|=U<<z&67108863,this.words[B+1]=U>>>26-z&67108863,z+=24,z>=26&&(z-=26,B++);else if(v==="le")for(M=0,B=0;M<u.length;M+=3)U=u[M]|u[M+1]<<8|u[M+2]<<16,this.words[B]|=U<<z&67108863,this.words[B+1]=U>>>26-z&67108863,z+=24,z>=26&&(z-=26,B++);return this._strip()};function o(b,u){var p=b.charCodeAt(u);if(p>=48&&p<=57)return p-48;if(p>=65&&p<=70)return p-55;if(p>=97&&p<=102)return p-87;n(!1,"Invalid character in "+b)}function c(b,u,p){var v=o(b,p);return p-1>=u&&(v|=o(b,p-1)<<4),v}i.prototype._parseHex=function(u,p,v){this.length=Math.ceil((u.length-p)/6),this.words=new Array(this.length);for(var M=0;M<this.length;M++)this.words[M]=0;var B=0,U=0,z;if(v==="be")for(M=u.length-1;M>=p;M-=2)z=c(u,p,M)<<B,this.words[U]|=z&67108863,B>=18?(B-=18,U+=1,this.words[U]|=z>>>26):B+=8;else{var k=u.length-p;for(M=k%2===0?p+1:p;M<u.length;M+=2)z=c(u,p,M)<<B,this.words[U]|=z&67108863,B>=18?(B-=18,U+=1,this.words[U]|=z>>>26):B+=8}this._strip()};function h(b,u,p,v){for(var M=0,B=0,U=Math.min(b.length,p),z=u;z<U;z++){var k=b.charCodeAt(z)-48;M*=v,k>=49?B=k-49+10:k>=17?B=k-17+10:B=k,n(k>=0&&B<v,"Invalid character"),M+=B}return M}i.prototype._parseBase=function(u,p,v){this.words=[0],this.length=1;for(var M=0,B=1;B<=67108863;B*=p)M++;M--,B=B/p|0;for(var U=u.length-v,z=U%M,k=Math.min(U,U-z)+v,m=0,I=v;I<k;I+=M)m=h(u,I,I+M,p),this.imuln(B),this.words[0]+m<67108864?this.words[0]+=m:this._iaddn(m);if(z!==0){var ge=1;for(m=h(u,I,u.length,p),I=0;I<z;I++)ge*=p;this.imuln(ge),this.words[0]+m<67108864?this.words[0]+=m:this._iaddn(m)}this._strip()},i.prototype.copy=function(u){u.words=new Array(this.length);for(var p=0;p<this.length;p++)u.words[p]=this.words[p];u.length=this.length,u.negative=this.negative,u.red=this.red};function y(b,u){b.words=u.words,b.length=u.length,b.negative=u.negative,b.red=u.red}if(i.prototype._move=function(u){y(u,this)},i.prototype.clone=function(){var u=new i(null);return this.copy(u),u},i.prototype._expand=function(u){for(;this.length<u;)this.words[this.length++]=0;return this},i.prototype._strip=function(){for(;this.length>1&&this.words[this.length-1]===0;)this.length--;return this._normSign()},i.prototype._normSign=function(){return this.length===1&&this.words[0]===0&&(this.negative=0),this},typeof Symbol!="undefined"&&typeof Symbol.for=="function")try{i.prototype[Symbol.for("nodejs.util.inspect.custom")]=x}catch{i.prototype.inspect=x}else i.prototype.inspect=x;function x(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var E=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],V=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],F=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];i.prototype.toString=function(u,p){u=u||10,p=p|0||1;var v;if(u===16||u==="hex"){v="";for(var M=0,B=0,U=0;U<this.length;U++){var z=this.words[U],k=((z<<M|B)&16777215).toString(16);B=z>>>24-M&16777215,B!==0||U!==this.length-1?v=E[6-k.length]+k+v:v=k+v,M+=2,M>=26&&(M-=26,U--)}for(B!==0&&(v=B.toString(16)+v);v.length%p!==0;)v="0"+v;return this.negative!==0&&(v="-"+v),v}if(u===(u|0)&&u>=2&&u<=36){var m=V[u],I=F[u];v="";var ge=this.clone();for(ge.negative=0;!ge.isZero();){var ae=ge.modrn(I).toString(u);ge=ge.idivn(I),ge.isZero()?v=ae+v:v=E[m-ae.length]+ae+v}for(this.isZero()&&(v="0"+v);v.length%p!==0;)v="0"+v;return this.negative!==0&&(v="-"+v),v}n(!1,"Base should be between 2 and 36")},i.prototype.toNumber=function(){var u=this.words[0];return this.length===2?u+=this.words[1]*67108864:this.length===3&&this.words[2]===1?u+=4503599627370496+this.words[1]*67108864:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),this.negative!==0?-u:u},i.prototype.toJSON=function(){return this.toString(16,2)},a&&(i.prototype.toBuffer=function(u,p){return this.toArrayLike(a,u,p)}),i.prototype.toArray=function(u,p){return this.toArrayLike(Array,u,p)};var q=function(u,p){return u.allocUnsafe?u.allocUnsafe(p):new u(p)};i.prototype.toArrayLike=function(u,p,v){this._strip();var M=this.byteLength(),B=v||Math.max(1,M);n(M<=B,"byte array longer than desired length"),n(B>0,"Requested array length <= 0");var U=q(u,B),z=p==="le"?"LE":"BE";return this["_toArrayLike"+z](U,M),U},i.prototype._toArrayLikeLE=function(u,p){for(var v=0,M=0,B=0,U=0;B<this.length;B++){var z=this.words[B]<<U|M;u[v++]=z&255,v<u.length&&(u[v++]=z>>8&255),v<u.length&&(u[v++]=z>>16&255),U===6?(v<u.length&&(u[v++]=z>>24&255),M=0,U=0):(M=z>>>24,U+=2)}if(v<u.length)for(u[v++]=M;v<u.length;)u[v++]=0},i.prototype._toArrayLikeBE=function(u,p){for(var v=u.length-1,M=0,B=0,U=0;B<this.length;B++){var z=this.words[B]<<U|M;u[v--]=z&255,v>=0&&(u[v--]=z>>8&255),v>=0&&(u[v--]=z>>16&255),U===6?(v>=0&&(u[v--]=z>>24&255),M=0,U=0):(M=z>>>24,U+=2)}if(v>=0)for(u[v--]=M;v>=0;)u[v--]=0},Math.clz32?i.prototype._countBits=function(u){return 32-Math.clz32(u)}:i.prototype._countBits=function(u){var p=u,v=0;return p>=4096&&(v+=13,p>>>=13),p>=64&&(v+=7,p>>>=7),p>=8&&(v+=4,p>>>=4),p>=2&&(v+=2,p>>>=2),v+p},i.prototype._zeroBits=function(u){if(u===0)return 26;var p=u,v=0;return(p&8191)===0&&(v+=13,p>>>=13),(p&127)===0&&(v+=7,p>>>=7),(p&15)===0&&(v+=4,p>>>=4),(p&3)===0&&(v+=2,p>>>=2),(p&1)===0&&v++,v},i.prototype.bitLength=function(){var u=this.words[this.length-1],p=this._countBits(u);return(this.length-1)*26+p};function X(b){for(var u=new Array(b.bitLength()),p=0;p<u.length;p++){var v=p/26|0,M=p%26;u[p]=b.words[v]>>>M&1}return u}i.prototype.zeroBits=function(){if(this.isZero())return 0;for(var u=0,p=0;p<this.length;p++){var v=this._zeroBits(this.words[p]);if(u+=v,v!==26)break}return u},i.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},i.prototype.toTwos=function(u){return this.negative!==0?this.abs().inotn(u).iaddn(1):this.clone()},i.prototype.fromTwos=function(u){return this.testn(u-1)?this.notn(u).iaddn(1).ineg():this.clone()},i.prototype.isNeg=function(){return this.negative!==0},i.prototype.neg=function(){return this.clone().ineg()},i.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},i.prototype.iuor=function(u){for(;this.length<u.length;)this.words[this.length++]=0;for(var p=0;p<u.length;p++)this.words[p]=this.words[p]|u.words[p];return this._strip()},i.prototype.ior=function(u){return n((this.negative|u.negative)===0),this.iuor(u)},i.prototype.or=function(u){return this.length>u.length?this.clone().ior(u):u.clone().ior(this)},i.prototype.uor=function(u){return this.length>u.length?this.clone().iuor(u):u.clone().iuor(this)},i.prototype.iuand=function(u){var p;this.length>u.length?p=u:p=this;for(var v=0;v<p.length;v++)this.words[v]=this.words[v]&u.words[v];return this.length=p.length,this._strip()},i.prototype.iand=function(u){return n((this.negative|u.negative)===0),this.iuand(u)},i.prototype.and=function(u){return this.length>u.length?this.clone().iand(u):u.clone().iand(this)},i.prototype.uand=function(u){return this.length>u.length?this.clone().iuand(u):u.clone().iuand(this)},i.prototype.iuxor=function(u){var p,v;this.length>u.length?(p=this,v=u):(p=u,v=this);for(var M=0;M<v.length;M++)this.words[M]=p.words[M]^v.words[M];if(this!==p)for(;M<p.length;M++)this.words[M]=p.words[M];return this.length=p.length,this._strip()},i.prototype.ixor=function(u){return n((this.negative|u.negative)===0),this.iuxor(u)},i.prototype.xor=function(u){return this.length>u.length?this.clone().ixor(u):u.clone().ixor(this)},i.prototype.uxor=function(u){return this.length>u.length?this.clone().iuxor(u):u.clone().iuxor(this)},i.prototype.inotn=function(u){n(typeof u=="number"&&u>=0);var p=Math.ceil(u/26)|0,v=u%26;this._expand(p),v>0&&p--;for(var M=0;M<p;M++)this.words[M]=~this.words[M]&67108863;return v>0&&(this.words[M]=~this.words[M]&67108863>>26-v),this._strip()},i.prototype.notn=function(u){return this.clone().inotn(u)},i.prototype.setn=function(u,p){n(typeof u=="number"&&u>=0);var v=u/26|0,M=u%26;return this._expand(v+1),p?this.words[v]=this.words[v]|1<<M:this.words[v]=this.words[v]&~(1<<M),this._strip()},i.prototype.iadd=function(u){var p;if(this.negative!==0&&u.negative===0)return this.negative=0,p=this.isub(u),this.negative^=1,this._normSign();if(this.negative===0&&u.negative!==0)return u.negative=0,p=this.isub(u),u.negative=1,p._normSign();var v,M;this.length>u.length?(v=this,M=u):(v=u,M=this);for(var B=0,U=0;U<M.length;U++)p=(v.words[U]|0)+(M.words[U]|0)+B,this.words[U]=p&67108863,B=p>>>26;for(;B!==0&&U<v.length;U++)p=(v.words[U]|0)+B,this.words[U]=p&67108863,B=p>>>26;if(this.length=v.length,B!==0)this.words[this.length]=B,this.length++;else if(v!==this)for(;U<v.length;U++)this.words[U]=v.words[U];return this},i.prototype.add=function(u){var p;return u.negative!==0&&this.negative===0?(u.negative=0,p=this.sub(u),u.negative^=1,p):u.negative===0&&this.negative!==0?(this.negative=0,p=u.sub(this),this.negative=1,p):this.length>u.length?this.clone().iadd(u):u.clone().iadd(this)},i.prototype.isub=function(u){if(u.negative!==0){u.negative=0;var p=this.iadd(u);return u.negative=1,p._normSign()}else if(this.negative!==0)return this.negative=0,this.iadd(u),this.negative=1,this._normSign();var v=this.cmp(u);if(v===0)return this.negative=0,this.length=1,this.words[0]=0,this;var M,B;v>0?(M=this,B=u):(M=u,B=this);for(var U=0,z=0;z<B.length;z++)p=(M.words[z]|0)-(B.words[z]|0)+U,U=p>>26,this.words[z]=p&67108863;for(;U!==0&&z<M.length;z++)p=(M.words[z]|0)+U,U=p>>26,this.words[z]=p&67108863;if(U===0&&z<M.length&&M!==this)for(;z<M.length;z++)this.words[z]=M.words[z];return this.length=Math.max(this.length,z),M!==this&&(this.negative=1),this._strip()},i.prototype.sub=function(u){return this.clone().isub(u)};function Y(b,u,p){p.negative=u.negative^b.negative;var v=b.length+u.length|0;p.length=v,v=v-1|0;var M=b.words[0]|0,B=u.words[0]|0,U=M*B,z=U&67108863,k=U/67108864|0;p.words[0]=z;for(var m=1;m<v;m++){for(var I=k>>>26,ge=k&67108863,ae=Math.min(m,u.length-1),be=Math.max(0,m-b.length+1);be<=ae;be++){var gt=m-be|0;M=b.words[gt]|0,B=u.words[be]|0,U=M*B+ge,I+=U/67108864|0,ge=U&67108863}p.words[m]=ge|0,k=I|0}return k!==0?p.words[m]=k|0:p.length--,p._strip()}var oe=function(u,p,v){var M=u.words,B=p.words,U=v.words,z=0,k,m,I,ge=M[0]|0,ae=ge&8191,be=ge>>>13,gt=M[1]|0,We=gt&8191,Ge=gt>>>13,tr=M[2]|0,dt=tr&8191,tt=tr>>>13,sn=M[3]|0,bt=sn&8191,xt=sn>>>13,Kn=M[4]|0,ft=Kn&8191,ht=Kn>>>13,jt=M[5]|0,rt=jt&8191,pt=jt>>>13,gr=M[6]|0,at=gr&8191,nt=gr>>>13,br=M[7]|0,st=br&8191,ot=br>>>13,xr=M[8]|0,mt=xr&8191,vt=xr>>>13,vr=M[9]|0,ct=vr&8191,it=vr>>>13,Yt=B[0]|0,Ye=Yt&8191,Qe=Yt>>>13,rr=B[1]|0,$e=rr&8191,et=rr>>>13,wr=B[2]|0,yt=wr&8191,wt=wr>>>13,_n=B[3]|0,Ke=_n&8191,Ze=_n>>>13,Wt=B[4]|0,ut=Wt&8191,lt=Wt>>>13,an=B[5]|0,St=an&8191,Fe=an>>>13,on=B[6]|0,g=on&8191,w=on>>>13,P=B[7]|0,d=P&8191,A=P>>>13,D=B[8]|0,L=D&8191,_=D>>>13,se=B[9]|0,ce=se&8191,ie=se>>>13;v.negative=u.negative^p.negative,v.length=19,k=Math.imul(ae,Ye),m=Math.imul(ae,Qe),m=m+Math.imul(be,Ye)|0,I=Math.imul(be,Qe);var Le=(z+k|0)+((m&8191)<<13)|0;z=(I+(m>>>13)|0)+(Le>>>26)|0,Le&=67108863,k=Math.imul(We,Ye),m=Math.imul(We,Qe),m=m+Math.imul(Ge,Ye)|0,I=Math.imul(Ge,Qe),k=k+Math.imul(ae,$e)|0,m=m+Math.imul(ae,et)|0,m=m+Math.imul(be,$e)|0,I=I+Math.imul(be,et)|0;var he=(z+k|0)+((m&8191)<<13)|0;z=(I+(m>>>13)|0)+(he>>>26)|0,he&=67108863,k=Math.imul(dt,Ye),m=Math.imul(dt,Qe),m=m+Math.imul(tt,Ye)|0,I=Math.imul(tt,Qe),k=k+Math.imul(We,$e)|0,m=m+Math.imul(We,et)|0,m=m+Math.imul(Ge,$e)|0,I=I+Math.imul(Ge,et)|0,k=k+Math.imul(ae,yt)|0,m=m+Math.imul(ae,wt)|0,m=m+Math.imul(be,yt)|0,I=I+Math.imul(be,wt)|0;var Se=(z+k|0)+((m&8191)<<13)|0;z=(I+(m>>>13)|0)+(Se>>>26)|0,Se&=67108863,k=Math.imul(bt,Ye),m=Math.imul(bt,Qe),m=m+Math.imul(xt,Ye)|0,I=Math.imul(xt,Qe),k=k+Math.imul(dt,$e)|0,m=m+Math.imul(dt,et)|0,m=m+Math.imul(tt,$e)|0,I=I+Math.imul(tt,et)|0,k=k+Math.imul(We,yt)|0,m=m+Math.imul(We,wt)|0,m=m+Math.imul(Ge,yt)|0,I=I+Math.imul(Ge,wt)|0,k=k+Math.imul(ae,Ke)|0,m=m+Math.imul(ae,Ze)|0,m=m+Math.imul(be,Ke)|0,I=I+Math.imul(be,Ze)|0;var Te=(z+k|0)+((m&8191)<<13)|0;z=(I+(m>>>13)|0)+(Te>>>26)|0,Te&=67108863,k=Math.imul(ft,Ye),m=Math.imul(ft,Qe),m=m+Math.imul(ht,Ye)|0,I=Math.imul(ht,Qe),k=k+Math.imul(bt,$e)|0,m=m+Math.imul(bt,et)|0,m=m+Math.imul(xt,$e)|0,I=I+Math.imul(xt,et)|0,k=k+Math.imul(dt,yt)|0,m=m+Math.imul(dt,wt)|0,m=m+Math.imul(tt,yt)|0,I=I+Math.imul(tt,wt)|0,k=k+Math.imul(We,Ke)|0,m=m+Math.imul(We,Ze)|0,m=m+Math.imul(Ge,Ke)|0,I=I+Math.imul(Ge,Ze)|0,k=k+Math.imul(ae,ut)|0,m=m+Math.imul(ae,lt)|0,m=m+Math.imul(be,ut)|0,I=I+Math.imul(be,lt)|0;var Ne=(z+k|0)+((m&8191)<<13)|0;z=(I+(m>>>13)|0)+(Ne>>>26)|0,Ne&=67108863,k=Math.imul(rt,Ye),m=Math.imul(rt,Qe),m=m+Math.imul(pt,Ye)|0,I=Math.imul(pt,Qe),k=k+Math.imul(ft,$e)|0,m=m+Math.imul(ft,et)|0,m=m+Math.imul(ht,$e)|0,I=I+Math.imul(ht,et)|0,k=k+Math.imul(bt,yt)|0,m=m+Math.imul(bt,wt)|0,m=m+Math.imul(xt,yt)|0,I=I+Math.imul(xt,wt)|0,k=k+Math.imul(dt,Ke)|0,m=m+Math.imul(dt,Ze)|0,m=m+Math.imul(tt,Ke)|0,I=I+Math.imul(tt,Ze)|0,k=k+Math.imul(We,ut)|0,m=m+Math.imul(We,lt)|0,m=m+Math.imul(Ge,ut)|0,I=I+Math.imul(Ge,lt)|0,k=k+Math.imul(ae,St)|0,m=m+Math.imul(ae,Fe)|0,m=m+Math.imul(be,St)|0,I=I+Math.imul(be,Fe)|0;var Me=(z+k|0)+((m&8191)<<13)|0;z=(I+(m>>>13)|0)+(Me>>>26)|0,Me&=67108863,k=Math.imul(at,Ye),m=Math.imul(at,Qe),m=m+Math.imul(nt,Ye)|0,I=Math.imul(nt,Qe),k=k+Math.imul(rt,$e)|0,m=m+Math.imul(rt,et)|0,m=m+Math.imul(pt,$e)|0,I=I+Math.imul(pt,et)|0,k=k+Math.imul(ft,yt)|0,m=m+Math.imul(ft,wt)|0,m=m+Math.imul(ht,yt)|0,I=I+Math.imul(ht,wt)|0,k=k+Math.imul(bt,Ke)|0,m=m+Math.imul(bt,Ze)|0,m=m+Math.imul(xt,Ke)|0,I=I+Math.imul(xt,Ze)|0,k=k+Math.imul(dt,ut)|0,m=m+Math.imul(dt,lt)|0,m=m+Math.imul(tt,ut)|0,I=I+Math.imul(tt,lt)|0,k=k+Math.imul(We,St)|0,m=m+Math.imul(We,Fe)|0,m=m+Math.imul(Ge,St)|0,I=I+Math.imul(Ge,Fe)|0,k=k+Math.imul(ae,g)|0,m=m+Math.imul(ae,w)|0,m=m+Math.imul(be,g)|0,I=I+Math.imul(be,w)|0;var Pe=(z+k|0)+((m&8191)<<13)|0;z=(I+(m>>>13)|0)+(Pe>>>26)|0,Pe&=67108863,k=Math.imul(st,Ye),m=Math.imul(st,Qe),m=m+Math.imul(ot,Ye)|0,I=Math.imul(ot,Qe),k=k+Math.imul(at,$e)|0,m=m+Math.imul(at,et)|0,m=m+Math.imul(nt,$e)|0,I=I+Math.imul(nt,et)|0,k=k+Math.imul(rt,yt)|0,m=m+Math.imul(rt,wt)|0,m=m+Math.imul(pt,yt)|0,I=I+Math.imul(pt,wt)|0,k=k+Math.imul(ft,Ke)|0,m=m+Math.imul(ft,Ze)|0,m=m+Math.imul(ht,Ke)|0,I=I+Math.imul(ht,Ze)|0,k=k+Math.imul(bt,ut)|0,m=m+Math.imul(bt,lt)|0,m=m+Math.imul(xt,ut)|0,I=I+Math.imul(xt,lt)|0,k=k+Math.imul(dt,St)|0,m=m+Math.imul(dt,Fe)|0,m=m+Math.imul(tt,St)|0,I=I+Math.imul(tt,Fe)|0,k=k+Math.imul(We,g)|0,m=m+Math.imul(We,w)|0,m=m+Math.imul(Ge,g)|0,I=I+Math.imul(Ge,w)|0,k=k+Math.imul(ae,d)|0,m=m+Math.imul(ae,A)|0,m=m+Math.imul(be,d)|0,I=I+Math.imul(be,A)|0;var Ee=(z+k|0)+((m&8191)<<13)|0;z=(I+(m>>>13)|0)+(Ee>>>26)|0,Ee&=67108863,k=Math.imul(mt,Ye),m=Math.imul(mt,Qe),m=m+Math.imul(vt,Ye)|0,I=Math.imul(vt,Qe),k=k+Math.imul(st,$e)|0,m=m+Math.imul(st,et)|0,m=m+Math.imul(ot,$e)|0,I=I+Math.imul(ot,et)|0,k=k+Math.imul(at,yt)|0,m=m+Math.imul(at,wt)|0,m=m+Math.imul(nt,yt)|0,I=I+Math.imul(nt,wt)|0,k=k+Math.imul(rt,Ke)|0,m=m+Math.imul(rt,Ze)|0,m=m+Math.imul(pt,Ke)|0,I=I+Math.imul(pt,Ze)|0,k=k+Math.imul(ft,ut)|0,m=m+Math.imul(ft,lt)|0,m=m+Math.imul(ht,ut)|0,I=I+Math.imul(ht,lt)|0,k=k+Math.imul(bt,St)|0,m=m+Math.imul(bt,Fe)|0,m=m+Math.imul(xt,St)|0,I=I+Math.imul(xt,Fe)|0,k=k+Math.imul(dt,g)|0,m=m+Math.imul(dt,w)|0,m=m+Math.imul(tt,g)|0,I=I+Math.imul(tt,w)|0,k=k+Math.imul(We,d)|0,m=m+Math.imul(We,A)|0,m=m+Math.imul(Ge,d)|0,I=I+Math.imul(Ge,A)|0,k=k+Math.imul(ae,L)|0,m=m+Math.imul(ae,_)|0,m=m+Math.imul(be,L)|0,I=I+Math.imul(be,_)|0;var Ae=(z+k|0)+((m&8191)<<13)|0;z=(I+(m>>>13)|0)+(Ae>>>26)|0,Ae&=67108863,k=Math.imul(ct,Ye),m=Math.imul(ct,Qe),m=m+Math.imul(it,Ye)|0,I=Math.imul(it,Qe),k=k+Math.imul(mt,$e)|0,m=m+Math.imul(mt,et)|0,m=m+Math.imul(vt,$e)|0,I=I+Math.imul(vt,et)|0,k=k+Math.imul(st,yt)|0,m=m+Math.imul(st,wt)|0,m=m+Math.imul(ot,yt)|0,I=I+Math.imul(ot,wt)|0,k=k+Math.imul(at,Ke)|0,m=m+Math.imul(at,Ze)|0,m=m+Math.imul(nt,Ke)|0,I=I+Math.imul(nt,Ze)|0,k=k+Math.imul(rt,ut)|0,m=m+Math.imul(rt,lt)|0,m=m+Math.imul(pt,ut)|0,I=I+Math.imul(pt,lt)|0,k=k+Math.imul(ft,St)|0,m=m+Math.imul(ft,Fe)|0,m=m+Math.imul(ht,St)|0,I=I+Math.imul(ht,Fe)|0,k=k+Math.imul(bt,g)|0,m=m+Math.imul(bt,w)|0,m=m+Math.imul(xt,g)|0,I=I+Math.imul(xt,w)|0,k=k+Math.imul(dt,d)|0,m=m+Math.imul(dt,A)|0,m=m+Math.imul(tt,d)|0,I=I+Math.imul(tt,A)|0,k=k+Math.imul(We,L)|0,m=m+Math.imul(We,_)|0,m=m+Math.imul(Ge,L)|0,I=I+Math.imul(Ge,_)|0,k=k+Math.imul(ae,ce)|0,m=m+Math.imul(ae,ie)|0,m=m+Math.imul(be,ce)|0,I=I+Math.imul(be,ie)|0;var pe=(z+k|0)+((m&8191)<<13)|0;z=(I+(m>>>13)|0)+(pe>>>26)|0,pe&=67108863,k=Math.imul(ct,$e),m=Math.imul(ct,et),m=m+Math.imul(it,$e)|0,I=Math.imul(it,et),k=k+Math.imul(mt,yt)|0,m=m+Math.imul(mt,wt)|0,m=m+Math.imul(vt,yt)|0,I=I+Math.imul(vt,wt)|0,k=k+Math.imul(st,Ke)|0,m=m+Math.imul(st,Ze)|0,m=m+Math.imul(ot,Ke)|0,I=I+Math.imul(ot,Ze)|0,k=k+Math.imul(at,ut)|0,m=m+Math.imul(at,lt)|0,m=m+Math.imul(nt,ut)|0,I=I+Math.imul(nt,lt)|0,k=k+Math.imul(rt,St)|0,m=m+Math.imul(rt,Fe)|0,m=m+Math.imul(pt,St)|0,I=I+Math.imul(pt,Fe)|0,k=k+Math.imul(ft,g)|0,m=m+Math.imul(ft,w)|0,m=m+Math.imul(ht,g)|0,I=I+Math.imul(ht,w)|0,k=k+Math.imul(bt,d)|0,m=m+Math.imul(bt,A)|0,m=m+Math.imul(xt,d)|0,I=I+Math.imul(xt,A)|0,k=k+Math.imul(dt,L)|0,m=m+Math.imul(dt,_)|0,m=m+Math.imul(tt,L)|0,I=I+Math.imul(tt,_)|0,k=k+Math.imul(We,ce)|0,m=m+Math.imul(We,ie)|0,m=m+Math.imul(Ge,ce)|0,I=I+Math.imul(Ge,ie)|0;var xe=(z+k|0)+((m&8191)<<13)|0;z=(I+(m>>>13)|0)+(xe>>>26)|0,xe&=67108863,k=Math.imul(ct,yt),m=Math.imul(ct,wt),m=m+Math.imul(it,yt)|0,I=Math.imul(it,wt),k=k+Math.imul(mt,Ke)|0,m=m+Math.imul(mt,Ze)|0,m=m+Math.imul(vt,Ke)|0,I=I+Math.imul(vt,Ze)|0,k=k+Math.imul(st,ut)|0,m=m+Math.imul(st,lt)|0,m=m+Math.imul(ot,ut)|0,I=I+Math.imul(ot,lt)|0,k=k+Math.imul(at,St)|0,m=m+Math.imul(at,Fe)|0,m=m+Math.imul(nt,St)|0,I=I+Math.imul(nt,Fe)|0,k=k+Math.imul(rt,g)|0,m=m+Math.imul(rt,w)|0,m=m+Math.imul(pt,g)|0,I=I+Math.imul(pt,w)|0,k=k+Math.imul(ft,d)|0,m=m+Math.imul(ft,A)|0,m=m+Math.imul(ht,d)|0,I=I+Math.imul(ht,A)|0,k=k+Math.imul(bt,L)|0,m=m+Math.imul(bt,_)|0,m=m+Math.imul(xt,L)|0,I=I+Math.imul(xt,_)|0,k=k+Math.imul(dt,ce)|0,m=m+Math.imul(dt,ie)|0,m=m+Math.imul(tt,ce)|0,I=I+Math.imul(tt,ie)|0;var de=(z+k|0)+((m&8191)<<13)|0;z=(I+(m>>>13)|0)+(de>>>26)|0,de&=67108863,k=Math.imul(ct,Ke),m=Math.imul(ct,Ze),m=m+Math.imul(it,Ke)|0,I=Math.imul(it,Ze),k=k+Math.imul(mt,ut)|0,m=m+Math.imul(mt,lt)|0,m=m+Math.imul(vt,ut)|0,I=I+Math.imul(vt,lt)|0,k=k+Math.imul(st,St)|0,m=m+Math.imul(st,Fe)|0,m=m+Math.imul(ot,St)|0,I=I+Math.imul(ot,Fe)|0,k=k+Math.imul(at,g)|0,m=m+Math.imul(at,w)|0,m=m+Math.imul(nt,g)|0,I=I+Math.imul(nt,w)|0,k=k+Math.imul(rt,d)|0,m=m+Math.imul(rt,A)|0,m=m+Math.imul(pt,d)|0,I=I+Math.imul(pt,A)|0,k=k+Math.imul(ft,L)|0,m=m+Math.imul(ft,_)|0,m=m+Math.imul(ht,L)|0,I=I+Math.imul(ht,_)|0,k=k+Math.imul(bt,ce)|0,m=m+Math.imul(bt,ie)|0,m=m+Math.imul(xt,ce)|0,I=I+Math.imul(xt,ie)|0;var me=(z+k|0)+((m&8191)<<13)|0;z=(I+(m>>>13)|0)+(me>>>26)|0,me&=67108863,k=Math.imul(ct,ut),m=Math.imul(ct,lt),m=m+Math.imul(it,ut)|0,I=Math.imul(it,lt),k=k+Math.imul(mt,St)|0,m=m+Math.imul(mt,Fe)|0,m=m+Math.imul(vt,St)|0,I=I+Math.imul(vt,Fe)|0,k=k+Math.imul(st,g)|0,m=m+Math.imul(st,w)|0,m=m+Math.imul(ot,g)|0,I=I+Math.imul(ot,w)|0,k=k+Math.imul(at,d)|0,m=m+Math.imul(at,A)|0,m=m+Math.imul(nt,d)|0,I=I+Math.imul(nt,A)|0,k=k+Math.imul(rt,L)|0,m=m+Math.imul(rt,_)|0,m=m+Math.imul(pt,L)|0,I=I+Math.imul(pt,_)|0,k=k+Math.imul(ft,ce)|0,m=m+Math.imul(ft,ie)|0,m=m+Math.imul(ht,ce)|0,I=I+Math.imul(ht,ie)|0;var ye=(z+k|0)+((m&8191)<<13)|0;z=(I+(m>>>13)|0)+(ye>>>26)|0,ye&=67108863,k=Math.imul(ct,St),m=Math.imul(ct,Fe),m=m+Math.imul(it,St)|0,I=Math.imul(it,Fe),k=k+Math.imul(mt,g)|0,m=m+Math.imul(mt,w)|0,m=m+Math.imul(vt,g)|0,I=I+Math.imul(vt,w)|0,k=k+Math.imul(st,d)|0,m=m+Math.imul(st,A)|0,m=m+Math.imul(ot,d)|0,I=I+Math.imul(ot,A)|0,k=k+Math.imul(at,L)|0,m=m+Math.imul(at,_)|0,m=m+Math.imul(nt,L)|0,I=I+Math.imul(nt,_)|0,k=k+Math.imul(rt,ce)|0,m=m+Math.imul(rt,ie)|0,m=m+Math.imul(pt,ce)|0,I=I+Math.imul(pt,ie)|0;var ue=(z+k|0)+((m&8191)<<13)|0;z=(I+(m>>>13)|0)+(ue>>>26)|0,ue&=67108863,k=Math.imul(ct,g),m=Math.imul(ct,w),m=m+Math.imul(it,g)|0,I=Math.imul(it,w),k=k+Math.imul(mt,d)|0,m=m+Math.imul(mt,A)|0,m=m+Math.imul(vt,d)|0,I=I+Math.imul(vt,A)|0,k=k+Math.imul(st,L)|0,m=m+Math.imul(st,_)|0,m=m+Math.imul(ot,L)|0,I=I+Math.imul(ot,_)|0,k=k+Math.imul(at,ce)|0,m=m+Math.imul(at,ie)|0,m=m+Math.imul(nt,ce)|0,I=I+Math.imul(nt,ie)|0;var W=(z+k|0)+((m&8191)<<13)|0;z=(I+(m>>>13)|0)+(W>>>26)|0,W&=67108863,k=Math.imul(ct,d),m=Math.imul(ct,A),m=m+Math.imul(it,d)|0,I=Math.imul(it,A),k=k+Math.imul(mt,L)|0,m=m+Math.imul(mt,_)|0,m=m+Math.imul(vt,L)|0,I=I+Math.imul(vt,_)|0,k=k+Math.imul(st,ce)|0,m=m+Math.imul(st,ie)|0,m=m+Math.imul(ot,ce)|0,I=I+Math.imul(ot,ie)|0;var K=(z+k|0)+((m&8191)<<13)|0;z=(I+(m>>>13)|0)+(K>>>26)|0,K&=67108863,k=Math.imul(ct,L),m=Math.imul(ct,_),m=m+Math.imul(it,L)|0,I=Math.imul(it,_),k=k+Math.imul(mt,ce)|0,m=m+Math.imul(mt,ie)|0,m=m+Math.imul(vt,ce)|0,I=I+Math.imul(vt,ie)|0;var ee=(z+k|0)+((m&8191)<<13)|0;z=(I+(m>>>13)|0)+(ee>>>26)|0,ee&=67108863,k=Math.imul(ct,ce),m=Math.imul(ct,ie),m=m+Math.imul(it,ce)|0,I=Math.imul(it,ie);var J=(z+k|0)+((m&8191)<<13)|0;return z=(I+(m>>>13)|0)+(J>>>26)|0,J&=67108863,U[0]=Le,U[1]=he,U[2]=Se,U[3]=Te,U[4]=Ne,U[5]=Me,U[6]=Pe,U[7]=Ee,U[8]=Ae,U[9]=pe,U[10]=xe,U[11]=de,U[12]=me,U[13]=ye,U[14]=ue,U[15]=W,U[16]=K,U[17]=ee,U[18]=J,z!==0&&(U[19]=z,v.length++),v};Math.imul||(oe=Y);function Q(b,u,p){p.negative=u.negative^b.negative,p.length=b.length+u.length;for(var v=0,M=0,B=0;B<p.length-1;B++){var U=M;M=0;for(var z=v&67108863,k=Math.min(B,u.length-1),m=Math.max(0,B-b.length+1);m<=k;m++){var I=B-m,ge=b.words[I]|0,ae=u.words[m]|0,be=ge*ae,gt=be&67108863;U=U+(be/67108864|0)|0,gt=gt+z|0,z=gt&67108863,U=U+(gt>>>26)|0,M+=U>>>26,U&=67108863}p.words[B]=z,v=U,U=M}return v!==0?p.words[B]=v:p.length--,p._strip()}function le(b,u,p){return Q(b,u,p)}i.prototype.mulTo=function(u,p){var v,M=this.length+u.length;return this.length===10&&u.length===10?v=oe(this,u,p):M<63?v=Y(this,u,p):M<1024?v=Q(this,u,p):v=le(this,u,p),v},i.prototype.mul=function(u){var p=new i(null);return p.words=new Array(this.length+u.length),this.mulTo(u,p)},i.prototype.mulf=function(u){var p=new i(null);return p.words=new Array(this.length+u.length),le(this,u,p)},i.prototype.imul=function(u){return this.clone().mulTo(u,this)},i.prototype.imuln=function(u){var p=u<0;p&&(u=-u),n(typeof u=="number"),n(u<67108864);for(var v=0,M=0;M<this.length;M++){var B=(this.words[M]|0)*u,U=(B&67108863)+(v&67108863);v>>=26,v+=B/67108864|0,v+=U>>>26,this.words[M]=U&67108863}return v!==0&&(this.words[M]=v,this.length++),p?this.ineg():this},i.prototype.muln=function(u){return this.clone().imuln(u)},i.prototype.sqr=function(){return this.mul(this)},i.prototype.isqr=function(){return this.imul(this.clone())},i.prototype.pow=function(u){var p=X(u);if(p.length===0)return new i(1);for(var v=this,M=0;M<p.length&&p[M]===0;M++,v=v.sqr());if(++M<p.length)for(var B=v.sqr();M<p.length;M++,B=B.sqr())p[M]!==0&&(v=v.mul(B));return v},i.prototype.iushln=function(u){n(typeof u=="number"&&u>=0);var p=u%26,v=(u-p)/26,M=67108863>>>26-p<<26-p,B;if(p!==0){var U=0;for(B=0;B<this.length;B++){var z=this.words[B]&M,k=(this.words[B]|0)-z<<p;this.words[B]=k|U,U=z>>>26-p}U&&(this.words[B]=U,this.length++)}if(v!==0){for(B=this.length-1;B>=0;B--)this.words[B+v]=this.words[B];for(B=0;B<v;B++)this.words[B]=0;this.length+=v}return this._strip()},i.prototype.ishln=function(u){return n(this.negative===0),this.iushln(u)},i.prototype.iushrn=function(u,p,v){n(typeof u=="number"&&u>=0);var M;p?M=(p-p%26)/26:M=0;var B=u%26,U=Math.min((u-B)/26,this.length),z=67108863^67108863>>>B<<B,k=v;if(M-=U,M=Math.max(0,M),k){for(var m=0;m<U;m++)k.words[m]=this.words[m];k.length=U}if(U!==0)if(this.length>U)for(this.length-=U,m=0;m<this.length;m++)this.words[m]=this.words[m+U];else this.words[0]=0,this.length=1;var I=0;for(m=this.length-1;m>=0&&(I!==0||m>=M);m--){var ge=this.words[m]|0;this.words[m]=I<<26-B|ge>>>B,I=ge&z}return k&&I!==0&&(k.words[k.length++]=I),this.length===0&&(this.words[0]=0,this.length=1),this._strip()},i.prototype.ishrn=function(u,p,v){return n(this.negative===0),this.iushrn(u,p,v)},i.prototype.shln=function(u){return this.clone().ishln(u)},i.prototype.ushln=function(u){return this.clone().iushln(u)},i.prototype.shrn=function(u){return this.clone().ishrn(u)},i.prototype.ushrn=function(u){return this.clone().iushrn(u)},i.prototype.testn=function(u){n(typeof u=="number"&&u>=0);var p=u%26,v=(u-p)/26,M=1<<p;if(this.length<=v)return!1;var B=this.words[v];return!!(B&M)},i.prototype.imaskn=function(u){n(typeof u=="number"&&u>=0);var p=u%26,v=(u-p)/26;if(n(this.negative===0,"imaskn works only with positive numbers"),this.length<=v)return this;if(p!==0&&v++,this.length=Math.min(v,this.length),p!==0){var M=67108863^67108863>>>p<<p;this.words[this.length-1]&=M}return this._strip()},i.prototype.maskn=function(u){return this.clone().imaskn(u)},i.prototype.iaddn=function(u){return n(typeof u=="number"),n(u<67108864),u<0?this.isubn(-u):this.negative!==0?this.length===1&&(this.words[0]|0)<=u?(this.words[0]=u-(this.words[0]|0),this.negative=0,this):(this.negative=0,this.isubn(u),this.negative=1,this):this._iaddn(u)},i.prototype._iaddn=function(u){this.words[0]+=u;for(var p=0;p<this.length&&this.words[p]>=67108864;p++)this.words[p]-=67108864,p===this.length-1?this.words[p+1]=1:this.words[p+1]++;return this.length=Math.max(this.length,p+1),this},i.prototype.isubn=function(u){if(n(typeof u=="number"),n(u<67108864),u<0)return this.iaddn(-u);if(this.negative!==0)return this.negative=0,this.iaddn(u),this.negative=1,this;if(this.words[0]-=u,this.length===1&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var p=0;p<this.length&&this.words[p]<0;p++)this.words[p]+=67108864,this.words[p+1]-=1;return this._strip()},i.prototype.addn=function(u){return this.clone().iaddn(u)},i.prototype.subn=function(u){return this.clone().isubn(u)},i.prototype.iabs=function(){return this.negative=0,this},i.prototype.abs=function(){return this.clone().iabs()},i.prototype._ishlnsubmul=function(u,p,v){var M=u.length+v,B;this._expand(M);var U,z=0;for(B=0;B<u.length;B++){U=(this.words[B+v]|0)+z;var k=(u.words[B]|0)*p;U-=k&67108863,z=(U>>26)-(k/67108864|0),this.words[B+v]=U&67108863}for(;B<this.length-v;B++)U=(this.words[B+v]|0)+z,z=U>>26,this.words[B+v]=U&67108863;if(z===0)return this._strip();for(n(z===-1),z=0,B=0;B<this.length;B++)U=-(this.words[B]|0)+z,z=U>>26,this.words[B]=U&67108863;return this.negative=1,this._strip()},i.prototype._wordDiv=function(u,p){var v=this.length-u.length,M=this.clone(),B=u,U=B.words[B.length-1]|0,z=this._countBits(U);v=26-z,v!==0&&(B=B.ushln(v),M.iushln(v),U=B.words[B.length-1]|0);var k=M.length-B.length,m;if(p!=="mod"){m=new i(null),m.length=k+1,m.words=new Array(m.length);for(var I=0;I<m.length;I++)m.words[I]=0}var ge=M.clone()._ishlnsubmul(B,1,k);ge.negative===0&&(M=ge,m&&(m.words[k]=1));for(var ae=k-1;ae>=0;ae--){var be=(M.words[B.length+ae]|0)*67108864+(M.words[B.length+ae-1]|0);for(be=Math.min(be/U|0,67108863),M._ishlnsubmul(B,be,ae);M.negative!==0;)be--,M.negative=0,M._ishlnsubmul(B,1,ae),M.isZero()||(M.negative^=1);m&&(m.words[ae]=be)}return m&&m._strip(),M._strip(),p!=="div"&&v!==0&&M.iushrn(v),{div:m||null,mod:M}},i.prototype.divmod=function(u,p,v){if(n(!u.isZero()),this.isZero())return{div:new i(0),mod:new i(0)};var M,B,U;return this.negative!==0&&u.negative===0?(U=this.neg().divmod(u,p),p!=="mod"&&(M=U.div.neg()),p!=="div"&&(B=U.mod.neg(),v&&B.negative!==0&&B.iadd(u)),{div:M,mod:B}):this.negative===0&&u.negative!==0?(U=this.divmod(u.neg(),p),p!=="mod"&&(M=U.div.neg()),{div:M,mod:U.mod}):(this.negative&u.negative)!==0?(U=this.neg().divmod(u.neg(),p),p!=="div"&&(B=U.mod.neg(),v&&B.negative!==0&&B.isub(u)),{div:U.div,mod:B}):u.length>this.length||this.cmp(u)<0?{div:new i(0),mod:this}:u.length===1?p==="div"?{div:this.divn(u.words[0]),mod:null}:p==="mod"?{div:null,mod:new i(this.modrn(u.words[0]))}:{div:this.divn(u.words[0]),mod:new i(this.modrn(u.words[0]))}:this._wordDiv(u,p)},i.prototype.div=function(u){return this.divmod(u,"div",!1).div},i.prototype.mod=function(u){return this.divmod(u,"mod",!1).mod},i.prototype.umod=function(u){return this.divmod(u,"mod",!0).mod},i.prototype.divRound=function(u){var p=this.divmod(u);if(p.mod.isZero())return p.div;var v=p.div.negative!==0?p.mod.isub(u):p.mod,M=u.ushrn(1),B=u.andln(1),U=v.cmp(M);return U<0||B===1&&U===0?p.div:p.div.negative!==0?p.div.isubn(1):p.div.iaddn(1)},i.prototype.modrn=function(u){var p=u<0;p&&(u=-u),n(u<=67108863);for(var v=(1<<26)%u,M=0,B=this.length-1;B>=0;B--)M=(v*M+(this.words[B]|0))%u;return p?-M:M},i.prototype.modn=function(u){return this.modrn(u)},i.prototype.idivn=function(u){var p=u<0;p&&(u=-u),n(u<=67108863);for(var v=0,M=this.length-1;M>=0;M--){var B=(this.words[M]|0)+v*67108864;this.words[M]=B/u|0,v=B%u}return this._strip(),p?this.ineg():this},i.prototype.divn=function(u){return this.clone().idivn(u)},i.prototype.egcd=function(u){n(u.negative===0),n(!u.isZero());var p=this,v=u.clone();p.negative!==0?p=p.umod(u):p=p.clone();for(var M=new i(1),B=new i(0),U=new i(0),z=new i(1),k=0;p.isEven()&&v.isEven();)p.iushrn(1),v.iushrn(1),++k;for(var m=v.clone(),I=p.clone();!p.isZero();){for(var ge=0,ae=1;(p.words[0]&ae)===0&&ge<26;++ge,ae<<=1);if(ge>0)for(p.iushrn(ge);ge-- >0;)(M.isOdd()||B.isOdd())&&(M.iadd(m),B.isub(I)),M.iushrn(1),B.iushrn(1);for(var be=0,gt=1;(v.words[0]&gt)===0&&be<26;++be,gt<<=1);if(be>0)for(v.iushrn(be);be-- >0;)(U.isOdd()||z.isOdd())&&(U.iadd(m),z.isub(I)),U.iushrn(1),z.iushrn(1);p.cmp(v)>=0?(p.isub(v),M.isub(U),B.isub(z)):(v.isub(p),U.isub(M),z.isub(B))}return{a:U,b:z,gcd:v.iushln(k)}},i.prototype._invmp=function(u){n(u.negative===0),n(!u.isZero());var p=this,v=u.clone();p.negative!==0?p=p.umod(u):p=p.clone();for(var M=new i(1),B=new i(0),U=v.clone();p.cmpn(1)>0&&v.cmpn(1)>0;){for(var z=0,k=1;(p.words[0]&k)===0&&z<26;++z,k<<=1);if(z>0)for(p.iushrn(z);z-- >0;)M.isOdd()&&M.iadd(U),M.iushrn(1);for(var m=0,I=1;(v.words[0]&I)===0&&m<26;++m,I<<=1);if(m>0)for(v.iushrn(m);m-- >0;)B.isOdd()&&B.iadd(U),B.iushrn(1);p.cmp(v)>=0?(p.isub(v),M.isub(B)):(v.isub(p),B.isub(M))}var ge;return p.cmpn(1)===0?ge=M:ge=B,ge.cmpn(0)<0&&ge.iadd(u),ge},i.prototype.gcd=function(u){if(this.isZero())return u.abs();if(u.isZero())return this.abs();var p=this.clone(),v=u.clone();p.negative=0,v.negative=0;for(var M=0;p.isEven()&&v.isEven();M++)p.iushrn(1),v.iushrn(1);do{for(;p.isEven();)p.iushrn(1);for(;v.isEven();)v.iushrn(1);var B=p.cmp(v);if(B<0){var U=p;p=v,v=U}else if(B===0||v.cmpn(1)===0)break;p.isub(v)}while(!0);return v.iushln(M)},i.prototype.invm=function(u){return this.egcd(u).a.umod(u)},i.prototype.isEven=function(){return(this.words[0]&1)===0},i.prototype.isOdd=function(){return(this.words[0]&1)===1},i.prototype.andln=function(u){return this.words[0]&u},i.prototype.bincn=function(u){n(typeof u=="number");var p=u%26,v=(u-p)/26,M=1<<p;if(this.length<=v)return this._expand(v+1),this.words[v]|=M,this;for(var B=M,U=v;B!==0&&U<this.length;U++){var z=this.words[U]|0;z+=B,B=z>>>26,z&=67108863,this.words[U]=z}return B!==0&&(this.words[U]=B,this.length++),this},i.prototype.isZero=function(){return this.length===1&&this.words[0]===0},i.prototype.cmpn=function(u){var p=u<0;if(this.negative!==0&&!p)return-1;if(this.negative===0&&p)return 1;this._strip();var v;if(this.length>1)v=1;else{p&&(u=-u),n(u<=67108863,"Number is too big");var M=this.words[0]|0;v=M===u?0:M<u?-1:1}return this.negative!==0?-v|0:v},i.prototype.cmp=function(u){if(this.negative!==0&&u.negative===0)return-1;if(this.negative===0&&u.negative!==0)return 1;var p=this.ucmp(u);return this.negative!==0?-p|0:p},i.prototype.ucmp=function(u){if(this.length>u.length)return 1;if(this.length<u.length)return-1;for(var p=0,v=this.length-1;v>=0;v--){var M=this.words[v]|0,B=u.words[v]|0;if(M!==B){M<B?p=-1:M>B&&(p=1);break}}return p},i.prototype.gtn=function(u){return this.cmpn(u)===1},i.prototype.gt=function(u){return this.cmp(u)===1},i.prototype.gten=function(u){return this.cmpn(u)>=0},i.prototype.gte=function(u){return this.cmp(u)>=0},i.prototype.ltn=function(u){return this.cmpn(u)===-1},i.prototype.lt=function(u){return this.cmp(u)===-1},i.prototype.lten=function(u){return this.cmpn(u)<=0},i.prototype.lte=function(u){return this.cmp(u)<=0},i.prototype.eqn=function(u){return this.cmpn(u)===0},i.prototype.eq=function(u){return this.cmp(u)===0},i.red=function(u){return new R(u)},i.prototype.toRed=function(u){return n(!this.red,"Already a number in reduction context"),n(this.negative===0,"red works only with positives"),u.convertTo(this)._forceRed(u)},i.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},i.prototype._forceRed=function(u){return this.red=u,this},i.prototype.forceRed=function(u){return n(!this.red,"Already a number in reduction context"),this._forceRed(u)},i.prototype.redAdd=function(u){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,u)},i.prototype.redIAdd=function(u){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,u)},i.prototype.redSub=function(u){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,u)},i.prototype.redISub=function(u){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,u)},i.prototype.redShl=function(u){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,u)},i.prototype.redMul=function(u){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,u),this.red.mul(this,u)},i.prototype.redIMul=function(u){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,u),this.red.imul(this,u)},i.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},i.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},i.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},i.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},i.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},i.prototype.redPow=function(u){return n(this.red&&!u.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,u)};var fe={k256:null,p224:null,p192:null,p25519:null};function ve(b,u){this.name=b,this.p=new i(u,16),this.n=this.p.bitLength(),this.k=new i(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}ve.prototype._tmp=function(){var u=new i(null);return u.words=new Array(Math.ceil(this.n/13)),u},ve.prototype.ireduce=function(u){var p=u,v;do this.split(p,this.tmp),p=this.imulK(p),p=p.iadd(this.tmp),v=p.bitLength();while(v>this.n);var M=v<this.n?-1:p.ucmp(this.p);return M===0?(p.words[0]=0,p.length=1):M>0?p.isub(this.p):p.strip!==void 0?p.strip():p._strip(),p},ve.prototype.split=function(u,p){u.iushrn(this.n,0,p)},ve.prototype.imulK=function(u){return u.imul(this.k)};function ke(){ve.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}s(ke,ve),ke.prototype.split=function(u,p){for(var v=4194303,M=Math.min(u.length,9),B=0;B<M;B++)p.words[B]=u.words[B];if(p.length=M,u.length<=9){u.words[0]=0,u.length=1;return}var U=u.words[9];for(p.words[p.length++]=U&v,B=10;B<u.length;B++){var z=u.words[B]|0;u.words[B-10]=(z&v)<<4|U>>>22,U=z}U>>>=22,u.words[B-10]=U,U===0&&u.length>10?u.length-=10:u.length-=9},ke.prototype.imulK=function(u){u.words[u.length]=0,u.words[u.length+1]=0,u.length+=2;for(var p=0,v=0;v<u.length;v++){var M=u.words[v]|0;p+=M*977,u.words[v]=p&67108863,p=M*64+(p/67108864|0)}return u.words[u.length-1]===0&&(u.length--,u.words[u.length-1]===0&&u.length--),u};function Ve(){ve.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}s(Ve,ve);function Re(){ve.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}s(Re,ve);function re(){ve.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}s(re,ve),re.prototype.imulK=function(u){for(var p=0,v=0;v<u.length;v++){var M=(u.words[v]|0)*19+p,B=M&67108863;M>>>=26,u.words[v]=B,p=M}return p!==0&&(u.words[u.length++]=p),u},i._prime=function(u){if(fe[u])return fe[u];var p;if(u==="k256")p=new ke;else if(u==="p224")p=new Ve;else if(u==="p192")p=new Re;else if(u==="p25519")p=new re;else throw new Error("Unknown prime "+u);return fe[u]=p,p};function R(b){if(typeof b=="string"){var u=i._prime(b);this.m=u.p,this.prime=u}else n(b.gtn(1),"modulus must be greater than 1"),this.m=b,this.prime=null}R.prototype._verify1=function(u){n(u.negative===0,"red works only with positives"),n(u.red,"red works only with red numbers")},R.prototype._verify2=function(u,p){n((u.negative|p.negative)===0,"red works only with positives"),n(u.red&&u.red===p.red,"red works only with red numbers")},R.prototype.imod=function(u){return this.prime?this.prime.ireduce(u)._forceRed(this):(y(u,u.umod(this.m)._forceRed(this)),u)},R.prototype.neg=function(u){return u.isZero()?u.clone():this.m.sub(u)._forceRed(this)},R.prototype.add=function(u,p){this._verify2(u,p);var v=u.add(p);return v.cmp(this.m)>=0&&v.isub(this.m),v._forceRed(this)},R.prototype.iadd=function(u,p){this._verify2(u,p);var v=u.iadd(p);return v.cmp(this.m)>=0&&v.isub(this.m),v},R.prototype.sub=function(u,p){this._verify2(u,p);var v=u.sub(p);return v.cmpn(0)<0&&v.iadd(this.m),v._forceRed(this)},R.prototype.isub=function(u,p){this._verify2(u,p);var v=u.isub(p);return v.cmpn(0)<0&&v.iadd(this.m),v},R.prototype.shl=function(u,p){return this._verify1(u),this.imod(u.ushln(p))},R.prototype.imul=function(u,p){return this._verify2(u,p),this.imod(u.imul(p))},R.prototype.mul=function(u,p){return this._verify2(u,p),this.imod(u.mul(p))},R.prototype.isqr=function(u){return this.imul(u,u.clone())},R.prototype.sqr=function(u){return this.mul(u,u)},R.prototype.sqrt=function(u){if(u.isZero())return u.clone();var p=this.m.andln(3);if(n(p%2===1),p===3){var v=this.m.add(new i(1)).iushrn(2);return this.pow(u,v)}for(var M=this.m.subn(1),B=0;!M.isZero()&&M.andln(1)===0;)B++,M.iushrn(1);n(!M.isZero());var U=new i(1).toRed(this),z=U.redNeg(),k=this.m.subn(1).iushrn(1),m=this.m.bitLength();for(m=new i(2*m*m).toRed(this);this.pow(m,k).cmp(z)!==0;)m.redIAdd(z);for(var I=this.pow(m,M),ge=this.pow(u,M.addn(1).iushrn(1)),ae=this.pow(u,M),be=B;ae.cmp(U)!==0;){for(var gt=ae,We=0;gt.cmp(U)!==0;We++)gt=gt.redSqr();n(We<be);var Ge=this.pow(I,new i(1).iushln(be-We-1));ge=ge.redMul(Ge),I=Ge.redSqr(),ae=ae.redMul(I),be=We}return ge},R.prototype.invm=function(u){var p=u._invmp(this.m);return p.negative!==0?(p.negative=0,this.imod(p).redNeg()):this.imod(p)},R.prototype.pow=function(u,p){if(p.isZero())return new i(1).toRed(this);if(p.cmpn(1)===0)return u.clone();var v=4,M=new Array(1<<v);M[0]=new i(1).toRed(this),M[1]=u;for(var B=2;B<M.length;B++)M[B]=this.mul(M[B-1],u);var U=M[0],z=0,k=0,m=p.bitLength()%26;for(m===0&&(m=26),B=p.length-1;B>=0;B--){for(var I=p.words[B],ge=m-1;ge>=0;ge--){var ae=I>>ge&1;if(U!==M[0]&&(U=this.sqr(U)),ae===0&&z===0){k=0;continue}z<<=1,z|=ae,k++,!(k!==v&&(B!==0||ge!==0))&&(U=this.mul(U,M[z]),k=0,z=0)}m=26}return U},R.prototype.convertTo=function(u){var p=u.umod(this.m);return p===u?p.clone():p},R.prototype.convertFrom=function(u){var p=u.clone();return p.red=null,p},i.mont=function(u){return new H(u)};function H(b){R.call(this,b),this.shift=this.m.bitLength(),this.shift%26!==0&&(this.shift+=26-this.shift%26),this.r=new i(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}s(H,R),H.prototype.convertTo=function(u){return this.imod(u.ushln(this.shift))},H.prototype.convertFrom=function(u){var p=this.imod(u.mul(this.rinv));return p.red=null,p},H.prototype.imul=function(u,p){if(u.isZero()||p.isZero())return u.words[0]=0,u.length=1,u;var v=u.imul(p),M=v.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),B=v.isub(M).iushrn(this.shift),U=B;return B.cmp(this.m)>=0?U=B.isub(this.m):B.cmpn(0)<0&&(U=B.iadd(this.m)),U._forceRed(this)},H.prototype.mul=function(u,p){if(u.isZero()||p.isZero())return new i(0)._forceRed(this);var v=u.mul(p),M=v.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),B=v.isub(M).iushrn(this.shift),U=B;return B.cmp(this.m)>=0?U=B.isub(this.m):B.cmpn(0)<0&&(U=B.iadd(this.m)),U._forceRed(this)},H.prototype.invm=function(u){var p=this.imod(u._invmp(this.m).mul(this.r2));return p._forceRed(this)}})(r,commonjsGlobal)})(bn);var BN=bn.exports;function isBn(r){return BN.isBN(r)}function isObject$2(r){return!!r&&typeof r=="object"}function isOn(...r){return e=>(isObject$2(e)||isFunction$3(e))&&r.every(t=>isFunction$3(e[t]))}function isOnObject(...r){return e=>isObject$2(e)&&r.every(t=>isFunction$3(e[t]))}const isToBigInt=isOn("toBigInt"),isToBn=isOn("toBn");function nToBigInt(r){return typeof r=="bigint"?r:r?isHex(r)?hexToBigInt(r.toString()):isBn(r)?BigInt$1(r.toString()):isToBigInt(r)?r.toBigInt():isToBn(r)?BigInt$1(r.toBn().toString()):BigInt$1(r):BigInt$1(0)}const hasBigInt=typeof BigInt$1=="function"&&typeof BigInt$1.asIntN=="function",hasBuffer=typeof Buffer!="undefined",hasProcess=typeof process=="object";function isBuffer(r){return hasBuffer&&Buffer.isBuffer(r)}function isU8a(r){return r instanceof Uint8Array}const encoder=new TextEncoder$1;function stringToU8a(r){return r?encoder.encode(r.toString()):new Uint8Array}function u8aToU8a(r){return r?Array.isArray(r)||isBuffer(r)?new Uint8Array(r):isU8a(r)?r:isHex(r)?hexToU8a(r):stringToU8a(r):new Uint8Array}function u8aCmp(r,e){const t=u8aToU8a(r),n=u8aToU8a(e);let s=0;for(;;){const i=s>=t.length,a=s>=n.length;if(i&&a)return 0;if(i)return-1;if(a)return 1;if(t[s]!==n[s])return t[s]>n[s]?1:-1;s++}}function u8aConcat(...r){let e=0,t=0;const n=new Array(r.length);for(let i=0;i<r.length;i++)n[i]=u8aToU8a(r[i]),e+=n[i].length;const s=new Uint8Array(e);for(let i=0;i<n.length;i++)s.set(n[i],t),t+=n[i].length;return s}function u8aEmpty(r){for(let e=0;e<r.length;e++)if(r[e])return!1;return!0}function u8aEq(r,e){const t=u8aToU8a(r),n=u8aToU8a(e);if(t.length===n.length){const s=new DataView(t.buffer,t.byteOffset),i=new DataView(n.buffer,n.byteOffset),a=t.length%4,o=t.length-a;for(let c=0;c<o;c+=4)if(s.getUint32(c)!==i.getUint32(c))return!1;for(let c=o;c<t.length;c++)if(t[c]!==n[c])return!1;return!0}return!1}function u8aFixLength(r,e=-1,t=!1){const n=Math.ceil(e/8);if(e===-1||r.length===n)return r;if(r.length>n)return r.subarray(0,n);const s=new Uint8Array(n);return s.set(r,t?0:n-r.length),s}function u8aSorted(r){return r.sort(u8aCmp)}function isBoolean(r){return typeof r=="boolean"}const DEFAULT_OPTS$3={isLe:!1,isNegative:!1};function hexToBn(r,e=DEFAULT_OPTS$3){if(!r||r==="0x")return new BN(0);const{isLe:t,isNegative:n}=objectSpread({isLe:!1,isNegative:!1},isBoolean(e)?{isLe:e}:e),s=hexStripPrefix(r),i=new BN(s,16,t?"le":"be");return n?i.fromTwos(s.length*4):i}function hex(r){const e=r.length%2,t=r.length-e,n=new DataView(r.buffer,r.byteOffset);let s="";for(let i=0;i<t;i+=2)s+=U16_TO_HEX[n.getUint16(i)];return e&&(s+=U8_TO_HEX[n.getUint8(t)]),s}function u8aToHex(r,e=-1,t=!0){const n=Math.ceil(e/8);return`${t?"0x":""}${!r||!r.length?"":n>0&&r.length>n?`${hex(r.subarray(0,n/2))}\u2026${hex(r.subarray(r.length-n/2))}`:hex(r)}`}const DEFAULT_OPTS$2={isLe:!0,isNegative:!1};function u8aToBn(r,e=DEFAULT_OPTS$2){return hexToBn(u8aToHex(r),e)}const decoder=new TextDecoder$1("utf-8");function u8aToString(r){return r!=null&&r.length?decoder.decode(r):""}const U8A_WRAP_ETHEREUM=u8aToU8a(`Ethereum Signed Message:
`),U8A_WRAP_PREFIX=u8aToU8a("<Bytes>"),U8A_WRAP_POSTFIX=u8aToU8a("</Bytes>"),WRAP_LEN=U8A_WRAP_PREFIX.length+U8A_WRAP_POSTFIX.length;function u8aIsWrapped(r,e){return r.length>=WRAP_LEN&&u8aEq(r.subarray(0,U8A_WRAP_PREFIX.length),U8A_WRAP_PREFIX)&&u8aEq(r.slice(-U8A_WRAP_POSTFIX.length),U8A_WRAP_POSTFIX)||e&&r.length>=U8A_WRAP_ETHEREUM.length&&u8aEq(r.subarray(0,U8A_WRAP_ETHEREUM.length),U8A_WRAP_ETHEREUM)}function u8aUnwrapBytes(r){const e=u8aToU8a(r);return u8aIsWrapped(e,!1)?e.subarray(U8A_WRAP_PREFIX.length,e.length-U8A_WRAP_POSTFIX.length):e}function u8aWrapBytes(r){const e=u8aToU8a(r);return u8aIsWrapped(e,!0)?e:u8aConcat(U8A_WRAP_PREFIX,e,U8A_WRAP_POSTFIX)}const DIV=BigInt$1(256),NEG_MASK=BigInt$1(255);function createEmpty$1({bitLength:r=0}){return r===-1?new Uint8Array:new Uint8Array(Math.ceil(r/8))}function toU8a$2(r,{isLe:e,isNegative:t}){const n=[];for(t&&(r=(r+_1n$2)*-_1n$2);r!==_0n$2;){const s=r%DIV,i=Number(t?s^NEG_MASK:s);e?n.push(i):n.unshift(i),r=(r-s)/DIV}return Uint8Array.from(n)}function nToU8a(r,e){const t=objectSpread({bitLength:-1,isLe:!0,isNegative:!1},e),n=nToBigInt(r);if(n===_0n$2)return createEmpty$1(t);const s=toU8a$2(n,t);if(t.bitLength===-1)return s;const i=Math.ceil((t.bitLength||0)/8),a=new Uint8Array(i);return t.isNegative&&a.fill(255),a.set(s,t.isLe?0:i-s.length),a}const BN_ZERO=new BN(0),BN_ONE=new BN(1),BN_TWO=new BN(2);new BN(3);const BN_FOUR=new BN(4);new BN(5);new BN(6);new BN(7);new BN(8);new BN(9);const BN_TEN=new BN(10),BN_HUNDRED=new BN(100),BN_THOUSAND=new BN(1e3),BN_MILLION=new BN(1e6),BN_BILLION=new BN(1e9),BN_QUINTILL=BN_BILLION.mul(BN_BILLION),BN_MAX_INTEGER=new BN(Number.MAX_SAFE_INTEGER);function find(r,e){assert(r.length>=1,"Must provide one or more BN arguments");let t=r[0];for(let n=1;n<r.length;n++)t=e(t,r[n]);return t}function bnMax(...r){return find(r,BN.max)}function bnMin(...r){return find(r,BN.min)}function isBigInt(r){return typeof r=="bigint"}function bnToBn(r){return BN.isBN(r)?r:r?isHex(r)?hexToBn(r.toString()):isBigInt(r)?new BN(r.toString()):isToBn(r)?r.toBn():isToBigInt(r)?new BN(r.toBigInt().toString()):new BN(r):new BN(0)}const SQRT_MAX_SAFE_INTEGER=new BN(94906265);function bnSqrt(r){const e=bnToBn(r);if(assert(e.gte(BN_ZERO),"square root of negative numbers is not supported"),e.lte(BN_MAX_INTEGER))return new BN(Math.floor(Math.sqrt(e.toNumber())));let t=SQRT_MAX_SAFE_INTEGER.clone();for(;;){const n=e.div(t).iadd(t).ishrn(1);if(t.eq(n)||t.eq(n.sub(BN_ONE)))return t;t=n}}function isNumber(r){return typeof r=="number"}const DEFAULT_OPTS$1={bitLength:-1,isLe:!0,isNegative:!1};function createEmpty(r,e){return e.bitLength===-1?new Uint8Array:new Uint8Array(r)}function createValue$1(r,e,{isLe:t,isNegative:n}){const s=new Uint8Array(e),i=n?r.toTwos(e*8):r;return s.set(i.toArray(t?"le":"be",e),0),s}function bnToU8a(r,e=DEFAULT_OPTS$1,t){const n=objectSpread({bitLength:-1,isLe:!0,isNegative:!1},isNumber(e)?{bitLength:e,isLe:t}:e),s=bnToBn(r),i=n.bitLength===-1?Math.ceil(s.bitLength()/8):Math.ceil((n.bitLength||0)/8);return r?createValue$1(s,i,n):createEmpty(i,n)}const ZERO_STR="0x00",DEFAULT_OPTS={bitLength:-1,isLe:!1,isNegative:!1};function bnToHex(r,e=DEFAULT_OPTS,t){return r?u8aToHex(bnToU8a(r,objectSpread({isLe:!1,isNegative:!1},isNumber(e)?{bitLength:e,isLe:t}:e))):ZERO_STR}const MAX_U8=BN_TWO.pow(new BN(8-2)).isub(BN_ONE),MAX_U16=BN_TWO.pow(new BN(16-2)).isub(BN_ONE),MAX_U32=BN_TWO.pow(new BN(32-2)).isub(BN_ONE);function compactToU8a(r){const e=bnToBn(r);if(e.lte(MAX_U8))return new Uint8Array([e.toNumber()<<2]);if(e.lte(MAX_U16))return bnToU8a(e.shln(2).iadd(BN_ONE),16,!0);if(e.lte(MAX_U32))return bnToU8a(e.shln(2).iadd(BN_TWO),32,!0);const t=bnToU8a(e);let n=t.length;for(;t[n-1]===0;)n--;return assert(n>=4,"Invalid length, previous checks match anything less than 2^30"),u8aConcat([(n-4<<2)+3],t.subarray(0,n))}function compactAddLength(r){return u8aConcat(compactToU8a(r.length),r)}function compactFromU8a(r){const e=u8aToU8a(r),t=e[0]&3;if(t===0)return[1,new BN(e[0]).ishrn(2)];if(t===1)return[2,u8aToBn(e.subarray(0,2),!0).ishrn(2)];if(t===2)return[4,u8aToBn(e.subarray(0,4),!0).ishrn(2)];const n=1+new BN(e[0]).ishrn(2).iadd(BN_FOUR).toNumber();return[n,u8aToBn(e.subarray(1,n),!0)]}function compactStripLength(r){const[e,t]=compactFromU8a(r),n=e+t.toNumber();return[n,r.subarray(e,n)]}const HRS=60*60,DAY=HRS*24,ZERO={days:0,hours:0,milliseconds:0,minutes:0,seconds:0};function addTime(r,e){return{days:r.days+e.days,hours:r.hours+e.hours,milliseconds:r.milliseconds+e.milliseconds,minutes:r.minutes+e.minutes,seconds:r.seconds+e.seconds}}function extractDays(r,e){const t=Math.floor(e/24);return addTime(objectSpread({},ZERO,{days:t}),extractTime(r-t*DAY*1e3))}function extractHrs(r,e){const t=e/60;if(t<24){const n=Math.floor(t);return addTime(objectSpread({},ZERO,{hours:n}),extractTime(r-n*HRS*1e3))}return extractDays(r,t)}function extractMins(r,e){const t=e/60;if(t<60){const n=Math.floor(t);return addTime(objectSpread({},ZERO,{minutes:n}),extractTime(r-n*60*1e3))}return extractHrs(r,t)}function extractSecs(r){const e=r/1e3;if(e<60){const t=Math.floor(e);return addTime(objectSpread({},ZERO,{seconds:t}),extractTime(r-t*1e3))}return extractMins(r,e)}function extractTime(r){return r?r<1e3?objectSpread({},ZERO,{milliseconds:r}):extractSecs(r):ZERO}const NUMBER_REGEX=new RegExp("(\\d+?)(?=(\\d{3})+(?!\\d)|$)","g");function formatDecimal(r){const e=r[0].startsWith("-"),t=e?r.substr(1).match(NUMBER_REGEX):r.match(NUMBER_REGEX);return t?`${e?"-":""}${t.join(",")}`:r}const SI_MID=8,SI=[{power:-24,text:"yocto",value:"y"},{power:-21,text:"zepto",value:"z"},{power:-18,text:"atto",value:"a"},{power:-15,text:"femto",value:"f"},{power:-12,text:"pico",value:"p"},{power:-9,text:"nano",value:"n"},{power:-6,text:"micro",value:"\xB5"},{power:-3,text:"milli",value:"m"},{power:0,text:"Unit",value:"-"},{power:3,text:"Kilo",value:"k"},{power:6,text:"Mill",value:"M"},{power:9,text:"Bill",value:"B"},{power:12,text:"Tril",value:"T"},{power:15,text:"Peta",value:"P"},{power:18,text:"Exa",value:"E"},{power:21,text:"Zeta",value:"Z"},{power:24,text:"Yotta",value:"Y"}];function findSi(r){for(let e=0;e<SI.length;e++)if(SI[e].value===r)return SI[e];return SI[SI_MID]}function calcSi(r,e,t){if(t)return findSi(t);const n=SI_MID-1+Math.ceil((r.length-e)/3);return SI[n]||SI[n<0?0:SI.length-1]}const DEFAULT_DECIMALS=0,DEFAULT_UNIT=SI[SI_MID].text;let defaultDecimals=DEFAULT_DECIMALS,defaultUnit=DEFAULT_UNIT;function getUnits(r,e,t,n){const s=isBoolean(n)?SI[SI_MID].text:n;return e||t?r.value==="-"?n?` ${s}`:"":` ${t?`${r.text}${n?" ":""}`:r.value}${n?s:""}`:""}function getPrePost(r,e,t){const n=calcSi(r,e,t),s=r.length-(e+n.power),i=r.substring(0,s),a=s<0?0-s:0,o=`${`${new Array(a+1).join("0")}${r}`.substring(s<0?0:s)}0000`.substring(0,4);return[n,i||"0",o]}function _formatBalance(r,e=!0,t=defaultDecimals){let n=bnToBn(r).toString();if(n.length===0||n==="0")return"0";const{decimals:s=t,forceUnit:i=void 0,withSi:a=!0,withSiFull:o=!1,withUnit:c=!0}=isBoolean(e)?{withSi:e}:e;let h="";n[0].startsWith("-")&&(h="-",n=n.substring(1));const[y,x,E]=getPrePost(n,s,i),V=getUnits(y,a,o,c);return`${h}${formatDecimal(x)}.${E}${V}`}const formatBalance=_formatBalance;formatBalance.calcSi=(r,e=defaultDecimals)=>calcSi(r,e);formatBalance.findSi=findSi;formatBalance.getDefaults=()=>({decimals:defaultDecimals,unit:defaultUnit});formatBalance.getOptions=(r=defaultDecimals)=>SI.filter(({power:e})=>e<0?r+e>=0:!0);formatBalance.setDefaults=({decimals:r,unit:e})=>{defaultDecimals=isUndefined(r)?defaultDecimals:Array.isArray(r)?r[0]:r,defaultUnit=isUndefined(e)?defaultUnit:Array.isArray(e)?e[0]:e,SI[SI_MID].text=defaultUnit};function zeroPad(r){return r.toString().padStart(2,"0")}function formatDate(r){const e=r.getFullYear().toString(),t=zeroPad(r.getMonth()+1),n=zeroPad(r.getDate()),s=zeroPad(r.getHours()),i=zeroPad(r.getMinutes()),a=zeroPad(r.getSeconds());return`${e}-${t}-${n} ${s}:${i}:${a}`}function formatNumber(r){return formatDecimal(bnToBn(r).toString())}function isString(r){return typeof r=="string"||r instanceof String}const FORMAT=[9,10,13];function isAsciiByte(r){return r<127&&(r>=32||FORMAT.includes(r))}function isAsciiChar(r){return isAsciiByte(r.charCodeAt(0))}function isAscii(r){const e=isString(r);return r?e&&!isHex(r)?r.toString().split("").every(isAsciiChar):u8aToU8a(r).every(isAsciiByte):e}function isChildClass(r,e){return e?r===e||r.isPrototypeOf(e):!1}const checkCodec=isOnObject("toHex","toU8a"),checkRegistry=isOnObject("get");function isCodec$1(r){return checkCodec(r)&&checkRegistry(r.registry)}function replacer(r,e){return isBigInt(e)?e.toString():e}function stringify(r,e){return JSON.stringify(r,replacer,e)}const REGEX_DEV=/(Development|Local Testnet)$/;function isTestChain(r){return r?!!REGEX_DEV.test(r.toString()):!1}function isUtf8(r){if(!r)return isString(r);const e=u8aToU8a(r),t=e.length;let n=0;for(;n<t;)if(e[n]<=127)n+=1;else if(e[n]>=194&&e[n]<=223){if(n+1<t){if(e[n+1]<128||e[n+1]>191)return!1}else return!1;n+=2}else if(e[n]===224){if(n+2<t){if(e[n+1]<160||e[n+1]>191||e[n+2]<128||e[n+2]>191)return!1}else return!1;n+=3}else if(e[n]>=225&&e[n]<=236){if(n+2<t){if(e[n+1]<128||e[n+1]>191||e[n+2]<128||e[n+2]>191)return!1}else return!1;n+=3}else if(e[n]===237){if(n+2<t){if(e[n+1]<128||e[n+1]>159||e[n+2]<128||e[n+2]>191)return!1}else return!1;n+=3}else if(e[n]>=238&&e[n]<=239){if(n+2<t){if(e[n+1]<128||e[n+1]>191||e[n+2]<128||e[n+2]>191)return!1}else return!1;n+=3}else if(e[n]===240){if(n+3<t){if(e[n+1]<144||e[n+1]>191||e[n+2]<128||e[n+2]>191||e[n+3]<128||e[n+3]>191)return!1}else return!1;n+=4}else if(e[n]>=241&&e[n]<=243){if(n+3<t){if(e[n+1]<128||e[n+1]>191||e[n+2]<128||e[n+2]>191||e[n+3]<128||e[n+3]>191)return!1}else return!1;n+=4}else if(e[n]===244){if(n+3<t){if(e[n+1]<128||e[n+1]>143||e[n+2]<128||e[n+2]>191||e[n+3]<128||e[n+3]>191)return!1}else return!1;n+=4}else return!1;return!0}const WASM_MAGIC=new Uint8Array([0,97,115,109]);function isWasm(r){return isU8a(r)&&u8aEq(r.subarray(0,4),WASM_MAGIC)}function lazyMethod(r,e,t,n){const s=n?n(e):e.toString();let i;Object.defineProperty(r,s,{configurable:!0,enumerable:!0,get:function(){if(isUndefined(i)){i=t(e);try{Object.defineProperty(this,s,{value:i})}catch{}}return i}})}function lazyMethods(r,e,t,n){for(let s=0;s<e.length;s++)lazyMethod(r,e[s],t,n);return r}const logTo={debug:"log",error:"error",log:"log",warn:"warn"};function formatOther(r){if(r&&isObject$2(r)&&r.constructor===Object){const e={};for(const t of Object.keys(r))e[t]=loggerFormat(r[t]);return e}return r}function loggerFormat(r){return Array.isArray(r)?r.map(loggerFormat):isBn(r)?r.toString():isU8a(r)||isBuffer(r)?u8aToHex(u8aToU8a(r)):formatOther(r)}function formatWithLength(r){return e=>{if(r<=0)return e;const t=`${e}`;return t.length<r?e:`${t.substr(0,r)} ...`}}function apply(r,e,t,n=-1){if(t.length===1&&isFunction$3(t[0])){const s=t[0]();return apply(r,e,Array.isArray(s)?s:[s],n)}console[logTo[r]](formatDate(new Date),e,...t.map(loggerFormat).map(formatWithLength(n)))}function noop$1(){}function isDebugOn(r,e){return!!r&&(r==="*"||e===r||r.endsWith("*")&&e.startsWith(r.slice(0,-1)))}function isDebugOff(r,e){return!!r&&r.startsWith("-")&&(e===r.slice(1)||r.endsWith("*")&&e.startsWith(r.slice(1,-1)))}function getDebugFlag(r,e){let t=!1;for(const n of r)isDebugOn(n,e)?t=!0:isDebugOff(n,e)&&(t=!1);return t}function parseEnv(r){const e=(hasProcess?process:{}).env||{},t=parseInt(e.DEBUG_MAX||"-1",10);return[getDebugFlag((e.DEBUG||"").toLowerCase().split(","),r),isNaN(t)?-1:t]}function logger(r){const e=`${r.toUpperCase()}:`.padStart(16),[t,n]=parseEnv(r.toLowerCase());return{debug:t?(...s)=>apply("debug",e,s,n):noop$1,error:(...s)=>apply("error",e,s),log:(...s)=>apply("log",e,s),noop:noop$1,warn:(...s)=>apply("warn",e,s)}}function defaultGetId(){return"none"}function memoize(r,{getInstanceId:e=defaultGetId}={}){const t={},n=(...s)=>{const i=stringify(s),a=e();return t[a]||(t[a]={}),isUndefined(t[a][i])&&(t[a][i]=r(...s)),t[a][i]};return n.unmemoize=(...s)=>{const i=stringify(s),a=e();t[a]&&!isUndefined(t[a][i])&&delete t[a][i]},n}function objectClear(r){const e=Object.keys(r);for(let t=0;t<e.length;t++)delete r[e[t]];return r}function objectCopy(r){return objectSpread({},r)}function objectProperty(r,e,t){!Object.prototype.hasOwnProperty.call(r,e)&&isUndefined(r[e])&&Object.defineProperty(r,e,{enumerable:!0,get:()=>t(e)})}function objectProperties(r,e,t){for(let n=0;n<e.length;n++)objectProperty(r,e[n],s=>t(s,n))}function converter(r){const e=(t,n)=>r(t[0],n)+t.slice(1);return t=>t.toString().replace(/[-_., ]+/g," ").trim().split(" ").map((n,s)=>e(n.toUpperCase()===n?n.toLowerCase():n.replace(/^[A-Z0-9]{2,}[^a-z]/,i=>i.slice(0,i.length-1).toLowerCase()+i.slice(-1).toUpperCase()),s)).join("")}const stringCamelCase=converter((r,e)=>e?r.toUpperCase():r.toLowerCase()),stringPascalCase=converter(r=>r.toUpperCase());function stringToHex(r){return u8aToHex(stringToU8a(r))}function evaluateThis$2(r){return r("return this")}const xglobal$2=typeof globalThis!="undefined"?globalThis:typeof global!="undefined"?global:typeof self!="undefined"?self:typeof window!="undefined"?window:evaluateThis$2(Function);function getRandomValues(r){return xglobal$2.crypto.getRandomValues(r)}var nodeCrypto={},__viteBrowserExternal=Object.freeze(Object.defineProperty({__proto__:null,default:nodeCrypto},Symbol.toStringTag,{value:"Module"}));/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */const _0n$1=BigInt(0),_1n$1=BigInt(1),_2n$1=BigInt(2),_3n=BigInt(3),_8n=BigInt(8),POW_2_256=_2n$1**BigInt(256),CURVE={a:_0n$1,b:BigInt(7),P:POW_2_256-_2n$1**BigInt(32)-BigInt(977),n:POW_2_256-BigInt("432420386565659656852420866394968145599"),h:_1n$1,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee")};function weistrass(r){const{a:e,b:t}=CURVE,n=mod(r*r),s=mod(n*r);return mod(s+e*r+t)}const USE_ENDOMORPHISM=CURVE.a===_0n$1;class JacobianPoint{constructor(e,t,n){this.x=e,this.y=t,this.z=n}static fromAffine(e){if(!(e instanceof Point))throw new TypeError("JacobianPoint#fromAffine: expected Point");return new JacobianPoint(e.x,e.y,_1n$1)}static toAffineBatch(e){const t=invertBatch(e.map(n=>n.z));return e.map((n,s)=>n.toAffine(t[s]))}static normalizeZ(e){return JacobianPoint.toAffineBatch(e).map(JacobianPoint.fromAffine)}equals(e){if(!(e instanceof JacobianPoint))throw new TypeError("JacobianPoint expected");const{x:t,y:n,z:s}=this,{x:i,y:a,z:o}=e,c=mod(s**_2n$1),h=mod(o**_2n$1),y=mod(t*h),x=mod(i*c),E=mod(mod(n*o)*h),V=mod(mod(a*s)*c);return y===x&&E===V}negate(){return new JacobianPoint(this.x,mod(-this.y),this.z)}double(){const{x:e,y:t,z:n}=this,s=mod(e**_2n$1),i=mod(t**_2n$1),a=mod(i**_2n$1),o=mod(_2n$1*(mod((e+i)**_2n$1)-s-a)),c=mod(_3n*s),h=mod(c**_2n$1),y=mod(h-_2n$1*o),x=mod(c*(o-y)-_8n*a),E=mod(_2n$1*t*n);return new JacobianPoint(y,x,E)}add(e){if(!(e instanceof JacobianPoint))throw new TypeError("JacobianPoint expected");const{x:t,y:n,z:s}=this,{x:i,y:a,z:o}=e;if(i===_0n$1||a===_0n$1)return this;if(t===_0n$1||n===_0n$1)return e;const c=mod(s**_2n$1),h=mod(o**_2n$1),y=mod(t*h),x=mod(i*c),E=mod(mod(n*o)*h),V=mod(mod(a*s)*c),F=mod(x-y),q=mod(V-E);if(F===_0n$1)return q===_0n$1?this.double():JacobianPoint.ZERO;const X=mod(F**_2n$1),Y=mod(F*X),oe=mod(y*X),Q=mod(q**_2n$1-Y-_2n$1*oe),le=mod(q*(oe-Q)-E*Y),fe=mod(s*o*F);return new JacobianPoint(Q,le,fe)}subtract(e){return this.add(e.negate())}multiplyUnsafe(e){let t=normalizeScalar(e);const n=JacobianPoint.ZERO;if(t===_0n$1)return n;if(t===_1n$1)return this;if(!USE_ENDOMORPHISM){let x=n,E=this;for(;t>_0n$1;)t&_1n$1&&(x=x.add(E)),E=E.double(),t>>=_1n$1;return x}let{k1neg:s,k1:i,k2neg:a,k2:o}=splitScalarEndo(t),c=n,h=n,y=this;for(;i>_0n$1||o>_0n$1;)i&_1n$1&&(c=c.add(y)),o&_1n$1&&(h=h.add(y)),y=y.double(),i>>=_1n$1,o>>=_1n$1;return s&&(c=c.negate()),a&&(h=h.negate()),h=new JacobianPoint(mod(h.x*CURVE.beta),h.y,h.z),c.add(h)}precomputeWindow(e){const t=USE_ENDOMORPHISM?128/e+1:256/e+1,n=[];let s=this,i=s;for(let a=0;a<t;a++){i=s,n.push(i);for(let o=1;o<2**(e-1);o++)i=i.add(s),n.push(i);s=i.double()}return n}wNAF(e,t){!t&&this.equals(JacobianPoint.BASE)&&(t=Point.BASE);const n=t&&t._WINDOW_SIZE||1;if(256%n)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let s=t&&pointPrecomputes.get(t);s||(s=this.precomputeWindow(n),t&&n!==1&&(s=JacobianPoint.normalizeZ(s),pointPrecomputes.set(t,s)));let i=JacobianPoint.ZERO,a=JacobianPoint.ZERO;const o=1+(USE_ENDOMORPHISM?128/n:256/n),c=2**(n-1),h=BigInt(2**n-1),y=2**n,x=BigInt(n);for(let E=0;E<o;E++){const V=E*c;let F=Number(e&h);if(e>>=x,F>c&&(F-=y,e+=_1n$1),F===0){let q=s[V];E%2&&(q=q.negate()),a=a.add(q)}else{let q=s[V+Math.abs(F)-1];F<0&&(q=q.negate()),i=i.add(q)}}return{p:i,f:a}}multiply(e,t){let n=normalizeScalar(e),s,i;if(USE_ENDOMORPHISM){const{k1neg:a,k1:o,k2neg:c,k2:h}=splitScalarEndo(n);let{p:y,f:x}=this.wNAF(o,t),{p:E,f:V}=this.wNAF(h,t);a&&(y=y.negate()),c&&(E=E.negate()),E=new JacobianPoint(mod(E.x*CURVE.beta),E.y,E.z),s=y.add(E),i=x.add(V)}else{const{p:a,f:o}=this.wNAF(n,t);s=a,i=o}return JacobianPoint.normalizeZ([s,i])[0]}toAffine(e=invert(this.z)){const{x:t,y:n,z:s}=this,i=e,a=mod(i*i),o=mod(a*i),c=mod(t*a),h=mod(n*o);if(mod(s*i)!==_1n$1)throw new Error("invZ was invalid");return new Point(c,h)}}JacobianPoint.BASE=new JacobianPoint(CURVE.Gx,CURVE.Gy,_1n$1);JacobianPoint.ZERO=new JacobianPoint(_0n$1,_1n$1,_0n$1);const pointPrecomputes=new WeakMap;class Point{constructor(e,t){this.x=e,this.y=t}_setWindowSize(e){this._WINDOW_SIZE=e,pointPrecomputes.delete(this)}static fromCompressedHex(e){const t=e.length===32,n=bytesToNumber(t?e:e.subarray(1));if(!isValidFieldElement(n))throw new Error("Point is not on curve");const s=weistrass(n);let i=sqrtMod(s);const a=(i&_1n$1)===_1n$1;t?a&&(i=mod(-i)):(e[0]&1)===1!==a&&(i=mod(-i));const o=new Point(n,i);return o.assertValidity(),o}static fromUncompressedHex(e){const t=bytesToNumber(e.subarray(1,33)),n=bytesToNumber(e.subarray(33,65)),s=new Point(t,n);return s.assertValidity(),s}static fromHex(e){const t=ensureBytes(e),n=t.length,s=t[0];if(n===32||n===33&&(s===2||s===3))return this.fromCompressedHex(t);if(n===65&&s===4)return this.fromUncompressedHex(t);throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${n}`)}static fromPrivateKey(e){return Point.BASE.multiply(normalizePrivateKey(e))}static fromSignature(e,t,n){e=ensureBytes(e);const s=truncateHash(e),{r:i,s:a}=normalizeSignature(t);if(n!==0&&n!==1)throw new Error("Cannot recover signature: invalid recovery bit");if(s===_0n$1)throw new Error("Cannot recover signature: msgHash cannot be 0");const o=n&1?"03":"02",c=Point.fromHex(o+numTo32bStr(i)),{n:h}=CURVE,y=invert(i,h),x=mod(-s*y,h),E=mod(a*y,h),V=Point.BASE.multiplyAndAddUnsafe(c,x,E);if(!V)throw new Error("Cannot recover signature: point at infinify");return V.assertValidity(),V}toRawBytes(e=!1){return hexToBytes(this.toHex(e))}toHex(e=!1){const t=numTo32bStr(this.x);return e?`${this.y&_1n$1?"03":"02"}${t}`:`04${t}${numTo32bStr(this.y)}`}toHexX(){return this.toHex(!0).slice(2)}toRawX(){return this.toRawBytes(!0).slice(1)}assertValidity(){const e="Point is not on elliptic curve",{x:t,y:n}=this;if(!isValidFieldElement(t)||!isValidFieldElement(n))throw new Error(e);const s=mod(n*n),i=weistrass(t);if(mod(s-i)!==_0n$1)throw new Error(e)}equals(e){return this.x===e.x&&this.y===e.y}negate(){return new Point(this.x,mod(-this.y))}double(){return JacobianPoint.fromAffine(this).double().toAffine()}add(e){return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(e)).toAffine()}subtract(e){return this.add(e.negate())}multiply(e){return JacobianPoint.fromAffine(this).multiply(e,this).toAffine()}multiplyAndAddUnsafe(e,t,n){const i=JacobianPoint.fromAffine(this).multiply(t),a=JacobianPoint.fromAffine(e).multiplyUnsafe(n),o=i.add(a);return o.equals(JacobianPoint.ZERO)?void 0:o.toAffine()}}Point.BASE=new Point(CURVE.Gx,CURVE.Gy);Point.ZERO=new Point(_0n$1,_0n$1);function sliceDER(r){return Number.parseInt(r[0],16)>=8?"00"+r:r}function parseDERInt(r){if(r.length<2||r[0]!==2)throw new Error(`Invalid signature integer tag: ${bytesToHex(r)}`);const e=r[1],t=r.subarray(2,e+2);if(!e||t.length!==e)throw new Error("Invalid signature integer: wrong length");if(t[0]===0&&t[1]<=127)throw new Error("Invalid signature integer: trailing length");return{data:bytesToNumber(t),left:r.subarray(e+2)}}function parseDERSignature(r){if(r.length<2||r[0]!=48)throw new Error(`Invalid signature tag: ${bytesToHex(r)}`);if(r[1]!==r.length-2)throw new Error("Invalid signature: incorrect length");const{data:e,left:t}=parseDERInt(r.subarray(2)),{data:n,left:s}=parseDERInt(t);if(s.length)throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(s)}`);return{r:e,s:n}}class Signature{constructor(e,t){this.r=e,this.s=t,this.assertValidity()}static fromCompact(e){const t=isUint8a(e),n="Signature.fromCompact";if(typeof e!="string"&&!t)throw new TypeError(`${n}: Expected string or Uint8Array`);const s=t?bytesToHex(e):e;if(s.length!==128)throw new Error(`${n}: Expected 64-byte hex`);return new Signature(hexToNumber(s.slice(0,64)),hexToNumber(s.slice(64,128)))}static fromDER(e){const t=isUint8a(e);if(typeof e!="string"&&!t)throw new TypeError("Signature.fromDER: Expected string or Uint8Array");const{r:n,s}=parseDERSignature(t?e:hexToBytes(e));return new Signature(n,s)}static fromHex(e){return this.fromDER(e)}assertValidity(){const{r:e,s:t}=this;if(!isWithinCurveOrder(e))throw new Error("Invalid Signature: r must be 0 < r < n");if(!isWithinCurveOrder(t))throw new Error("Invalid Signature: s must be 0 < s < n")}hasHighS(){const e=CURVE.n>>_1n$1;return this.s>e}normalizeS(){return this.hasHighS()?new Signature(this.r,CURVE.n-this.s):this}toDERRawBytes(e=!1){return hexToBytes(this.toDERHex(e))}toDERHex(e=!1){const t=sliceDER(numberToHexUnpadded(this.s));if(e)return t;const n=sliceDER(numberToHexUnpadded(this.r)),s=numberToHexUnpadded(n.length/2),i=numberToHexUnpadded(t.length/2);return`30${numberToHexUnpadded(n.length/2+t.length/2+4)}02${s}${n}02${i}${t}`}toRawBytes(){return this.toDERRawBytes()}toHex(){return this.toDERHex()}toCompactRawBytes(){return hexToBytes(this.toCompactHex())}toCompactHex(){return numTo32bStr(this.r)+numTo32bStr(this.s)}}function concatBytes(...r){if(!r.every(isUint8a))throw new Error("Uint8Array list expected");if(r.length===1)return r[0];const e=r.reduce((n,s)=>n+s.length,0),t=new Uint8Array(e);for(let n=0,s=0;n<r.length;n++){const i=r[n];t.set(i,s),s+=i.length}return t}function isUint8a(r){return r instanceof Uint8Array}const hexes=Array.from({length:256},(r,e)=>e.toString(16).padStart(2,"0"));function bytesToHex(r){if(!(r instanceof Uint8Array))throw new Error("Expected Uint8Array");let e="";for(let t=0;t<r.length;t++)e+=hexes[r[t]];return e}function numTo32bStr(r){if(r>POW_2_256)throw new Error("Expected number < 2^256");return r.toString(16).padStart(64,"0")}function numTo32b(r){return hexToBytes(numTo32bStr(r))}function numberToHexUnpadded(r){const e=r.toString(16);return e.length&1?`0${e}`:e}function hexToNumber(r){if(typeof r!="string")throw new TypeError("hexToNumber: expected string, got "+typeof r);return BigInt(`0x${r}`)}function hexToBytes(r){if(typeof r!="string")throw new TypeError("hexToBytes: expected string, got "+typeof r);if(r.length%2)throw new Error("hexToBytes: received invalid unpadded hex"+r.length);const e=new Uint8Array(r.length/2);for(let t=0;t<e.length;t++){const n=t*2,s=r.slice(n,n+2),i=Number.parseInt(s,16);if(Number.isNaN(i)||i<0)throw new Error("Invalid byte sequence");e[t]=i}return e}function bytesToNumber(r){return hexToNumber(bytesToHex(r))}function ensureBytes(r){return r instanceof Uint8Array?Uint8Array.from(r):hexToBytes(r)}function normalizeScalar(r){if(typeof r=="number"&&Number.isSafeInteger(r)&&r>0)return BigInt(r);if(typeof r=="bigint"&&isWithinCurveOrder(r))return r;throw new TypeError("Expected valid private scalar: 0 < scalar < curve.n")}function mod(r,e=CURVE.P){const t=r%e;return t>=_0n$1?t:e+t}function pow2(r,e){const{P:t}=CURVE;let n=r;for(;e-- >_0n$1;)n*=n,n%=t;return n}function sqrtMod(r){const{P:e}=CURVE,t=BigInt(6),n=BigInt(11),s=BigInt(22),i=BigInt(23),a=BigInt(44),o=BigInt(88),c=r*r*r%e,h=c*c*r%e,y=pow2(h,_3n)*h%e,x=pow2(y,_3n)*h%e,E=pow2(x,_2n$1)*c%e,V=pow2(E,n)*E%e,F=pow2(V,s)*V%e,q=pow2(F,a)*F%e,X=pow2(q,o)*q%e,Y=pow2(X,a)*F%e,oe=pow2(Y,_3n)*h%e,Q=pow2(oe,i)*V%e,le=pow2(Q,t)*c%e;return pow2(le,_2n$1)}function invert(r,e=CURVE.P){if(r===_0n$1||e<=_0n$1)throw new Error(`invert: expected positive integers, got n=${r} mod=${e}`);let t=mod(r,e),n=e,s=_0n$1,i=_1n$1;for(;t!==_0n$1;){const o=n/t,c=n%t,h=s-i*o;n=t,t=c,s=i,i=h}if(n!==_1n$1)throw new Error("invert: does not exist");return mod(s,e)}function invertBatch(r,e=CURVE.P){const t=new Array(r.length),n=r.reduce((i,a,o)=>a===_0n$1?i:(t[o]=i,mod(i*a,e)),_1n$1),s=invert(n,e);return r.reduceRight((i,a,o)=>a===_0n$1?i:(t[o]=mod(i*t[o],e),mod(i*a,e)),s),t}const divNearest=(r,e)=>(r+e/_2n$1)/e,POW_2_128=_2n$1**BigInt(128);function splitScalarEndo(r){const{n:e}=CURVE,t=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-_1n$1*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),s=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),i=t,a=divNearest(i*r,e),o=divNearest(-n*r,e);let c=mod(r-a*t-o*s,e),h=mod(-a*n-o*i,e);const y=c>POW_2_128,x=h>POW_2_128;if(y&&(c=e-c),x&&(h=e-h),c>POW_2_128||h>POW_2_128)throw new Error("splitScalarEndo: Endomorphism failed, k="+r);return{k1neg:y,k1:c,k2neg:x,k2:h}}function truncateHash(r){const{n:e}=CURVE,n=r.length*8-256;let s=bytesToNumber(r);return n>0&&(s=s>>BigInt(n)),s>=e&&(s-=e),s}class HmacDrbg{constructor(){this.v=new Uint8Array(32).fill(1),this.k=new Uint8Array(32).fill(0),this.counter=0}hmac(...e){return utils.hmacSha256(this.k,...e)}hmacSync(...e){throw new Error("utils.hmacSha256Sync is undefined, you need to set it")}incr(){if(this.counter>=1e3)throw new Error("Tried 1,000 k values for sign(), all were invalid");this.counter+=1}async reseed(e=new Uint8Array){this.k=await this.hmac(this.v,Uint8Array.from([0]),e),this.v=await this.hmac(this.v),e.length!==0&&(this.k=await this.hmac(this.v,Uint8Array.from([1]),e),this.v=await this.hmac(this.v))}reseedSync(e=new Uint8Array){this.k=this.hmacSync(this.v,Uint8Array.from([0]),e),this.v=this.hmacSync(this.v),e.length!==0&&(this.k=this.hmacSync(this.v,Uint8Array.from([1]),e),this.v=this.hmacSync(this.v))}async generate(){return this.incr(),this.v=await this.hmac(this.v),this.v}generateSync(){return this.incr(),this.v=this.hmacSync(this.v),this.v}}function isWithinCurveOrder(r){return _0n$1<r&&r<CURVE.n}function isValidFieldElement(r){return _0n$1<r&&r<CURVE.P}function kmdToSig(r,e,t){const n=bytesToNumber(r);if(!isWithinCurveOrder(n))return;const{n:s}=CURVE,i=Point.BASE.multiply(n),a=mod(i.x,s);if(a===_0n$1)return;const o=mod(invert(n,s)*mod(e+t*a,s),s);if(o===_0n$1)return;const c=new Signature(a,o),h=(i.x===c.r?0:2)|Number(i.y&_1n$1);return{sig:c,recovery:h}}function normalizePrivateKey(r){let e;if(typeof r=="bigint")e=r;else if(typeof r=="number"&&Number.isSafeInteger(r)&&r>0)e=BigInt(r);else if(typeof r=="string"){if(r.length!==64)throw new Error("Expected 32 bytes of private key");e=hexToNumber(r)}else if(isUint8a(r)){if(r.length!==32)throw new Error("Expected 32 bytes of private key");e=bytesToNumber(r)}else throw new TypeError("Expected valid private key");if(!isWithinCurveOrder(e))throw new Error("Expected private key: 0 < key < n");return e}function normalizeSignature(r){if(r instanceof Signature)return r.assertValidity(),r;try{return Signature.fromDER(r)}catch{return Signature.fromCompact(r)}}function getPublicKey(r,e=!1){return Point.fromPrivateKey(r).toRawBytes(e)}function recoverPublicKey(r,e,t,n=!1){return Point.fromSignature(r,e,t).toRawBytes(n)}function bits2int(r){const e=r.length>32?r.slice(0,32):r;return bytesToNumber(e)}function bits2octets(r){const e=bits2int(r),t=mod(e,CURVE.n);return int2octets(t<_0n$1?e:t)}function int2octets(r){if(typeof r!="bigint")throw new Error("Expected bigint");const e=numTo32bStr(r);return hexToBytes(e)}function initSigArgs(r,e,t){if(r==null)throw new Error(`sign: expected valid message hash, not "${r}"`);const n=ensureBytes(r),s=normalizePrivateKey(e),i=[int2octets(s),bits2octets(n)];if(t!=null){t===!0&&(t=utils.randomBytes(32));const c=ensureBytes(t);if(c.length!==32)throw new Error("sign: Expected 32 bytes of extra data");i.push(c)}const a=concatBytes(...i),o=bits2int(n);return{seed:a,m:o,d:s}}function finalizeSig(r,e){let{sig:t,recovery:n}=r;const{canonical:s,der:i,recovered:a}=Object.assign({canonical:!0,der:!0},e);s&&t.hasHighS()&&(t=t.normalizeS(),n^=1);const o=i?t.toDERRawBytes():t.toCompactRawBytes();return a?[o,n]:o}function signSync(r,e,t={}){const{seed:n,m:s,d:i}=initSigArgs(r,e,t.extraEntropy);let a;const o=new HmacDrbg;for(o.reseedSync(n);!(a=kmdToSig(o.generateSync(),s,i));)o.reseedSync();return finalizeSig(a,t)}Point.BASE._setWindowSize(8);const crypto={node:nodeCrypto,web:typeof self=="object"&&"crypto"in self?self.crypto:void 0},utils={isValidPrivateKey(r){try{return normalizePrivateKey(r),!0}catch{return!1}},hashToPrivateKey:r=>{if(r=ensureBytes(r),r.length<40||r.length>1024)throw new Error("Expected 40-1024 bytes of private key as per FIPS 186");const e=mod(bytesToNumber(r),CURVE.n);if(e===_0n$1||e===_1n$1)throw new Error("Invalid private key");return numTo32b(e)},randomBytes:(r=32)=>{if(crypto.web)return crypto.web.getRandomValues(new Uint8Array(r));if(crypto.node){const{randomBytes:e}=crypto.node;return Uint8Array.from(e(r))}else throw new Error("The environment doesn't have randomBytes function")},randomPrivateKey:()=>utils.hashToPrivateKey(utils.randomBytes(40)),bytesToHex,mod,sha256:async r=>{if(crypto.web){const e=await crypto.web.subtle.digest("SHA-256",r.buffer);return new Uint8Array(e)}else if(crypto.node){const{createHash:e}=crypto.node;return Uint8Array.from(e("sha256").update(r).digest())}else throw new Error("The environment doesn't have sha256 function")},hmacSha256:async(r,...e)=>{if(crypto.web){const t=await crypto.web.subtle.importKey("raw",r,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]),n=concatBytes(...e),s=await crypto.web.subtle.sign("HMAC",t,n);return new Uint8Array(s)}else if(crypto.node){const{createHmac:t}=crypto.node,n=t("sha256",r);return e.forEach(s=>n.update(s)),Uint8Array.from(n.digest())}else throw new Error("The environment doesn't have hmac-sha256 function")},sha256Sync:void 0,hmacSha256Sync:void 0,precompute(r=8,e=Point.BASE){const t=e===Point.BASE?e:new Point(e.x,e.y);return t._setWindowSize(r),t.multiply(_3n),t}};/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */const u32$2=r=>new Uint32Array(r.buffer,r.byteOffset,Math.floor(r.byteLength/4)),createView=r=>new DataView(r.buffer,r.byteOffset,r.byteLength),rotr=(r,e)=>r<<32-e|r>>>e,isLE=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;if(!isLE)throw new Error("Non little-endian hardware is not supported");Array.from({length:256},(r,e)=>e.toString(16).padStart(2,"0"));(()=>{const r=typeof module!="undefined"&&typeof module.require=="function"&&module.require.bind(module);try{if(r){const{setImmediate:e}=r("timers");return()=>new Promise(t=>e(t))}}catch{}return()=>new Promise(e=>setTimeout(e,0))})();function utf8ToBytes(r){if(typeof r!="string")throw new TypeError(`utf8ToBytes expected string, got ${typeof r}`);return new TextEncoder().encode(r)}function toBytes(r){if(typeof r=="string"&&(r=utf8ToBytes(r)),!(r instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof r})`);return r}function assertNumber(r){if(!Number.isSafeInteger(r)||r<0)throw new Error(`Wrong positive integer: ${r}`)}function assertHash(r){if(typeof r!="function"||typeof r.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");assertNumber(r.outputLen),assertNumber(r.blockLen)}class Hash{clone(){return this._cloneInto()}}const isPlainObject=r=>Object.prototype.toString.call(r)==="[object Object]"&&r.constructor===Object;function checkOpts(r,e){if(e!==void 0&&(typeof e!="object"||!isPlainObject(e)))throw new TypeError("Options should be object or undefined");return Object.assign(r,e)}function wrapConstructor(r){const e=n=>r().update(toBytes(n)).digest(),t=r();return e.outputLen=t.outputLen,e.blockLen=t.blockLen,e.create=()=>r(),e}function wrapConstructorWithOpts(r){const e=(n,s)=>r(s).update(toBytes(n)).digest(),t=r({});return e.outputLen=t.outputLen,e.blockLen=t.blockLen,e.create=n=>r(n),e}class HMAC extends Hash{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,assertHash(e);const n=toBytes(t);if(this.iHash=e.create(),!(this.iHash instanceof Hash))throw new TypeError("Expected instance of class which extends utils.Hash");const s=this.blockLen=this.iHash.blockLen;this.outputLen=this.iHash.outputLen;const i=new Uint8Array(s);i.set(n.length>this.iHash.blockLen?e.create().update(n).digest():n);for(let a=0;a<i.length;a++)i[a]^=54;this.iHash.update(i),this.oHash=e.create();for(let a=0;a<i.length;a++)i[a]^=106;this.oHash.update(i),i.fill(0)}update(e){if(this.destroyed)throw new Error("instance is destroyed");return this.iHash.update(e),this}digestInto(e){if(this.destroyed)throw new Error("instance is destroyed");if(!(e instanceof Uint8Array)||e.length!==this.outputLen)throw new Error("HMAC: Invalid output buffer");if(this.finished)throw new Error("digest() was already called");this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:t,iHash:n,finished:s,destroyed:i,blockLen:a,outputLen:o}=this;return e=e,e.finished=s,e.destroyed=i,e.blockLen=a,e.outputLen=o,e.oHash=t._cloneInto(e.oHash),e.iHash=n._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const hmac=(r,e,t)=>new HMAC(r,e).update(t).digest();hmac.create=(r,e)=>new HMAC(r,e);function setBigUint64(r,e,t,n){if(typeof r.setBigUint64=="function")return r.setBigUint64(e,t,n);const s=BigInt(32),i=BigInt(4294967295),a=Number(t>>s&i),o=Number(t&i),c=n?4:0,h=n?0:4;r.setUint32(e+c,a,n),r.setUint32(e+h,o,n)}class SHA2 extends Hash{constructor(e,t,n,s){super(),this.blockLen=e,this.outputLen=t,this.padOffset=n,this.isLE=s,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=createView(this.buffer)}update(e){if(this.destroyed)throw new Error("instance is destroyed");const{view:t,buffer:n,blockLen:s,finished:i}=this;if(i)throw new Error("digest() was already called");e=toBytes(e);const a=e.length;for(let o=0;o<a;){const c=Math.min(s-this.pos,a-o);if(c===s){const h=createView(e);for(;s<=a-o;o+=s)this.process(h,o);continue}n.set(e.subarray(o,o+c),this.pos),this.pos+=c,o+=c,this.pos===s&&(this.process(t,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){if(this.destroyed)throw new Error("instance is destroyed");if(!(e instanceof Uint8Array)||e.length<this.outputLen)throw new Error("_Sha2: Invalid output buffer");if(this.finished)throw new Error("digest() was already called");this.finished=!0;const{buffer:t,view:n,blockLen:s,isLE:i}=this;let{pos:a}=this;t[a++]=128,this.buffer.subarray(a).fill(0),this.padOffset>s-a&&(this.process(n,0),a=0);for(let c=a;c<s;c++)t[c]=0;setBigUint64(n,s-8,BigInt(this.length*8),i),this.process(n,0);const o=createView(e);this.get().forEach((c,h)=>o.setUint32(4*h,c,i))}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const n=e.slice(0,t);return this.destroy(),n}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:t,buffer:n,length:s,finished:i,destroyed:a,pos:o}=this;return e.length=s,e.pos=o,e.finished=i,e.destroyed=a,s%t&&e.buffer.set(n),e}}const Chi=(r,e,t)=>r&e^~r&t,Maj=(r,e,t)=>r&e^r&t^e&t,SHA256_K=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),IV$1=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),SHA256_W=new Uint32Array(64);class SHA256 extends SHA2{constructor(){super(64,32,8,!1),this.A=IV$1[0]|0,this.B=IV$1[1]|0,this.C=IV$1[2]|0,this.D=IV$1[3]|0,this.E=IV$1[4]|0,this.F=IV$1[5]|0,this.G=IV$1[6]|0,this.H=IV$1[7]|0}get(){const{A:e,B:t,C:n,D:s,E:i,F:a,G:o,H:c}=this;return[e,t,n,s,i,a,o,c]}set(e,t,n,s,i,a,o,c){this.A=e|0,this.B=t|0,this.C=n|0,this.D=s|0,this.E=i|0,this.F=a|0,this.G=o|0,this.H=c|0}process(e,t){for(let x=0;x<16;x++,t+=4)SHA256_W[x]=e.getUint32(t,!1);for(let x=16;x<64;x++){const E=SHA256_W[x-15],V=SHA256_W[x-2],F=rotr(E,7)^rotr(E,18)^E>>>3,q=rotr(V,17)^rotr(V,19)^V>>>10;SHA256_W[x]=q+SHA256_W[x-7]+F+SHA256_W[x-16]|0}let{A:n,B:s,C:i,D:a,E:o,F:c,G:h,H:y}=this;for(let x=0;x<64;x++){const E=rotr(o,6)^rotr(o,11)^rotr(o,25),V=y+E+Chi(o,c,h)+SHA256_K[x]+SHA256_W[x]|0,q=(rotr(n,2)^rotr(n,13)^rotr(n,22))+Maj(n,s,i)|0;y=h,h=c,c=o,o=a+V|0,a=i,i=s,s=n,n=V+q|0}n=n+this.A|0,s=s+this.B|0,i=i+this.C|0,a=a+this.D|0,o=o+this.E|0,c=c+this.F|0,h=h+this.G|0,y=y+this.H|0,this.set(n,s,i,a,o,c,h,y)}roundClean(){SHA256_W.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}const sha256$1=wrapConstructor(()=>new SHA256),U32_MASK64=BigInt(2**32-1),_32n$1=BigInt(32);function fromBig(r,e=!1){return e?{h:Number(r&U32_MASK64),l:Number(r>>_32n$1&U32_MASK64)}:{h:Number(r>>_32n$1&U32_MASK64)|0,l:Number(r&U32_MASK64)|0}}function split(r,e=!1){let t=new Uint32Array(r.length),n=new Uint32Array(r.length);for(let s=0;s<r.length;s++){const{h:i,l:a}=fromBig(r[s],e);[t[s],n[s]]=[i,a]}return[t,n]}const shrSH=(r,e,t)=>r>>>t,shrSL=(r,e,t)=>r<<32-t|e>>>t,rotrSH=(r,e,t)=>r>>>t|e<<32-t,rotrSL=(r,e,t)=>r<<32-t|e>>>t,rotrBH=(r,e,t)=>r<<64-t|e>>>t-32,rotrBL=(r,e,t)=>r>>>t-32|e<<64-t,rotr32H=(r,e)=>e,rotr32L=(r,e)=>r,rotlSH=(r,e,t)=>r<<t|e>>>32-t,rotlSL=(r,e,t)=>e<<t|r>>>32-t,rotlBH=(r,e,t)=>e<<t-32|r>>>64-t,rotlBL=(r,e,t)=>r<<t-32|e>>>64-t;function add(r,e,t,n){const s=(e>>>0)+(n>>>0);return{h:r+t+(s/2**32|0)|0,l:s|0}}const add3L=(r,e,t)=>(r>>>0)+(e>>>0)+(t>>>0),add3H=(r,e,t,n)=>e+t+n+(r/2**32|0)|0,add4L=(r,e,t,n)=>(r>>>0)+(e>>>0)+(t>>>0)+(n>>>0),add4H=(r,e,t,n,s)=>e+t+n+s+(r/2**32|0)|0,add5L=(r,e,t,n,s)=>(r>>>0)+(e>>>0)+(t>>>0)+(n>>>0)+(s>>>0),add5H=(r,e,t,n,s,i)=>e+t+n+s+i+(r/2**32|0)|0,[SHA512_Kh,SHA512_Kl]=split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(r=>BigInt(r))),SHA512_W_H=new Uint32Array(80),SHA512_W_L=new Uint32Array(80);class SHA512 extends SHA2{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:e,Al:t,Bh:n,Bl:s,Ch:i,Cl:a,Dh:o,Dl:c,Eh:h,El:y,Fh:x,Fl:E,Gh:V,Gl:F,Hh:q,Hl:X}=this;return[e,t,n,s,i,a,o,c,h,y,x,E,V,F,q,X]}set(e,t,n,s,i,a,o,c,h,y,x,E,V,F,q,X){this.Ah=e|0,this.Al=t|0,this.Bh=n|0,this.Bl=s|0,this.Ch=i|0,this.Cl=a|0,this.Dh=o|0,this.Dl=c|0,this.Eh=h|0,this.El=y|0,this.Fh=x|0,this.Fl=E|0,this.Gh=V|0,this.Gl=F|0,this.Hh=q|0,this.Hl=X|0}process(e,t){for(let Q=0;Q<16;Q++,t+=4)SHA512_W_H[Q]=e.getUint32(t),SHA512_W_L[Q]=e.getUint32(t+=4);for(let Q=16;Q<80;Q++){const le=SHA512_W_H[Q-15]|0,fe=SHA512_W_L[Q-15]|0,ve=rotrSH(le,fe,1)^rotrSH(le,fe,8)^shrSH(le,fe,7),ke=rotrSL(le,fe,1)^rotrSL(le,fe,8)^shrSL(le,fe,7),Ve=SHA512_W_H[Q-2]|0,Re=SHA512_W_L[Q-2]|0,re=rotrSH(Ve,Re,19)^rotrBH(Ve,Re,61)^shrSH(Ve,Re,6),R=rotrSL(Ve,Re,19)^rotrBL(Ve,Re,61)^shrSL(Ve,Re,6),H=add4L(ke,R,SHA512_W_L[Q-7],SHA512_W_L[Q-16]),b=add4H(H,ve,re,SHA512_W_H[Q-7],SHA512_W_H[Q-16]);SHA512_W_H[Q]=b|0,SHA512_W_L[Q]=H|0}let{Ah:n,Al:s,Bh:i,Bl:a,Ch:o,Cl:c,Dh:h,Dl:y,Eh:x,El:E,Fh:V,Fl:F,Gh:q,Gl:X,Hh:Y,Hl:oe}=this;for(let Q=0;Q<80;Q++){const le=rotrSH(x,E,14)^rotrSH(x,E,18)^rotrBH(x,E,41),fe=rotrSL(x,E,14)^rotrSL(x,E,18)^rotrBL(x,E,41),ve=x&V^~x&q,ke=E&F^~E&X,Ve=add5L(oe,fe,ke,SHA512_Kl[Q],SHA512_W_L[Q]),Re=add5H(Ve,Y,le,ve,SHA512_Kh[Q],SHA512_W_H[Q]),re=Ve|0,R=rotrSH(n,s,28)^rotrBH(n,s,34)^rotrBH(n,s,39),H=rotrSL(n,s,28)^rotrBL(n,s,34)^rotrBL(n,s,39),b=n&i^n&o^i&o,u=s&a^s&c^a&c;Y=q|0,oe=X|0,q=V|0,X=F|0,V=x|0,F=E|0,{h:x,l:E}=add(h|0,y|0,Re|0,re|0),h=o|0,y=c|0,o=i|0,c=a|0,i=n|0,a=s|0;const p=add3L(re,H,u);n=add3H(p,Re,R,b),s=p|0}({h:n,l:s}=add(this.Ah|0,this.Al|0,n|0,s|0)),{h:i,l:a}=add(this.Bh|0,this.Bl|0,i|0,a|0),{h:o,l:c}=add(this.Ch|0,this.Cl|0,o|0,c|0),{h,l:y}=add(this.Dh|0,this.Dl|0,h|0,y|0),{h:x,l:E}=add(this.Eh|0,this.El|0,x|0,E|0),{h:V,l:F}=add(this.Fh|0,this.Fl|0,V|0,F|0),{h:q,l:X}=add(this.Gh|0,this.Gl|0,q|0,X|0),{h:Y,l:oe}=add(this.Hh|0,this.Hl|0,Y|0,oe|0),this.set(n,s,i,a,o,c,h,y,x,E,V,F,q,X,Y,oe)}roundClean(){SHA512_W_H.fill(0),SHA512_W_L.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}class SHA512_256 extends SHA512{constructor(){super(),this.Ah=573645204,this.Al=-64227540,this.Bh=-1621794909,this.Bl=-934517566,this.Ch=596883563,this.Cl=1867755857,this.Dh=-1774684391,this.Dl=1497426621,this.Eh=-1775747358,this.El=-1467023389,this.Fh=-1101128155,this.Fl=1401305490,this.Gh=721525244,this.Gl=746961066,this.Hh=246885852,this.Hl=-2117784414,this.outputLen=32}}class SHA384 extends SHA512{constructor(){super(),this.Ah=-876896931,this.Al=-1056596264,this.Bh=1654270250,this.Bl=914150663,this.Ch=-1856437926,this.Cl=812702999,this.Dh=355462360,this.Dl=-150054599,this.Eh=1731405415,this.El=-4191439,this.Fh=-1900787065,this.Fl=1750603025,this.Gh=-619958771,this.Gl=1694076839,this.Hh=1203062813,this.Hl=-1090891868,this.outputLen=48}}const sha512$1=wrapConstructor(()=>new SHA512);wrapConstructor(()=>new SHA512_256);wrapConstructor(()=>new SHA384);const __bridge={cachegetInt32:null,cachegetUint8:null,type:"wasm",wasm:null,wasmPromise:null,wasmPromiseFn:null};function withWasm(r){return(...e)=>(assert(__bridge.wasm,"The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces."),r(__bridge.wasm,...e))}function getWasm(){return __bridge.wasm}function getInt32(){return(__bridge.cachegetInt32===null||__bridge.cachegetInt32.buffer!==__bridge.wasm.memory.buffer)&&(__bridge.cachegetInt32=new Int32Array(__bridge.wasm.memory.buffer)),__bridge.cachegetInt32}function getUint8(){return(__bridge.cachegetUint8===null||__bridge.cachegetUint8.buffer!==__bridge.wasm.memory.buffer)&&(__bridge.cachegetUint8=new Uint8Array(__bridge.wasm.memory.buffer)),__bridge.cachegetUint8}function getU8a(r,e){return getUint8().subarray(r/1,r/1+e)}function getString(r,e){return u8aToString(getU8a(r,e))}function allocU8a(r){const e=__bridge.wasm.__wbindgen_malloc(r.length*1);return getUint8().set(r,e/1),[e,r.length]}function allocString(r){return allocU8a(stringToU8a(r))}function resultU8a(){const r=getInt32()[2],e=getInt32()[8/4+1],t=getU8a(r,e).slice();return __bridge.wasm.__wbindgen_free(r,e*1),t}const sizeCompressed=171464,sizeUncompressed=340174,bytes="";var bytes_1={bytes,sizeCompressed,sizeUncompressed};const chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";function base64Decode$1(r){const e=[];let t=0,n=0;for(let s=0;s<r.length&&r[s]!=="=";s++)t=t<<6|chars.indexOf(r[s]),(n+=6)>=8&&e.push(t>>>(n-=8)&255);return Uint8Array.from(e)}const u8$1=Uint8Array,u16$1=Uint16Array,u32$1=Uint32Array,clim=new u8$1([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),fleb=new u8$1([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),fdeb=new u8$1([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),freb=(r,e)=>{const t=new u16$1(31);for(let s=0;s<31;++s)t[s]=e+=1<<r[s-1];const n=new u32$1(t[30]);for(let s=1;s<30;++s)for(let i=t[s];i<t[s+1];++i)n[i]=i-t[s]<<5|s;return[t,n]},[fl,revfl]=freb(fleb,2);fl[28]=258,revfl[258]=28;const[fd]=freb(fdeb,0),rev=new u16$1(32768);for(let r=0;r<32768;++r){let e=(r&43690)>>>1|(r&21845)<<1;e=(e&52428)>>>2|(e&13107)<<2,e=(e&61680)>>>4|(e&3855)<<4,rev[r]=((e&65280)>>>8|(e&255)<<8)>>>1}const hMap=(r,e,t)=>{const n=r.length;let s=0;const i=new u16$1(e);for(;s<n;++s)++i[r[s]-1];const a=new u16$1(e);for(s=0;s<e;++s)a[s]=a[s-1]+i[s-1]<<1;let o;if(t){o=new u16$1(1<<e);const c=15-e;for(s=0;s<n;++s)if(r[s]){const h=s<<4|r[s],y=e-r[s];let x=a[r[s]-1]++<<y;for(const E=x|(1<<y)-1;x<=E;++x)o[rev[x]>>>c]=h}}else for(o=new u16$1(n),s=0;s<n;++s)o[s]=rev[a[r[s]-1]++]>>>15-r[s];return o},flt=new u8$1(288);for(let r=0;r<144;++r)flt[r]=8;for(let r=144;r<256;++r)flt[r]=9;for(let r=256;r<280;++r)flt[r]=7;for(let r=280;r<288;++r)flt[r]=8;const fdt=new u8$1(32);for(let r=0;r<32;++r)fdt[r]=5;const flrm=hMap(flt,9,1),fdrm=hMap(fdt,5,1),bits=(r,e,t)=>{const n=e>>>3;return(r[n]|r[n+1]<<8)>>>(e&7)&t},bits16=(r,e)=>{const t=e>>>3;return(r[t]|r[t+1]<<8|r[t+2]<<16)>>>(e&7)},shft=r=>(r>>>3)+(r&7&&1),slc=(r,e,t)=>{(e==null||e<0)&&(e=0),(t==null||t>r.length)&&(t=r.length);const n=new(r instanceof u16$1?u16$1:r instanceof u32$1?u32$1:u8$1)(t-e);return n.set(r.subarray(e,t)),n},max=r=>{let e=r[0];for(let t=1;t<r.length;++t)r[t]>e&&(e=r[t]);return e},inflt=(r,e,t)=>{const n=!t||t.i;t||(t={});const s=r.length,i=!e||!n;e||(e=new u8$1(s*3));const a=q=>{let X=e.length;if(q>X){const Y=new u8$1(Math.max(X<<1,q));Y.set(e),e=Y}};let o=t.f||0,c=t.p||0,h=t.b||0,y=t.l,x=t.d,E=t.m,V=t.n;if(o&&!y)return e;const F=s<<3;do{if(!y){t.f=o=bits(r,c,1);const oe=bits(r,c+1,3);if(c+=3,oe)if(oe==1)y=flrm,x=fdrm,E=9,V=5;else if(oe==2){const Q=bits(r,c,31)+257,le=bits(r,c+10,15)+4,fe=Q+bits(r,c+5,31)+1;c+=14;const ve=new u8$1(fe),ke=new u8$1(19);for(let b=0;b<le;++b)ke[clim[b]]=bits(r,c+b*3,7);c+=le*3;const Ve=max(ke),Re=(1<<Ve)-1;if(!n&&c+fe*(Ve+7)>F)break;const re=hMap(ke,Ve,1);for(let b=0;b<fe;){const u=re[bits(r,c,Re)];c+=u&15;const p=u>>>4;if(p<16)ve[b++]=p;else{let v=0,M=0;for(p==16?(M=3+bits(r,c,3),c+=2,v=ve[b-1]):p==17?(M=3+bits(r,c,7),c+=3):p==18&&(M=11+bits(r,c,127),c+=7);M--;)ve[b++]=v}}const R=ve.subarray(0,Q),H=ve.subarray(Q);E=max(R),V=max(H),y=hMap(R,E,1),x=hMap(H,V,1)}else throw"invalid block type";else{const Q=shft(c)+4,le=r[Q-4]|r[Q-3]<<8,fe=Q+le;if(fe>s){if(n)throw"unexpected EOF";break}i&&a(h+le),e.set(r.subarray(Q,fe),h),t.b=h+=le,t.p=c=fe<<3;continue}if(c>F)throw"unexpected EOF"}i&&a(h+131072);const q=(1<<E)-1,X=(1<<V)-1,Y=E+V+18;for(;n||c+Y<F;){const oe=y[bits16(r,c)&q],Q=oe>>>4;if(c+=oe&15,c>F)throw"unexpected EOF";if(!oe)throw"invalid length/literal";if(Q<256)e[h++]=Q;else if(Q==256){y=void 0;break}else{let le=Q-254;if(Q>264){const Re=Q-257,re=fleb[Re];le=bits(r,c,(1<<re)-1)+fl[Re],c+=re}const fe=x[bits16(r,c)&X],ve=fe>>>4;if(!fe)throw"invalid distance";c+=fe&15;let ke=fd[ve];if(ve>3){const Re=fdeb[ve];ke+=bits16(r,c)&(1<<Re)-1,c+=Re}if(c>F)throw"unexpected EOF";i&&a(h+131072);const Ve=h+le;for(;h<Ve;h+=4)e[h]=e[h-ke],e[h+1]=e[h+1-ke],e[h+2]=e[h+2-ke],e[h+3]=e[h+3-ke];h=Ve}}t.l=y,t.p=c,t.b=h,y&&(o=1,t.m=E,t.d=x,t.n=V)}while(!o);return h==e.length?e:slc(e,0,h)},zlv=r=>{if((r[0]&15)!=8||r[0]>>>4>7||(r[0]<<8|r[1])%31)throw"invalid zlib data";if(r[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function unzlibSync(r,e){return inflt((zlv(r),r.subarray(2,-4)),e)}const wasmBytes=unzlibSync(base64Decode$1(bytes_1.bytes),new Uint8Array(bytes_1.sizeUncompressed)),DEFAULT_CRYPTO={getRandomValues},DEFAULT_SELF={crypto:DEFAULT_CRYPTO},heap=new Array(32).fill(void 0).concat(void 0,null,!0,!1);let heapNext=heap.length;function getObject(r){return heap[r]}function dropObject(r){r<36||(heap[r]=heapNext,heapNext=r)}function takeObject(r){const e=getObject(r);return dropObject(r),e}function addObject(r){heapNext===heap.length&&heap.push(heap.length+1);const e=heapNext;return heapNext=heap[e],heap[e]=r,e}function __wbindgen_is_undefined(r){return getObject(r)===void 0}function __wbindgen_throw(r,e){throw new Error(getString(r,e))}function __wbg_self_1b7a39e3a92c949c(){return addObject(DEFAULT_SELF)}function __wbg_require_604837428532a733(r,e){throw new Error(`Unable to require ${getString(r,e)}`)}function __wbg_crypto_968f1772287e2df0(r){return addObject(DEFAULT_CRYPTO)}function __wbg_getRandomValues_a3d34b4fee3c2869(r){return addObject(DEFAULT_CRYPTO.getRandomValues)}function __wbg_getRandomValues_f5e14ab7ac8e995d(r,e,t){DEFAULT_CRYPTO.getRandomValues(getU8a(e,t))}function __wbg_randomFillSync_d5bd2d655fdf256a(r,e,t){throw new Error("randomFillsync is not available")}function __wbindgen_object_drop_ref(r){takeObject(r)}function abort(){throw new Error("abort")}var wbg=Object.freeze(Object.defineProperty({__proto__:null,__wbindgen_is_undefined,__wbindgen_throw,__wbg_self_1b7a39e3a92c949c,__wbg_require_604837428532a733,__wbg_crypto_968f1772287e2df0,__wbg_getRandomValues_a3d34b4fee3c2869,__wbg_getRandomValues_f5e14ab7ac8e995d,__wbg_randomFillSync_d5bd2d655fdf256a,__wbindgen_object_drop_ref,abort},Symbol.toStringTag,{value:"Module"}));async function createPromise(r,e){try{assert(typeof WebAssembly=="object"&&typeof WebAssembly.instantiate=="function"&&r&&r.length,"WebAssembly is not available in your environment");const t=await WebAssembly.instantiate(r,{wbg});__bridge.wasm=t.instance.exports}catch(t){e?(__bridge.type="asm",__bridge.wasm=e(wbg)):(console.error(`FATAL: Unable to initialize @polkadot/wasm-crypto:: ${t.message}`),__bridge.wasm=null)}}function setWasmPromise(r,e){return __bridge.wasmPromise=createPromise(r,e),__bridge.wasmPromise}function initWasm(){return setWasmPromise(wasmBytes,null)}const bip39ToEntropy=withWasm((r,e)=>(r.ext_bip39_to_entropy(8,...allocString(e)),resultU8a())),bip39ToMiniSecret=withWasm((r,e,t)=>(r.ext_bip39_to_mini_secret(8,...allocString(e),...allocString(t)),resultU8a())),bip39ToSeed=withWasm((r,e,t)=>(r.ext_bip39_to_seed(8,...allocString(e),...allocString(t)),resultU8a())),bip39Validate=withWasm((r,e)=>r.ext_bip39_validate(...allocString(e))!==0),ed25519KeypairFromSeed=withWasm((r,e)=>(r.ext_ed_from_seed(8,...allocU8a(e)),resultU8a())),ed25519Sign$1=withWasm((r,e,t,n)=>(r.ext_ed_sign(8,...allocU8a(e),...allocU8a(t),...allocU8a(n)),resultU8a())),ed25519Verify$1=withWasm((r,e,t,n)=>r.ext_ed_verify(...allocU8a(e),...allocU8a(t),...allocU8a(n))!==0),secp256k1FromSeed=withWasm((r,e)=>(r.ext_secp_from_seed(8,...allocU8a(e)),resultU8a())),secp256k1Compress$1=withWasm((r,e)=>(r.ext_secp_pub_compress(8,...allocU8a(e)),resultU8a())),secp256k1Expand$1=withWasm((r,e)=>(r.ext_secp_pub_expand(8,...allocU8a(e)),resultU8a())),secp256k1Recover$1=withWasm((r,e,t,n)=>(r.ext_secp_recover(8,...allocU8a(e),...allocU8a(t),n),resultU8a())),secp256k1Sign$1=withWasm((r,e,t)=>(r.ext_secp_sign(8,...allocU8a(e),...allocU8a(t)),resultU8a())),sr25519DeriveKeypairHard=withWasm((r,e,t)=>(r.ext_sr_derive_keypair_hard(8,...allocU8a(e),...allocU8a(t)),resultU8a())),sr25519DeriveKeypairSoft=withWasm((r,e,t)=>(r.ext_sr_derive_keypair_soft(8,...allocU8a(e),...allocU8a(t)),resultU8a())),sr25519KeypairFromSeed=withWasm((r,e)=>(r.ext_sr_from_seed(8,...allocU8a(e)),resultU8a())),sr25519Sign$1=withWasm((r,e,t,n)=>(r.ext_sr_sign(8,...allocU8a(e),...allocU8a(t),...allocU8a(n)),resultU8a())),sr25519Verify$1=withWasm((r,e,t,n)=>r.ext_sr_verify(...allocU8a(e),...allocU8a(t),...allocU8a(n))!==0),vrfSign=withWasm((r,e,t,n,s)=>(r.ext_vrf_sign(8,...allocU8a(e),...allocU8a(t),...allocU8a(n),...allocU8a(s)),resultU8a())),vrfVerify=withWasm((r,e,t,n,s,i)=>r.ext_vrf_verify(...allocU8a(e),...allocU8a(t),...allocU8a(n),...allocU8a(s),...allocU8a(i))!==0),blake2b$1=withWasm((r,e,t,n)=>(r.ext_blake2b(8,...allocU8a(e),...allocU8a(t),n),resultU8a())),hmacSha256=withWasm((r,e,t)=>(r.ext_hmac_sha256(8,...allocU8a(e),...allocU8a(t)),resultU8a())),hmacSha512=withWasm((r,e,t)=>(r.ext_hmac_sha512(8,...allocU8a(e),...allocU8a(t)),resultU8a())),keccak256=withWasm((r,e)=>(r.ext_keccak256(8,...allocU8a(e)),resultU8a())),keccak512=withWasm((r,e)=>(r.ext_keccak512(8,...allocU8a(e)),resultU8a())),pbkdf2$1=withWasm((r,e,t,n)=>(r.ext_pbkdf2(8,...allocU8a(e),...allocU8a(t),n),resultU8a())),scrypt$1=withWasm((r,e,t,n,s,i)=>(r.ext_scrypt(8,...allocU8a(e),...allocU8a(t),n,s,i),resultU8a())),sha256=withWasm((r,e)=>(r.ext_sha256(8,...allocU8a(e)),resultU8a())),sha512=withWasm((r,e)=>(r.ext_sha512(8,...allocU8a(e)),resultU8a())),twox=withWasm((r,e,t)=>(r.ext_twox(8,...allocU8a(e),t),resultU8a()));function isReady(){return!!getWasm()}async function waitReady(){try{return __bridge.wasmPromise||(__bridge.wasmPromiseFn||(__bridge.wasmPromiseFn=initWasm),__bridge.wasmPromise=__bridge.wasmPromiseFn()),await __bridge.wasmPromise,isReady()}catch{return!1}}const JS_HASH={256:sha256$1,512:sha512$1},WA_MHAC={256:hmacSha256,512:hmacSha512};function hmacShaAsU8a(r,e,t=256,n){const s=u8aToU8a(r);return!hasBigInt||!n&&isReady()?WA_MHAC[t](s,e):hmac(JS_HASH[t],s,e)}var base={};(function(r){/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */Object.defineProperty(r,"__esModule",{value:!0}),r.bytes=r.stringToBytes=r.str=r.bytesToString=r.hex=r.utf8=r.bech32m=r.bech32=r.base58check=r.base58xmr=r.base58xrp=r.base58flickr=r.base58=r.base64url=r.base64=r.base32crockford=r.base32hex=r.base32=r.base16=r.utils=r.assertNumber=void 0;function e(R){if(!Number.isSafeInteger(R))throw new Error(`Wrong integer: ${R}`)}r.assertNumber=e;function t(...R){const H=(p,v)=>M=>p(v(M)),b=Array.from(R).reverse().reduce((p,v)=>p?H(p,v.encode):v.encode,void 0),u=R.reduce((p,v)=>p?H(p,v.decode):v.decode,void 0);return{encode:b,decode:u}}function n(R){return{encode:H=>{if(!Array.isArray(H)||H.length&&typeof H[0]!="number")throw new Error("alphabet.encode input should be an array of numbers");return H.map(b=>{if(e(b),b<0||b>=R.length)throw new Error(`Digit index outside alphabet: ${b} (alphabet: ${R.length})`);return R[b]})},decode:H=>{if(!Array.isArray(H)||H.length&&typeof H[0]!="string")throw new Error("alphabet.decode input should be array of strings");return H.map(b=>{if(typeof b!="string")throw new Error(`alphabet.decode: not string element=${b}`);const u=R.indexOf(b);if(u===-1)throw new Error(`Unknown letter: "${b}". Allowed: ${R}`);return u})}}}function s(R=""){if(typeof R!="string")throw new Error("join separator should be string");return{encode:H=>{if(!Array.isArray(H)||H.length&&typeof H[0]!="string")throw new Error("join.encode input should be array of strings");for(let b of H)if(typeof b!="string")throw new Error(`join.encode: non-string input=${b}`);return H.join(R)},decode:H=>{if(typeof H!="string")throw new Error("join.decode input should be string");return H.split(R)}}}function i(R,H="="){if(e(R),typeof H!="string")throw new Error("padding chr should be string");return{encode(b){if(!Array.isArray(b)||b.length&&typeof b[0]!="string")throw new Error("padding.encode input should be array of strings");for(let u of b)if(typeof u!="string")throw new Error(`padding.encode: non-string input=${u}`);for(;b.length*R%8;)b.push(H);return b},decode(b){if(!Array.isArray(b)||b.length&&typeof b[0]!="string")throw new Error("padding.encode input should be array of strings");for(let p of b)if(typeof p!="string")throw new Error(`padding.decode: non-string input=${p}`);let u=b.length;if(u*R%8)throw new Error("Invalid padding: string should have whole number of bytes");for(;u>0&&b[u-1]===H;u--)if(!((u-1)*R%8))throw new Error("Invalid padding: string has too much padding");return b.slice(0,u)}}}function a(R){if(typeof R!="function")throw new Error("normalize fn should be function");return{encode:H=>H,decode:H=>R(H)}}function o(R,H,b){if(H<2)throw new Error(`convertRadix: wrong from=${H}, base cannot be less than 2`);if(b<2)throw new Error(`convertRadix: wrong to=${b}, base cannot be less than 2`);if(!Array.isArray(R))throw new Error("convertRadix: data should be array");if(!R.length)return[];let u=0;const p=[],v=Array.from(R);for(v.forEach(M=>{if(e(M),M<0||M>=H)throw new Error(`Wrong integer: ${M}`)});;){let M=0,B=!0;for(let U=u;U<v.length;U++){const z=v[U],k=H*M+z;if(!Number.isSafeInteger(k)||H*M/H!==M||k-z!==H*M)throw new Error("convertRadix: carry overflow");if(M=k%b,v[U]=Math.floor(k/b),!Number.isSafeInteger(v[U])||v[U]*b+M!==k)throw new Error("convertRadix: carry overflow");if(B)v[U]?B=!1:u=U;else continue}if(p.push(M),B)break}for(let M=0;M<R.length-1&&R[M]===0;M++)p.push(0);return p.reverse()}const c=(R,H)=>H?c(H,R%H):R,h=(R,H)=>R+(H-c(R,H));function y(R,H,b,u){if(!Array.isArray(R))throw new Error("convertRadix2: data should be array");if(H<=0||H>32)throw new Error(`convertRadix2: wrong from=${H}`);if(b<=0||b>32)throw new Error(`convertRadix2: wrong to=${b}`);if(h(H,b)>32)throw new Error(`convertRadix2: carry overflow from=${H} to=${b} carryBits=${h(H,b)}`);let p=0,v=0;const M=2**b-1,B=[];for(const U of R){if(e(U),U>=2**H)throw new Error(`convertRadix2: invalid data word=${U} from=${H}`);if(p=p<<H|U,v+H>32)throw new Error(`convertRadix2: carry overflow pos=${v} from=${H}`);for(v+=H;v>=b;v-=b)B.push((p>>v-b&M)>>>0);p&=2**v-1}if(p=p<<b-v&M,!u&&v>=H)throw new Error("Excess padding");if(!u&&p)throw new Error(`Non-zero padding: ${p}`);return u&&v>0&&B.push(p>>>0),B}function x(R){return e(R),{encode:H=>{if(!(H instanceof Uint8Array))throw new Error("radix.encode input should be Uint8Array");return o(Array.from(H),2**8,R)},decode:H=>{if(!Array.isArray(H)||H.length&&typeof H[0]!="number")throw new Error("radix.decode input should be array of strings");return Uint8Array.from(o(H,R,2**8))}}}function E(R,H=!1){if(e(R),R<=0||R>32)throw new Error("radix2: bits should be in (0..32]");if(h(8,R)>32||h(R,8)>32)throw new Error("radix2: carry overflow");return{encode:b=>{if(!(b instanceof Uint8Array))throw new Error("radix2.encode input should be Uint8Array");return y(Array.from(b),8,R,!H)},decode:b=>{if(!Array.isArray(b)||b.length&&typeof b[0]!="number")throw new Error("radix2.decode input should be array of strings");return Uint8Array.from(y(b,R,8,H))}}}function V(R){if(typeof R!="function")throw new Error("unsafeWrapper fn should be function");return function(...H){try{return R.apply(null,H)}catch{}}}function F(R,H){if(e(R),typeof H!="function")throw new Error("checksum fn should be function");return{encode(b){if(!(b instanceof Uint8Array))throw new Error("checksum.encode: input should be Uint8Array");const u=H(b).slice(0,R),p=new Uint8Array(b.length+R);return p.set(b),p.set(u,b.length),p},decode(b){if(!(b instanceof Uint8Array))throw new Error("checksum.decode: input should be Uint8Array");const u=b.slice(0,-R),p=H(u).slice(0,R),v=b.slice(-R);for(let M=0;M<R;M++)if(p[M]!==v[M])throw new Error("Invalid checksum");return u}}}r.utils={alphabet:n,chain:t,checksum:F,radix:x,radix2:E,join:s,padding:i},r.base16=t(E(4),n("0123456789ABCDEF"),s("")),r.base32=t(E(5),n("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),i(5),s("")),r.base32hex=t(E(5),n("0123456789ABCDEFGHIJKLMNOPQRSTUV"),i(5),s("")),r.base32crockford=t(E(5),n("0123456789ABCDEFGHJKMNPQRSTVWXYZ"),s(""),a(R=>R.toUpperCase().replace(/O/g,"0").replace(/[IL]/g,"1"))),r.base64=t(E(6),n("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),i(6),s("")),r.base64url=t(E(6),n("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),i(6),s(""));const q=R=>t(x(58),n(R),s(""));r.base58=q("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),r.base58flickr=q("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"),r.base58xrp=q("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz");const X=[0,2,3,5,6,7,9,10,11];r.base58xmr={encode(R){let H="";for(let b=0;b<R.length;b+=8){const u=R.subarray(b,b+8);H+=r.base58.encode(u).padStart(X[u.length],"1")}return H},decode(R){let H=[];for(let b=0;b<R.length;b+=11){const u=R.slice(b,b+11),p=X.indexOf(u.length),v=r.base58.decode(u);for(let M=0;M<v.length-p;M++)if(v[M]!==0)throw new Error("base58xmr: wrong padding");H=H.concat(Array.from(v.slice(v.length-p)))}return Uint8Array.from(H)}};const Y=R=>t(F(4,H=>R(R(H))),r.base58);r.base58check=Y;const oe=t(n("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),s("")),Q=[996825010,642813549,513874426,1027748829,705979059];function le(R){const H=R>>25;let b=(R&33554431)<<5;for(let u=0;u<Q.length;u++)(H>>u&1)===1&&(b^=Q[u]);return b}function fe(R,H,b=1){const u=R.length;let p=1;for(let v=0;v<u;v++){const M=R.charCodeAt(v);if(M<33||M>126)throw new Error(`Invalid prefix (${R})`);p=le(p)^M>>5}p=le(p);for(let v=0;v<u;v++)p=le(p)^R.charCodeAt(v)&31;for(let v of H)p=le(p)^v;for(let v=0;v<6;v++)p=le(p);return p^=b,oe.encode(y([p%2**30],30,5,!1))}function ve(R){const H=R==="bech32"?1:734539939,b=E(5),u=b.decode,p=b.encode,v=V(u);function M(k,m,I=90){if(typeof k!="string")throw new Error(`bech32.encode prefix should be string, not ${typeof k}`);if(!Array.isArray(m)||m.length&&typeof m[0]!="number")throw new Error(`bech32.encode words should be array of numbers, not ${typeof m}`);const ge=k.length+7+m.length;if(I!==!1&&ge>I)throw new TypeError(`Length ${ge} exceeds limit ${I}`);return k=k.toLowerCase(),`${k}1${oe.encode(m)}${fe(k,m,H)}`}function B(k,m=90){if(typeof k!="string")throw new Error(`bech32.decode input should be string, not ${typeof k}`);if(k.length<8||m!==!1&&k.length>m)throw new TypeError(`Wrong string length: ${k.length} (${k}). Expected (8..${m})`);const I=k.toLowerCase();if(k!==I&&k!==k.toUpperCase())throw new Error("String must be lowercase or uppercase");k=I;const ge=k.lastIndexOf("1");if(ge===0||ge===-1)throw new Error('Letter "1" must be present between prefix and data only');const[ae,be]=[k.slice(0,ge),k.slice(ge+1)];if(be.length<6)throw new Error("Data must be at least 6 characters long");const gt=oe.decode(be).slice(0,-6),We=fe(ae,gt,H);if(!be.endsWith(We))throw new Error(`Invalid checksum in ${k}: expected "${We}"`);return{prefix:ae,words:gt}}const U=V(B);function z(k){const{prefix:m,words:I}=B(k,!1);return{prefix:m,words:I,bytes:u(I)}}return{encode:M,decode:B,decodeToBytes:z,decodeUnsafe:U,fromWords:u,fromWordsUnsafe:v,toWords:p}}r.bech32=ve("bech32"),r.bech32m=ve("bech32m"),r.utf8={encode:R=>new TextDecoder().decode(R),decode:R=>new TextEncoder().encode(R)},r.hex=t(E(4),n("0123456789abcdef"),s(""),a(R=>{if(typeof R!="string"||R.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof R} with length ${R.length}`);return R.toLowerCase()}));const ke={utf8:r.utf8,hex:r.hex,base16:r.base16,base32:r.base32,base64:r.base64,base64url:r.base64url,base58:r.base58,base58xmr:r.base58xmr},Ve=`Invalid encoding type. Available types: ${Object.keys(ke).join(", ")}`,Re=(R,H)=>{if(typeof R!="string"||!ke.hasOwnProperty(R))throw new TypeError(Ve);if(!(H instanceof Uint8Array))throw new TypeError("bytesToString() expects Uint8Array");return ke[R].encode(H)};r.bytesToString=Re,r.str=r.bytesToString;const re=(R,H)=>{if(!ke.hasOwnProperty(R))throw new TypeError(Ve);if(typeof H!="string")throw new TypeError("stringToBytes() expects string");return ke[R].decode(H)};r.stringToBytes=re,r.bytes=r.stringToBytes})(base);function createDecode({coder:r,ipfs:e},t){return(n,s)=>(t(n,s),r.decode(e&&s?n.substr(1):n))}function createEncode({coder:r,ipfs:e}){return(t,n)=>{const s=r.encode(u8aToU8a(t));return e&&n?`${e}${s}`:s}}function createValidate({chars:r,ipfs:e,type:t}){return(n,s)=>{assert(n&&typeof n=="string",()=>`Expected non-null, non-empty ${t} string input`),e&&s&&assert(n[0]===e,()=>`Expected ipfs-compatible ${t} to start with '${e}'`);for(let i=s?1:0;i<n.length;i++)assert(r.includes(n[i])||n[i]==="="&&(i===n.length-1||!r.includes(n[i+1])),()=>`Invalid ${t} character "${n[i]}" (0x${n.charCodeAt(i).toString(16)}) at index ${i}`);return!0}}const config$2={chars:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:base.base58,ipfs:"z",type:"base58"},base58Validate=createValidate(config$2),base58Decode=createDecode(config$2,base58Validate),base58Encode=createEncode(config$2),SIGMA=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3]);class BLAKE2 extends Hash{constructor(e,t,n={},s,i,a){if(super(),this.blockLen=e,this.outputLen=t,this.length=0,this.pos=0,this.finished=!1,this.destroyed=!1,assertNumber(e),assertNumber(t),assertNumber(s),t<0||t>s)throw new Error("Blake2: outputLen bigger than keyLen");if(n.key!==void 0&&(n.key.length<1||n.key.length>s))throw new Error(`Key should be up 1..${s} byte long or undefined`);if(n.salt!==void 0&&n.salt.length!==i)throw new Error(`Salt should be ${i} byte long or undefined`);if(n.personalization!==void 0&&n.personalization.length!==a)throw new Error(`Personalization should be ${a} byte long or undefined`);this.buffer32=u32$2(this.buffer=new Uint8Array(e))}update(e){if(this.destroyed)throw new Error("instance is destroyed");const{finished:t,blockLen:n,buffer:s,buffer32:i}=this;if(t)throw new Error("digest() was already called");e=toBytes(e);const a=e.length;for(let o=0;o<a;){this.pos===n&&(this.compress(i,0,!1),this.pos=0);const c=Math.min(n-this.pos,a-o),h=e.byteOffset+o;if(c===n&&!(h%4)&&o+c<a){const y=new Uint32Array(e.buffer,h,Math.floor((a-o)/4));for(let x=0;o+n<a;x+=i.length,o+=n)this.length+=n,this.compress(y,x,!1);continue}s.set(e.subarray(o,o+c),this.pos),this.pos+=c,this.length+=c,o+=c}return this}digestInto(e){if(this.destroyed)throw new Error("instance is destroyed");if(!(e instanceof Uint8Array)||e.length<this.outputLen)throw new Error("_Blake2: Invalid output buffer");const{finished:t,pos:n,buffer32:s}=this;if(t)throw new Error("digest() was already called");this.finished=!0,this.buffer.subarray(n).fill(0),this.compress(s,0,!0);const i=u32$2(e);this.get().forEach((a,o)=>i[o]=a)}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const n=e.slice(0,t);return this.destroy(),n}_cloneInto(e){const{buffer:t,length:n,finished:s,destroyed:i,outputLen:a,pos:o}=this;return e||(e=new this.constructor({dkLen:a})),e.set(...this.get()),e.length=n,e.finished=s,e.destroyed=i,e.outputLen=a,e.buffer.set(t),e.pos=o,e}}const IV=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),BUF=new Uint32Array(32);function G1(r,e,t,n,s,i){const a=s[i],o=s[i+1];let c=BUF[2*r],h=BUF[2*r+1],y=BUF[2*e],x=BUF[2*e+1],E=BUF[2*t],V=BUF[2*t+1],F=BUF[2*n],q=BUF[2*n+1],X=add3L(c,y,a);h=add3H(X,h,x,o),c=X|0,{Dh:q,Dl:F}={Dh:q^h,Dl:F^c},{Dh:q,Dl:F}={Dh:rotr32H(q,F),Dl:rotr32L(q)},{h:V,l:E}=add(V,E,q,F),{Bh:x,Bl:y}={Bh:x^V,Bl:y^E},{Bh:x,Bl:y}={Bh:rotrSH(x,y,24),Bl:rotrSL(x,y,24)},BUF[2*r]=c,BUF[2*r+1]=h,BUF[2*e]=y,BUF[2*e+1]=x,BUF[2*t]=E,BUF[2*t+1]=V,BUF[2*n]=F,BUF[2*n+1]=q}function G2(r,e,t,n,s,i){const a=s[i],o=s[i+1];let c=BUF[2*r],h=BUF[2*r+1],y=BUF[2*e],x=BUF[2*e+1],E=BUF[2*t],V=BUF[2*t+1],F=BUF[2*n],q=BUF[2*n+1],X=add3L(c,y,a);h=add3H(X,h,x,o),c=X|0,{Dh:q,Dl:F}={Dh:q^h,Dl:F^c},{Dh:q,Dl:F}={Dh:rotrSH(q,F,16),Dl:rotrSL(q,F,16)},{h:V,l:E}=add(V,E,q,F),{Bh:x,Bl:y}={Bh:x^V,Bl:y^E},{Bh:x,Bl:y}={Bh:rotrBH(x,y,63),Bl:rotrBL(x,y,63)},BUF[2*r]=c,BUF[2*r+1]=h,BUF[2*e]=y,BUF[2*e+1]=x,BUF[2*t]=E,BUF[2*t+1]=V,BUF[2*n]=F,BUF[2*n+1]=q}class BLAKE2b extends BLAKE2{constructor(e={}){super(128,e.dkLen===void 0?64:e.dkLen,e,64,16,16),this.v0l=IV[0]|0,this.v0h=IV[1]|0,this.v1l=IV[2]|0,this.v1h=IV[3]|0,this.v2l=IV[4]|0,this.v2h=IV[5]|0,this.v3l=IV[6]|0,this.v3h=IV[7]|0,this.v4l=IV[8]|0,this.v4h=IV[9]|0,this.v5l=IV[10]|0,this.v5h=IV[11]|0,this.v6l=IV[12]|0,this.v6h=IV[13]|0,this.v7l=IV[14]|0,this.v7h=IV[15]|0;const t=e.key?e.key.length:0;if(this.v0l^=this.outputLen|t<<8|1<<16|1<<24,e.salt){const n=u32$2(toBytes(e.salt));this.v4l^=n[0],this.v4h^=n[1],this.v5l^=n[2],this.v5h^=n[3]}if(e.personalization){const n=u32$2(toBytes(e.personalization));this.v6l^=n[0],this.v6h^=n[1],this.v7l^=n[2],this.v7h^=n[3]}if(e.key){const n=new Uint8Array(this.blockLen);n.set(toBytes(e.key)),this.update(n)}}get(){let{v0l:e,v0h:t,v1l:n,v1h:s,v2l:i,v2h:a,v3l:o,v3h:c,v4l:h,v4h:y,v5l:x,v5h:E,v6l:V,v6h:F,v7l:q,v7h:X}=this;return[e,t,n,s,i,a,o,c,h,y,x,E,V,F,q,X]}set(e,t,n,s,i,a,o,c,h,y,x,E,V,F,q,X){this.v0l=e|0,this.v0h=t|0,this.v1l=n|0,this.v1h=s|0,this.v2l=i|0,this.v2h=a|0,this.v3l=o|0,this.v3h=c|0,this.v4l=h|0,this.v4h=y|0,this.v5l=x|0,this.v5h=E|0,this.v6l=V|0,this.v6h=F|0,this.v7l=q|0,this.v7h=X|0}compress(e,t,n){this.get().forEach((c,h)=>BUF[h]=c),BUF.set(IV,16);let{h:s,l:i}=fromBig(BigInt(this.length));BUF[24]=IV[8]^i,BUF[25]=IV[9]^s,n&&(BUF[28]=~BUF[28],BUF[29]=~BUF[29]);let a=0;const o=SIGMA;for(let c=0;c<12;c++)G1(0,4,8,12,e,t+2*o[a++]),G2(0,4,8,12,e,t+2*o[a++]),G1(1,5,9,13,e,t+2*o[a++]),G2(1,5,9,13,e,t+2*o[a++]),G1(2,6,10,14,e,t+2*o[a++]),G2(2,6,10,14,e,t+2*o[a++]),G1(3,7,11,15,e,t+2*o[a++]),G2(3,7,11,15,e,t+2*o[a++]),G1(0,5,10,15,e,t+2*o[a++]),G2(0,5,10,15,e,t+2*o[a++]),G1(1,6,11,12,e,t+2*o[a++]),G2(1,6,11,12,e,t+2*o[a++]),G1(2,7,8,13,e,t+2*o[a++]),G2(2,7,8,13,e,t+2*o[a++]),G1(3,4,9,14,e,t+2*o[a++]),G2(3,4,9,14,e,t+2*o[a++]);this.v0l^=BUF[0]^BUF[16],this.v0h^=BUF[1]^BUF[17],this.v1l^=BUF[2]^BUF[18],this.v1h^=BUF[3]^BUF[19],this.v2l^=BUF[4]^BUF[20],this.v2h^=BUF[5]^BUF[21],this.v3l^=BUF[6]^BUF[22],this.v3h^=BUF[7]^BUF[23],this.v4l^=BUF[8]^BUF[24],this.v4h^=BUF[9]^BUF[25],this.v5l^=BUF[10]^BUF[26],this.v5h^=BUF[11]^BUF[27],this.v6l^=BUF[12]^BUF[28],this.v6h^=BUF[13]^BUF[29],this.v7l^=BUF[14]^BUF[30],this.v7h^=BUF[15]^BUF[31],BUF.fill(0)}destroy(){this.destroyed=!0,this.buffer32.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const blake2b=wrapConstructorWithOpts(r=>new BLAKE2b(r));function createAsHex(r){return(...e)=>u8aToHex(r(...e))}function createBitHasher(r,e){return(t,n)=>e(t,r,n)}function createDualHasher(r,e){return(t,n=256,s)=>{const i=u8aToU8a(t);return!hasBigInt||!s&&isReady()?r[n](i):e[n](i)}}function blake2AsU8a(r,e=256,t,n){const s=Math.ceil(e/8),i=u8aToU8a(r);return!hasBigInt||!n&&isReady()?blake2b$1(i,u8aToU8a(t),s):blake2b(i,{dkLen:s,key:t||void 0})}const SS58_PREFIX=stringToU8a("SS58PRE");function sshash(r){return blake2AsU8a(u8aConcat(SS58_PREFIX,r),512)}function checkAddressChecksum(r){const e=r[0]&64?2:1,t=e===1?r[0]:(r[0]&63)<<2|r[1]>>6|(r[1]&63)<<8,n=[34+e,35+e].includes(r.length),s=r.length-(n?2:1),i=sshash(r.subarray(0,s));return[(r[0]&128)===0&&![46,47].includes(r[0])&&(n?r[r.length-2]===i[0]&&r[r.length-1]===i[1]:r[r.length-1]===i[0]),s,e,t]}var knownSubstrate=[{prefix:0,network:"polkadot",displayName:"Polkadot Relay Chain",symbols:["DOT"],decimals:[10],standardAccount:"*25519",website:"https://polkadot.network"},{prefix:1,network:"BareSr25519",displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",symbols:[],decimals:[],standardAccount:"Sr25519",website:null},{prefix:2,network:"kusama",displayName:"Kusama Relay Chain",symbols:["KSM"],decimals:[12],standardAccount:"*25519",website:"https://kusama.network"},{prefix:3,network:"BareEd25519",displayName:"Bare 32-bit Ed25519 public key.",symbols:[],decimals:[],standardAccount:"Ed25519",website:null},{prefix:4,network:"katalchain",displayName:"Katal Chain",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:5,network:"astar",displayName:"Astar Network",symbols:["ASTR"],decimals:[18],standardAccount:"*25519",website:"https://astar.network"},{prefix:6,network:"bifrost",displayName:"Bifrost",symbols:["BNC"],decimals:[12],standardAccount:"*25519",website:"https://bifrost.finance/"},{prefix:7,network:"edgeware",displayName:"Edgeware",symbols:["EDG"],decimals:[18],standardAccount:"*25519",website:"https://edgewa.re"},{prefix:8,network:"karura",displayName:"Karura",symbols:["KAR"],decimals:[12],standardAccount:"*25519",website:"https://karura.network/"},{prefix:9,network:"reynolds",displayName:"Laminar Reynolds Canary",symbols:["REY"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:10,network:"acala",displayName:"Acala",symbols:["ACA"],decimals:[12],standardAccount:"*25519",website:"https://acala.network/"},{prefix:11,network:"laminar",displayName:"Laminar",symbols:["LAMI"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:12,network:"polymesh",displayName:"Polymesh",symbols:["POLYX"],decimals:[6],standardAccount:"*25519",website:"https://polymath.network/"},{prefix:13,network:"integritee",displayName:"Integritee",symbols:["TEER"],decimals:[12],standardAccount:"*25519",website:"https://integritee.network"},{prefix:14,network:"totem",displayName:"Totem",symbols:["TOTEM"],decimals:[0],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:15,network:"synesthesia",displayName:"Synesthesia",symbols:["SYN"],decimals:[12],standardAccount:"*25519",website:"https://synesthesia.network/"},{prefix:16,network:"kulupu",displayName:"Kulupu",symbols:["KLP"],decimals:[12],standardAccount:"*25519",website:"https://kulupu.network/"},{prefix:17,network:"dark",displayName:"Dark Mainnet",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:18,network:"darwinia",displayName:"Darwinia Network",symbols:["RING","KTON"],decimals:[9,9],standardAccount:"*25519",website:"https://darwinia.network/"},{prefix:20,network:"stafi",displayName:"Stafi",symbols:["FIS"],decimals:[12],standardAccount:"*25519",website:"https://stafi.io"},{prefix:21,network:"dock-testnet",displayName:"Dock Testnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:22,network:"dock-mainnet",displayName:"Dock Mainnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:23,network:"shift",displayName:"ShiftNrg",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:24,network:"zero",displayName:"ZERO",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:25,network:"zero-alphaville",displayName:"ZERO Alphaville",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:26,network:"jupiter",displayName:"Jupiter",symbols:["jDOT"],decimals:[10],standardAccount:"*25519",website:"https://jupiter.patract.io"},{prefix:27,network:"kabocha",displayName:"Kabocha",symbols:["KAB"],decimals:[12],standardAccount:"*25519",website:"https://kabocha.network"},{prefix:28,network:"subsocial",displayName:"Subsocial",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:29,network:"cord",displayName:"CORD Network",symbols:["DHI","WAY"],decimals:[12,12],standardAccount:"*25519",website:"https://cord.network/"},{prefix:30,network:"phala",displayName:"Phala Network",symbols:["PHA"],decimals:[12],standardAccount:"*25519",website:"https://phala.network"},{prefix:31,network:"litentry",displayName:"Litentry Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:32,network:"robonomics",displayName:"Robonomics",symbols:["XRT"],decimals:[9],standardAccount:"*25519",website:"https://robonomics.network"},{prefix:33,network:"datahighway",displayName:"DataHighway",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:34,network:"ares",displayName:"Ares Protocol",symbols:["ARES"],decimals:[12],standardAccount:"*25519",website:"https://www.aresprotocol.com/"},{prefix:35,network:"vln",displayName:"Valiu Liquidity Network",symbols:["USDv"],decimals:[15],standardAccount:"*25519",website:"https://valiu.com/"},{prefix:36,network:"centrifuge",displayName:"Centrifuge Chain",symbols:["CFG"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:37,network:"nodle",displayName:"Nodle Chain",symbols:["NODL"],decimals:[18],standardAccount:"*25519",website:"https://nodle.io/"},{prefix:38,network:"kilt",displayName:"KILT Chain",symbols:["KILT"],decimals:[18],standardAccount:"*25519",website:"https://kilt.io/"},{prefix:39,network:"mathchain",displayName:"MathChain mainnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:40,network:"mathchain-testnet",displayName:"MathChain testnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:41,network:"poli",displayName:"Polimec Chain",symbols:[],decimals:[],standardAccount:"*25519",website:"https://polimec.io/"},{prefix:42,network:"substrate",displayName:"Substrate",symbols:[],decimals:[],standardAccount:"*25519",website:"https://substrate.io/"},{prefix:43,network:"BareSecp256k1",displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",symbols:[],decimals:[],standardAccount:"secp256k1",website:null},{prefix:44,network:"chainx",displayName:"ChainX",symbols:["PCX"],decimals:[8],standardAccount:"*25519",website:"https://chainx.org/"},{prefix:45,network:"uniarts",displayName:"UniArts Network",symbols:["UART","UINK"],decimals:[12,12],standardAccount:"*25519",website:"https://uniarts.me"},{prefix:46,network:"reserved46",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:47,network:"reserved47",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:48,network:"neatcoin",displayName:"Neatcoin Mainnet",symbols:["NEAT"],decimals:[12],standardAccount:"*25519",website:"https://neatcoin.org"},{prefix:49,network:"picasso",displayName:"Picasso",symbols:["PICA"],decimals:[12],standardAccount:"*25519",website:"https://picasso.composable.finance"},{prefix:50,network:"composable",displayName:"Composable",symbols:["LAYR"],decimals:[12],standardAccount:"*25519",website:"https://composable.finance"},{prefix:51,network:"oak",displayName:"OAK Network",symbols:["OAK"],decimals:[10],standardAccount:"*25519",website:"https://oak.tech"},{prefix:52,network:"KICO",displayName:"KICO",symbols:["KICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:53,network:"DICO",displayName:"DICO",symbols:["DICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:55,network:"xxnetwork",displayName:"xx network",symbols:["XX"],decimals:[9],standardAccount:"*25519",website:"https://xx.network"},{prefix:63,network:"hydradx",displayName:"HydraDX",symbols:["HDX"],decimals:[12],standardAccount:"*25519",website:"https://hydradx.io"},{prefix:65,network:"aventus",displayName:"AvN Mainnet",symbols:["AVT"],decimals:[18],standardAccount:"*25519",website:"https://aventus.io"},{prefix:66,network:"crust",displayName:"Crust Network",symbols:["CRU"],decimals:[12],standardAccount:"*25519",website:"https://crust.network"},{prefix:67,network:"genshiro",displayName:"Genshiro Network",symbols:["GENS","EQD","LPT0"],decimals:[9,9,9],standardAccount:"*25519",website:"https://genshiro.equilibrium.io"},{prefix:68,network:"equilibrium",displayName:"Equilibrium Network",symbols:["EQ"],decimals:[9],standardAccount:"*25519",website:"https://equilibrium.io"},{prefix:69,network:"sora",displayName:"SORA Network",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:73,network:"zeitgeist",displayName:"Zeitgeist",symbols:["ZTG"],decimals:[10],standardAccount:"*25519",website:"https://zeitgeist.pm"},{prefix:77,network:"manta",displayName:"Manta network",symbols:["MANTA"],decimals:[18],standardAccount:"*25519",website:"https://manta.network"},{prefix:78,network:"calamari",displayName:"Calamari: Manta Canary Network",symbols:["KMA"],decimals:[12],standardAccount:"*25519",website:"https://manta.network"},{prefix:88,network:"polkadex",displayName:"Polkadex Mainnet",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:98,network:"polkasmith",displayName:"PolkaSmith Canary Network",symbols:["PKS"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:99,network:"polkafoundry",displayName:"PolkaFoundry Network",symbols:["PKF"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:101,network:"origintrail-parachain",displayName:"OriginTrail Parachain",symbols:["TRAC"],decimals:[18],standardAccount:"secp256k1",website:"https://origintrail.io"},{prefix:105,network:"pontem-network",displayName:"Pontem Network",symbols:["PONT"],decimals:[10],standardAccount:"*25519",website:"https://pontem.network"},{prefix:110,network:"heiko",displayName:"Heiko",symbols:["HKO"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:113,network:"integritee-incognito",displayName:"Integritee Incognito",symbols:[],decimals:[],standardAccount:"*25519",website:"https://integritee.network"},{prefix:128,network:"clover",displayName:"Clover Finance",symbols:["CLV"],decimals:[18],standardAccount:"*25519",website:"https://clover.finance"},{prefix:131,network:"litmus",displayName:"Litmus Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:136,network:"altair",displayName:"Altair",symbols:["AIR"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:172,network:"parallel",displayName:"Parallel",symbols:["PARA"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:252,network:"social-network",displayName:"Social Network",symbols:["NET"],decimals:[18],standardAccount:"*25519",website:"https://social.network"},{prefix:255,network:"quartz_mainnet",displayName:"QUARTZ by UNIQUE",symbols:["QTZ"],decimals:[15],standardAccount:"*25519",website:"https://unique.network"},{prefix:268,network:"pioneer_network",displayName:"Pioneer Network by Bit.Country",symbols:["NEER"],decimals:[18],standardAccount:"*25519",website:"https://bit.country"},{prefix:420,network:"sora_kusama_para",displayName:"SORA Kusama Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:789,network:"geek",displayName:"GEEK Network",symbols:["GEEK"],decimals:[18],standardAccount:"*25519",website:"https://geek.gl"},{prefix:1110,network:"efinity",displayName:"Efinity",symbols:["EFI"],decimals:[18],standardAccount:"Sr25519",website:"https://efinity.io/"},{prefix:1284,network:"moonbeam",displayName:"Moonbeam",symbols:["GLMR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1285,network:"moonriver",displayName:"Moonriver",symbols:["MOVR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1337,network:"ajuna",displayName:"Ajuna Network",symbols:["AJUN"],decimals:[12],standardAccount:"Sr25519",website:"https://ajuna.io"},{prefix:2007,network:"kapex",displayName:"Kapex",symbols:["KAPEX"],decimals:[12],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:2032,network:"interlay",displayName:"Interlay",symbols:["INTR"],decimals:[10],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2092,network:"kintsugi",displayName:"Kintsugi",symbols:["KINT"],decimals:[12],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2254,network:"subspace_testnet",displayName:"Subspace testnet",symbols:["tSSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:6094,network:"subspace",displayName:"Subspace",symbols:["SSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:7391,network:"unique_mainnet",displayName:"Unique Network",symbols:["UNQ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:10041,network:"basilisk",displayName:"Basilisk",symbols:["BSX"],decimals:[12],standardAccount:"*25519",website:"https://bsx.fi"},{prefix:11330,network:"cess-testnet",displayName:"CESS Testnet",symbols:["TCESS"],decimals:[12],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11331,network:"cess",displayName:"CESS",symbols:["CESS"],decimals:[12],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11820,network:"contextfree",displayName:"Automata ContextFree",symbols:["CTX"],decimals:[18],standardAccount:"*25519",website:"https://ata.network"}];const knownGenesis={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],astar:["0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"],basilisk:["0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755"],bifrost:["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],centrifuge:["0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],"dock-mainnet":["0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae","0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],"nodle-chain":["0xa3d114c2b8d0627c1aa9b134eafcf7d05ca561fdc19fb388bb9457f81809fb23"],picasso:["0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],rococo:["0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e","0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897","0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770","0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff","0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a","0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9","0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779","0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215","0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9","0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147","0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd","0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299"],sora:["0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],statemint:["0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"],westend:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"],xxnetwork:["0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa"]},knownIcon={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",sora:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},knownLedger={bifrost:788,centrifuge:747,"dock-mainnet":594,edgeware:523,equilibrium:99999997,genshiro:99999996,kusama:434,"nodle-chain":1003,polkadot:354,polymesh:595,sora:617,statemine:434,statemint:354,xxnetwork:1955},knownTestnet={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,subspace_testnet:!0,"zero-alphaville":!0},UNSORTED=[0,2,42],TESTNETS=["testnet"];function toExpanded(r){const e=r.network||"",t=e.replace(/_/g,"-").split("-"),n=r;return n.slip44=knownLedger[e],n.hasLedgerSupport=!!n.slip44,n.genesisHash=knownGenesis[e]||[],n.icon=knownIcon[e]||"substrate",n.isTestnet=!!knownTestnet[e]||TESTNETS.includes(t[t.length-1]),n.isIgnored=n.isTestnet||!(r.standardAccount&&r.decimals&&r.decimals.length&&r.symbols&&r.symbols.length)&&r.prefix!==42,n}function filterSelectable({genesisHash:r,prefix:e}){return!!r.length||e===42}function filterAvailable(r){return!r.isIgnored&&!!r.network}function sortNetworks(r,e){const t=UNSORTED.includes(r.prefix),n=UNSORTED.includes(e.prefix);return t===n?t?0:r.displayName.localeCompare(e.displayName):t?-1:1}const allNetworks=knownSubstrate.map(toExpanded),availableNetworks=allNetworks.filter(filterAvailable).sort(sortNetworks),selectableNetworks=availableNetworks.filter(filterSelectable);function networkToPrefix({prefix:r}){return r}const defaults$1={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:availableNetworks.map(networkToPrefix),prefix:42};function decodeAddress(r,e,t=-1){if(assert(r,"Invalid empty address passed"),isU8a(r)||isHex(r))return u8aToU8a(r);try{const n=base58Decode(r);assert(defaults$1.allowedEncodedLengths.includes(n.length),"Invalid decoded address length");const[s,i,a,o]=checkAddressChecksum(n);return assert(e||s,"Invalid decoded address checksum"),assert([-1,o].includes(t),()=>`Expected ss58Format ${t}, received ${o}`),n.slice(a,i)}catch(n){throw new Error(`Decoding ${r}: ${n.message}`)}}const BN_BE_OPTS={isLe:!1},BN_LE_OPTS={isLe:!0},BN_LE_16_OPTS={bitLength:16,isLe:!0},BN_BE_32_OPTS={bitLength:32,isLe:!1},BN_LE_32_OPTS={bitLength:32,isLe:!0},BN_BE_256_OPTS={bitLength:256,isLe:!1},BN_LE_256_OPTS={bitLength:256,isLe:!0};function addressToU8a(r){return decodeAddress(r)}const PREFIX=stringToU8a("modlpy/utilisuba");function createKeyMulti(r,e){return blake2AsU8a(u8aConcat(PREFIX,compactToU8a(r.length),...u8aSorted(r.map(addressToU8a)),bnToU8a(e,BN_LE_16_OPTS)))}const RE_NUMBER=/^\d+$/,JUNCTION_ID_LEN=32;var Tr,nr;const us=class{constructor(){G(this,Tr,new Uint8Array(32));G(this,nr,!1)}static from(e){const t=new us,[n,s]=e.startsWith("/")?[e.substr(1),!0]:[e,!1];return t.soft(RE_NUMBER.test(n)?new BN(n,10):n),s?t.harden():t}get chainCode(){return T(this,Tr)}get isHard(){return T(this,nr)}get isSoft(){return!T(this,nr)}hard(e){return this.soft(e).harden()}harden(){return te(this,nr,!0),this}soft(e){return isNumber(e)||isBn(e)||isBigInt(e)?this.soft(bnToU8a(e,BN_LE_256_OPTS)):isHex(e)?this.soft(hexToU8a(e)):isString(e)?this.soft(compactAddLength(stringToU8a(e))):e.length>JUNCTION_ID_LEN?this.soft(blake2AsU8a(e)):(T(this,Tr).fill(0),T(this,Tr).set(e,0),this)}soften(){return te(this,nr,!1),this}};let DeriveJunction=us;Tr=new WeakMap,nr=new WeakMap;const RE_JUNCTION=/\/(\/?)([^/]+)/g;function keyExtractPath(r){const e=r.match(RE_JUNCTION),t=[];let n="";if(e){n=e.join("");for(const s of e)t.push(DeriveJunction.from(s.substr(1)))}return assert(n===r,()=>`Re-constructed path "${n}" does not match input`),{parts:e,path:t}}const RE_CAPTURE=/^(\w+( \w+)*)((\/\/?[^/]+)*)(\/\/\/(.*))?$/;function keyExtractSuri(r){const e=r.match(RE_CAPTURE);assert(!isNull(e),"Unable to match provided value to a secret URI");const[,t,,n,,,s]=e,{path:i}=keyExtractPath(n);return{derivePath:n,password:s,path:i,phrase:t}}const HDKD$1=compactAddLength(stringToU8a("Secp256k1HDKD"));function secp256k1DeriveHard(r,e){return assert(isU8a(e)&&e.length===32,"Invalid chainCode passed to derive"),blake2AsU8a(u8aConcat(HDKD$1,r,e),256)}function secp256k1PairFromSeed(r,e){if(assert(r.length===32,"Expected valid 32-byte private key as a seed"),!hasBigInt||!e&&isReady()){const t=secp256k1FromSeed(r),n=t.slice(32);return assert(!u8aEmpty(n),"Invalid publicKey generated from WASM interface"),{publicKey:n,secretKey:t.slice(0,32)}}return{publicKey:getPublicKey(r,!0),secretKey:r}}function createSeedDeriveFn(r,e){return(t,{chainCode:n,isHard:s})=>(assert(s,"A soft key was found in the path and is not supported"),r(e(t.secretKey.subarray(0,32),n)))}const keyHdkdEcdsa=createSeedDeriveFn(secp256k1PairFromSeed,secp256k1DeriveHard);var ed2curve$1={exports:{}},naclFast={exports:{}},require$$0=getAugmentedNamespace(__viteBrowserExternal);(function(r){(function(e){var t=function(g){var w,P=new Float64Array(16);if(g)for(w=0;w<g.length;w++)P[w]=g[w];return P},n=function(){throw new Error("no PRNG")},s=new Uint8Array(16),i=new Uint8Array(32);i[0]=9;var a=t(),o=t([1]),c=t([56129,1]),h=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),y=t([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),x=t([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),E=t([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),V=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function F(g,w,P,d){g[w]=P>>24&255,g[w+1]=P>>16&255,g[w+2]=P>>8&255,g[w+3]=P&255,g[w+4]=d>>24&255,g[w+5]=d>>16&255,g[w+6]=d>>8&255,g[w+7]=d&255}function q(g,w,P,d,A){var D,L=0;for(D=0;D<A;D++)L|=g[w+D]^P[d+D];return(1&L-1>>>8)-1}function X(g,w,P,d){return q(g,w,P,d,16)}function Y(g,w,P,d){return q(g,w,P,d,32)}function oe(g,w,P,d){for(var A=d[0]&255|(d[1]&255)<<8|(d[2]&255)<<16|(d[3]&255)<<24,D=P[0]&255|(P[1]&255)<<8|(P[2]&255)<<16|(P[3]&255)<<24,L=P[4]&255|(P[5]&255)<<8|(P[6]&255)<<16|(P[7]&255)<<24,_=P[8]&255|(P[9]&255)<<8|(P[10]&255)<<16|(P[11]&255)<<24,se=P[12]&255|(P[13]&255)<<8|(P[14]&255)<<16|(P[15]&255)<<24,ce=d[4]&255|(d[5]&255)<<8|(d[6]&255)<<16|(d[7]&255)<<24,ie=w[0]&255|(w[1]&255)<<8|(w[2]&255)<<16|(w[3]&255)<<24,Le=w[4]&255|(w[5]&255)<<8|(w[6]&255)<<16|(w[7]&255)<<24,he=w[8]&255|(w[9]&255)<<8|(w[10]&255)<<16|(w[11]&255)<<24,Se=w[12]&255|(w[13]&255)<<8|(w[14]&255)<<16|(w[15]&255)<<24,Te=d[8]&255|(d[9]&255)<<8|(d[10]&255)<<16|(d[11]&255)<<24,Ne=P[16]&255|(P[17]&255)<<8|(P[18]&255)<<16|(P[19]&255)<<24,Me=P[20]&255|(P[21]&255)<<8|(P[22]&255)<<16|(P[23]&255)<<24,Pe=P[24]&255|(P[25]&255)<<8|(P[26]&255)<<16|(P[27]&255)<<24,Ee=P[28]&255|(P[29]&255)<<8|(P[30]&255)<<16|(P[31]&255)<<24,Ae=d[12]&255|(d[13]&255)<<8|(d[14]&255)<<16|(d[15]&255)<<24,pe=A,xe=D,de=L,me=_,ye=se,ue=ce,W=ie,K=Le,ee=he,J=Se,$=Te,ne=Ne,we=Me,Ie=Pe,Oe=Ee,Be=Ae,O,Ue=0;Ue<20;Ue+=2)O=pe+we|0,ye^=O<<7|O>>>32-7,O=ye+pe|0,ee^=O<<9|O>>>32-9,O=ee+ye|0,we^=O<<13|O>>>32-13,O=we+ee|0,pe^=O<<18|O>>>32-18,O=ue+xe|0,J^=O<<7|O>>>32-7,O=J+ue|0,Ie^=O<<9|O>>>32-9,O=Ie+J|0,xe^=O<<13|O>>>32-13,O=xe+Ie|0,ue^=O<<18|O>>>32-18,O=$+W|0,Oe^=O<<7|O>>>32-7,O=Oe+$|0,de^=O<<9|O>>>32-9,O=de+Oe|0,W^=O<<13|O>>>32-13,O=W+de|0,$^=O<<18|O>>>32-18,O=Be+ne|0,me^=O<<7|O>>>32-7,O=me+Be|0,K^=O<<9|O>>>32-9,O=K+me|0,ne^=O<<13|O>>>32-13,O=ne+K|0,Be^=O<<18|O>>>32-18,O=pe+me|0,xe^=O<<7|O>>>32-7,O=xe+pe|0,de^=O<<9|O>>>32-9,O=de+xe|0,me^=O<<13|O>>>32-13,O=me+de|0,pe^=O<<18|O>>>32-18,O=ue+ye|0,W^=O<<7|O>>>32-7,O=W+ue|0,K^=O<<9|O>>>32-9,O=K+W|0,ye^=O<<13|O>>>32-13,O=ye+K|0,ue^=O<<18|O>>>32-18,O=$+J|0,ne^=O<<7|O>>>32-7,O=ne+$|0,ee^=O<<9|O>>>32-9,O=ee+ne|0,J^=O<<13|O>>>32-13,O=J+ee|0,$^=O<<18|O>>>32-18,O=Be+Oe|0,we^=O<<7|O>>>32-7,O=we+Be|0,Ie^=O<<9|O>>>32-9,O=Ie+we|0,Oe^=O<<13|O>>>32-13,O=Oe+Ie|0,Be^=O<<18|O>>>32-18;pe=pe+A|0,xe=xe+D|0,de=de+L|0,me=me+_|0,ye=ye+se|0,ue=ue+ce|0,W=W+ie|0,K=K+Le|0,ee=ee+he|0,J=J+Se|0,$=$+Te|0,ne=ne+Ne|0,we=we+Me|0,Ie=Ie+Pe|0,Oe=Oe+Ee|0,Be=Be+Ae|0,g[0]=pe>>>0&255,g[1]=pe>>>8&255,g[2]=pe>>>16&255,g[3]=pe>>>24&255,g[4]=xe>>>0&255,g[5]=xe>>>8&255,g[6]=xe>>>16&255,g[7]=xe>>>24&255,g[8]=de>>>0&255,g[9]=de>>>8&255,g[10]=de>>>16&255,g[11]=de>>>24&255,g[12]=me>>>0&255,g[13]=me>>>8&255,g[14]=me>>>16&255,g[15]=me>>>24&255,g[16]=ye>>>0&255,g[17]=ye>>>8&255,g[18]=ye>>>16&255,g[19]=ye>>>24&255,g[20]=ue>>>0&255,g[21]=ue>>>8&255,g[22]=ue>>>16&255,g[23]=ue>>>24&255,g[24]=W>>>0&255,g[25]=W>>>8&255,g[26]=W>>>16&255,g[27]=W>>>24&255,g[28]=K>>>0&255,g[29]=K>>>8&255,g[30]=K>>>16&255,g[31]=K>>>24&255,g[32]=ee>>>0&255,g[33]=ee>>>8&255,g[34]=ee>>>16&255,g[35]=ee>>>24&255,g[36]=J>>>0&255,g[37]=J>>>8&255,g[38]=J>>>16&255,g[39]=J>>>24&255,g[40]=$>>>0&255,g[41]=$>>>8&255,g[42]=$>>>16&255,g[43]=$>>>24&255,g[44]=ne>>>0&255,g[45]=ne>>>8&255,g[46]=ne>>>16&255,g[47]=ne>>>24&255,g[48]=we>>>0&255,g[49]=we>>>8&255,g[50]=we>>>16&255,g[51]=we>>>24&255,g[52]=Ie>>>0&255,g[53]=Ie>>>8&255,g[54]=Ie>>>16&255,g[55]=Ie>>>24&255,g[56]=Oe>>>0&255,g[57]=Oe>>>8&255,g[58]=Oe>>>16&255,g[59]=Oe>>>24&255,g[60]=Be>>>0&255,g[61]=Be>>>8&255,g[62]=Be>>>16&255,g[63]=Be>>>24&255}function Q(g,w,P,d){for(var A=d[0]&255|(d[1]&255)<<8|(d[2]&255)<<16|(d[3]&255)<<24,D=P[0]&255|(P[1]&255)<<8|(P[2]&255)<<16|(P[3]&255)<<24,L=P[4]&255|(P[5]&255)<<8|(P[6]&255)<<16|(P[7]&255)<<24,_=P[8]&255|(P[9]&255)<<8|(P[10]&255)<<16|(P[11]&255)<<24,se=P[12]&255|(P[13]&255)<<8|(P[14]&255)<<16|(P[15]&255)<<24,ce=d[4]&255|(d[5]&255)<<8|(d[6]&255)<<16|(d[7]&255)<<24,ie=w[0]&255|(w[1]&255)<<8|(w[2]&255)<<16|(w[3]&255)<<24,Le=w[4]&255|(w[5]&255)<<8|(w[6]&255)<<16|(w[7]&255)<<24,he=w[8]&255|(w[9]&255)<<8|(w[10]&255)<<16|(w[11]&255)<<24,Se=w[12]&255|(w[13]&255)<<8|(w[14]&255)<<16|(w[15]&255)<<24,Te=d[8]&255|(d[9]&255)<<8|(d[10]&255)<<16|(d[11]&255)<<24,Ne=P[16]&255|(P[17]&255)<<8|(P[18]&255)<<16|(P[19]&255)<<24,Me=P[20]&255|(P[21]&255)<<8|(P[22]&255)<<16|(P[23]&255)<<24,Pe=P[24]&255|(P[25]&255)<<8|(P[26]&255)<<16|(P[27]&255)<<24,Ee=P[28]&255|(P[29]&255)<<8|(P[30]&255)<<16|(P[31]&255)<<24,Ae=d[12]&255|(d[13]&255)<<8|(d[14]&255)<<16|(d[15]&255)<<24,pe=A,xe=D,de=L,me=_,ye=se,ue=ce,W=ie,K=Le,ee=he,J=Se,$=Te,ne=Ne,we=Me,Ie=Pe,Oe=Ee,Be=Ae,O,Ue=0;Ue<20;Ue+=2)O=pe+we|0,ye^=O<<7|O>>>32-7,O=ye+pe|0,ee^=O<<9|O>>>32-9,O=ee+ye|0,we^=O<<13|O>>>32-13,O=we+ee|0,pe^=O<<18|O>>>32-18,O=ue+xe|0,J^=O<<7|O>>>32-7,O=J+ue|0,Ie^=O<<9|O>>>32-9,O=Ie+J|0,xe^=O<<13|O>>>32-13,O=xe+Ie|0,ue^=O<<18|O>>>32-18,O=$+W|0,Oe^=O<<7|O>>>32-7,O=Oe+$|0,de^=O<<9|O>>>32-9,O=de+Oe|0,W^=O<<13|O>>>32-13,O=W+de|0,$^=O<<18|O>>>32-18,O=Be+ne|0,me^=O<<7|O>>>32-7,O=me+Be|0,K^=O<<9|O>>>32-9,O=K+me|0,ne^=O<<13|O>>>32-13,O=ne+K|0,Be^=O<<18|O>>>32-18,O=pe+me|0,xe^=O<<7|O>>>32-7,O=xe+pe|0,de^=O<<9|O>>>32-9,O=de+xe|0,me^=O<<13|O>>>32-13,O=me+de|0,pe^=O<<18|O>>>32-18,O=ue+ye|0,W^=O<<7|O>>>32-7,O=W+ue|0,K^=O<<9|O>>>32-9,O=K+W|0,ye^=O<<13|O>>>32-13,O=ye+K|0,ue^=O<<18|O>>>32-18,O=$+J|0,ne^=O<<7|O>>>32-7,O=ne+$|0,ee^=O<<9|O>>>32-9,O=ee+ne|0,J^=O<<13|O>>>32-13,O=J+ee|0,$^=O<<18|O>>>32-18,O=Be+Oe|0,we^=O<<7|O>>>32-7,O=we+Be|0,Ie^=O<<9|O>>>32-9,O=Ie+we|0,Oe^=O<<13|O>>>32-13,O=Oe+Ie|0,Be^=O<<18|O>>>32-18;g[0]=pe>>>0&255,g[1]=pe>>>8&255,g[2]=pe>>>16&255,g[3]=pe>>>24&255,g[4]=ue>>>0&255,g[5]=ue>>>8&255,g[6]=ue>>>16&255,g[7]=ue>>>24&255,g[8]=$>>>0&255,g[9]=$>>>8&255,g[10]=$>>>16&255,g[11]=$>>>24&255,g[12]=Be>>>0&255,g[13]=Be>>>8&255,g[14]=Be>>>16&255,g[15]=Be>>>24&255,g[16]=W>>>0&255,g[17]=W>>>8&255,g[18]=W>>>16&255,g[19]=W>>>24&255,g[20]=K>>>0&255,g[21]=K>>>8&255,g[22]=K>>>16&255,g[23]=K>>>24&255,g[24]=ee>>>0&255,g[25]=ee>>>8&255,g[26]=ee>>>16&255,g[27]=ee>>>24&255,g[28]=J>>>0&255,g[29]=J>>>8&255,g[30]=J>>>16&255,g[31]=J>>>24&255}function le(g,w,P,d){oe(g,w,P,d)}function fe(g,w,P,d){Q(g,w,P,d)}var ve=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function ke(g,w,P,d,A,D,L){var _=new Uint8Array(16),se=new Uint8Array(64),ce,ie;for(ie=0;ie<16;ie++)_[ie]=0;for(ie=0;ie<8;ie++)_[ie]=D[ie];for(;A>=64;){for(le(se,_,L,ve),ie=0;ie<64;ie++)g[w+ie]=P[d+ie]^se[ie];for(ce=1,ie=8;ie<16;ie++)ce=ce+(_[ie]&255)|0,_[ie]=ce&255,ce>>>=8;A-=64,w+=64,d+=64}if(A>0)for(le(se,_,L,ve),ie=0;ie<A;ie++)g[w+ie]=P[d+ie]^se[ie];return 0}function Ve(g,w,P,d,A){var D=new Uint8Array(16),L=new Uint8Array(64),_,se;for(se=0;se<16;se++)D[se]=0;for(se=0;se<8;se++)D[se]=d[se];for(;P>=64;){for(le(L,D,A,ve),se=0;se<64;se++)g[w+se]=L[se];for(_=1,se=8;se<16;se++)_=_+(D[se]&255)|0,D[se]=_&255,_>>>=8;P-=64,w+=64}if(P>0)for(le(L,D,A,ve),se=0;se<P;se++)g[w+se]=L[se];return 0}function Re(g,w,P,d,A){var D=new Uint8Array(32);fe(D,d,A,ve);for(var L=new Uint8Array(8),_=0;_<8;_++)L[_]=d[_+16];return Ve(g,w,P,L,D)}function re(g,w,P,d,A,D,L){var _=new Uint8Array(32);fe(_,D,L,ve);for(var se=new Uint8Array(8),ce=0;ce<8;ce++)se[ce]=D[ce+16];return ke(g,w,P,d,A,se,_)}var R=function(g){this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0;var w,P,d,A,D,L,_,se;w=g[0]&255|(g[1]&255)<<8,this.r[0]=w&8191,P=g[2]&255|(g[3]&255)<<8,this.r[1]=(w>>>13|P<<3)&8191,d=g[4]&255|(g[5]&255)<<8,this.r[2]=(P>>>10|d<<6)&7939,A=g[6]&255|(g[7]&255)<<8,this.r[3]=(d>>>7|A<<9)&8191,D=g[8]&255|(g[9]&255)<<8,this.r[4]=(A>>>4|D<<12)&255,this.r[5]=D>>>1&8190,L=g[10]&255|(g[11]&255)<<8,this.r[6]=(D>>>14|L<<2)&8191,_=g[12]&255|(g[13]&255)<<8,this.r[7]=(L>>>11|_<<5)&8065,se=g[14]&255|(g[15]&255)<<8,this.r[8]=(_>>>8|se<<8)&8191,this.r[9]=se>>>5&127,this.pad[0]=g[16]&255|(g[17]&255)<<8,this.pad[1]=g[18]&255|(g[19]&255)<<8,this.pad[2]=g[20]&255|(g[21]&255)<<8,this.pad[3]=g[22]&255|(g[23]&255)<<8,this.pad[4]=g[24]&255|(g[25]&255)<<8,this.pad[5]=g[26]&255|(g[27]&255)<<8,this.pad[6]=g[28]&255|(g[29]&255)<<8,this.pad[7]=g[30]&255|(g[31]&255)<<8};R.prototype.blocks=function(g,w,P){for(var d=this.fin?0:2048,A,D,L,_,se,ce,ie,Le,he,Se,Te,Ne,Me,Pe,Ee,Ae,pe,xe,de,me=this.h[0],ye=this.h[1],ue=this.h[2],W=this.h[3],K=this.h[4],ee=this.h[5],J=this.h[6],$=this.h[7],ne=this.h[8],we=this.h[9],Ie=this.r[0],Oe=this.r[1],Be=this.r[2],O=this.r[3],Ue=this.r[4],qe=this.r[5],Xe=this.r[6],He=this.r[7],De=this.r[8],ze=this.r[9];P>=16;)A=g[w+0]&255|(g[w+1]&255)<<8,me+=A&8191,D=g[w+2]&255|(g[w+3]&255)<<8,ye+=(A>>>13|D<<3)&8191,L=g[w+4]&255|(g[w+5]&255)<<8,ue+=(D>>>10|L<<6)&8191,_=g[w+6]&255|(g[w+7]&255)<<8,W+=(L>>>7|_<<9)&8191,se=g[w+8]&255|(g[w+9]&255)<<8,K+=(_>>>4|se<<12)&8191,ee+=se>>>1&8191,ce=g[w+10]&255|(g[w+11]&255)<<8,J+=(se>>>14|ce<<2)&8191,ie=g[w+12]&255|(g[w+13]&255)<<8,$+=(ce>>>11|ie<<5)&8191,Le=g[w+14]&255|(g[w+15]&255)<<8,ne+=(ie>>>8|Le<<8)&8191,we+=Le>>>5|d,he=0,Se=he,Se+=me*Ie,Se+=ye*(5*ze),Se+=ue*(5*De),Se+=W*(5*He),Se+=K*(5*Xe),he=Se>>>13,Se&=8191,Se+=ee*(5*qe),Se+=J*(5*Ue),Se+=$*(5*O),Se+=ne*(5*Be),Se+=we*(5*Oe),he+=Se>>>13,Se&=8191,Te=he,Te+=me*Oe,Te+=ye*Ie,Te+=ue*(5*ze),Te+=W*(5*De),Te+=K*(5*He),he=Te>>>13,Te&=8191,Te+=ee*(5*Xe),Te+=J*(5*qe),Te+=$*(5*Ue),Te+=ne*(5*O),Te+=we*(5*Be),he+=Te>>>13,Te&=8191,Ne=he,Ne+=me*Be,Ne+=ye*Oe,Ne+=ue*Ie,Ne+=W*(5*ze),Ne+=K*(5*De),he=Ne>>>13,Ne&=8191,Ne+=ee*(5*He),Ne+=J*(5*Xe),Ne+=$*(5*qe),Ne+=ne*(5*Ue),Ne+=we*(5*O),he+=Ne>>>13,Ne&=8191,Me=he,Me+=me*O,Me+=ye*Be,Me+=ue*Oe,Me+=W*Ie,Me+=K*(5*ze),he=Me>>>13,Me&=8191,Me+=ee*(5*De),Me+=J*(5*He),Me+=$*(5*Xe),Me+=ne*(5*qe),Me+=we*(5*Ue),he+=Me>>>13,Me&=8191,Pe=he,Pe+=me*Ue,Pe+=ye*O,Pe+=ue*Be,Pe+=W*Oe,Pe+=K*Ie,he=Pe>>>13,Pe&=8191,Pe+=ee*(5*ze),Pe+=J*(5*De),Pe+=$*(5*He),Pe+=ne*(5*Xe),Pe+=we*(5*qe),he+=Pe>>>13,Pe&=8191,Ee=he,Ee+=me*qe,Ee+=ye*Ue,Ee+=ue*O,Ee+=W*Be,Ee+=K*Oe,he=Ee>>>13,Ee&=8191,Ee+=ee*Ie,Ee+=J*(5*ze),Ee+=$*(5*De),Ee+=ne*(5*He),Ee+=we*(5*Xe),he+=Ee>>>13,Ee&=8191,Ae=he,Ae+=me*Xe,Ae+=ye*qe,Ae+=ue*Ue,Ae+=W*O,Ae+=K*Be,he=Ae>>>13,Ae&=8191,Ae+=ee*Oe,Ae+=J*Ie,Ae+=$*(5*ze),Ae+=ne*(5*De),Ae+=we*(5*He),he+=Ae>>>13,Ae&=8191,pe=he,pe+=me*He,pe+=ye*Xe,pe+=ue*qe,pe+=W*Ue,pe+=K*O,he=pe>>>13,pe&=8191,pe+=ee*Be,pe+=J*Oe,pe+=$*Ie,pe+=ne*(5*ze),pe+=we*(5*De),he+=pe>>>13,pe&=8191,xe=he,xe+=me*De,xe+=ye*He,xe+=ue*Xe,xe+=W*qe,xe+=K*Ue,he=xe>>>13,xe&=8191,xe+=ee*O,xe+=J*Be,xe+=$*Oe,xe+=ne*Ie,xe+=we*(5*ze),he+=xe>>>13,xe&=8191,de=he,de+=me*ze,de+=ye*De,de+=ue*He,de+=W*Xe,de+=K*qe,he=de>>>13,de&=8191,de+=ee*Ue,de+=J*O,de+=$*Be,de+=ne*Oe,de+=we*Ie,he+=de>>>13,de&=8191,he=(he<<2)+he|0,he=he+Se|0,Se=he&8191,he=he>>>13,Te+=he,me=Se,ye=Te,ue=Ne,W=Me,K=Pe,ee=Ee,J=Ae,$=pe,ne=xe,we=de,w+=16,P-=16;this.h[0]=me,this.h[1]=ye,this.h[2]=ue,this.h[3]=W,this.h[4]=K,this.h[5]=ee,this.h[6]=J,this.h[7]=$,this.h[8]=ne,this.h[9]=we},R.prototype.finish=function(g,w){var P=new Uint16Array(10),d,A,D,L;if(this.leftover){for(L=this.leftover,this.buffer[L++]=1;L<16;L++)this.buffer[L]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(d=this.h[1]>>>13,this.h[1]&=8191,L=2;L<10;L++)this.h[L]+=d,d=this.h[L]>>>13,this.h[L]&=8191;for(this.h[0]+=d*5,d=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=d,d=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=d,P[0]=this.h[0]+5,d=P[0]>>>13,P[0]&=8191,L=1;L<10;L++)P[L]=this.h[L]+d,d=P[L]>>>13,P[L]&=8191;for(P[9]-=1<<13,A=(d^1)-1,L=0;L<10;L++)P[L]&=A;for(A=~A,L=0;L<10;L++)this.h[L]=this.h[L]&A|P[L];for(this.h[0]=(this.h[0]|this.h[1]<<13)&65535,this.h[1]=(this.h[1]>>>3|this.h[2]<<10)&65535,this.h[2]=(this.h[2]>>>6|this.h[3]<<7)&65535,this.h[3]=(this.h[3]>>>9|this.h[4]<<4)&65535,this.h[4]=(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14)&65535,this.h[5]=(this.h[6]>>>2|this.h[7]<<11)&65535,this.h[6]=(this.h[7]>>>5|this.h[8]<<8)&65535,this.h[7]=(this.h[8]>>>8|this.h[9]<<5)&65535,D=this.h[0]+this.pad[0],this.h[0]=D&65535,L=1;L<8;L++)D=(this.h[L]+this.pad[L]|0)+(D>>>16)|0,this.h[L]=D&65535;g[w+0]=this.h[0]>>>0&255,g[w+1]=this.h[0]>>>8&255,g[w+2]=this.h[1]>>>0&255,g[w+3]=this.h[1]>>>8&255,g[w+4]=this.h[2]>>>0&255,g[w+5]=this.h[2]>>>8&255,g[w+6]=this.h[3]>>>0&255,g[w+7]=this.h[3]>>>8&255,g[w+8]=this.h[4]>>>0&255,g[w+9]=this.h[4]>>>8&255,g[w+10]=this.h[5]>>>0&255,g[w+11]=this.h[5]>>>8&255,g[w+12]=this.h[6]>>>0&255,g[w+13]=this.h[6]>>>8&255,g[w+14]=this.h[7]>>>0&255,g[w+15]=this.h[7]>>>8&255},R.prototype.update=function(g,w,P){var d,A;if(this.leftover){for(A=16-this.leftover,A>P&&(A=P),d=0;d<A;d++)this.buffer[this.leftover+d]=g[w+d];if(P-=A,w+=A,this.leftover+=A,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(P>=16&&(A=P-P%16,this.blocks(g,w,A),w+=A,P-=A),P){for(d=0;d<P;d++)this.buffer[this.leftover+d]=g[w+d];this.leftover+=P}};function H(g,w,P,d,A,D){var L=new R(D);return L.update(P,d,A),L.finish(g,w),0}function b(g,w,P,d,A,D){var L=new Uint8Array(16);return H(L,0,P,d,A,D),X(g,w,L,0)}function u(g,w,P,d,A){var D;if(P<32)return-1;for(re(g,0,w,0,P,d,A),H(g,16,g,32,P-32,g),D=0;D<16;D++)g[D]=0;return 0}function p(g,w,P,d,A){var D,L=new Uint8Array(32);if(P<32||(Re(L,0,32,d,A),b(w,16,w,32,P-32,L)!==0))return-1;for(re(g,0,w,0,P,d,A),D=0;D<32;D++)g[D]=0;return 0}function v(g,w){var P;for(P=0;P<16;P++)g[P]=w[P]|0}function M(g){var w,P,d=1;for(w=0;w<16;w++)P=g[w]+d+65535,d=Math.floor(P/65536),g[w]=P-d*65536;g[0]+=d-1+37*(d-1)}function B(g,w,P){for(var d,A=~(P-1),D=0;D<16;D++)d=A&(g[D]^w[D]),g[D]^=d,w[D]^=d}function U(g,w){var P,d,A,D=t(),L=t();for(P=0;P<16;P++)L[P]=w[P];for(M(L),M(L),M(L),d=0;d<2;d++){for(D[0]=L[0]-65517,P=1;P<15;P++)D[P]=L[P]-65535-(D[P-1]>>16&1),D[P-1]&=65535;D[15]=L[15]-32767-(D[14]>>16&1),A=D[15]>>16&1,D[14]&=65535,B(L,D,1-A)}for(P=0;P<16;P++)g[2*P]=L[P]&255,g[2*P+1]=L[P]>>8}function z(g,w){var P=new Uint8Array(32),d=new Uint8Array(32);return U(P,g),U(d,w),Y(P,0,d,0)}function k(g){var w=new Uint8Array(32);return U(w,g),w[0]&1}function m(g,w){var P;for(P=0;P<16;P++)g[P]=w[2*P]+(w[2*P+1]<<8);g[15]&=32767}function I(g,w,P){for(var d=0;d<16;d++)g[d]=w[d]+P[d]}function ge(g,w,P){for(var d=0;d<16;d++)g[d]=w[d]-P[d]}function ae(g,w,P){var d,A,D=0,L=0,_=0,se=0,ce=0,ie=0,Le=0,he=0,Se=0,Te=0,Ne=0,Me=0,Pe=0,Ee=0,Ae=0,pe=0,xe=0,de=0,me=0,ye=0,ue=0,W=0,K=0,ee=0,J=0,$=0,ne=0,we=0,Ie=0,Oe=0,Be=0,O=P[0],Ue=P[1],qe=P[2],Xe=P[3],He=P[4],De=P[5],ze=P[6],Et=P[7],_e=P[8],Tt=P[9],Pt=P[10],At=P[11],Mt=P[12],kt=P[13],Ct=P[14],It=P[15];d=w[0],D+=d*O,L+=d*Ue,_+=d*qe,se+=d*Xe,ce+=d*He,ie+=d*De,Le+=d*ze,he+=d*Et,Se+=d*_e,Te+=d*Tt,Ne+=d*Pt,Me+=d*At,Pe+=d*Mt,Ee+=d*kt,Ae+=d*Ct,pe+=d*It,d=w[1],L+=d*O,_+=d*Ue,se+=d*qe,ce+=d*Xe,ie+=d*He,Le+=d*De,he+=d*ze,Se+=d*Et,Te+=d*_e,Ne+=d*Tt,Me+=d*Pt,Pe+=d*At,Ee+=d*Mt,Ae+=d*kt,pe+=d*Ct,xe+=d*It,d=w[2],_+=d*O,se+=d*Ue,ce+=d*qe,ie+=d*Xe,Le+=d*He,he+=d*De,Se+=d*ze,Te+=d*Et,Ne+=d*_e,Me+=d*Tt,Pe+=d*Pt,Ee+=d*At,Ae+=d*Mt,pe+=d*kt,xe+=d*Ct,de+=d*It,d=w[3],se+=d*O,ce+=d*Ue,ie+=d*qe,Le+=d*Xe,he+=d*He,Se+=d*De,Te+=d*ze,Ne+=d*Et,Me+=d*_e,Pe+=d*Tt,Ee+=d*Pt,Ae+=d*At,pe+=d*Mt,xe+=d*kt,de+=d*Ct,me+=d*It,d=w[4],ce+=d*O,ie+=d*Ue,Le+=d*qe,he+=d*Xe,Se+=d*He,Te+=d*De,Ne+=d*ze,Me+=d*Et,Pe+=d*_e,Ee+=d*Tt,Ae+=d*Pt,pe+=d*At,xe+=d*Mt,de+=d*kt,me+=d*Ct,ye+=d*It,d=w[5],ie+=d*O,Le+=d*Ue,he+=d*qe,Se+=d*Xe,Te+=d*He,Ne+=d*De,Me+=d*ze,Pe+=d*Et,Ee+=d*_e,Ae+=d*Tt,pe+=d*Pt,xe+=d*At,de+=d*Mt,me+=d*kt,ye+=d*Ct,ue+=d*It,d=w[6],Le+=d*O,he+=d*Ue,Se+=d*qe,Te+=d*Xe,Ne+=d*He,Me+=d*De,Pe+=d*ze,Ee+=d*Et,Ae+=d*_e,pe+=d*Tt,xe+=d*Pt,de+=d*At,me+=d*Mt,ye+=d*kt,ue+=d*Ct,W+=d*It,d=w[7],he+=d*O,Se+=d*Ue,Te+=d*qe,Ne+=d*Xe,Me+=d*He,Pe+=d*De,Ee+=d*ze,Ae+=d*Et,pe+=d*_e,xe+=d*Tt,de+=d*Pt,me+=d*At,ye+=d*Mt,ue+=d*kt,W+=d*Ct,K+=d*It,d=w[8],Se+=d*O,Te+=d*Ue,Ne+=d*qe,Me+=d*Xe,Pe+=d*He,Ee+=d*De,Ae+=d*ze,pe+=d*Et,xe+=d*_e,de+=d*Tt,me+=d*Pt,ye+=d*At,ue+=d*Mt,W+=d*kt,K+=d*Ct,ee+=d*It,d=w[9],Te+=d*O,Ne+=d*Ue,Me+=d*qe,Pe+=d*Xe,Ee+=d*He,Ae+=d*De,pe+=d*ze,xe+=d*Et,de+=d*_e,me+=d*Tt,ye+=d*Pt,ue+=d*At,W+=d*Mt,K+=d*kt,ee+=d*Ct,J+=d*It,d=w[10],Ne+=d*O,Me+=d*Ue,Pe+=d*qe,Ee+=d*Xe,Ae+=d*He,pe+=d*De,xe+=d*ze,de+=d*Et,me+=d*_e,ye+=d*Tt,ue+=d*Pt,W+=d*At,K+=d*Mt,ee+=d*kt,J+=d*Ct,$+=d*It,d=w[11],Me+=d*O,Pe+=d*Ue,Ee+=d*qe,Ae+=d*Xe,pe+=d*He,xe+=d*De,de+=d*ze,me+=d*Et,ye+=d*_e,ue+=d*Tt,W+=d*Pt,K+=d*At,ee+=d*Mt,J+=d*kt,$+=d*Ct,ne+=d*It,d=w[12],Pe+=d*O,Ee+=d*Ue,Ae+=d*qe,pe+=d*Xe,xe+=d*He,de+=d*De,me+=d*ze,ye+=d*Et,ue+=d*_e,W+=d*Tt,K+=d*Pt,ee+=d*At,J+=d*Mt,$+=d*kt,ne+=d*Ct,we+=d*It,d=w[13],Ee+=d*O,Ae+=d*Ue,pe+=d*qe,xe+=d*Xe,de+=d*He,me+=d*De,ye+=d*ze,ue+=d*Et,W+=d*_e,K+=d*Tt,ee+=d*Pt,J+=d*At,$+=d*Mt,ne+=d*kt,we+=d*Ct,Ie+=d*It,d=w[14],Ae+=d*O,pe+=d*Ue,xe+=d*qe,de+=d*Xe,me+=d*He,ye+=d*De,ue+=d*ze,W+=d*Et,K+=d*_e,ee+=d*Tt,J+=d*Pt,$+=d*At,ne+=d*Mt,we+=d*kt,Ie+=d*Ct,Oe+=d*It,d=w[15],pe+=d*O,xe+=d*Ue,de+=d*qe,me+=d*Xe,ye+=d*He,ue+=d*De,W+=d*ze,K+=d*Et,ee+=d*_e,J+=d*Tt,$+=d*Pt,ne+=d*At,we+=d*Mt,Ie+=d*kt,Oe+=d*Ct,Be+=d*It,D+=38*xe,L+=38*de,_+=38*me,se+=38*ye,ce+=38*ue,ie+=38*W,Le+=38*K,he+=38*ee,Se+=38*J,Te+=38*$,Ne+=38*ne,Me+=38*we,Pe+=38*Ie,Ee+=38*Oe,Ae+=38*Be,A=1,d=D+A+65535,A=Math.floor(d/65536),D=d-A*65536,d=L+A+65535,A=Math.floor(d/65536),L=d-A*65536,d=_+A+65535,A=Math.floor(d/65536),_=d-A*65536,d=se+A+65535,A=Math.floor(d/65536),se=d-A*65536,d=ce+A+65535,A=Math.floor(d/65536),ce=d-A*65536,d=ie+A+65535,A=Math.floor(d/65536),ie=d-A*65536,d=Le+A+65535,A=Math.floor(d/65536),Le=d-A*65536,d=he+A+65535,A=Math.floor(d/65536),he=d-A*65536,d=Se+A+65535,A=Math.floor(d/65536),Se=d-A*65536,d=Te+A+65535,A=Math.floor(d/65536),Te=d-A*65536,d=Ne+A+65535,A=Math.floor(d/65536),Ne=d-A*65536,d=Me+A+65535,A=Math.floor(d/65536),Me=d-A*65536,d=Pe+A+65535,A=Math.floor(d/65536),Pe=d-A*65536,d=Ee+A+65535,A=Math.floor(d/65536),Ee=d-A*65536,d=Ae+A+65535,A=Math.floor(d/65536),Ae=d-A*65536,d=pe+A+65535,A=Math.floor(d/65536),pe=d-A*65536,D+=A-1+37*(A-1),A=1,d=D+A+65535,A=Math.floor(d/65536),D=d-A*65536,d=L+A+65535,A=Math.floor(d/65536),L=d-A*65536,d=_+A+65535,A=Math.floor(d/65536),_=d-A*65536,d=se+A+65535,A=Math.floor(d/65536),se=d-A*65536,d=ce+A+65535,A=Math.floor(d/65536),ce=d-A*65536,d=ie+A+65535,A=Math.floor(d/65536),ie=d-A*65536,d=Le+A+65535,A=Math.floor(d/65536),Le=d-A*65536,d=he+A+65535,A=Math.floor(d/65536),he=d-A*65536,d=Se+A+65535,A=Math.floor(d/65536),Se=d-A*65536,d=Te+A+65535,A=Math.floor(d/65536),Te=d-A*65536,d=Ne+A+65535,A=Math.floor(d/65536),Ne=d-A*65536,d=Me+A+65535,A=Math.floor(d/65536),Me=d-A*65536,d=Pe+A+65535,A=Math.floor(d/65536),Pe=d-A*65536,d=Ee+A+65535,A=Math.floor(d/65536),Ee=d-A*65536,d=Ae+A+65535,A=Math.floor(d/65536),Ae=d-A*65536,d=pe+A+65535,A=Math.floor(d/65536),pe=d-A*65536,D+=A-1+37*(A-1),g[0]=D,g[1]=L,g[2]=_,g[3]=se,g[4]=ce,g[5]=ie,g[6]=Le,g[7]=he,g[8]=Se,g[9]=Te,g[10]=Ne,g[11]=Me,g[12]=Pe,g[13]=Ee,g[14]=Ae,g[15]=pe}function be(g,w){ae(g,w,w)}function gt(g,w){var P=t(),d;for(d=0;d<16;d++)P[d]=w[d];for(d=253;d>=0;d--)be(P,P),d!==2&&d!==4&&ae(P,P,w);for(d=0;d<16;d++)g[d]=P[d]}function We(g,w){var P=t(),d;for(d=0;d<16;d++)P[d]=w[d];for(d=250;d>=0;d--)be(P,P),d!==1&&ae(P,P,w);for(d=0;d<16;d++)g[d]=P[d]}function Ge(g,w,P){var d=new Uint8Array(32),A=new Float64Array(80),D,L,_=t(),se=t(),ce=t(),ie=t(),Le=t(),he=t();for(L=0;L<31;L++)d[L]=w[L];for(d[31]=w[31]&127|64,d[0]&=248,m(A,P),L=0;L<16;L++)se[L]=A[L],ie[L]=_[L]=ce[L]=0;for(_[0]=ie[0]=1,L=254;L>=0;--L)D=d[L>>>3]>>>(L&7)&1,B(_,se,D),B(ce,ie,D),I(Le,_,ce),ge(_,_,ce),I(ce,se,ie),ge(se,se,ie),be(ie,Le),be(he,_),ae(_,ce,_),ae(ce,se,Le),I(Le,_,ce),ge(_,_,ce),be(se,_),ge(ce,ie,he),ae(_,ce,c),I(_,_,ie),ae(ce,ce,_),ae(_,ie,he),ae(ie,se,A),be(se,Le),B(_,se,D),B(ce,ie,D);for(L=0;L<16;L++)A[L+16]=_[L],A[L+32]=ce[L],A[L+48]=se[L],A[L+64]=ie[L];var Se=A.subarray(32),Te=A.subarray(16);return gt(Se,Se),ae(Te,Te,Se),U(g,Te),0}function tr(g,w){return Ge(g,w,i)}function dt(g,w){return n(w,32),tr(g,w)}function tt(g,w,P){var d=new Uint8Array(32);return Ge(d,P,w),fe(g,s,d,ve)}var sn=u,bt=p;function xt(g,w,P,d,A,D){var L=new Uint8Array(32);return tt(L,A,D),sn(g,w,P,d,L)}function Kn(g,w,P,d,A,D){var L=new Uint8Array(32);return tt(L,A,D),bt(g,w,P,d,L)}var ft=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function ht(g,w,P,d){for(var A=new Int32Array(16),D=new Int32Array(16),L,_,se,ce,ie,Le,he,Se,Te,Ne,Me,Pe,Ee,Ae,pe,xe,de,me,ye,ue,W,K,ee,J,$,ne,we=g[0],Ie=g[1],Oe=g[2],Be=g[3],O=g[4],Ue=g[5],qe=g[6],Xe=g[7],He=w[0],De=w[1],ze=w[2],Et=w[3],_e=w[4],Tt=w[5],Pt=w[6],At=w[7],Mt=0;d>=128;){for(ye=0;ye<16;ye++)ue=8*ye+Mt,A[ye]=P[ue+0]<<24|P[ue+1]<<16|P[ue+2]<<8|P[ue+3],D[ye]=P[ue+4]<<24|P[ue+5]<<16|P[ue+6]<<8|P[ue+7];for(ye=0;ye<80;ye++)if(L=we,_=Ie,se=Oe,ce=Be,ie=O,Le=Ue,he=qe,Se=Xe,Te=He,Ne=De,Me=ze,Pe=Et,Ee=_e,Ae=Tt,pe=Pt,xe=At,W=Xe,K=At,ee=K&65535,J=K>>>16,$=W&65535,ne=W>>>16,W=(O>>>14|_e<<32-14)^(O>>>18|_e<<32-18)^(_e>>>41-32|O<<32-(41-32)),K=(_e>>>14|O<<32-14)^(_e>>>18|O<<32-18)^(O>>>41-32|_e<<32-(41-32)),ee+=K&65535,J+=K>>>16,$+=W&65535,ne+=W>>>16,W=O&Ue^~O&qe,K=_e&Tt^~_e&Pt,ee+=K&65535,J+=K>>>16,$+=W&65535,ne+=W>>>16,W=ft[ye*2],K=ft[ye*2+1],ee+=K&65535,J+=K>>>16,$+=W&65535,ne+=W>>>16,W=A[ye%16],K=D[ye%16],ee+=K&65535,J+=K>>>16,$+=W&65535,ne+=W>>>16,J+=ee>>>16,$+=J>>>16,ne+=$>>>16,de=$&65535|ne<<16,me=ee&65535|J<<16,W=de,K=me,ee=K&65535,J=K>>>16,$=W&65535,ne=W>>>16,W=(we>>>28|He<<32-28)^(He>>>34-32|we<<32-(34-32))^(He>>>39-32|we<<32-(39-32)),K=(He>>>28|we<<32-28)^(we>>>34-32|He<<32-(34-32))^(we>>>39-32|He<<32-(39-32)),ee+=K&65535,J+=K>>>16,$+=W&65535,ne+=W>>>16,W=we&Ie^we&Oe^Ie&Oe,K=He&De^He&ze^De&ze,ee+=K&65535,J+=K>>>16,$+=W&65535,ne+=W>>>16,J+=ee>>>16,$+=J>>>16,ne+=$>>>16,Se=$&65535|ne<<16,xe=ee&65535|J<<16,W=ce,K=Pe,ee=K&65535,J=K>>>16,$=W&65535,ne=W>>>16,W=de,K=me,ee+=K&65535,J+=K>>>16,$+=W&65535,ne+=W>>>16,J+=ee>>>16,$+=J>>>16,ne+=$>>>16,ce=$&65535|ne<<16,Pe=ee&65535|J<<16,Ie=L,Oe=_,Be=se,O=ce,Ue=ie,qe=Le,Xe=he,we=Se,De=Te,ze=Ne,Et=Me,_e=Pe,Tt=Ee,Pt=Ae,At=pe,He=xe,ye%16===15)for(ue=0;ue<16;ue++)W=A[ue],K=D[ue],ee=K&65535,J=K>>>16,$=W&65535,ne=W>>>16,W=A[(ue+9)%16],K=D[(ue+9)%16],ee+=K&65535,J+=K>>>16,$+=W&65535,ne+=W>>>16,de=A[(ue+1)%16],me=D[(ue+1)%16],W=(de>>>1|me<<32-1)^(de>>>8|me<<32-8)^de>>>7,K=(me>>>1|de<<32-1)^(me>>>8|de<<32-8)^(me>>>7|de<<32-7),ee+=K&65535,J+=K>>>16,$+=W&65535,ne+=W>>>16,de=A[(ue+14)%16],me=D[(ue+14)%16],W=(de>>>19|me<<32-19)^(me>>>61-32|de<<32-(61-32))^de>>>6,K=(me>>>19|de<<32-19)^(de>>>61-32|me<<32-(61-32))^(me>>>6|de<<32-6),ee+=K&65535,J+=K>>>16,$+=W&65535,ne+=W>>>16,J+=ee>>>16,$+=J>>>16,ne+=$>>>16,A[ue]=$&65535|ne<<16,D[ue]=ee&65535|J<<16;W=we,K=He,ee=K&65535,J=K>>>16,$=W&65535,ne=W>>>16,W=g[0],K=w[0],ee+=K&65535,J+=K>>>16,$+=W&65535,ne+=W>>>16,J+=ee>>>16,$+=J>>>16,ne+=$>>>16,g[0]=we=$&65535|ne<<16,w[0]=He=ee&65535|J<<16,W=Ie,K=De,ee=K&65535,J=K>>>16,$=W&65535,ne=W>>>16,W=g[1],K=w[1],ee+=K&65535,J+=K>>>16,$+=W&65535,ne+=W>>>16,J+=ee>>>16,$+=J>>>16,ne+=$>>>16,g[1]=Ie=$&65535|ne<<16,w[1]=De=ee&65535|J<<16,W=Oe,K=ze,ee=K&65535,J=K>>>16,$=W&65535,ne=W>>>16,W=g[2],K=w[2],ee+=K&65535,J+=K>>>16,$+=W&65535,ne+=W>>>16,J+=ee>>>16,$+=J>>>16,ne+=$>>>16,g[2]=Oe=$&65535|ne<<16,w[2]=ze=ee&65535|J<<16,W=Be,K=Et,ee=K&65535,J=K>>>16,$=W&65535,ne=W>>>16,W=g[3],K=w[3],ee+=K&65535,J+=K>>>16,$+=W&65535,ne+=W>>>16,J+=ee>>>16,$+=J>>>16,ne+=$>>>16,g[3]=Be=$&65535|ne<<16,w[3]=Et=ee&65535|J<<16,W=O,K=_e,ee=K&65535,J=K>>>16,$=W&65535,ne=W>>>16,W=g[4],K=w[4],ee+=K&65535,J+=K>>>16,$+=W&65535,ne+=W>>>16,J+=ee>>>16,$+=J>>>16,ne+=$>>>16,g[4]=O=$&65535|ne<<16,w[4]=_e=ee&65535|J<<16,W=Ue,K=Tt,ee=K&65535,J=K>>>16,$=W&65535,ne=W>>>16,W=g[5],K=w[5],ee+=K&65535,J+=K>>>16,$+=W&65535,ne+=W>>>16,J+=ee>>>16,$+=J>>>16,ne+=$>>>16,g[5]=Ue=$&65535|ne<<16,w[5]=Tt=ee&65535|J<<16,W=qe,K=Pt,ee=K&65535,J=K>>>16,$=W&65535,ne=W>>>16,W=g[6],K=w[6],ee+=K&65535,J+=K>>>16,$+=W&65535,ne+=W>>>16,J+=ee>>>16,$+=J>>>16,ne+=$>>>16,g[6]=qe=$&65535|ne<<16,w[6]=Pt=ee&65535|J<<16,W=Xe,K=At,ee=K&65535,J=K>>>16,$=W&65535,ne=W>>>16,W=g[7],K=w[7],ee+=K&65535,J+=K>>>16,$+=W&65535,ne+=W>>>16,J+=ee>>>16,$+=J>>>16,ne+=$>>>16,g[7]=Xe=$&65535|ne<<16,w[7]=At=ee&65535|J<<16,Mt+=128,d-=128}return d}function jt(g,w,P){var d=new Int32Array(8),A=new Int32Array(8),D=new Uint8Array(256),L,_=P;for(d[0]=1779033703,d[1]=3144134277,d[2]=1013904242,d[3]=2773480762,d[4]=1359893119,d[5]=2600822924,d[6]=528734635,d[7]=1541459225,A[0]=4089235720,A[1]=2227873595,A[2]=4271175723,A[3]=1595750129,A[4]=2917565137,A[5]=725511199,A[6]=4215389547,A[7]=327033209,ht(d,A,w,P),P%=128,L=0;L<P;L++)D[L]=w[_-P+L];for(D[P]=128,P=256-128*(P<112?1:0),D[P-9]=0,F(D,P-8,_/536870912|0,_<<3),ht(d,A,D,P),L=0;L<8;L++)F(g,8*L,d[L],A[L]);return 0}function rt(g,w){var P=t(),d=t(),A=t(),D=t(),L=t(),_=t(),se=t(),ce=t(),ie=t();ge(P,g[1],g[0]),ge(ie,w[1],w[0]),ae(P,P,ie),I(d,g[0],g[1]),I(ie,w[0],w[1]),ae(d,d,ie),ae(A,g[3],w[3]),ae(A,A,y),ae(D,g[2],w[2]),I(D,D,D),ge(L,d,P),ge(_,D,A),I(se,D,A),I(ce,d,P),ae(g[0],L,_),ae(g[1],ce,se),ae(g[2],se,_),ae(g[3],L,ce)}function pt(g,w,P){var d;for(d=0;d<4;d++)B(g[d],w[d],P)}function gr(g,w){var P=t(),d=t(),A=t();gt(A,w[2]),ae(P,w[0],A),ae(d,w[1],A),U(g,d),g[31]^=k(P)<<7}function at(g,w,P){var d,A;for(v(g[0],a),v(g[1],o),v(g[2],o),v(g[3],a),A=255;A>=0;--A)d=P[A/8|0]>>(A&7)&1,pt(g,w,d),rt(w,g),rt(g,g),pt(g,w,d)}function nt(g,w){var P=[t(),t(),t(),t()];v(P[0],x),v(P[1],E),v(P[2],o),ae(P[3],x,E),at(g,P,w)}function br(g,w,P){var d=new Uint8Array(64),A=[t(),t(),t(),t()],D;for(P||n(w,32),jt(d,w,32),d[0]&=248,d[31]&=127,d[31]|=64,nt(A,d),gr(g,A),D=0;D<32;D++)w[D+32]=g[D];return 0}var st=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function ot(g,w){var P,d,A,D;for(d=63;d>=32;--d){for(P=0,A=d-32,D=d-12;A<D;++A)w[A]+=P-16*w[d]*st[A-(d-32)],P=Math.floor((w[A]+128)/256),w[A]-=P*256;w[A]+=P,w[d]=0}for(P=0,A=0;A<32;A++)w[A]+=P-(w[31]>>4)*st[A],P=w[A]>>8,w[A]&=255;for(A=0;A<32;A++)w[A]-=P*st[A];for(d=0;d<32;d++)w[d+1]+=w[d]>>8,g[d]=w[d]&255}function xr(g){var w=new Float64Array(64),P;for(P=0;P<64;P++)w[P]=g[P];for(P=0;P<64;P++)g[P]=0;ot(g,w)}function mt(g,w,P,d){var A=new Uint8Array(64),D=new Uint8Array(64),L=new Uint8Array(64),_,se,ce=new Float64Array(64),ie=[t(),t(),t(),t()];jt(A,d,32),A[0]&=248,A[31]&=127,A[31]|=64;var Le=P+64;for(_=0;_<P;_++)g[64+_]=w[_];for(_=0;_<32;_++)g[32+_]=A[32+_];for(jt(L,g.subarray(32),P+32),xr(L),nt(ie,L),gr(g,ie),_=32;_<64;_++)g[_]=d[_];for(jt(D,g,P+64),xr(D),_=0;_<64;_++)ce[_]=0;for(_=0;_<32;_++)ce[_]=L[_];for(_=0;_<32;_++)for(se=0;se<32;se++)ce[_+se]+=D[_]*A[se];return ot(g.subarray(32),ce),Le}function vt(g,w){var P=t(),d=t(),A=t(),D=t(),L=t(),_=t(),se=t();return v(g[2],o),m(g[1],w),be(A,g[1]),ae(D,A,h),ge(A,A,g[2]),I(D,g[2],D),be(L,D),be(_,L),ae(se,_,L),ae(P,se,A),ae(P,P,D),We(P,P),ae(P,P,A),ae(P,P,D),ae(P,P,D),ae(g[0],P,D),be(d,g[0]),ae(d,d,D),z(d,A)&&ae(g[0],g[0],V),be(d,g[0]),ae(d,d,D),z(d,A)?-1:(k(g[0])===w[31]>>7&&ge(g[0],a,g[0]),ae(g[3],g[0],g[1]),0)}function vr(g,w,P,d){var A,D=new Uint8Array(32),L=new Uint8Array(64),_=[t(),t(),t(),t()],se=[t(),t(),t(),t()];if(P<64||vt(se,d))return-1;for(A=0;A<P;A++)g[A]=w[A];for(A=0;A<32;A++)g[A+32]=d[A];if(jt(L,g,P),xr(L),at(_,se,L),nt(se,w.subarray(32)),rt(_,se),gr(D,_),P-=64,Y(w,0,D,0)){for(A=0;A<P;A++)g[A]=0;return-1}for(A=0;A<P;A++)g[A]=w[A+64];return P}var ct=32,it=24,Yt=32,Ye=16,Qe=32,rr=32,$e=32,et=32,wr=32,yt=it,wt=Yt,_n=Ye,Ke=64,Ze=32,Wt=64,ut=32,lt=64;e.lowlevel={crypto_core_hsalsa20:fe,crypto_stream_xor:re,crypto_stream:Re,crypto_stream_salsa20_xor:ke,crypto_stream_salsa20:Ve,crypto_onetimeauth:H,crypto_onetimeauth_verify:b,crypto_verify_16:X,crypto_verify_32:Y,crypto_secretbox:u,crypto_secretbox_open:p,crypto_scalarmult:Ge,crypto_scalarmult_base:tr,crypto_box_beforenm:tt,crypto_box_afternm:sn,crypto_box:xt,crypto_box_open:Kn,crypto_box_keypair:dt,crypto_hash:jt,crypto_sign:mt,crypto_sign_keypair:br,crypto_sign_open:vr,crypto_secretbox_KEYBYTES:ct,crypto_secretbox_NONCEBYTES:it,crypto_secretbox_ZEROBYTES:Yt,crypto_secretbox_BOXZEROBYTES:Ye,crypto_scalarmult_BYTES:Qe,crypto_scalarmult_SCALARBYTES:rr,crypto_box_PUBLICKEYBYTES:$e,crypto_box_SECRETKEYBYTES:et,crypto_box_BEFORENMBYTES:wr,crypto_box_NONCEBYTES:yt,crypto_box_ZEROBYTES:wt,crypto_box_BOXZEROBYTES:_n,crypto_sign_BYTES:Ke,crypto_sign_PUBLICKEYBYTES:Ze,crypto_sign_SECRETKEYBYTES:Wt,crypto_sign_SEEDBYTES:ut,crypto_hash_BYTES:lt,gf:t,D:h,L:st,pack25519:U,unpack25519:m,M:ae,A:I,S:be,Z:ge,pow2523:We,add:rt,set25519:v,modL:ot,scalarmult:at,scalarbase:nt};function an(g,w){if(g.length!==ct)throw new Error("bad key size");if(w.length!==it)throw new Error("bad nonce size")}function St(g,w){if(g.length!==$e)throw new Error("bad public key size");if(w.length!==et)throw new Error("bad secret key size")}function Fe(){for(var g=0;g<arguments.length;g++)if(!(arguments[g]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function on(g){for(var w=0;w<g.length;w++)g[w]=0}e.randomBytes=function(g){var w=new Uint8Array(g);return n(w,g),w},e.secretbox=function(g,w,P){Fe(g,w,P),an(P,w);for(var d=new Uint8Array(Yt+g.length),A=new Uint8Array(d.length),D=0;D<g.length;D++)d[D+Yt]=g[D];return u(A,d,d.length,w,P),A.subarray(Ye)},e.secretbox.open=function(g,w,P){Fe(g,w,P),an(P,w);for(var d=new Uint8Array(Ye+g.length),A=new Uint8Array(d.length),D=0;D<g.length;D++)d[D+Ye]=g[D];return d.length<32||p(A,d,d.length,w,P)!==0?null:A.subarray(Yt)},e.secretbox.keyLength=ct,e.secretbox.nonceLength=it,e.secretbox.overheadLength=Ye,e.scalarMult=function(g,w){if(Fe(g,w),g.length!==rr)throw new Error("bad n size");if(w.length!==Qe)throw new Error("bad p size");var P=new Uint8Array(Qe);return Ge(P,g,w),P},e.scalarMult.base=function(g){if(Fe(g),g.length!==rr)throw new Error("bad n size");var w=new Uint8Array(Qe);return tr(w,g),w},e.scalarMult.scalarLength=rr,e.scalarMult.groupElementLength=Qe,e.box=function(g,w,P,d){var A=e.box.before(P,d);return e.secretbox(g,w,A)},e.box.before=function(g,w){Fe(g,w),St(g,w);var P=new Uint8Array(wr);return tt(P,g,w),P},e.box.after=e.secretbox,e.box.open=function(g,w,P,d){var A=e.box.before(P,d);return e.secretbox.open(g,w,A)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var g=new Uint8Array($e),w=new Uint8Array(et);return dt(g,w),{publicKey:g,secretKey:w}},e.box.keyPair.fromSecretKey=function(g){if(Fe(g),g.length!==et)throw new Error("bad secret key size");var w=new Uint8Array($e);return tr(w,g),{publicKey:w,secretKey:new Uint8Array(g)}},e.box.publicKeyLength=$e,e.box.secretKeyLength=et,e.box.sharedKeyLength=wr,e.box.nonceLength=yt,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(g,w){if(Fe(g,w),w.length!==Wt)throw new Error("bad secret key size");var P=new Uint8Array(Ke+g.length);return mt(P,g,g.length,w),P},e.sign.open=function(g,w){if(Fe(g,w),w.length!==Ze)throw new Error("bad public key size");var P=new Uint8Array(g.length),d=vr(P,g,g.length,w);if(d<0)return null;for(var A=new Uint8Array(d),D=0;D<A.length;D++)A[D]=P[D];return A},e.sign.detached=function(g,w){for(var P=e.sign(g,w),d=new Uint8Array(Ke),A=0;A<d.length;A++)d[A]=P[A];return d},e.sign.detached.verify=function(g,w,P){if(Fe(g,w,P),w.length!==Ke)throw new Error("bad signature size");if(P.length!==Ze)throw new Error("bad public key size");var d=new Uint8Array(Ke+g.length),A=new Uint8Array(Ke+g.length),D;for(D=0;D<Ke;D++)d[D]=w[D];for(D=0;D<g.length;D++)d[D+Ke]=g[D];return vr(A,d,d.length,P)>=0},e.sign.keyPair=function(){var g=new Uint8Array(Ze),w=new Uint8Array(Wt);return br(g,w),{publicKey:g,secretKey:w}},e.sign.keyPair.fromSecretKey=function(g){if(Fe(g),g.length!==Wt)throw new Error("bad secret key size");for(var w=new Uint8Array(Ze),P=0;P<w.length;P++)w[P]=g[32+P];return{publicKey:w,secretKey:new Uint8Array(g)}},e.sign.keyPair.fromSeed=function(g){if(Fe(g),g.length!==ut)throw new Error("bad seed size");for(var w=new Uint8Array(Ze),P=new Uint8Array(Wt),d=0;d<32;d++)P[d]=g[d];return br(w,P,!0),{publicKey:w,secretKey:P}},e.sign.publicKeyLength=Ze,e.sign.secretKeyLength=Wt,e.sign.seedLength=ut,e.sign.signatureLength=Ke,e.hash=function(g){Fe(g);var w=new Uint8Array(lt);return jt(w,g,g.length),w},e.hash.hashLength=lt,e.verify=function(g,w){return Fe(g,w),g.length===0||w.length===0||g.length!==w.length?!1:q(g,0,w,0,g.length)===0},e.setPRNG=function(g){n=g},function(){var g=typeof self!="undefined"?self.crypto||self.msCrypto:null;if(g&&g.getRandomValues){var w=65536;e.setPRNG(function(P,d){var A,D=new Uint8Array(d);for(A=0;A<d;A+=w)g.getRandomValues(D.subarray(A,A+Math.min(d-A,w)));for(A=0;A<d;A++)P[A]=D[A];on(D)})}else typeof commonjsRequire!="undefined"&&(g=require$$0,g&&g.randomBytes&&e.setPRNG(function(P,d){var A,D=g.randomBytes(d);for(A=0;A<d;A++)P[A]=D[A];on(D)}))}()})(r.exports?r.exports:self.nacl=self.nacl||{})})(naclFast);var nacl=naclFast.exports;(function(r){(function(e,t){r.exports?r.exports=t(naclFast.exports):e.ed2curve=t(e.nacl)})(commonjsGlobal,function(e){if(!e)throw new Error("tweetnacl not loaded");var t=function(re){var R,H=new Float64Array(16);if(re)for(R=0;R<re.length;R++)H[R]=re[R];return H},n=t(),s=t([1]),i=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),a=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function o(re){var R,H;for(H=0;H<16;H++)re[H]+=65536,R=Math.floor(re[H]/65536),re[(H+1)*(H<15?1:0)]+=R-1+37*(R-1)*(H===15?1:0),re[H]-=R*65536}function c(re,R,H){for(var b,u=~(H-1),p=0;p<16;p++)b=u&(re[p]^R[p]),re[p]^=b,R[p]^=b}function h(re,R){var H;for(H=0;H<16;H++)re[H]=R[2*H]+(R[2*H+1]<<8);re[15]&=32767}function y(re,R,H){var b;for(b=0;b<16;b++)re[b]=R[b]+H[b]|0}function x(re,R,H){var b;for(b=0;b<16;b++)re[b]=R[b]-H[b]|0}function E(re,R,H){var b,u,p=new Float64Array(31);for(b=0;b<31;b++)p[b]=0;for(b=0;b<16;b++)for(u=0;u<16;u++)p[b+u]+=R[b]*H[u];for(b=0;b<15;b++)p[b]+=38*p[b+16];for(b=0;b<16;b++)re[b]=p[b];o(re),o(re)}function V(re,R){E(re,R,R)}function F(re,R){var H=t(),b;for(b=0;b<16;b++)H[b]=R[b];for(b=253;b>=0;b--)V(H,H),b!==2&&b!==4&&E(H,H,R);for(b=0;b<16;b++)re[b]=H[b]}function q(re,R){var H,b,u,p=t(),v=t();for(H=0;H<16;H++)v[H]=R[H];for(o(v),o(v),o(v),b=0;b<2;b++){for(p[0]=v[0]-65517,H=1;H<15;H++)p[H]=v[H]-65535-(p[H-1]>>16&1),p[H-1]&=65535;p[15]=v[15]-32767-(p[14]>>16&1),u=p[15]>>16&1,p[14]&=65535,c(v,p,1-u)}for(H=0;H<16;H++)re[2*H]=v[H]&255,re[2*H+1]=v[H]>>8}function X(re){var R=new Uint8Array(32);return q(R,re),R[0]&1}function Y(re,R,H,b,u){var p,v=0;for(p=0;p<u;p++)v|=re[R+p]^H[b+p];return(1&v-1>>>8)-1}function oe(re,R,H,b){return Y(re,R,H,b,32)}function Q(re,R){var H=new Uint8Array(32),b=new Uint8Array(32);return q(H,re),q(b,R),oe(H,0,b,0)}function le(re,R){var H=t(),b;for(b=0;b<16;b++)H[b]=R[b];for(b=250;b>=0;b--)V(H,H),b!==1&&E(H,H,R);for(b=0;b<16;b++)re[b]=H[b]}function fe(re,R){var H;for(H=0;H<16;H++)re[H]=R[H]|0}function ve(re,R){var H=t(),b=t(),u=t(),p=t(),v=t(),M=t(),B=t();return fe(re[2],s),h(re[1],R),V(u,re[1]),E(p,u,i),x(u,u,re[2]),y(p,re[2],p),V(v,p),V(M,v),E(B,M,v),E(H,B,u),E(H,H,p),le(H,H),E(H,H,u),E(H,H,p),E(H,H,p),E(re[0],H,p),V(b,re[0]),E(b,b,p),Q(b,u)&&E(re[0],re[0],a),V(b,re[0]),E(b,b,p),Q(b,u)?-1:(X(re[0])===R[31]>>7&&x(re[0],n,re[0]),E(re[3],re[0],re[1]),0)}function ke(re){var R=new Uint8Array(32),H=[t(),t(),t(),t()],b=t(),u=t();if(ve(H,re))return null;var p=H[1];return y(b,s,p),x(u,s,p),F(u,u),E(b,b,u),q(R,b),R}function Ve(re){var R=new Uint8Array(64),H=new Uint8Array(32),b;for(e.lowlevel.crypto_hash(R,re,32),R[0]&=248,R[31]&=127,R[31]|=64,b=0;b<32;b++)H[b]=R[b];for(b=0;b<64;b++)R[b]=0;return H}function Re(re){var R=ke(re.publicKey);return R?{publicKey:R,secretKey:Ve(re.secretKey)}:null}return{convertPublicKey:ke,convertSecretKey:Ve,convertKeyPair:Re}})})(ed2curve$1);var ed2curve=ed2curve$1.exports;function convertSecretKeyToCurve25519(r){return ed2curve.convertSecretKey(r)}function convertPublicKeyToCurve25519(r){return assertReturn(ed2curve.convertPublicKey(r),"Unable to convert publicKey to ed25519")}const HDKD=compactAddLength(stringToU8a("Ed25519HDKD"));function ed25519DeriveHard(r,e){return assert(isU8a(e)&&e.length===32,"Invalid chainCode passed to derive"),blake2AsU8a(u8aConcat(HDKD,r,e))}function randomAsU8a(r=32){return getRandomValues(new Uint8Array(r))}const randomAsHex=createAsHex(randomAsU8a);function ed25519PairFromSeed(r,e){if(!e&&isReady()){const t=ed25519KeypairFromSeed(r);return{publicKey:t.slice(32),secretKey:t.slice(0,64)}}return nacl.sign.keyPair.fromSeed(r)}function ed25519Sign(r,{publicKey:e,secretKey:t},n){assert(t,"Expected a valid secretKey");const s=u8aToU8a(r);return!n&&isReady()?ed25519Sign$1(e,t.subarray(0,32),s):nacl.sign.detached(s,t)}function ed25519Verify(r,e,t,n){const s=u8aToU8a(r),i=u8aToU8a(t),a=u8aToU8a(e);return assert(i.length===32,()=>`Invalid publicKey, received ${i.length}, expected 32`),assert(a.length===64,()=>`Invalid signature, received ${a.length} bytes, expected 64`),!n&&isReady()?ed25519Verify$1(a,s,i):nacl.sign.detached.verify(s,a,i)}const keyHdkdEd25519=createSeedDeriveFn(ed25519PairFromSeed,ed25519DeriveHard),SEC_LEN=64,PUB_LEN=32,TOT_LEN=SEC_LEN+PUB_LEN;function sr25519PairFromU8a(r){const e=u8aToU8a(r);return assert(e.length===TOT_LEN,()=>`Expected keypair with ${TOT_LEN} bytes, found ${e.length}`),{publicKey:e.slice(SEC_LEN,TOT_LEN),secretKey:e.slice(0,SEC_LEN)}}function sr25519KeypairToU8a({publicKey:r,secretKey:e}){return u8aConcat(e,r).slice()}function createDeriveFn(r){return(e,t)=>(assert(isU8a(t)&&t.length===32,"Invalid chainCode passed to derive"),sr25519PairFromU8a(r(sr25519KeypairToU8a(e),t)))}const sr25519DeriveHard=createDeriveFn(sr25519DeriveKeypairHard),sr25519DeriveSoft=createDeriveFn(sr25519DeriveKeypairSoft);function keyHdkdSr25519(r,{chainCode:e,isSoft:t}){return t?sr25519DeriveSoft(r,e):sr25519DeriveHard(r,e)}const generators={ecdsa:keyHdkdEcdsa,ed25519:keyHdkdEd25519,ethereum:keyHdkdEcdsa,sr25519:keyHdkdSr25519};function keyFromPath(r,e,t){const n=generators[t];let s=r;for(const i of e)s=n(s,i);return s}function sr25519PairFromSeed(r){const e=u8aToU8a(r);return assert(e.length===32,()=>`Expected a seed matching 32 bytes, found ${e.length}`),sr25519PairFromU8a(sr25519KeypairFromSeed(e))}function sr25519Sign(r,{publicKey:e,secretKey:t}){return assert((e==null?void 0:e.length)===32,"Expected a valid publicKey, 32-bytes"),assert((t==null?void 0:t.length)===64,"Expected a valid secretKey, 64-bytes"),sr25519Sign$1(e,t,u8aToU8a(r))}function sr25519Verify(r,e,t){const n=u8aToU8a(t),s=u8aToU8a(e);return assert(n.length===32,()=>`Invalid publicKey, received ${n.length} bytes, expected 32`),assert(s.length===64,()=>`Invalid signature, received ${s.length} bytes, expected 64`),sr25519Verify$1(s,u8aToU8a(r),n)}const EMPTY_U8A$2=new Uint8Array;function sr25519VrfSign(r,{secretKey:e},t=EMPTY_U8A$2,n=EMPTY_U8A$2){return assert((e==null?void 0:e.length)===64,"Invalid secretKey, expected 64-bytes"),vrfSign(e,u8aToU8a(t),u8aToU8a(r),u8aToU8a(n))}const EMPTY_U8A$1=new Uint8Array;function sr25519VrfVerify(r,e,t,n=EMPTY_U8A$1,s=EMPTY_U8A$1){const i=u8aToU8a(t),a=u8aToU8a(e);return assert(i.length===32,"Invalid publicKey, expected 32-bytes"),assert(a.length===96,"Invalid vrfSign output, expected 96 bytes"),vrfVerify(i,u8aToU8a(n),u8aToU8a(r),u8aToU8a(s),a)}function encodeAddress(r,e=defaults$1.prefix){const t=decodeAddress(r);assert(e>=0&&e<=16383&&![46,47].includes(e),"Out of range ss58Format specified"),assert(defaults$1.allowedDecodedLengths.includes(t.length),()=>`Expected a valid key to convert, with length ${defaults$1.allowedDecodedLengths.join(", ")}`);const n=u8aConcat(e<64?[e]:[(e&252)>>2|64,e>>8|(e&3)<<6],t);return base58Encode(u8aConcat(n,sshash(n).subarray(0,[32,33].includes(t.length)?2:1)))}const[SHA3_PI,SHA3_ROTL,_SHA3_IOTA]=[[],[],[]],_0n=BigInt(0),_1n=BigInt(1),_2n=BigInt(2),_7n$1=BigInt(7),_256n$1=BigInt(256),_0x71n=BigInt(113);for(let r=0,e=_1n,t=1,n=0;r<24;r++){[t,n]=[n,(2*t+3*n)%5],SHA3_PI.push(2*(5*n+t)),SHA3_ROTL.push((r+1)*(r+2)/2%64);let s=_0n;for(let i=0;i<7;i++)e=(e<<_1n^(e>>_7n$1)*_0x71n)%_256n$1,e&_2n&&(s^=_1n<<(_1n<<BigInt(i))-_1n);_SHA3_IOTA.push(s)}const[SHA3_IOTA_H,SHA3_IOTA_L]=split(_SHA3_IOTA,!0),rotlH=(r,e,t)=>t>32?rotlBH(r,e,t):rotlSH(r,e,t),rotlL=(r,e,t)=>t>32?rotlBL(r,e,t):rotlSL(r,e,t);function keccakP(r,e=24){const t=new Uint32Array(10);for(let n=24-e;n<24;n++){for(let a=0;a<10;a++)t[a]=r[a]^r[a+10]^r[a+20]^r[a+30]^r[a+40];for(let a=0;a<10;a+=2){const o=(a+8)%10,c=(a+2)%10,h=t[c],y=t[c+1],x=rotlH(h,y,1)^t[o],E=rotlL(h,y,1)^t[o+1];for(let V=0;V<50;V+=10)r[a+V]^=x,r[a+V+1]^=E}let s=r[2],i=r[3];for(let a=0;a<24;a++){const o=SHA3_ROTL[a],c=rotlH(s,i,o),h=rotlL(s,i,o),y=SHA3_PI[a];s=r[y],i=r[y+1],r[y]=c,r[y+1]=h}for(let a=0;a<50;a+=10){for(let o=0;o<10;o++)t[o]=r[a+o];for(let o=0;o<10;o++)r[a+o]^=~t[(o+2)%10]&t[(o+4)%10]}r[0]^=SHA3_IOTA_H[n],r[1]^=SHA3_IOTA_L[n]}t.fill(0)}class Keccak extends Hash{constructor(e,t,n,s=!1,i=24){if(super(),this.blockLen=e,this.suffix=t,this.outputLen=n,this.enableXOF=s,this.rounds=i,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,assertNumber(n),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=u32$2(this.state)}keccak(){keccakP(this.state32,this.rounds),this.posOut=0,this.pos=0}update(e){if(this.destroyed)throw new Error("instance is destroyed");if(this.finished)throw new Error("digest() was already called");const{blockLen:t,state:n}=this;e=toBytes(e);const s=e.length;for(let i=0;i<s;){const a=Math.min(t-this.pos,s-i);for(let o=0;o<a;o++)n[this.pos++]^=e[i++];this.pos===t&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:t,pos:n,blockLen:s}=this;e[n]^=t,(t&128)!==0&&n===s-1&&this.keccak(),e[s-1]^=128,this.keccak()}writeInto(e){if(this.destroyed)throw new Error("instance is destroyed");if(!(e instanceof Uint8Array))throw new Error("Keccak: invalid output buffer");this.finish();for(let t=0,n=e.length;t<n;){this.posOut>=this.blockLen&&this.keccak();const s=Math.min(this.blockLen-this.posOut,n-t);e.set(this.state.subarray(this.posOut,this.posOut+s),t),this.posOut+=s,t+=s}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return assertNumber(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(e.length<this.outputLen)throw new Error("Keccak: invalid output buffer");if(this.finished)throw new Error("digest() was already called");return this.finish(),this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(e){const{blockLen:t,suffix:n,outputLen:s,rounds:i,enableXOF:a}=this;return e||(e=new Keccak(t,n,s,a,i)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=i,e.suffix=n,e.outputLen=s,e.enableXOF=a,e.destroyed=this.destroyed,e}}const gen=(r,e,t)=>wrapConstructor(()=>new Keccak(e,r,t));gen(6,144,224/8);gen(6,136,256/8);gen(6,104,384/8);gen(6,72,512/8);gen(1,144,224/8);const keccak_256=gen(1,136,256/8);gen(1,104,384/8);const keccak_512=gen(1,72,512/8),genShake=(r,e,t)=>wrapConstructorWithOpts((n={})=>new Keccak(e,r,n.dkLen!==void 0?n.dkLen:t,!0));genShake(31,168,128/8);genShake(31,136,256/8);const keccakAsU8a=createDualHasher({256:keccak256,512:keccak512},{256:keccak_256,512:keccak_512});function hasher(r,e,t){return r==="keccak"?keccakAsU8a(e,void 0,t):blake2AsU8a(e,void 0,void 0,t)}const config$1={chars:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",coder:base.base64,type:"base64"},base64Validate=createValidate(config$1),base64Decode=createDecode(config$1,base64Validate),base64Encode=createEncode(config$1);function cryptoWaitReady(){return waitReady().then(()=>(assert(isReady(),"Unable to initialize @polkadot/util-crypto"),!0)).catch(()=>!1)}function secp256k1Compress(r,e){return r.length===33?r:(assert(r.length===65,"Invalid publicKey provided"),!hasBigInt||!e&&isReady()?secp256k1Compress$1(r):Point.fromHex(r).toRawBytes(!0))}function secp256k1Expand(r,e){if(r.length===65)return r.subarray(1);if(assert(r.length===33,"Invalid publicKey provided"),!hasBigInt||!e&&isReady())return secp256k1Expand$1(r).subarray(1);const{x:t,y:n}=Point.fromHex(r);return u8aConcat(bnToU8a(t,BN_BE_256_OPTS),bnToU8a(n,BN_BE_256_OPTS))}function secp256k1Recover(r,e,t,n="blake2",s){const i=u8aToU8a(e).subarray(0,64),a=u8aToU8a(r),o=!hasBigInt||!s&&isReady()?secp256k1Recover$1(a,i,t):recoverPublicKey(a,Signature.fromCompact(i).toRawBytes(),t);return assert(o,"Unable to recover publicKey from signature"),n==="keccak"?secp256k1Expand(o,s):secp256k1Compress(o,s)}function secp256k1Sign(r,{secretKey:e},t="blake2",n){assert((e==null?void 0:e.length)===32,"Expected valid secp256k1 secretKey, 32-bytes");const s=hasher(t,r,n);if(!hasBigInt||!n&&isReady())return secp256k1Sign$1(s,e);const[i,a]=signSync(s,e,{canonical:!0,recovered:!0}),{r:o,s:c}=Signature.fromHex(i);return u8aConcat(bnToU8a(o,BN_BE_256_OPTS),bnToU8a(c,BN_BE_256_OPTS),new Uint8Array([a||0]))}const N="ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141".replace(/ /g,""),N_BI=BigInt$1(`0x${N}`),N_BN=new BN(N,"hex");function addBi(r,e){let t=u8aToBigInt(e,BN_BE_OPTS);return assert(t<N_BI,"Tweak parameter is out of range"),t+=u8aToBigInt(r,BN_BE_OPTS),t>=N_BI&&(t-=N_BI),assert(t!==_0n$2,"Invalid resulting private key"),nToU8a(t,BN_BE_256_OPTS)}function addBn(r,e){const t=new BN(e);return assert(t.cmp(N_BN)<0,"Tweak parameter is out of range"),t.iadd(new BN(r)),t.cmp(N_BN)>=0&&t.isub(N_BN),assert(!t.isZero(),"Invalid resulting private key"),bnToU8a(t,BN_BE_256_OPTS)}function secp256k1PrivateKeyTweakAdd(r,e,t){return assert(isU8a(r)&&r.length===32,"Expected seckey to be an Uint8Array with length 32"),assert(isU8a(e)&&e.length===32,"Expected tweak to be an Uint8Array with length 32"),!hasBigInt||t?addBn(r,e):addBi(r,e)}function secp256k1Verify(r,e,t,n="blake2",s){const i=u8aToU8a(e);assert(i.length===65,`Expected signature with 65 bytes, ${i.length} found instead`);const a=secp256k1Recover(hasher(n,r),i,i[64],n,s),o=hasher(n,a,s),c=u8aToU8a(t);return u8aEq(a,c)||(n==="keccak"?u8aEq(o.slice(-20),c.slice(-20)):u8aEq(o,c))}function getH160(r){return[33,65].includes(r.length)&&(r=keccakAsU8a(secp256k1Expand(r))),r.slice(-20)}function ethereumEncode(r){if(!r)return"0x";const e=u8aToU8a(r);assert([20,32,33,65].includes(e.length),"Invalid address or publicKey passed");const t=u8aToHex(getH160(e),-1,!1),n=u8aToHex(keccakAsU8a(t),-1,!1);let s="";for(let i=0;i<40;i++)s=`${s}${parseInt(n[i],16)>7?t[i].toUpperCase():t[i]}`;return`0x${s}`}function isInvalidChar(r,e){return r!==(e>7?r.toUpperCase():r.toLowerCase())}function isEthereumChecksum(r){const e=r.replace("0x",""),t=u8aToHex(keccakAsU8a(e.toLowerCase()),-1,!1);for(let n=0;n<40;n++)if(isInvalidChar(e[n],parseInt(t[n],16)))return!1;return!0}function isEthereumAddress(r){return!r||r.length!==42||!isHex(r)?!1:/^(0x)?[0-9a-f]{40}$/.test(r)||/^(0x)?[0-9A-F]{40}$/.test(r)?!0:isEthereumChecksum(r)}const HARDENED=2147483648;function hdValidatePath(r){if(!r.startsWith("m/"))return!1;const e=r.split("/").slice(1);for(const t of e){const n=/^\d+'?$/.test(t)?parseInt(t.replace(/'$/,""),10):Number.NaN;if(isNaN(n)||n>=HARDENED||n<0)return!1}return!0}const MASTER_SECRET=stringToU8a("Bitcoin seed");function createCoded(r,e){return{chainCode:e,publicKey:secp256k1PairFromSeed(r).publicKey,secretKey:r}}function deriveChild(r,e){const t=bnToU8a(e,BN_BE_32_OPTS),n=e>=HARDENED?u8aConcat(new Uint8Array(1),r.secretKey,t):u8aConcat(r.publicKey,t);try{const s=hmacShaAsU8a(r.chainCode,n,512);return createCoded(secp256k1PrivateKeyTweakAdd(r.secretKey,s.slice(0,32)),s.slice(32))}catch{return deriveChild(r,e+1)}}function hdEthereum(r,e=""){const t=hmacShaAsU8a(MASTER_SECRET,r,512);let n=createCoded(t.slice(0,32),t.slice(32));if(!e||e==="m"||e==="M"||e==="m'"||e==="M'")return n;assert(hdValidatePath(e),"Invalid derivation path");const s=e.split("/").slice(1);for(const i of s)n=deriveChild(n,parseInt(i,10)+(i.length>1&&i.endsWith("'")?HARDENED:0));return n}function pbkdf2Init(r,e,t,n){assertHash(r);const s=checkOpts({dkLen:32,asyncTick:10},n),{c:i,dkLen:a,asyncTick:o}=s;if(assertNumber(i),assertNumber(a),assertNumber(o),i<1)throw new Error("PBKDF2: iterations (c) should be >= 1");const c=toBytes(e),h=toBytes(t),y=new Uint8Array(a),x=hmac.create(r,c),E=x._cloneInto().update(h);return{c:i,dkLen:a,asyncTick:o,DK:y,PRF:x,PRFSalt:E}}function pbkdf2Output(r,e,t,n,s){return r.destroy(),e.destroy(),n&&n.destroy(),s.fill(0),t}function pbkdf2(r,e,t,n){const{c:s,dkLen:i,DK:a,PRF:o,PRFSalt:c}=pbkdf2Init(r,e,t,n);let h;const y=new Uint8Array(4),x=createView(y),E=new Uint8Array(o.outputLen);for(let V=1,F=0;F<i;V++,F+=o.outputLen){const q=a.subarray(F,F+o.outputLen);x.setInt32(0,V,!1),(h=c._cloneInto(h)).update(y).digestInto(E),q.set(E.subarray(0,q.length));for(let X=1;X<s;X++){o._cloneInto(h).update(E).digestInto(E);for(let Y=0;Y<q.length;Y++)q[Y]^=E[Y]}}return pbkdf2Output(o,c,a,h,E)}function pbkdf2Encode(r,e=randomAsU8a(),t=2048,n){const s=u8aToU8a(r),i=u8aToU8a(e);return{password:!hasBigInt||!n&&isReady()?pbkdf2$1(s,i,t):pbkdf2(sha512$1,s,i,{c:t,dkLen:64}),rounds:t,salt:e}}const shaAsU8a=createDualHasher({256:sha256,512:sha512},{256:sha256$1,512:sha512$1}),sha256AsU8a=createBitHasher(256,shaAsU8a);var DEFAULT_WORDLIST="abandon|ability|able|about|above|absent|absorb|abstract|absurd|abuse|access|accident|account|accuse|achieve|acid|acoustic|acquire|across|act|action|actor|actress|actual|adapt|add|addict|address|adjust|admit|adult|advance|advice|aerobic|affair|afford|afraid|again|age|agent|agree|ahead|aim|air|airport|aisle|alarm|album|alcohol|alert|alien|all|alley|allow|almost|alone|alpha|already|also|alter|always|amateur|amazing|among|amount|amused|analyst|anchor|ancient|anger|angle|angry|animal|ankle|announce|annual|another|answer|antenna|antique|anxiety|any|apart|apology|appear|apple|approve|april|arch|arctic|area|arena|argue|arm|armed|armor|army|around|arrange|arrest|arrive|arrow|art|artefact|artist|artwork|ask|aspect|assault|asset|assist|assume|asthma|athlete|atom|attack|attend|attitude|attract|auction|audit|august|aunt|author|auto|autumn|average|avocado|avoid|awake|aware|away|awesome|awful|awkward|axis|baby|bachelor|bacon|badge|bag|balance|balcony|ball|bamboo|banana|banner|bar|barely|bargain|barrel|base|basic|basket|battle|beach|bean|beauty|because|become|beef|before|begin|behave|behind|believe|below|belt|bench|benefit|best|betray|better|between|beyond|bicycle|bid|bike|bind|biology|bird|birth|bitter|black|blade|blame|blanket|blast|bleak|bless|blind|blood|blossom|blouse|blue|blur|blush|board|boat|body|boil|bomb|bone|bonus|book|boost|border|boring|borrow|boss|bottom|bounce|box|boy|bracket|brain|brand|brass|brave|bread|breeze|brick|bridge|brief|bright|bring|brisk|broccoli|broken|bronze|broom|brother|brown|brush|bubble|buddy|budget|buffalo|build|bulb|bulk|bullet|bundle|bunker|burden|burger|burst|bus|business|busy|butter|buyer|buzz|cabbage|cabin|cable|cactus|cage|cake|call|calm|camera|camp|can|canal|cancel|candy|cannon|canoe|canvas|canyon|capable|capital|captain|car|carbon|card|cargo|carpet|carry|cart|case|cash|casino|castle|casual|cat|catalog|catch|category|cattle|caught|cause|caution|cave|ceiling|celery|cement|census|century|cereal|certain|chair|chalk|champion|change|chaos|chapter|charge|chase|chat|cheap|check|cheese|chef|cherry|chest|chicken|chief|child|chimney|choice|choose|chronic|chuckle|chunk|churn|cigar|cinnamon|circle|citizen|city|civil|claim|clap|clarify|claw|clay|clean|clerk|clever|click|client|cliff|climb|clinic|clip|clock|clog|close|cloth|cloud|clown|club|clump|cluster|clutch|coach|coast|coconut|code|coffee|coil|coin|collect|color|column|combine|come|comfort|comic|common|company|concert|conduct|confirm|congress|connect|consider|control|convince|cook|cool|copper|copy|coral|core|corn|correct|cost|cotton|couch|country|couple|course|cousin|cover|coyote|crack|cradle|craft|cram|crane|crash|crater|crawl|crazy|cream|credit|creek|crew|cricket|crime|crisp|critic|crop|cross|crouch|crowd|crucial|cruel|cruise|crumble|crunch|crush|cry|crystal|cube|culture|cup|cupboard|curious|current|curtain|curve|cushion|custom|cute|cycle|dad|damage|damp|dance|danger|daring|dash|daughter|dawn|day|deal|debate|debris|decade|december|decide|decline|decorate|decrease|deer|defense|define|defy|degree|delay|deliver|demand|demise|denial|dentist|deny|depart|depend|deposit|depth|deputy|derive|describe|desert|design|desk|despair|destroy|detail|detect|develop|device|devote|diagram|dial|diamond|diary|dice|diesel|diet|differ|digital|dignity|dilemma|dinner|dinosaur|direct|dirt|disagree|discover|disease|dish|dismiss|disorder|display|distance|divert|divide|divorce|dizzy|doctor|document|dog|doll|dolphin|domain|donate|donkey|donor|door|dose|double|dove|draft|dragon|drama|drastic|draw|dream|dress|drift|drill|drink|drip|drive|drop|drum|dry|duck|dumb|dune|during|dust|dutch|duty|dwarf|dynamic|eager|eagle|early|earn|earth|easily|east|easy|echo|ecology|economy|edge|edit|educate|effort|egg|eight|either|elbow|elder|electric|elegant|element|elephant|elevator|elite|else|embark|embody|embrace|emerge|emotion|employ|empower|empty|enable|enact|end|endless|endorse|enemy|energy|enforce|engage|engine|enhance|enjoy|enlist|enough|enrich|enroll|ensure|enter|entire|entry|envelope|episode|equal|equip|era|erase|erode|erosion|error|erupt|escape|essay|essence|estate|eternal|ethics|evidence|evil|evoke|evolve|exact|example|excess|exchange|excite|exclude|excuse|execute|exercise|exhaust|exhibit|exile|exist|exit|exotic|expand|expect|expire|explain|expose|express|extend|extra|eye|eyebrow|fabric|face|faculty|fade|faint|faith|fall|false|fame|family|famous|fan|fancy|fantasy|farm|fashion|fat|fatal|father|fatigue|fault|favorite|feature|february|federal|fee|feed|feel|female|fence|festival|fetch|fever|few|fiber|fiction|field|figure|file|film|filter|final|find|fine|finger|finish|fire|firm|first|fiscal|fish|fit|fitness|fix|flag|flame|flash|flat|flavor|flee|flight|flip|float|flock|floor|flower|fluid|flush|fly|foam|focus|fog|foil|fold|follow|food|foot|force|forest|forget|fork|fortune|forum|forward|fossil|foster|found|fox|fragile|frame|frequent|fresh|friend|fringe|frog|front|frost|frown|frozen|fruit|fuel|fun|funny|furnace|fury|future|gadget|gain|galaxy|gallery|game|gap|garage|garbage|garden|garlic|garment|gas|gasp|gate|gather|gauge|gaze|general|genius|genre|gentle|genuine|gesture|ghost|giant|gift|giggle|ginger|giraffe|girl|give|glad|glance|glare|glass|glide|glimpse|globe|gloom|glory|glove|glow|glue|goat|goddess|gold|good|goose|gorilla|gospel|gossip|govern|gown|grab|grace|grain|grant|grape|grass|gravity|great|green|grid|grief|grit|grocery|group|grow|grunt|guard|guess|guide|guilt|guitar|gun|gym|habit|hair|half|hammer|hamster|hand|happy|harbor|hard|harsh|harvest|hat|have|hawk|hazard|head|health|heart|heavy|hedgehog|height|hello|helmet|help|hen|hero|hidden|high|hill|hint|hip|hire|history|hobby|hockey|hold|hole|holiday|hollow|home|honey|hood|hope|horn|horror|horse|hospital|host|hotel|hour|hover|hub|huge|human|humble|humor|hundred|hungry|hunt|hurdle|hurry|hurt|husband|hybrid|ice|icon|idea|identify|idle|ignore|ill|illegal|illness|image|imitate|immense|immune|impact|impose|improve|impulse|inch|include|income|increase|index|indicate|indoor|industry|infant|inflict|inform|inhale|inherit|initial|inject|injury|inmate|inner|innocent|input|inquiry|insane|insect|inside|inspire|install|intact|interest|into|invest|invite|involve|iron|island|isolate|issue|item|ivory|jacket|jaguar|jar|jazz|jealous|jeans|jelly|jewel|job|join|joke|journey|joy|judge|juice|jump|jungle|junior|junk|just|kangaroo|keen|keep|ketchup|key|kick|kid|kidney|kind|kingdom|kiss|kit|kitchen|kite|kitten|kiwi|knee|knife|knock|know|lab|label|labor|ladder|lady|lake|lamp|language|laptop|large|later|latin|laugh|laundry|lava|law|lawn|lawsuit|layer|lazy|leader|leaf|learn|leave|lecture|left|leg|legal|legend|leisure|lemon|lend|length|lens|leopard|lesson|letter|level|liar|liberty|library|license|life|lift|light|like|limb|limit|link|lion|liquid|list|little|live|lizard|load|loan|lobster|local|lock|logic|lonely|long|loop|lottery|loud|lounge|love|loyal|lucky|luggage|lumber|lunar|lunch|luxury|lyrics|machine|mad|magic|magnet|maid|mail|main|major|make|mammal|man|manage|mandate|mango|mansion|manual|maple|marble|march|margin|marine|market|marriage|mask|mass|master|match|material|math|matrix|matter|maximum|maze|meadow|mean|measure|meat|mechanic|medal|media|melody|melt|member|memory|mention|menu|mercy|merge|merit|merry|mesh|message|metal|method|middle|midnight|milk|million|mimic|mind|minimum|minor|minute|miracle|mirror|misery|miss|mistake|mix|mixed|mixture|mobile|model|modify|mom|moment|monitor|monkey|monster|month|moon|moral|more|morning|mosquito|mother|motion|motor|mountain|mouse|move|movie|much|muffin|mule|multiply|muscle|museum|mushroom|music|must|mutual|myself|mystery|myth|naive|name|napkin|narrow|nasty|nation|nature|near|neck|need|negative|neglect|neither|nephew|nerve|nest|net|network|neutral|never|news|next|nice|night|noble|noise|nominee|noodle|normal|north|nose|notable|note|nothing|notice|novel|now|nuclear|number|nurse|nut|oak|obey|object|oblige|obscure|observe|obtain|obvious|occur|ocean|october|odor|off|offer|office|often|oil|okay|old|olive|olympic|omit|once|one|onion|online|only|open|opera|opinion|oppose|option|orange|orbit|orchard|order|ordinary|organ|orient|original|orphan|ostrich|other|outdoor|outer|output|outside|oval|oven|over|own|owner|oxygen|oyster|ozone|pact|paddle|page|pair|palace|palm|panda|panel|panic|panther|paper|parade|parent|park|parrot|party|pass|patch|path|patient|patrol|pattern|pause|pave|payment|peace|peanut|pear|peasant|pelican|pen|penalty|pencil|people|pepper|perfect|permit|person|pet|phone|photo|phrase|physical|piano|picnic|picture|piece|pig|pigeon|pill|pilot|pink|pioneer|pipe|pistol|pitch|pizza|place|planet|plastic|plate|play|please|pledge|pluck|plug|plunge|poem|poet|point|polar|pole|police|pond|pony|pool|popular|portion|position|possible|post|potato|pottery|poverty|powder|power|practice|praise|predict|prefer|prepare|present|pretty|prevent|price|pride|primary|print|priority|prison|private|prize|problem|process|produce|profit|program|project|promote|proof|property|prosper|protect|proud|provide|public|pudding|pull|pulp|pulse|pumpkin|punch|pupil|puppy|purchase|purity|purpose|purse|push|put|puzzle|pyramid|quality|quantum|quarter|question|quick|quit|quiz|quote|rabbit|raccoon|race|rack|radar|radio|rail|rain|raise|rally|ramp|ranch|random|range|rapid|rare|rate|rather|raven|raw|razor|ready|real|reason|rebel|rebuild|recall|receive|recipe|record|recycle|reduce|reflect|reform|refuse|region|regret|regular|reject|relax|release|relief|rely|remain|remember|remind|remove|render|renew|rent|reopen|repair|repeat|replace|report|require|rescue|resemble|resist|resource|response|result|retire|retreat|return|reunion|reveal|review|reward|rhythm|rib|ribbon|rice|rich|ride|ridge|rifle|right|rigid|ring|riot|ripple|risk|ritual|rival|river|road|roast|robot|robust|rocket|romance|roof|rookie|room|rose|rotate|rough|round|route|royal|rubber|rude|rug|rule|run|runway|rural|sad|saddle|sadness|safe|sail|salad|salmon|salon|salt|salute|same|sample|sand|satisfy|satoshi|sauce|sausage|save|say|scale|scan|scare|scatter|scene|scheme|school|science|scissors|scorpion|scout|scrap|screen|script|scrub|sea|search|season|seat|second|secret|section|security|seed|seek|segment|select|sell|seminar|senior|sense|sentence|series|service|session|settle|setup|seven|shadow|shaft|shallow|share|shed|shell|sheriff|shield|shift|shine|ship|shiver|shock|shoe|shoot|shop|short|shoulder|shove|shrimp|shrug|shuffle|shy|sibling|sick|side|siege|sight|sign|silent|silk|silly|silver|similar|simple|since|sing|siren|sister|situate|six|size|skate|sketch|ski|skill|skin|skirt|skull|slab|slam|sleep|slender|slice|slide|slight|slim|slogan|slot|slow|slush|small|smart|smile|smoke|smooth|snack|snake|snap|sniff|snow|soap|soccer|social|sock|soda|soft|solar|soldier|solid|solution|solve|someone|song|soon|sorry|sort|soul|sound|soup|source|south|space|spare|spatial|spawn|speak|special|speed|spell|spend|sphere|spice|spider|spike|spin|spirit|split|spoil|sponsor|spoon|sport|spot|spray|spread|spring|spy|square|squeeze|squirrel|stable|stadium|staff|stage|stairs|stamp|stand|start|state|stay|steak|steel|stem|step|stereo|stick|still|sting|stock|stomach|stone|stool|story|stove|strategy|street|strike|strong|struggle|student|stuff|stumble|style|subject|submit|subway|success|such|sudden|suffer|sugar|suggest|suit|summer|sun|sunny|sunset|super|supply|supreme|sure|surface|surge|surprise|surround|survey|suspect|sustain|swallow|swamp|swap|swarm|swear|sweet|swift|swim|swing|switch|sword|symbol|symptom|syrup|system|table|tackle|tag|tail|talent|talk|tank|tape|target|task|taste|tattoo|taxi|teach|team|tell|ten|tenant|tennis|tent|term|test|text|thank|that|theme|then|theory|there|they|thing|this|thought|three|thrive|throw|thumb|thunder|ticket|tide|tiger|tilt|timber|time|tiny|tip|tired|tissue|title|toast|tobacco|today|toddler|toe|together|toilet|token|tomato|tomorrow|tone|tongue|tonight|tool|tooth|top|topic|topple|torch|tornado|tortoise|toss|total|tourist|toward|tower|town|toy|track|trade|traffic|tragic|train|transfer|trap|trash|travel|tray|treat|tree|trend|trial|tribe|trick|trigger|trim|trip|trophy|trouble|truck|true|truly|trumpet|trust|truth|try|tube|tuition|tumble|tuna|tunnel|turkey|turn|turtle|twelve|twenty|twice|twin|twist|two|type|typical|ugly|umbrella|unable|unaware|uncle|uncover|under|undo|unfair|unfold|unhappy|uniform|unique|unit|universe|unknown|unlock|until|unusual|unveil|update|upgrade|uphold|upon|upper|upset|urban|urge|usage|use|used|useful|useless|usual|utility|vacant|vacuum|vague|valid|valley|valve|van|vanish|vapor|various|vast|vault|vehicle|velvet|vendor|venture|venue|verb|verify|version|very|vessel|veteran|viable|vibrant|vicious|victory|video|view|village|vintage|violin|virtual|virus|visa|visit|visual|vital|vivid|vocal|voice|void|volcano|volume|vote|voyage|wage|wagon|wait|walk|wall|walnut|want|warfare|warm|warrior|wash|wasp|waste|water|wave|way|wealth|weapon|wear|weasel|weather|web|wedding|weekend|weird|welcome|west|wet|whale|what|wheat|wheel|when|where|whip|whisper|wide|width|wife|wild|will|win|window|wine|wing|wink|winner|winter|wire|wisdom|wise|wish|witness|wolf|woman|wonder|wood|wool|word|work|world|worry|worth|wrap|wreck|wrestle|wrist|write|wrong|yard|year|yellow|you|young|youth|zebra|zero|zone|zoo".split("|");const INVALID_MNEMONIC="Invalid mnemonic",INVALID_ENTROPY="Invalid entropy",INVALID_CHECKSUM="Invalid mnemonic checksum";function normalize(r){return(r||"").normalize("NFKD")}function binaryToByte(r){return parseInt(r,2)}function bytesToBinary(r){return r.map(e=>e.toString(2).padStart(8,"0")).join("")}function deriveChecksumBits(r){return bytesToBinary(Array.from(sha256AsU8a(r))).slice(0,r.length*8/32)}function mnemonicToSeedSync(r,e){return pbkdf2Encode(stringToU8a(normalize(r)),stringToU8a(`mnemonic${normalize(e)}`)).password}function mnemonicToEntropy$1(r){var e;const t=normalize(r).split(" ");assert(t.length%3===0,INVALID_MNEMONIC);const n=t.map(y=>{const x=DEFAULT_WORDLIST.indexOf(y);return assert(x!==-1,INVALID_MNEMONIC),x.toString(2).padStart(11,"0")}).join(""),s=Math.floor(n.length/33)*32,i=n.slice(0,s),a=n.slice(s),o=(e=i.match(/(.{1,8})/g))===null||e===void 0?void 0:e.map(binaryToByte);assert(o&&o.length%4===0&&o.length>=16&&o.length<=32,INVALID_ENTROPY);const c=u8aToU8a(o),h=deriveChecksumBits(c);return assert(h===a,INVALID_CHECKSUM),c}function validateMnemonic(r){try{mnemonicToEntropy$1(r)}catch{return!1}return!0}function mnemonicToEntropy(r,e){return!hasBigInt||!e&&isReady()?bip39ToEntropy(r):mnemonicToEntropy$1(r)}function mnemonicValidate(r,e){return!hasBigInt||!e&&isReady()?bip39Validate(r):validateMnemonic(r)}function mnemonicToLegacySeed(r,e="",t,n=32){return assert(mnemonicValidate(r),"Invalid bip39 mnemonic specified"),assert([32,64].includes(n),()=>`Invalid seed length ${n}, expected 32 or 64`),n===32?!hasBigInt||!t&&isReady()?bip39ToSeed(r,e):mnemonicToSeedSync(r,e).subarray(0,32):mnemonicToSeedSync(r,e)}function mnemonicToMiniSecret(r,e="",t){if(assert(mnemonicValidate(r),"Invalid bip39 mnemonic specified"),!t&&isReady())return bip39ToMiniSecret(r,e);const n=mnemonicToEntropy(r),s=stringToU8a(`mnemonic${e}`);return pbkdf2Encode(n,s).password.slice(0,32)}function naclDecrypt(r,e,t){return nacl.secretbox.open(r,e,t)||null}function naclEncrypt(r,e,t=randomAsU8a(24)){return{encrypted:nacl.secretbox(r,t,e),nonce:t}}function naclOpen(r,e,t,n){return nacl.box.open(r,e,t,n)||null}function naclSeal(r,e,t,n=randomAsU8a(24)){return{nonce:n,sealed:nacl.box(r,n,t,e)}}const rotl$1=(r,e)=>r<<e|r>>>32-e;function XorAndSalsa(r,e,t,n,s,i){let a=r[e++]^t[n++],o=r[e++]^t[n++],c=r[e++]^t[n++],h=r[e++]^t[n++],y=r[e++]^t[n++],x=r[e++]^t[n++],E=r[e++]^t[n++],V=r[e++]^t[n++],F=r[e++]^t[n++],q=r[e++]^t[n++],X=r[e++]^t[n++],Y=r[e++]^t[n++],oe=r[e++]^t[n++],Q=r[e++]^t[n++],le=r[e++]^t[n++],fe=r[e++]^t[n++],ve=a,ke=o,Ve=c,Re=h,re=y,R=x,H=E,b=V,u=F,p=q,v=X,M=Y,B=oe,U=Q,z=le,k=fe;for(let m=0;m<8;m+=2)re^=rotl$1(ve+B|0,7),u^=rotl$1(re+ve|0,9),B^=rotl$1(u+re|0,13),ve^=rotl$1(B+u|0,18),p^=rotl$1(R+ke|0,7),U^=rotl$1(p+R|0,9),ke^=rotl$1(U+p|0,13),R^=rotl$1(ke+U|0,18),z^=rotl$1(v+H|0,7),Ve^=rotl$1(z+v|0,9),H^=rotl$1(Ve+z|0,13),v^=rotl$1(H+Ve|0,18),Re^=rotl$1(k+M|0,7),b^=rotl$1(Re+k|0,9),M^=rotl$1(b+Re|0,13),k^=rotl$1(M+b|0,18),ke^=rotl$1(ve+Re|0,7),Ve^=rotl$1(ke+ve|0,9),Re^=rotl$1(Ve+ke|0,13),ve^=rotl$1(Re+Ve|0,18),H^=rotl$1(R+re|0,7),b^=rotl$1(H+R|0,9),re^=rotl$1(b+H|0,13),R^=rotl$1(re+b|0,18),M^=rotl$1(v+p|0,7),u^=rotl$1(M+v|0,9),p^=rotl$1(u+M|0,13),v^=rotl$1(p+u|0,18),B^=rotl$1(k+z|0,7),U^=rotl$1(B+k|0,9),z^=rotl$1(U+B|0,13),k^=rotl$1(z+U|0,18);s[i++]=a+ve|0,s[i++]=o+ke|0,s[i++]=c+Ve|0,s[i++]=h+Re|0,s[i++]=y+re|0,s[i++]=x+R|0,s[i++]=E+H|0,s[i++]=V+b|0,s[i++]=F+u|0,s[i++]=q+p|0,s[i++]=X+v|0,s[i++]=Y+M|0,s[i++]=oe+B|0,s[i++]=Q+U|0,s[i++]=le+z|0,s[i++]=fe+k|0}function BlockMix(r,e,t,n,s){let i=n+0,a=n+16*s;for(let o=0;o<16;o++)t[a+o]=r[e+(2*s-1)*16+o];for(let o=0;o<s;o++,i+=16,e+=16)XorAndSalsa(t,a,r,e,t,i),o>0&&(a+=16),XorAndSalsa(t,i,r,e+=16,t,a)}function scryptInit(r,e,t){const n=checkOpts({dkLen:32,asyncTick:10,maxmem:1073742848},t),{N:s,r:i,p:a,dkLen:o,asyncTick:c,maxmem:h,onProgress:y}=n;if(assertNumber(s),assertNumber(i),assertNumber(a),assertNumber(o),assertNumber(c),assertNumber(h),y!==void 0&&typeof y!="function")throw new Error("progressCb should be function");const x=128*i,E=x/4;if(s<=1||(s&s-1)!==0||s>=2**(x/8)||s>2**32)throw new Error("Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32");if(a<0||a>(2**32-1)*32/x)throw new Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)");if(o<0||o>(2**32-1)*32)throw new Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32");const V=x*(s+a);if(V>h)throw new Error(`Scrypt: parameters too large, ${V} (128 * r * (N + p)) > ${h} (maxmem)`);const F=pbkdf2(sha256$1,r,e,{c:1,dkLen:x*a}),q=u32$2(F),X=u32$2(new Uint8Array(x*s)),Y=u32$2(new Uint8Array(x));let oe=()=>{};if(y){const Q=2*s*a,le=Math.max(Math.floor(Q/1e4),1);let fe=0;oe=()=>{fe++,y&&(!(fe%le)||fe===Q)&&y(fe/Q)}}return{N:s,r:i,p:a,dkLen:o,blockSize32:E,V:X,B32:q,B:F,tmp:Y,blockMixCb:oe,asyncTick:c}}function scryptOutput(r,e,t,n,s){const i=pbkdf2(sha256$1,r,t,{c:1,dkLen:e});return t.fill(0),n.fill(0),s.fill(0),i}function scrypt(r,e,t){const{N:n,r:s,p:i,dkLen:a,blockSize32:o,V:c,B32:h,B:y,tmp:x,blockMixCb:E}=scryptInit(r,e,t);for(let V=0;V<i;V++){const F=o*V;for(let q=0;q<o;q++)c[q]=h[F+q];for(let q=0,X=0;q<n-1;q++)BlockMix(c,X,c,X+=o,s),E();BlockMix(c,(n-1)*o,h,F,s),E();for(let q=0;q<n;q++){const X=h[F+o-16]%n;for(let Y=0;Y<o;Y++)x[Y]=h[F+Y]^c[X*o+Y];BlockMix(x,0,h,F,s),E()}}return scryptOutput(r,a,y,c,x)}const DEFAULT_PARAMS={N:1<<15,p:1,r:8};function scryptEncode(r,e=randomAsU8a(),t=DEFAULT_PARAMS,n){const s=u8aToU8a(r);return{params:t,password:!hasBigInt||!n&&isReady()?scrypt$1(s,e,Math.log2(t.N),t.r,t.p):scrypt(s,e,objectSpread({dkLen:64},t)),salt:e}}function scryptFromU8a(r){const e=r.subarray(0,32),t=u8aToBn(r.subarray(32+0,32+4),BN_LE_OPTS).toNumber(),n=u8aToBn(r.subarray(32+4,32+8),BN_LE_OPTS).toNumber(),s=u8aToBn(r.subarray(32+8,32+12),BN_LE_OPTS).toNumber();return assert(t===DEFAULT_PARAMS.N&&n===DEFAULT_PARAMS.p&&s===DEFAULT_PARAMS.r,"Invalid injected scrypt params found"),{params:{N:t,p:n,r:s},salt:e}}function scryptToU8a(r,{N:e,p:t,r:n}){return u8aConcat(r,bnToU8a(e,BN_LE_32_OPTS),bnToU8a(t,BN_LE_32_OPTS),bnToU8a(n,BN_LE_32_OPTS))}const ENCODING=["scrypt","xsalsa20-poly1305"],ENCODING_NONE=["none"],ENCODING_VERSION="3",NONCE_LENGTH=24,SCRYPT_LENGTH=32+3*4;function jsonDecryptData(r,e,t=ENCODING){assert(r,"No encrypted data available to decode"),assert(e||!t.includes("xsalsa20-poly1305"),"Password required to decode encrypted data");let n=r;if(e){let s;if(t.includes("scrypt")){const{params:i,salt:a}=scryptFromU8a(r);s=scryptEncode(e,a,i).password,r=r.subarray(SCRYPT_LENGTH)}else s=stringToU8a(e);n=naclDecrypt(r.subarray(NONCE_LENGTH),r.subarray(0,NONCE_LENGTH),u8aFixLength(s,256,!0))}return assert(n,"Unable to decode using the supplied passphrase"),n}function jsonDecrypt({encoded:r,encoding:e},t){return assert(r,"No encrypted data available to decode"),jsonDecryptData(isHex(r)?hexToU8a(r):base64Decode(r),t,Array.isArray(e.type)?e.type:[e.type])}function jsonEncryptFormat(r,e,t){return{encoded:base64Encode(r),encoding:{content:e,type:t?ENCODING:ENCODING_NONE,version:ENCODING_VERSION}}}function jsonEncrypt(r,e,t){let n=!1,s=r;if(t){const{params:i,password:a,salt:o}=scryptEncode(t),{encrypted:c,nonce:h}=naclEncrypt(s,a.subarray(0,32));n=!0,s=u8aConcat(scryptToU8a(o,i),h,c)}return jsonEncryptFormat(s,e,n)}const secp256k1VerifyHasher=r=>(e,t,n)=>secp256k1Verify(e,t,n,r),VERIFIERS_ECDSA=[["ecdsa",secp256k1VerifyHasher("blake2")],["ethereum",secp256k1VerifyHasher("keccak")]],VERIFIERS=[["ed25519",ed25519Verify],["sr25519",sr25519Verify],...VERIFIERS_ECDSA],CRYPTO_TYPES=["ed25519","sr25519","ecdsa"];function verifyDetect(r,{message:e,publicKey:t,signature:n},s=VERIFIERS){return r.isValid=s.some(([i,a])=>{try{if(a(e,n,t))return r.crypto=i,!0}catch{}return!1}),r}function verifyMultisig(r,{message:e,publicKey:t,signature:n}){assert([0,1,2].includes(n[0]),()=>`Unknown crypto type, expected signature prefix [0..2], found ${n[0]}`);const s=CRYPTO_TYPES[n[0]]||"none";r.crypto=s;try{r.isValid={ecdsa:()=>verifyDetect(r,{message:e,publicKey:t,signature:n.subarray(1)},VERIFIERS_ECDSA).isValid,ed25519:()=>ed25519Verify(e,n.subarray(1),t),none:()=>{throw Error("no verify for `none` crypto type")},sr25519:()=>sr25519Verify(e,n.subarray(1),t)}[s]()}catch{}return r}function getVerifyFn(r){return[0,1,2].includes(r[0])&&[65,66].includes(r.length)?verifyMultisig:verifyDetect}function signatureVerify(r,e,t){const n=u8aToU8a(e);assert([64,65,66].includes(n.length),()=>`Invalid signature length, expected [64..66] bytes, found ${n.length}`);const s=decodeAddress(t),i={message:u8aToU8a(r),publicKey:s,signature:n},a={crypto:"none",isValid:!1,isWrapped:u8aIsWrapped(i.message,!0),publicKey:s},o=u8aIsWrapped(i.message,!1),c=getVerifyFn(n);return c(a,i),a.crypto!=="none"||a.isWrapped&&!o?a:(i.message=o?u8aUnwrapBytes(i.message):u8aWrapBytes(i.message),c(a,i))}const P64_1=BigInt$1("11400714785074694791"),P64_2=BigInt$1("14029467366897019727"),P64_3=BigInt$1("1609587929392839161"),P64_4=BigInt$1("9650029242287828579"),P64_5=BigInt$1("2870177450012600261"),U64=BigInt$1("0xffffffffffffffff"),_7n=BigInt$1(7),_11n=BigInt$1(11),_12n=BigInt$1(12),_16n=BigInt$1(16),_18n=BigInt$1(18),_23n=BigInt$1(23),_27n=BigInt$1(27),_29n=BigInt$1(29),_31n=BigInt$1(31),_32n=BigInt$1(32),_33n=BigInt$1(33),_64n=BigInt$1(64),_256n=BigInt$1(256);function rotl(r,e){const t=r&U64;return(t<<e|t>>_64n-e)&U64}function fromU8a(r,e,t){const n=new Array(t);let s=0;for(let a=0;a<t;a++,s+=2)n[a]=BigInt$1(r[e+s]|r[e+1+s]<<8);let i=_0n$2;for(let a=t-1;a>=0;a--)i=(i<<_16n)+n[a];return i}function toU8a$1(r){const e=new Uint8Array(8);for(let t=7;t>=0;t--)e[t]=Number(r%_256n),r=r/_256n;return e}function state(r){const e=BigInt$1(r);return{seed:e,u8a:new Uint8Array(32),u8asize:0,v1:e+P64_1+P64_2,v2:e+P64_2,v3:e,v4:e-P64_1}}function init(r,e){if(e.length<32)return r.u8a.set(e),r.u8asize=e.length,r;const t=e.length-32;let n=0;if(t>=0){const s=i=>P64_1*rotl(i+P64_2*fromU8a(e,n,4),_31n);do r.v1=s(r.v1),n+=8,r.v2=s(r.v2),n+=8,r.v3=s(r.v3),n+=8,r.v4=s(r.v4),n+=8;while(n<=t)}return n<e.length&&(r.u8a.set(e.subarray(n,e.length)),r.u8asize=e.length-n),r}function xxhash64(r,e){const{seed:t,u8a:n,u8asize:s,v1:i,v2:a,v3:o,v4:c}=init(state(e),r);let h=0,y=U64&BigInt$1(r.length)+(r.length>=32?((((rotl(i,_1n$2)+rotl(a,_7n)+rotl(o,_12n)+rotl(c,_18n)^P64_1*rotl(i*P64_2,_31n))*P64_1+P64_4^P64_1*rotl(a*P64_2,_31n))*P64_1+P64_4^P64_1*rotl(o*P64_2,_31n))*P64_1+P64_4^P64_1*rotl(c*P64_2,_31n))*P64_1+P64_4:t+P64_5);for(;h<=s-8;)y=U64&P64_4+P64_1*rotl(y^P64_1*rotl(P64_2*fromU8a(n,h,4),_31n),_27n),h+=8;for(h+4<=s&&(y=U64&P64_3+P64_2*rotl(y^P64_1*fromU8a(n,h,2),_23n),h+=4);h<s;)y=U64&P64_1*rotl(y^P64_5*BigInt$1(n[h++]),_11n);return y=U64&P64_2*(y^y>>_33n),y=U64&P64_3*(y^y>>_29n),toU8a$1(U64&(y^y>>_32n))}function xxhashAsU8a(r,e=64,t){const n=Math.ceil(e/64),s=u8aToU8a(r);if(!hasBigInt||!t&&isReady())return twox(s,n);const i=new Uint8Array(n*8);for(let a=0;a<n;a++)i.set(xxhash64(s,a).reverse(),a*8);return i}const blake2=r=>blake2AsU8a(r,512),S=64,C=S/2,Z=S/64*5,SCHEMA={target:{colors:[0,28,0,0,28,0,0,28,0,0,28,0,0,28,0,0,28,0,1],freq:1},cube:{colors:[0,1,3,2,4,3,0,1,3,2,4,3,0,1,3,2,4,3,5],freq:20},quazar:{colors:[1,2,3,1,2,4,5,5,4,1,2,3,1,2,4,5,5,4,0],freq:16},flower:{colors:[0,1,2,0,1,2,0,1,2,0,1,2,0,1,2,0,1,2,3],freq:32},cyclic:{colors:[0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,6],freq:32},vmirror:{colors:[0,1,2,3,4,5,3,4,2,0,1,6,7,8,9,7,8,6,10],freq:128},hmirror:{colors:[0,1,2,3,4,5,6,7,8,9,10,8,6,7,5,3,4,2,11],freq:128}},OUTER_CIRCLE={cx:C,cy:C,fill:"#eee",r:C};let zeroHash=new Uint8Array;function getRotation(r){const e=r?C/8*5:C/4*3,t=e*Math.sqrt(3)/2,n=e/2,s=e*Math.sqrt(3)/4,i=e/4,a=e*3/4;return{r:e,r3o4:a,ro2:n,ro4:i,rroot3o2:t,rroot3o4:s}}function getCircleXY(r){const{r:e,r3o4:t,ro2:n,ro4:s,rroot3o2:i,rroot3o4:a}=getRotation(r);return[[C,C-e],[C,C-n],[C-a,C-t],[C-i,C-n],[C-a,C-s],[C-i,C],[C-i,C+n],[C-a,C+s],[C-a,C+t],[C,C+e],[C,C+n],[C+a,C+t],[C+i,C+n],[C+a,C+s],[C+i,C],[C+i,C-n],[C+a,C-s],[C+a,C-t],[C,C]]}function findScheme(r){let e=0;const t=Object.values(SCHEMA).find(n=>(e+=n.freq,r<e));if(!t)throw new Error("Unable to find schema");return t}function addressToId(r){return zeroHash.length||(zeroHash=blake2(new Uint8Array(32))),blake2(decodeAddress(r)).map((e,t)=>(e+256-zeroHash[t])%256)}function getColors(r){const e=Object.values(SCHEMA).map(c=>c.freq).reduce((c,h)=>c+h),t=addressToId(r),n=Math.floor((t[30]+t[31]*256)%e),s=t[28]%6*3,i=Math.floor(t[29]*70/256+26)%80+30,a=findScheme(n),o=Array.from(t).map((c,h)=>{const y=(c+h%28*58)%256;if(y===0)return"#444";if(y===255)return"transparent";const x=Math.floor(y%64*360/64),E=[53,15,35,75][Math.floor(y/64)];return`hsl(${x}, ${i}%, ${E}%)`});return a.colors.map((c,h)=>o[a.colors[h<18?(h+s)%18:18]])}function polkadotIcon(r,{isAlternative:e}){const t=getCircleXY(e);let n;try{n=getColors(r)}catch{n=new Array(t.length).fill("#ddd")}return[OUTER_CIRCLE].concat(t.map(([s,i],a)=>({cx:s,cy:i,fill:n[a],r:Z})))}const AllHashers={Blake2_128:null,Blake2_256:null,Blake2_128Concat:null,Twox128:null,Twox256:null,Twox64Concat:null,Identity:null},v9={ErrorMetadataV9:{name:"Text",docs:"Vec<Text>"},EventMetadataV9:{name:"Text",args:"Vec<Type>",docs:"Vec<Text>"},FunctionArgumentMetadataV9:{name:"Text",type:"Type"},FunctionMetadataV9:{name:"Text",args:"Vec<FunctionArgumentMetadataV9>",docs:"Vec<Text>"},MetadataV9:{modules:"Vec<ModuleMetadataV9>"},ModuleConstantMetadataV9:{name:"Text",type:"Type",value:"Bytes",docs:"Vec<Text>"},ModuleMetadataV9:{name:"Text",storage:"Option<StorageMetadataV9>",calls:"Option<Vec<FunctionMetadataV9>>",events:"Option<Vec<EventMetadataV9>>",constants:"Vec<ModuleConstantMetadataV9>",errors:"Vec<ErrorMetadataV9>"},StorageEntryMetadataV9:{name:"Text",modifier:"StorageEntryModifierV9",type:"StorageEntryTypeV9",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryModifierV9:{_enum:["Optional","Default","Required"]},StorageEntryTypeV9:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV9",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV9",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV9"}}},StorageHasherV9:{_enum:{Blake2_128:null,Blake2_256:null,Twox128:null,Twox256:null,Twox64Concat:null}},StorageMetadataV9:{prefix:"Text",items:"Vec<StorageEntryMetadataV9>"}},v10={ErrorMetadataV10:"ErrorMetadataV9",EventMetadataV10:"EventMetadataV9",FunctionArgumentMetadataV10:"FunctionArgumentMetadataV9",FunctionMetadataV10:"FunctionMetadataV9",MetadataV10:{modules:"Vec<ModuleMetadataV10>"},ModuleConstantMetadataV10:"ModuleConstantMetadataV9",ModuleMetadataV10:{name:"Text",storage:"Option<StorageMetadataV10>",calls:"Option<Vec<FunctionMetadataV10>>",events:"Option<Vec<EventMetadataV10>>",constants:"Vec<ModuleConstantMetadataV10>",errors:"Vec<ErrorMetadataV10>"},StorageEntryModifierV10:"StorageEntryModifierV9",StorageEntryMetadataV10:{name:"Text",modifier:"StorageEntryModifierV10",type:"StorageEntryTypeV10",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV10:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV10",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV10",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV10"}}},StorageMetadataV10:{prefix:"Text",items:"Vec<StorageEntryMetadataV10>"},StorageHasherV10:{_enum:{Blake2_128:null,Blake2_256:null,Blake2_128Concat:null,Twox128:null,Twox256:null,Twox64Concat:null}}},v11={ErrorMetadataV11:"ErrorMetadataV10",EventMetadataV11:"EventMetadataV10",ExtrinsicMetadataV11:{version:"u8",signedExtensions:"Vec<Text>"},FunctionArgumentMetadataV11:"FunctionArgumentMetadataV10",FunctionMetadataV11:"FunctionMetadataV10",MetadataV11:{modules:"Vec<ModuleMetadataV11>",extrinsic:"ExtrinsicMetadataV11"},ModuleConstantMetadataV11:"ModuleConstantMetadataV10",ModuleMetadataV11:{name:"Text",storage:"Option<StorageMetadataV11>",calls:"Option<Vec<FunctionMetadataV11>>",events:"Option<Vec<EventMetadataV11>>",constants:"Vec<ModuleConstantMetadataV11>",errors:"Vec<ErrorMetadataV11>"},StorageEntryModifierV11:"StorageEntryModifierV10",StorageEntryMetadataV11:{name:"Text",modifier:"StorageEntryModifierV11",type:"StorageEntryTypeV11",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV11:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV11",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV11",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV11"}}},StorageMetadataV11:{prefix:"Text",items:"Vec<StorageEntryMetadataV11>"},StorageHasherV11:{_enum:AllHashers}},v12={ErrorMetadataV12:"ErrorMetadataV11",EventMetadataV12:"EventMetadataV11",ExtrinsicMetadataV12:"ExtrinsicMetadataV11",FunctionArgumentMetadataV12:"FunctionArgumentMetadataV11",FunctionMetadataV12:"FunctionMetadataV11",MetadataV12:{modules:"Vec<ModuleMetadataV12>",extrinsic:"ExtrinsicMetadataV12"},ModuleConstantMetadataV12:"ModuleConstantMetadataV11",ModuleMetadataV12:{name:"Text",storage:"Option<StorageMetadataV12>",calls:"Option<Vec<FunctionMetadataV12>>",events:"Option<Vec<EventMetadataV12>>",constants:"Vec<ModuleConstantMetadataV12>",errors:"Vec<ErrorMetadataV12>",index:"u8"},StorageEntryModifierV12:"StorageEntryModifierV11",StorageEntryMetadataV12:"StorageEntryMetadataV11",StorageEntryTypeV12:"StorageEntryTypeV11",StorageMetadataV12:"StorageMetadataV11",StorageHasherV12:"StorageHasherV11"},v13={ErrorMetadataV13:"ErrorMetadataV12",EventMetadataV13:"EventMetadataV12",ExtrinsicMetadataV13:"ExtrinsicMetadataV12",FunctionArgumentMetadataV13:"FunctionArgumentMetadataV12",FunctionMetadataV13:"FunctionMetadataV12",MetadataV13:{modules:"Vec<ModuleMetadataV13>",extrinsic:"ExtrinsicMetadataV13"},ModuleConstantMetadataV13:"ModuleConstantMetadataV12",ModuleMetadataV13:{name:"Text",storage:"Option<StorageMetadataV13>",calls:"Option<Vec<FunctionMetadataV13>>",events:"Option<Vec<EventMetadataV13>>",constants:"Vec<ModuleConstantMetadataV13>",errors:"Vec<ErrorMetadataV13>",index:"u8"},StorageEntryModifierV13:"StorageEntryModifierV12",StorageEntryMetadataV13:{name:"Text",modifier:"StorageEntryModifierV13",type:"StorageEntryTypeV13",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV13:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV13",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV13",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV13"},NMap:{keyVec:"Vec<Type>",hashers:"Vec<StorageHasherV13>",value:"Type"}}},StorageMetadataV13:{prefix:"Text",items:"Vec<StorageEntryMetadataV13>"},StorageHasherV13:"StorageHasherV12"},Si1Variant={name:"Text",fields:"Vec<Si1Field>",index:"u8",docs:"Vec<Text>"},v1$1={Si1Field:{name:"Option<Text>",type:"Si1LookupTypeId",typeName:"Option<Text>",docs:"Vec<Text>"},Si1LookupTypeId:"Compact<u32>",Si1Path:"Si0Path",Si1Type:{path:"Si1Path",params:"Vec<Si1TypeParameter>",def:"Si1TypeDef",docs:"Vec<Text>"},Si1TypeDef:{_enum:{Composite:"Si1TypeDefComposite",Variant:"Si1TypeDefVariant",Sequence:"Si1TypeDefSequence",Array:"Si1TypeDefArray",Tuple:"Si1TypeDefTuple",Primitive:"Si1TypeDefPrimitive",Compact:"Si1TypeDefCompact",BitSequence:"Si1TypeDefBitSequence",HistoricMetaCompat:"Type"}},Si1TypeDefArray:{len:"u32",type:"Si1LookupTypeId"},Si1TypeDefBitSequence:{bitStoreType:"Si1LookupTypeId",bitOrderType:"Si1LookupTypeId"},Si1TypeDefCompact:{type:"Si1LookupTypeId"},Si1TypeDefComposite:{fields:"Vec<Si1Field>"},Si1TypeDefPrimitive:"Si0TypeDefPrimitive",Si1TypeDefSequence:{type:"Si1LookupTypeId"},Si1TypeDefTuple:"Vec<Si1LookupTypeId>",Si1TypeParameter:{name:"Text",type:"Option<Si1LookupTypeId>"},Si1TypeDefVariant:{variants:"Vec<Si1Variant>"},Si1Variant},v14={PortableTypeV14:{id:"Si1LookupTypeId",type:"Si1Type"},ErrorMetadataV14:objectSpread({},Si1Variant,{args:"Vec<Type>"}),EventMetadataV14:objectSpread({},Si1Variant,{args:"Vec<Type>"}),FunctionArgumentMetadataV14:{name:"Text",type:"Type",typeName:"Option<Type>"},FunctionMetadataV14:objectSpread({},Si1Variant,{args:"Vec<FunctionArgumentMetadataV14>"}),ExtrinsicMetadataV14:{type:"SiLookupTypeId",version:"u8",signedExtensions:"Vec<SignedExtensionMetadataV14>"},MetadataV14:{lookup:"PortableRegistry",pallets:"Vec<PalletMetadataV14>",extrinsic:"ExtrinsicMetadataV14",type:"SiLookupTypeId"},PalletCallMetadataV14:{type:"SiLookupTypeId"},PalletConstantMetadataV14:{name:"Text",type:"SiLookupTypeId",value:"Bytes",docs:"Vec<Text>"},PalletErrorMetadataV14:{type:"SiLookupTypeId"},PalletEventMetadataV14:{type:"SiLookupTypeId"},PalletMetadataV14:{name:"Text",storage:"Option<PalletStorageMetadataV14>",calls:"Option<PalletCallMetadataV14>",events:"Option<PalletEventMetadataV14>",constants:"Vec<PalletConstantMetadataV14>",errors:"Option<PalletErrorMetadataV14>",index:"u8"},PalletStorageMetadataV14:{prefix:"Text",items:"Vec<StorageEntryMetadataV14>"},SignedExtensionMetadataV14:{identifier:"Text",type:"SiLookupTypeId",additionalSigned:"SiLookupTypeId"},StorageEntryMetadataV14:{name:"Text",modifier:"StorageEntryModifierV14",type:"StorageEntryTypeV14",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryModifierV14:"StorageEntryModifierV13",StorageEntryTypeV14:{_enum:{Plain:"SiLookupTypeId",Map:{hashers:"Vec<StorageHasherV14>",key:"SiLookupTypeId",value:"SiLookupTypeId"}}},StorageHasherV14:"StorageHasherV13"};var definitions$W={rpc:{},types:objectSpread({},v9,v10,v11,v12,v13,v14,{ErrorMetadataLatest:"ErrorMetadataV14",EventMetadataLatest:"EventMetadataV14",ExtrinsicMetadataLatest:"ExtrinsicMetadataV14",FunctionArgumentMetadataLatest:"FunctionArgumentMetadataV14",FunctionMetadataLatest:"FunctionMetadataV14",MetadataLatest:"MetadataV14",PalletCallMetadataLatest:"PalletCallMetadataV14",PalletConstantMetadataLatest:"PalletConstantMetadataV14",PalletErrorMetadataLatest:"PalletErrorMetadataV14",PalletEventMetadataLatest:"PalletEventMetadataV14",PalletMetadataLatest:"PalletMetadataV14",PalletStorageMetadataLatest:"PalletStorageMetadataV14",PortableType:"PortableTypeV14",SignedExtensionMetadataLatest:"SignedExtensionMetadataV14",StorageEntryMetadataLatest:"StorageEntryMetadataV14",StorageEntryModifierLatest:"StorageEntryModifierV14",StorageEntryTypeLatest:"StorageEntryTypeV14",StorageHasher:"StorageHasherV14",MetadataAll:{_enum:{V0:"DoNotConstruct<MetadataV0>",V1:"DoNotConstruct<MetadataV1>",V2:"DoNotConstruct<MetadataV2>",V3:"DoNotConstruct<MetadataV3>",V4:"DoNotConstruct<MetadataV4>",V5:"DoNotConstruct<MetadataV5>",V6:"DoNotConstruct<MetadataV6>",V7:"DoNotConstruct<MetadataV7>",V8:"DoNotConstruct<MetadataV8>",V9:"MetadataV9",V10:"MetadataV10",V11:"MetadataV11",V12:"MetadataV12",V13:"MetadataV13",V14:"MetadataV14"}}})};const numberTypes={Fixed64:"Int<64, Fixed64>",FixedI64:"Int<64, FixedI64>",FixedU64:"UInt<64, FixedU64>",Fixed128:"Int<128, Fixed128>",FixedI128:"Int<128, FixedI128>",FixedU128:"UInt<128, FixedU128>",I32F32:"Int<64, I32F32>",U32F32:"UInt<64, U32F32>",PerU16:"UInt<16, PerU16>",Perbill:"UInt<32, Perbill>",Percent:"UInt<8, Percent>",Permill:"UInt<32, Permill>",Perquintill:"UInt<64, Perquintill>"},knownOrigins={Council:"CollectiveOrigin",System:"SystemOrigin",TechnicalCommittee:"CollectiveOrigin",Xcm:"XcmOrigin",XcmPallet:"XcmOrigin",Authority:"AuthorityOrigin",GeneralCouncil:"CollectiveOrigin"};var definitions$V={rpc:{},types:objectSpread({},numberTypes,{AccountId:"AccountId32",AccountId20:"GenericEthereumAccountId",AccountId32:"GenericAccountId",AccountIdOf:"AccountId",AccountIndex:"GenericAccountIndex",Address:"MultiAddress",AssetId:"u32",Balance:"UInt<128, Balance>",BalanceOf:"Balance",Block:"GenericBlock",BlockNumber:"u32",BlockNumberFor:"BlockNumber",BlockNumberOf:"BlockNumber",Call:"GenericCall",CallHash:"Hash",CallHashOf:"CallHash",ChangesTrieConfiguration:{digestInterval:"u32",digestLevels:"u32"},ChangesTrieSignal:{_enum:{NewConfiguration:"Option<ChangesTrieConfiguration>"}},ConsensusEngineId:"GenericConsensusEngineId",CodecHash:"Hash",CrateVersion:{major:"u16",minor:"u8",patch:"u8"},Digest:{logs:"Vec<DigestItem>"},DigestItem:{_enum:{Other:"Bytes",AuthoritiesChange:"Vec<AuthorityId>",ChangesTrieRoot:"Hash",SealV0:"SealV0",Consensus:"Consensus",Seal:"Seal",PreRuntime:"PreRuntime",ChangesTrieSignal:"ChangesTrieSignal",RuntimeEnvironmentUpdated:"Null"}},ExtrinsicsWeight:{normal:"Weight",operational:"Weight"},H32:"[u8; 4; H32]",H64:"[u8; 8; H64]",H128:"[u8; 16; H128]",H160:"[u8; 20; H160]",H256:"[u8; 32; H256]",H512:"[u8; 64; H512]",H1024:"[u8; 128; H1024]",H2048:"[u8; 256; H2048]",Hash:"H256",Header:{parentHash:"Hash",number:"Compact<BlockNumber>",stateRoot:"Hash",extrinsicsRoot:"Hash",digest:"Digest"},HeaderPartial:{parentHash:"Hash",number:"BlockNumber"},IndicesLookupSource:"GenericLookupSource",Index:"u32",Justification:"(ConsensusEngineId, EncodedJustification)",EncodedJustification:"Bytes",Justifications:"Vec<Justification>",KeyValue:"(StorageKey, StorageData)",KeyTypeId:"u32",LockIdentifier:"[u8; 8]",LookupSource:"MultiAddress",LookupTarget:"AccountId",ModuleId:"LockIdentifier",MultiAddress:"GenericMultiAddress",MultiSigner:{_enum:{Ed25519:"[u8; 32]",Sr25519:"[u8; 32]",Ecdsa:"[u8; 33]"}},Moment:"UInt<64, Moment>",OpaqueCall:"Bytes",Origin:"DoNotConstruct<Origin>",OriginCaller:{_enum:{System:"SystemOrigin"}},PalletId:"LockIdentifier",PalletsOrigin:"OriginCaller",PalletVersion:{major:"u16",minor:"u8",patch:"u8"},Pays:{_enum:["Yes","No"]},Phantom:"Null",PhantomData:"Null",Releases:{_enum:["V1","V2","V3","V4","V5","V6","V7","V8","V9","V10"]},RuntimeDbWeight:{read:"Weight",write:"Weight"},SignedBlock:"SignedBlockWithJustifications",SignedBlockWithJustification:{block:"Block",justification:"Option<EncodedJustification>"},SignedBlockWithJustifications:{block:"Block",justifications:"Option<Justifications>"},Slot:"u64",StorageData:"Bytes",StorageProof:{trieNodes:"Vec<Bytes>"},TransactionPriority:"u64",TransactionInfo:{_alias:{dataSize:"size"},chunkRoot:"H256",contentHash:"H256",dataSize:"u32",blockChunks:"u32"},TransactionStorageProof:{chunk:"Vec<u8>",proof:"Vec<Vec<u8>>"},ValidatorId:"AccountId",ValidatorIdOf:"ValidatorId",Weight:"u64",WeightMultiplier:"Fixed64",PreRuntime:"(ConsensusEngineId, Bytes)",SealV0:"(u64, Signature)",Seal:"(ConsensusEngineId, Bytes)",Consensus:"(ConsensusEngineId, Bytes)"})};const v0$1={Si0Field:{name:"Option<Text>",type:"Si0LookupTypeId",typeName:"Option<Text>",docs:"Vec<Text>"},Si0LookupTypeId:"u32",Si0Path:"Vec<Text>",Si0Type:{path:"Si0Path",params:"Vec<Si0LookupTypeId>",def:"Si0TypeDef"},Si0TypeDef:{_enum:{Composite:"Si0TypeDefComposite",Variant:"Si0TypeDefVariant",Sequence:"Si0TypeDefSequence",Array:"Si0TypeDefArray",Tuple:"Si0TypeDefTuple",Primitive:"Si0TypeDefPrimitive",Compact:"Si0TypeDefCompact",Phantom:"Si0TypeDefPhantom",BitSequence:"Si0TypeDefBitSequence"}},Si0TypeDefArray:{len:"u32",type:"Si0LookupTypeId"},Si0TypeDefBitSequence:{bitStoreType:"Si0LookupTypeId",bitOrderType:"Si0LookupTypeId"},Si0TypeDefCompact:{type:"Si0LookupTypeId"},Si0TypeDefComposite:{fields:"Vec<Si0Field>"},Si0TypeDefPhantom:"Null",Si0TypeDefVariant:{variants:"Vec<Si0Variant>"},Si0TypeDefPrimitive:{_enum:["Bool","Char","Str","U8","U16","U32","U64","U128","U256","I8","I16","I32","I64","I128","I256"]},Si0TypeDefSequence:{type:"Si0LookupTypeId"},Si0TypeDefTuple:"Vec<Si0LookupTypeId>",Si0TypeParameter:{name:"Text",type:"Option<Si0LookupTypeId>"},Si0Variant:{name:"Text",fields:"Vec<Si0Field>",index:"Option<u8>",discriminant:"Option<u64>",docs:"Vec<Text>"}};var definitions$U={rpc:{},types:objectSpread({},v0$1,v1$1,{SiField:"Si1Field",SiLookupTypeId:"Si1LookupTypeId",SiPath:"Si1Path",SiType:"Si1Type",SiTypeDef:"Si1TypeDef",SiTypeDefArray:"Si1TypeDefArray",SiTypeDefBitSequence:"Si1TypeDefBitSequence",SiTypeDefCompact:"Si1TypeDefCompact",SiTypeDefComposite:"Si1TypeDefComposite",SiTypeDefPrimitive:"Si1TypeDefPrimitive",SiTypeDefSequence:"Si1TypeDefSequence",SiTypeDefTuple:"Si1TypeDefTuple",SiTypeParameter:"Si1TypeParameter",SiTypeDefVariant:"Si1TypeDefVariant",SiVariant:"Si1Variant"})},definitions$T={rpc:{},types:{AssetApprovalKey:{owner:"AccountId",delegate:"AccountId"},AssetApproval:{amount:"TAssetBalance",deposit:"TAssetDepositBalance"},AssetBalance:{balance:"TAssetBalance",isFrozen:"bool",isSufficient:"bool"},AssetDestroyWitness:{accounts:"Compact<u32>",sufficients:"Compact<u32>",approvals:"Compact<u32>"},AssetDetails:{owner:"AccountId",issuer:"AccountId",admin:"AccountId",freezer:"AccountId",supply:"TAssetBalance",deposit:"TAssetDepositBalance",minBalance:"TAssetBalance",isSufficient:"bool",accounts:"u32",sufficients:"u32",approvals:"u32",isFrozen:"bool"},AssetMetadata:{deposit:"TAssetDepositBalance",name:"Vec<u8>",symbol:"Vec<u8>",decimals:"u8",isFrozen:"bool"},TAssetBalance:"u64",TAssetDepositBalance:"BalanceOf"}},definitions$S={rpc:{},types:{UncleEntryItem:{_enum:{InclusionHeight:"BlockNumber",Uncle:"(Hash, Option<AccountId>)"}}}},definitions$R={rpc:{},types:{RawAuraPreDigest:{slotNumber:"u64"}}},definitions$Q={rpc:{epochAuthorship:{description:"Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore",params:[],type:"HashMap<AuthorityId, EpochAuthorship>"}},types:{AllowedSlots:{_enum:["PrimarySlots","PrimaryAndSecondaryPlainSlots","PrimaryAndSecondaryVRFSlots"]},BabeAuthorityWeight:"u64",BabeEpochConfiguration:{c:"(u64, u64)",allowedSlots:"AllowedSlots"},BabeBlockWeight:"u32",BabeEquivocationProof:{offender:"AuthorityId",slotNumber:"SlotNumber",firstHeader:"Header",secondHeader:"Header"},BabeWeight:"u64",MaybeRandomness:"Option<Randomness>",MaybeVrf:"Option<VrfData>",EpochAuthorship:{primary:"Vec<u64>",secondary:"Vec<u64>",secondary_vrf:"Vec<u64>"},NextConfigDescriptor:{_enum:{V0:"Null",V1:"NextConfigDescriptorV1"}},NextConfigDescriptorV1:{c:"(u64, u64)",allowedSlots:"AllowedSlots"},Randomness:"Hash",RawBabePreDigest:{_enum:{Phantom:"Null",Primary:"RawBabePreDigestPrimary",SecondaryPlain:"RawBabePreDigestSecondaryPlain",SecondaryVRF:"RawBabePreDigestSecondaryVRF"}},RawBabePreDigestPrimary:{authorityIndex:"u32",slotNumber:"SlotNumber",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestSecondaryPlain:{authorityIndex:"u32",slotNumber:"SlotNumber"},RawBabePreDigestSecondaryVRF:{authorityIndex:"u32",slotNumber:"SlotNumber",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestTo159:{_enum:{Primary:"RawBabePreDigestPrimaryTo159",Secondary:"RawBabePreDigestSecondaryTo159"}},RawBabePreDigestPrimaryTo159:{authorityIndex:"u32",slotNumber:"SlotNumber",weight:"BabeBlockWeight",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestSecondaryTo159:{authorityIndex:"u32",slotNumber:"SlotNumber",weight:"BabeBlockWeight"},RawBabePreDigestCompat:{_enum:{Zero:"u32",One:"u32",Two:"u32",Three:"u32"}},SlotNumber:"u64",VrfData:"[u8; 32]",VrfOutput:"[u8; 32]",VrfProof:"[u8; 64]"}},definitions$P={rpc:{},types:{AccountData:{free:"Balance",reserved:"Balance",miscFrozen:"Balance",feeFrozen:"Balance"},BalanceLockTo212:{id:"LockIdentifier",amount:"Balance",until:"BlockNumber",reasons:"WithdrawReasons"},BalanceLock:{id:"LockIdentifier",amount:"Balance",reasons:"Reasons"},BalanceStatus:{_enum:["Free","Reserved"]},Reasons:{_enum:["Fee","Misc","All"]},ReserveData:{id:"ReserveIdentifier",amount:"Balance"},ReserveIdentifier:"[u8; 8]",VestingSchedule:{offset:"Balance",perBlock:"Balance",startingBlock:"BlockNumber"},WithdrawReasons:{_set:{TransactionPayment:1,Transfer:2,Reserve:4,Fee:8,Tip:16}}}},definitions$O={rpc:{subscribeJustifications:{description:"Returns the block most recently finalized by BEEFY, alongside side its justification.",params:[],pubsub:["justifications","subscribeJustifications","unsubscribeJustifications"],type:"BeefySignedCommitment"},getFinalizedHead:{description:"Returns hash of the latest BEEFY finalized block as seen by this client.",params:[],type:"H256"}},types:{BeefyCommitment:{payload:"BeefyPayload",blockNumber:"BlockNumber",validatorSetId:"ValidatorSetId"},BeefyId:"[u8; 33]",BeefySignedCommitment:{commitment:"BeefyCommitment",signatures:"Vec<Option<EcdsaSignature>>"},BeefyNextAuthoritySet:{id:"u64",len:"u32",root:"H256"},BeefyPayload:"MmrRootHash",MmrRootHash:"H256",ValidatorSetId:"u64"}},definitions$N={rpc:{},types:{CollectiveOrigin:{_enum:{Members:"(MemberCount, MemberCount)",Member:"AccountId"}},MemberCount:"u32",ProposalIndex:"u32",VotesTo230:{index:"ProposalIndex",threshold:"MemberCount",ayes:"Vec<AccountId>",nays:"Vec<AccountId>"},Votes:{index:"ProposalIndex",threshold:"MemberCount",ayes:"Vec<AccountId>",nays:"Vec<AccountId>",end:"BlockNumber"}}},definitions$M={rpc:{},types:{AuthorityId:"AccountId",RawVRFOutput:"[u8; 32]"}},rpc$1={call:{description:"Executes a call to a contract",params:[{name:"callRequest",type:"ContractCallRequest"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"ContractExecResult"},instantiate:{description:"Instantiate a new contract",params:[{name:"request",type:"InstantiateRequest"},{name:"at",type:"BlockHash",isHstoric:!0,isOptional:!0}],type:"ContractInstantiateResult"},uploadCode:{endpoint:"contracts_upload_code",description:"Upload new code without instantiating a contract from it",params:[{name:"uploadRequest",type:"CodeUploadRequest"},{name:"at",type:"BlockHash",isHstoric:!0,isOptional:!0}],type:"CodeUploadResult"},getStorage:{description:"Returns the value under a specified storage key in a contract",params:[{name:"address",type:"AccountId"},{name:"key",type:"H256"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Option<Bytes>"},rentProjection:{description:"Returns the projected time a given contract will be able to sustain paying its rent",params:[{name:"address",type:"AccountId"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Option<BlockNumber>"}},definitions$L={rpc:rpc$1,types:{AliveContractInfo:{trieId:"TrieId",storageSize:"u32",pairCount:"u32",codeHash:"CodeHash",rentAllowance:"Balance",rentPaid:"Balance",deductBlock:"BlockNumber",lastWrite:"Option<BlockNumber>",_reserved:"Option<Null>"},CodeHash:"Hash",CodeSource:{_enum:{Upload:"Bytes",Existing:"Hash"}},CodeUploadRequest:{origin:"AccountId",code:"Bytes",storageDepositLimit:"Option<Balance>"},CodeUploadResult:{_enum:{Ok:"CodeUploadResultValue",Err:"Null"}},CodeUploadResultValue:{codeHash:"CodeHash",deposit:"Balance"},ContractCallRequest:{origin:"AccountId",dest:"AccountId",value:"Balance",gasLimit:"u64",storageDepositLimit:"Option<Balance>",inputData:"Bytes"},ContractExecResultSuccessTo255:{status:"u8",data:"Raw"},ContractExecResultTo255:{_enum:{Success:"ContractExecResultSuccessTo255",Error:"Null"}},ContractExecResultSuccessTo260:{flags:"ContractReturnFlags",data:"Bytes",gasConsumed:"u64"},ContractExecResultTo260:{_enum:{Success:"ContractExecResultSuccessTo260",Error:"Null"}},ContractExecResultErrModule:{index:"u8",error:"u8",message:"Option<Text>"},ContractExecResultErr:{_enum:{Other:"Text",CannotLookup:"Null",BadOrigin:"Null",Module:"ContractExecResultErrModule"}},ContractExecResultOk:{flags:"ContractReturnFlags",data:"Bytes"},ContractExecResultResult:{_enum:{Ok:"ContractExecResultOk",Err:"ContractExecResultErr"}},ContractExecResultTo267:{gasConsumed:"u64",debugMessage:"Text",result:"ContractExecResultResult"},ContractExecResult:{gasConsumed:"u64",gasRequired:"u64",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"ContractExecResultResult"},ContractInfo:{_enum:{Alive:"AliveContractInfo",Tombstone:"TombstoneContractInfo"}},ContractCallFlags:{_set:{_bitLength:32,ForwardInput:1,CloneInput:2,TailCall:4,AllowReentry:8}},ContractReturnFlags:{_set:{_bitLength:32,Revert:1}},ContractStorageKey:"[u8; 32]",DeletedContract:{pairCount:"u32",trieId:"TrieId"},ExecReturnValue:{flags:"ContractReturnFlags",data:"Bytes"},Gas:"u64",HostFnWeightsTo264:{caller:"Weight",address:"Weight",gasLeft:"Weight",balance:"Weight",valueTransferred:"Weight",minimumBalance:"Weight",tombstoneDeposit:"Weight",rentAllowance:"Weight",blockNumber:"Weight",now:"Weight",weightToFee:"Weight",gas:"Weight",input:"Weight",inputPerByte:"Weight",return:"Weight",returnPerByte:"Weight",terminate:"Weight",restoreTo:"Weight",restoreToPerDelta:"Weight",random:"Weight",depositEvent:"Weight",depositEventPerTopic:"Weight",depositEventPerByte:"Weight",setRentAllowance:"Weight",setStorage:"Weight",setStoragePerByte:"Weight",clearStorage:"Weight",getStorage:"Weight",getStoragePerByte:"Weight",transfer:"Weight",call:"Weight",callTransferSurcharge:"Weight",callPerInputByte:"Weight",callPerOutputByte:"Weight",instantiate:"Weight",instantiatePerInputByte:"Weight",instantiatePerOutputByte:"Weight",hashSha2256:"Weight",hashSha2256PerByte:"Weight",hashKeccak256:"Weight",hashKeccak256PerByte:"Weight",hashBlake2256:"Weight",hashBlake2256PerByte:"Weight",hashBlake2128:"Weight",hashBlake2128PerByte:"Weight"},HostFnWeights:{caller:"Weight",address:"Weight",gasLeft:"Weight",balance:"Weight",valueTransferred:"Weight",minimumBalance:"Weight",tombstoneDeposit:"Weight",rentAllowance:"Weight",blockNumber:"Weight",now:"Weight",weightToFee:"Weight",gas:"Weight",input:"Weight",inputPerByte:"Weight",return:"Weight",returnPerByte:"Weight",terminate:"Weight",terminatePerCodeByte:"Weight",restoreTo:"Weight",restoreToPerCallerCodeByte:"Weight",restoreToPerTombstoneCodeByte:"Weight",restoreToPerDelta:"Weight",random:"Weight",depositEvent:"Weight",depositEventPerTopic:"Weight",depositEventPerByte:"Weight",setRentAllowance:"Weight",setStorage:"Weight",setStoragePerByte:"Weight",clearStorage:"Weight",getStorage:"Weight",getStoragePerByte:"Weight",transfer:"Weight",call:"Weight",callPerCodeByte:"Weight",callTransferSurcharge:"Weight",callPerInputByte:"Weight",callPerOutputByte:"Weight",instantiate:"Weight",instantiatePerCodeByte:"Weight",instantiatePerInputByte:"Weight",instantiatePerOutputByte:"Weight",instantiatePerSaltByte:"Weight",hashSha2256:"Weight",hashSha2256PerByte:"Weight",hashKeccak256:"Weight",hashKeccak256PerByte:"Weight",hashBlake2256:"Weight",hashBlake2256PerByte:"Weight",hashBlake2128:"Weight",hashBlake2128PerByte:"Weight",rentParams:"Weight"},InstantiateRequestV1:{origin:"AccountId",value:"Balance",gasLimit:"Gas",code:"Bytes",data:"Bytes",salt:"Bytes"},InstantiateRequestV2:{_fallback:"InstantiateRequestV1",origin:"AccountId",value:"Balance",gasLimit:"Gas",storageDepositLimit:"Option<Balance>",code:"Bytes",data:"Bytes",salt:"Bytes"},InstantiateRequest:{_fallback:"InstantiateRequestV2",origin:"AccountId",value:"Balance",gasLimit:"Gas",storageDepositLimit:"Option<Balance>",code:"CodeSource",data:"Bytes",salt:"Bytes"},ContractInstantiateResultTo267:{_enum:{Ok:"InstantiateReturnValueTo267",Err:"Null"}},ContractInstantiateResultTo299:{_enum:{Ok:"InstantiateReturnValue",Err:"Null"},_fallback:"ContractInstantiateResultTo267"},ContractInstantiateResult:{_fallback:"ContractInstantiateResultTo299",gasConsumed:"u64",gasRequired:"u64",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"InstantiateReturnValue"},InstantiateReturnValueTo267:{result:"ExecReturnValue",accountId:"AccountId",rentProjection:"Option<RentProjection>"},InstantiateReturnValueOk:{result:"ExecReturnValue",accountId:"AccountId"},InstantiateReturnValue:{_enum:{Ok:"InstantiateReturnValueOk",Err:"DispatchError"}},InstructionWeights:{i64const:"u32",i64load:"u32",i64store:"u32",select:"u32",rIf:"u32",br:"u32",brIf:"u32",brIable:"u32",brIablePerEntry:"u32",call:"u32",callIndirect:"u32",callIndirectPerParam:"u32",localGet:"u32",localSet:"u32",local_tee:"u32",globalGet:"u32",globalSet:"u32",memoryCurrent:"u32",memoryGrow:"u32",i64clz:"u32",i64ctz:"u32",i64popcnt:"u32",i64eqz:"u32",i64extendsi32:"u32",i64extendui32:"u32",i32wrapi64:"u32",i64eq:"u32",i64ne:"u32",i64lts:"u32",i64ltu:"u32",i64gts:"u32",i64gtu:"u32",i64les:"u32",i64leu:"u32",i64ges:"u32",i64geu:"u32",i64add:"u32",i64sub:"u32",i64mul:"u32",i64divs:"u32",i64divu:"u32",i64rems:"u32",i64remu:"u32",i64and:"u32",i64or:"u32",i64xor:"u32",i64shl:"u32",i64shrs:"u32",i64shru:"u32",i64rotl:"u32",i64rotr:"u32"},LimitsTo264:{eventTopics:"u32",stackHeight:"u32",globals:"u32",parameters:"u32",memoryPages:"u32",tableSize:"u32",brTableSize:"u32",subjectLen:"u32",codeSize:"u32"},Limits:{eventTopics:"u32",stackHeight:"u32",globals:"u32",parameters:"u32",memoryPages:"u32",tableSize:"u32",brTableSize:"u32",subjectLen:"u32"},PrefabWasmModule:{scheduleVersion:"Compact<u32>",initial:"Compact<u32>",maximum:"Compact<u32>",refcount:"Compact<u64>",_reserved:"Option<Null>",code:"Bytes",originalCodeLen:"u32"},RentProjection:{_enum:{EvictionAt:"BlockNumber",NoEviction:"Null"}},ScheduleTo212:{version:"u32",putCodePerByteCost:"Gas",growMemCost:"Gas",regularOpCost:"Gas",returnDataPerByteCost:"Gas",eventDataPerByteCost:"Gas",eventPerTopicCost:"Gas",eventBaseCost:"Gas",sandboxDataReadCost:"Gas",sandboxDataWriteCost:"Gas",maxEventTopics:"u32",maxStackHeight:"u32",maxMemoryPages:"u32",enablePrintln:"bool",maxSubjectLen:"u32"},ScheduleTo258:{version:"u32",putCodePerByteCost:"Gas",growMemCost:"Gas",regularOpCost:"Gas",returnDataPerByteCost:"Gas",eventDataPerByteCost:"Gas",eventPerTopicCost:"Gas",eventBaseCost:"Gas",sandboxDataReadCost:"Gas",sandboxDataWriteCost:"Gas",transferCost:"Gas",maxEventTopics:"u32",maxStackHeight:"u32",maxMemoryPages:"u32",enablePrintln:"bool",maxSubjectLen:"u32"},ScheduleTo264:{version:"u32",enablePrintln:"bool",limits:"LimitsTo264",instructionWeights:"InstructionWeights",hostFnWeights:"HostFnWeightsTo264"},Schedule:{version:"u32",enablePrintln:"bool",limits:"Limits",instructionWeights:"InstructionWeights",hostFnWeights:"HostFnWeights"},SeedOf:"Hash",StorageDeposit:{_enum:{Refund:"Balance",Charge:"Balance"}},TombstoneContractInfo:"Hash",TrieId:"Bytes"}};const AllConvictions=["None","Locked1x","Locked2x","Locked3x","Locked4x","Locked5x","Locked6x"];var definitions$K={rpc:{},types:{AccountVote:{_enum:{Standard:"AccountVoteStandard",Split:"AccountVoteSplit"}},AccountVoteSplit:{aye:"Balance",nay:"Balance"},AccountVoteStandard:{vote:"Vote",balance:"Balance"},Conviction:{_enum:AllConvictions},Delegations:{votes:"Balance",capital:"Balance"},PreimageStatus:{_enum:{Missing:"BlockNumber",Available:"PreimageStatusAvailable"}},PreimageStatusAvailable:{data:"Bytes",provider:"AccountId",deposit:"Balance",since:"BlockNumber",expiry:"Option<BlockNumber>"},PriorLock:"(BlockNumber, Balance)",PropIndex:"u32",Proposal:"Call",ProxyState:{_enum:{Open:"AccountId",Active:"AccountId"}},ReferendumIndex:"u32",ReferendumInfoTo239:{end:"BlockNumber",proposalHash:"Hash",threshold:"VoteThreshold",delay:"BlockNumber"},ReferendumInfo:{_enum:{Ongoing:"ReferendumStatus",Finished:"ReferendumInfoFinished"}},ReferendumInfoFinished:{approved:"bool",end:"BlockNumber"},ReferendumStatus:{end:"BlockNumber",proposalHash:"Hash",threshold:"VoteThreshold",delay:"BlockNumber",tally:"Tally"},Tally:{ayes:"Balance",nays:"Balance",turnout:"Balance"},Voting:{_enum:{Direct:"VotingDirect",Delegating:"VotingDelegating"}},VotingDirect:{votes:"Vec<VotingDirectVote>",delegations:"Delegations",prior:"PriorLock"},VotingDirectVote:"(ReferendumIndex, AccountVote)",VotingDelegating:{balance:"Balance",target:"AccountId",conviction:"Conviction",delegations:"Delegations",prior:"PriorLock"}}},definitions$J={rpc:{getBlockStats:{description:"Reexecute the specified `block_hash` and gather statistics while doing so",params:[{name:"at",type:"Hash",isHistoric:!0}],type:"Option<BlockStats>"}},types:{BlockStats:{witnessLen:"u64",witnessCompactLen:"u64",blockLen:"u64",blockNumExtrinsics:"u64"}}},definitions$I={rpc:{},types:{ApprovalFlag:"u32",DefunctVoter:{who:"AccountId",voteCount:"Compact<u32>",candidateCount:"Compact<u32>"},Renouncing:{_enum:{Member:"Null",RunnerUp:"Null",Candidate:"Compact<u32>"}},SetIndex:"u32",Vote:"GenericVote",VoteIndex:"u32",VoterInfo:{lastActive:"VoteIndex",lastWin:"VoteIndex",pot:"Balance",stake:"Balance"},VoteThreshold:{_enum:["Super Majority Approve","Super Majority Against","Simple Majority"]}}},definitions$H={rpc:{createBlock:{description:"Instructs the manual-seal authorship task to create a new block",params:[{name:"createEmpty",type:"bool"},{name:"finalize",type:"bool"},{name:"parentHash",type:"BlockHash",isOptional:!0}],type:"CreatedBlock"},finalizeBlock:{description:"Instructs the manual-seal authorship task to finalize a block",params:[{name:"hash",type:"BlockHash"},{name:"justification",type:"Justification",isOptional:!0}],type:"bool"}},types:{CreatedBlock:{hash:"BlockHash",aux:"ImportedAux"},ImportedAux:{headerOnly:"bool",clearJustificationRequests:"bool",needsJustification:"bool",badJustification:"bool",needsFinalityProof:"bool",isNewBest:"bool"}}},definitions$G={rpc:{},types:{EvmAccount:{nonce:"u256",balance:"u256"},EvmLog:{address:"H160",topics:"Vec<H256>",data:"Bytes"},EvmVicinity:{gasPrice:"u256",origin:"H160"},ExitError:{_enum:{StackUnderflow:"Null",StackOverflow:"Null",InvalidJump:"Null",InvalidRange:"Null",DesignatedInvalid:"Null",CallTooDeep:"Null",CreateCollision:"Null",CreateContractLimit:"Null",OutOfOffset:"Null",OutOfGas:"Null",OutOfFund:"Null",PCUnderflow:"Null",CreateEmpty:"Null",Other:"Text"}},ExitFatal:{_enum:{NotSupported:"Null",UnhandledInterrupt:"Null",CallErrorAsFatal:"ExitError",Other:"Text"}},ExitReason:{_enum:{Succeed:"ExitSucceed",Error:"ExitError",Revert:"ExitRevert",Fatal:"ExitFatal"}},ExitRevert:{_enum:["Reverted"]},ExitSucceed:{_enum:["Stopped","Returned","Suicided"]}}},definitions$F={rpc:{},types:{Extrinsic:"GenericExtrinsic",ExtrinsicEra:"GenericExtrinsicEra",ExtrinsicPayload:"GenericExtrinsicPayload",ExtrinsicSignature:"MultiSignature",ExtrinsicV4:"GenericExtrinsicV4",ExtrinsicPayloadV4:"GenericExtrinsicPayloadV4",ExtrinsicSignatureV4:"GenericExtrinsicSignatureV4",ExtrinsicUnknown:"GenericExtrinsicUnknown",ExtrinsicPayloadUnknown:"GenericExtrinsicPayloadUnknown",Era:"ExtrinsicEra",ImmortalEra:"GenericImmortalEra",MortalEra:"GenericMortalEra",AnySignature:"H512",MultiSignature:{_enum:{Ed25519:"Ed25519Signature",Sr25519:"Sr25519Signature",Ecdsa:"EcdsaSignature"}},Signature:"H512",SignerPayload:"GenericSignerPayload",EcdsaSignature:"[u8; 65]",Ed25519Signature:"H512",Sr25519Signature:"H512"}},definitions$E={rpc:{},types:{AssetOptions:{initalIssuance:"Compact<Balance>",permissions:"PermissionLatest"},Owner:{_enum:{None:"Null",Address:"AccountId"}},PermissionsV1:{update:"Owner",mint:"Owner",burn:"Owner"},PermissionVersions:{_enum:{V1:"PermissionsV1"}},PermissionLatest:"PermissionsV1"}},definitions$D={rpc:{},types:{ActiveGilt:{proportion:"Perquintill",amount:"Balance",who:"AccountId",expiry:"BlockNumber"},ActiveGiltsTotal:{frozen:"Balance",proportion:"Perquintill",index:"ActiveIndex",target:"Perquintill"},ActiveIndex:"u32",GiltBid:{amount:"Balance",who:"AccountId"}}},definitions$C={rpc:{proveFinality:{description:"Prove finality for the given block number, returning the Justification for the last block in the set.",params:[{name:"blockNumber",type:"BlockNumber"}],type:"Option<EncodedFinalityProofs>"},roundState:{description:"Returns the state of the current best round state as well as the ongoing background rounds",params:[],type:"ReportedRoundStates"},subscribeJustifications:{description:"Subscribes to grandpa justifications",params:[],pubsub:["justifications","subscribeJustifications","unsubscribeJustifications"],type:"JustificationNotification"}},types:{AuthorityIndex:"u64",AuthorityList:"Vec<NextAuthority>",AuthoritySet:{currentAuthorities:"AuthorityList",setId:"u64",pendingStandardChanges:"ForkTreePendingChange",pendingForcedChanges:"Vec<PendingChange>",authoritySetChanges:"AuthoritySetChanges"},ForkTreePendingChange:{roots:"Vec<ForkTreePendingChangeNode>",bestFinalizedNumber:"Option<BlockNumber>"},ForkTreePendingChangeNode:{hash:"BlockHash",number:"BlockNumber",data:"PendingChange",children:"Vec<ForkTreePendingChangeNode>"},AuthoritySetChange:"(U64, BlockNumber)",AuthoritySetChanges:"Vec<AuthoritySetChange>",AuthorityWeight:"u64",DelayKind:{_enum:{Finalized:"Null",Best:"DelayKindBest"}},DelayKindBest:{medianLastFinalized:"BlockNumber"},EncodedFinalityProofs:"Bytes",GrandpaEquivocation:{_enum:{Prevote:"GrandpaEquivocationValue",Precommit:"GrandpaEquivocationValue"}},GrandpaEquivocationProof:{setId:"SetId",equivocation:"GrandpaEquivocation"},GrandpaEquivocationValue:{roundNumber:"u64",identity:"AuthorityId",first:"(GrandpaPrevote, AuthoritySignature)",second:"(GrandpaPrevote, AuthoritySignature)"},GrandpaPrevote:{targetHash:"Hash",targetNumber:"BlockNumber"},GrandpaCommit:{targetHash:"BlockHash",targetNumber:"BlockNumber",precommits:"Vec<GrandpaSignedPrecommit>"},GrandpaPrecommit:{targetHash:"BlockHash",targetNumber:"BlockNumber"},GrandpaSignedPrecommit:{precommit:"GrandpaPrecommit",signature:"AuthoritySignature",id:"AuthorityId"},GrandpaJustification:{round:"u64",commit:"GrandpaCommit",votesAncestries:"Vec<Header>"},JustificationNotification:"Bytes",KeyOwnerProof:"MembershipProof",NextAuthority:"(AuthorityId, AuthorityWeight)",PendingChange:{nextAuthorities:"AuthorityList",delay:"BlockNumber",canonHeight:"BlockNumber",canonHash:"BlockHash",delayKind:"DelayKind"},PendingPause:{scheduledAt:"BlockNumber",delay:"BlockNumber"},PendingResume:{scheduledAt:"BlockNumber",delay:"BlockNumber"},Precommits:{currentWeight:"u32",missing:"BTreeSet<AuthorityId>"},Prevotes:{currentWeight:"u32",missing:"BTreeSet<AuthorityId>"},ReportedRoundStates:{setId:"u32",best:"RoundState",background:"Vec<RoundState>"},RoundState:{round:"u32",totalWeight:"u32",thresholdWeight:"u32",prevotes:"Prevotes",precommits:"Precommits"},SetId:"u64",StoredPendingChange:{scheduledAt:"BlockNumber",delay:"BlockNumber",nextAuthorities:"AuthorityList"},StoredState:{_enum:{Live:"Null",PendingPause:"PendingPause",Paused:"Null",PendingResume:"PendingResume"}}}},definitions$B={rpc:{},types:{IdentityFields:{_set:{_bitLength:64,Display:1,Legal:2,Web:4,Riot:8,Email:16,PgpFingerprint:32,Image:64,Twitter:128}},IdentityInfoAdditional:"(Data, Data)",IdentityInfoTo198:{additional:"Vec<IdentityInfoAdditional>",display:"Data",legal:"Data",web:"Data",riot:"Data",email:"Data",pgpFingerprint:"Option<H160>",image:"Data"},IdentityInfo:{_fallback:"IdentityInfoTo198",additional:"Vec<IdentityInfoAdditional>",display:"Data",legal:"Data",web:"Data",riot:"Data",email:"Data",pgpFingerprint:"Option<H160>",image:"Data",twitter:"Data"},IdentityJudgement:{_enum:{Unknown:"Null",FeePaid:"Balance",Reasonable:"Null",KnownGood:"Null",OutOfDate:"Null",LowQuality:"Null",Erroneous:"Null"}},RegistrationJudgement:"(RegistrarIndex, IdentityJudgement)",RegistrationTo198:{judgements:"Vec<RegistrationJudgement>",deposit:"Balance",info:"IdentityInfoTo198"},Registration:{_fallback:"RegistrationTo198",judgements:"Vec<RegistrationJudgement>",deposit:"Balance",info:"IdentityInfo"},RegistrarIndex:"u32",RegistrarInfo:{account:"AccountId",fee:"Balance",fields:"IdentityFields"}}},definitions$A={rpc:{},types:{AuthIndex:"u32",AuthoritySignature:"Signature",Heartbeat:{blockNumber:"BlockNumber",networkState:"OpaqueNetworkState",sessionIndex:"SessionIndex",authorityIndex:"AuthIndex",validatorsLen:"u32"},HeartbeatTo244:{blockNumber:"BlockNumber",networkState:"OpaqueNetworkState",sessionIndex:"SessionIndex",authorityIndex:"AuthIndex"},OpaqueMultiaddr:"Bytes",OpaquePeerId:"Bytes",OpaqueNetworkState:{peerId:"OpaquePeerId",externalAddresses:"Vec<OpaqueMultiaddr>"}}},definitions$z={rpc:{},types:{CallIndex:"(u8, u8)",LotteryConfig:{price:"Balance",start:"BlockNumber",length:"BlockNumber",delay:"BlockNumber",repeat:"bool"}}},definitions$y={rpc:{generateProof:{description:"Generate MMR proof for given leaf index.",params:[{name:"leafIndex",type:"u64"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"MmrLeafProof"}},types:{MmrLeafProof:{blockHash:"BlockHash",leaf:"Bytes",proof:"Bytes"}}},definitions$x={rpc:{},types:{DeferredOffenceOf:"(Vec<OffenceDetails>, Vec<Perbill>, SessionIndex)",Kind:"[u8; 16]",OffenceDetails:{offender:"Offender",reporters:"Vec<Reporter>"},Offender:"IdentificationTuple",OpaqueTimeSlot:"Bytes",ReportIdOf:"Hash",Reporter:"AccountId"}},definitions$w={rpc:{},types:{ProxyDefinition:{delegate:"AccountId",proxyType:"ProxyType",delay:"BlockNumber"},ProxyType:{_enum:["Any","NonTransfer","Governance","Staking"]},ProxyAnnouncement:{real:"AccountId",callHash:"Hash",height:"BlockNumber"}}},definitions$v={rpc:{},types:{ActiveRecovery:{created:"BlockNumber",deposit:"Balance",friends:"Vec<AccountId>"},RecoveryConfig:{delayPeriod:"BlockNumber",deposit:"Balance",friends:"Vec<AccountId>",threshold:"u16"}}},definitions$u={rpc:{},types:{Period:"(BlockNumber, u32)",Priority:"u8",SchedulePeriod:"Period",SchedulePriority:"Priority",Scheduled:{maybeId:"Option<Bytes>",priority:"SchedulePriority",call:"Call",maybePeriodic:"Option<SchedulePeriod>",origin:"PalletsOrigin"},ScheduledTo254:{maybeId:"Option<Bytes>",priority:"SchedulePriority",call:"Call",maybePeriodic:"Option<SchedulePeriod>"},TaskAddress:"(BlockNumber, u32)"}};const keyTypes={BeefyKey:"[u8; 33]",Keys:"SessionKeys4",SessionKeys1:"(AccountId)",SessionKeys2:"(AccountId, AccountId)",SessionKeys3:"(AccountId, AccountId, AccountId)",SessionKeys4:"(AccountId, AccountId, AccountId, AccountId)",SessionKeys5:"(AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys6:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys6B:"(AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys7:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys7B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys8:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys8B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys9:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys9B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys10:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys10B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)"};var definitions$t={rpc:{},types:objectSpread({},keyTypes,{FullIdentification:"Exposure",IdentificationTuple:"(ValidatorId, FullIdentification)",MembershipProof:{session:"SessionIndex",trieNodes:"Vec<Vec<u8>>",validatorCount:"ValidatorCount"},SessionIndex:"u32",ValidatorCount:"u32"})},definitions$s={rpc:{},types:{Bid:{who:"AccountId",kind:"BidKind",value:"Balance"},BidKind:{_enum:{Deposit:"Balance",Vouch:"(AccountId, Balance)"}},SocietyJudgement:{_enum:["Rebid","Reject","Approve"]},SocietyVote:{_enum:["Skeptic","Reject","Approve"]},StrikeCount:"u32",VouchingStatus:{_enum:["Vouching","Banned"]}}};const deprecated={Points:"u32",EraPoints:{total:"Points",individual:"Vec<Points>"}},phragmen={CompactAssignments:"CompactAssignmentsWith16",CompactAssignmentsWith16:{votes1:"Vec<(NominatorIndexCompact, ValidatorIndexCompact)>",votes2:"Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>",votes3:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>",votes4:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>",votes5:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>",votes6:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>",votes7:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>",votes8:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>",votes9:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>",votes10:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>",votes11:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>",votes12:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>",votes13:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>",votes14:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>",votes15:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>",votes16:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>"},CompactAssignmentsWith24:{votes1:"Vec<(NominatorIndexCompact, ValidatorIndexCompact)>",votes2:"Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>",votes3:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>",votes4:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>",votes5:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>",votes6:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>",votes7:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>",votes8:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>",votes9:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>",votes10:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>",votes11:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>",votes12:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>",votes13:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>",votes14:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>",votes15:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>",votes16:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>",votes17:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 16], ValidatorIndexCompact)>",votes18:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 17], ValidatorIndexCompact)>",votes19:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 18], ValidatorIndexCompact)>",votes20:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 19], ValidatorIndexCompact)>",votes21:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 20], ValidatorIndexCompact)>",votes22:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 21], ValidatorIndexCompact)>",votes23:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 22], ValidatorIndexCompact)>",votes24:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 23], ValidatorIndexCompact)>"},CompactAssignmentsTo265:"CompactAssignmentsWith16",CompactAssignmentsTo257:{votes1:"Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>",votes2:"Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>",votes3:"Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>",votes4:"Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>",votes5:"Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>",votes6:"Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>",votes7:"Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>",votes8:"Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>",votes9:"Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>",votes10:"Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>",votes11:"Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>",votes12:"Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>",votes13:"Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>",votes14:"Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>",votes15:"Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>",votes16:"Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>"},CompactScore:"(ValidatorIndex, OffchainAccuracy)",CompactScoreCompact:"(ValidatorIndexCompact, OffchainAccuracyCompact)",ElectionCompute:{_enum:["OnChain","Signed","Unsigned"]},ElectionPhase:{_enum:{Off:null,Signed:null,Unsigned:"(bool, BlockNumber)",Emergency:null}},ElectionResult:{compute:"ElectionCompute",slotStake:"Balance",electedStashes:"Vec<AccountId>",exposures:"Vec<(AccountId, Exposure)>"},ElectionScore:"[u128; 3]",ElectionSize:{validators:"Compact<ValidatorIndex>",nominators:"Compact<NominatorIndex>"},ElectionStatus:{_enum:{Close:"Null",Open:"BlockNumber"}},ExtendedBalance:"u128",RawSolution:"RawSolutionWith16",RawSolutionWith16:{compact:"CompactAssignmentsWith16",score:"ElectionScore",round:"u32"},RawSolutionWith24:{compact:"CompactAssignmentsWith24",score:"ElectionScore",round:"u32"},RawSolutionTo265:"RawSolutionWith16",ReadySolution:{supports:"SolutionSupports",score:"ElectionScore",compute:"ElectionCompute"},RoundSnapshot:{voters:"Vec<(AccountId, VoteWeight, Vec<AccountId>)>",targets:"Vec<AccountId>"},SeatHolder:{who:"AccountId",stake:"Balance",deposit:"Balance"},SignedSubmission:{_fallback:"SignedSubmissionTo276",who:"AccountId",deposit:"Balance",solution:"RawSolution",reward:"Balance"},SignedSubmissionTo276:{who:"AccountId",deposit:"Balance",solution:"RawSolution"},SignedSubmissionOf:"SignedSubmission",SolutionOrSnapshotSize:{voters:"Compact<u32>",targets:"Compact<u32>"},SolutionSupport:{total:"ExtendedBalance",voters:"Vec<(AccountId, ExtendedBalance)>"},SolutionSupports:"Vec<(AccountId, SolutionSupport)>",Supports:"SolutionSupports",SubmissionIndicesOf:"BTreeMap<ElectionScore, u32>",Voter:{votes:"Vec<AccountId>",stake:"Balance",deposit:"Balance"},VoteWeight:"u64"};var definitions$r={rpc:{},types:objectSpread({},deprecated,phragmen,{ActiveEraInfo:{index:"EraIndex",start:"Option<Moment>"},EraIndex:"u32",EraRewardPoints:{total:"RewardPoint",individual:"BTreeMap<AccountId, RewardPoint>"},EraRewards:{total:"u32",rewards:"Vec<u32>"},Exposure:{total:"Compact<Balance>",own:"Compact<Balance>",others:"Vec<IndividualExposure>"},Forcing:{_enum:["NotForcing","ForceNew","ForceNone","ForceAlways"]},IndividualExposure:{who:"AccountId",value:"Compact<Balance>"},KeyType:"AccountId",MomentOf:"Moment",Nominations:{targets:"Vec<AccountId>",submittedIn:"EraIndex",suppressed:"bool"},NominatorIndex:"u32",NominatorIndexCompact:"Compact<NominatorIndex>",OffchainAccuracy:"PerU16",OffchainAccuracyCompact:"Compact<OffchainAccuracy>",PhragmenScore:"[u128; 3]",Points:"u32",RewardDestination:{_enum:{Staked:"Null",Stash:"Null",Controller:"Null",Account:"AccountId",None:"Null"}},RewardPoint:"u32",SlashJournalEntry:{who:"AccountId",amount:"Balance",ownSlash:"Balance"},SlashingSpansTo204:{spanIndex:"SpanIndex",lastStart:"EraIndex",prior:"Vec<EraIndex>"},SlashingSpans:{spanIndex:"SpanIndex",lastStart:"EraIndex",lastNonzeroSlash:"EraIndex",prior:"Vec<EraIndex>"},SpanIndex:"u32",SpanRecord:{slashed:"Balance",paidOut:"Balance"},StakingLedgerTo223:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>"},StakingLedgerTo240:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>",lastReward:"Option<EraIndex>"},StakingLedger:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>",claimedRewards:"Vec<EraIndex>"},UnappliedSlashOther:"(AccountId, Balance)",UnappliedSlash:{validator:"AccountId",own:"Balance",others:"Vec<UnappliedSlashOther>",reporters:"Vec<AccountId>",payout:"Balance"},UnlockChunk:{value:"Compact<Balance>",era:"Compact<BlockNumber>"},ValidatorIndex:"u16",ValidatorIndexCompact:"Compact<ValidatorIndex>",ValidatorPrefs:"ValidatorPrefsWithBlocked",ValidatorPrefsWithCommission:{commission:"Compact<Perbill>"},ValidatorPrefsWithBlocked:{commission:"Compact<Perbill>",blocked:"bool"},ValidatorPrefsTo196:{validatorPayment:"Compact<Balance>"},ValidatorPrefsTo145:{unstakeThreshold:"Compact<u32>",validatorPayment:"Compact<Balance>"}})},definitions$q={rpc:{},types:{WeightToFeeCoefficient:{coeffInteger:"Balance",coeffFrac:"Perbill",negative:"bool",degree:"u8"}}},definitions$p={rpc:{genSyncSpec:{endpoint:"sync_state_genSyncSpec",description:"Returns the json-serialized chainspec running the node, with a sync state.",params:[{name:"raw",type:"bool"}],type:"Json"}},types:{}},definitions$o={rpc:{accountNextIndex:{alias:["account_nextIndex"],description:"Retrieves the next accountIndex as available on the node",params:[{name:"accountId",type:"AccountId"}],type:"Index"},dryRun:{alias:["system_dryRunAt"],description:"Dry run an extrinsic at a given block",params:[{name:"extrinsic",type:"Bytes"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"ApplyExtrinsicResult"},name:{description:"Retrieves the node name",params:[],type:"Text"},version:{description:"Retrieves the version of the node",params:[],type:"Text"},chain:{description:"Retrieves the chain",params:[],type:"Text"},chainType:{description:"Retrieves the chain type",params:[],type:"ChainType"},properties:{description:"Get a custom set of properties as a JSON object, defined in the chain spec",params:[],type:"ChainProperties"},health:{description:"Return health status of the node",params:[],type:"Health"},localPeerId:{description:"Returns the base58-encoded PeerId of the node",params:[],type:"Text"},localListenAddresses:{description:"The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example",params:[],type:"Vec<Text>"},peers:{description:"Returns the currently connected peers",params:[],type:"Vec<PeerInfo>"},networkState:{alias:["system_unstable_networkState"],description:"Returns current state of the network",params:[],type:"NetworkState"},addReservedPeer:{description:"Adds a reserved peer",params:[{name:"peer",type:"Text"}],type:"Text"},removeReservedPeer:{description:"Remove a reserved peer",params:[{name:"peerId",type:"Text"}],type:"Text"},reservedPeers:{description:"Returns the list of reserved peers",params:[],type:"Vec<Text>"},nodeRoles:{description:"Returns the roles the node is running as",params:[],type:"Vec<NodeRole>"},syncState:{description:"Returns the state of the syncing of the node",params:[],type:"SyncState"},addLogFilter:{description:"Adds the supplied directives to the current log filter",params:[{name:"directives",type:"Text"}],type:"Null"},resetLogFilter:{description:"Resets the log filter to Substrate defaults",params:[],type:"Null"}},types:{AccountInfo:"AccountInfoWithTripleRefCount",AccountInfoWithRefCountU8:{nonce:"Index",refcount:"u8",data:"AccountData"},AccountInfoWithRefCount:{_fallback:"AccountInfoWithRefCountU8",nonce:"Index",refcount:"RefCount",data:"AccountData"},AccountInfoWithDualRefCount:{_fallback:"AccountInfoWithRefCount",nonce:"Index",consumers:"RefCount",providers:"RefCount",data:"AccountData"},AccountInfoWithProviders:"AccountInfoWithDualRefCount",AccountInfoWithTripleRefCount:{_fallback:"AccountInfoWithDualRefCount",nonce:"Index",consumers:"RefCount",providers:"RefCount",sufficients:"RefCount",data:"AccountData"},ApplyExtrinsicResult:"Result<DispatchOutcome, TransactionValidityError>",ArithmeticError:{_enum:["Underflow","Overflow","DivisionByZero"]},BlockLength:{max:"PerDispatchClassU32"},BlockWeights:{baseBlock:"Weight",maxBlock:"Weight",perClass:"PerDispatchClassWeightsPerClass"},ChainProperties:"GenericChainProperties",ChainType:{_enum:{Development:"Null",Local:"Null",Live:"Null",Custom:"Text"}},ConsumedWeight:"PerDispatchClassWeight",DigestOf:"Digest",DispatchClass:{_enum:["Normal","Operational","Mandatory"]},DispatchError:{_enum:{Other:"Null",CannotLookup:"Null",BadOrigin:"Null",Module:"DispatchErrorModule",ConsumerRemaining:"Null",NoProviders:"Null",Token:"TokenError",Arithmetic:"ArithmeticError"}},DispatchErrorModule:{index:"u8",error:"u8"},DispatchErrorModuleU8a:{index:"u8",error:"[u8; 4]"},DispatchErrorTo198:{module:"Option<u8>",error:"u8"},DispatchInfo:{weight:"Weight",class:"DispatchClass",paysFee:"Pays"},DispatchInfoTo190:{weight:"Weight",class:"DispatchClass"},DispatchInfoTo244:{weight:"Weight",class:"DispatchClass",paysFee:"bool"},DispatchOutcome:"Result<(), DispatchError>",DispatchResult:"Result<(), DispatchError>",DispatchResultOf:"DispatchResult",DispatchResultTo198:"Result<(), Text>",Event:"GenericEvent",EventId:"[u8; 2]",EventIndex:"u32",EventRecord:{phase:"Phase",event:"Event",topics:"Vec<Hash>"},Health:{peers:"u64",isSyncing:"bool",shouldHavePeers:"bool"},InvalidTransaction:{_enum:{Call:"Null",Payment:"Null",Future:"Null",Stale:"Null",BadProof:"Null",AncientBirthBlock:"Null",ExhaustsResources:"Null",Custom:"u8",BadMandatory:"Null",MandatoryDispatch:"Null"}},Key:"Bytes",LastRuntimeUpgradeInfo:{specVersion:"Compact<u32>",specName:"Text"},NetworkState:{peerId:"Text",listenedAddresses:"Vec<Text>",externalAddresses:"Vec<Text>",connectedPeers:"HashMap<Text, Peer>",notConnectedPeers:"HashMap<Text, NotConnectedPeer>",averageDownloadPerSec:"u64",averageUploadPerSec:"u64",peerset:"NetworkStatePeerset"},NetworkStatePeerset:{messageQueue:"u64",nodes:"HashMap<Text, NetworkStatePeersetInfo>"},NetworkStatePeersetInfo:{connected:"bool",reputation:"i32"},NodeRole:{_enum:{Full:"Null",LightClient:"Null",Authority:"Null",UnknownRole:"u8"}},NotConnectedPeer:{knownAddresses:"Vec<Text>",latestPingTime:"Option<PeerPing>",versionString:"Option<Text>"},Peer:{enabled:"bool",endpoint:"PeerEndpoint",knownAddresses:"Vec<Text>",latestPingTime:"PeerPing",open:"bool",versionString:"Text"},PeerEndpoint:{listening:"PeerEndpointAddr"},PeerEndpointAddr:{_alias:{localAddr:"local_addr",sendBackAddr:"send_back_addr"},localAddr:"Text",sendBackAddr:"Text"},PeerPing:{nanos:"u64",secs:"u64"},PeerInfo:{peerId:"Text",roles:"Text",protocolVersion:"u32",bestHash:"Hash",bestNumber:"BlockNumber"},PerDispatchClassU32:{normal:"u32",operational:"u32",mandatory:"u32"},PerDispatchClassWeight:{normal:"Weight",operational:"Weight",mandatory:"Weight"},PerDispatchClassWeightsPerClass:{normal:"WeightPerClass",operational:"WeightPerClass",mandatory:"WeightPerClass"},Phase:{_enum:{ApplyExtrinsic:"u32",Finalization:"Null",Initialization:"Null"}},RawOrigin:{_enum:{Root:"Null",Signed:"AccountId",None:"Null"}},RefCount:"u32",RefCountTo259:"u8",SyncState:{startingBlock:"BlockNumber",currentBlock:"BlockNumber",highestBlock:"Option<BlockNumber>"},SystemOrigin:"RawOrigin",TokenError:{_enum:["NoFunds","WouldDie","BelowMinimum","CannotCreate","UnknownAsset","Frozen","Underflow","Overflow"]},TransactionValidityError:{_enum:{Invalid:"InvalidTransaction",Unknown:"UnknownTransaction"}},UnknownTransaction:{_enum:{CannotLookup:"Null",NoUnsignedValidator:"Null",Custom:"u8"}},WeightPerClass:{baseExtrinsic:"Weight",maxExtrinsic:"Option<Weight>",maxTotal:"Option<Weight>",reserved:"Option<Weight>"}}},definitions$n={rpc:{},types:{Bounty:{proposer:"AccountId",value:"Balance",fee:"Balance",curatorDeposit:"Balance",bond:"Balance",status:"BountyStatus"},BountyIndex:"u32",BountyStatus:{_enum:{Proposed:"Null",Approved:"Null",Funded:"Null",CuratorProposed:"BountyStatusCuratorProposed",Active:"BountyStatusActive",PendingPayout:"BountyStatusPendingPayout"}},BountyStatusActive:{curator:"AccountId",updateDue:"BlockNumber"},BountyStatusCuratorProposed:{curator:"AccountId"},BountyStatusPendingPayout:{curator:"AccountId",beneficiary:"AccountId",unlockAt:"BlockNumber"},OpenTip:{reason:"Hash",who:"AccountId",finder:"AccountId",deposit:"Balance",closes:"Option<BlockNumber>",tips:"Vec<OpenTipTip>",findersFee:"bool"},OpenTipTo225:{reason:"Hash",who:"AccountId",finder:"Option<OpenTipFinderTo225>",closes:"Option<BlockNumber>",tips:"Vec<OpenTipTip>"},OpenTipFinderTo225:"(AccountId, Balance)",OpenTipTip:"(AccountId, Balance)",TreasuryProposal:{proposer:"AccountId",value:"Balance",beneficiary:"AccountId",bond:"Balance"}}},definitions$m={rpc:{},types:{Multiplier:"Fixed128"}},definitions$l={rpc:{},types:{ClassId:"u32",InstanceId:"u32",DepositBalance:"Balance",DepositBalanceOf:"Balance",ClassDetails:{owner:"AccountId",issuer:"AccountId",admin:"AccountId",freezer:"AccountId",totalDeposit:"DepositBalance",freeHolding:"bool",instances:"u32",instanceMetadatas:"u32",attributes:"u32",isFrozen:"bool"},DestroyWitness:{instances:"Compact<u32>",instanceMetadatas:"Compact<u32>",attributes:"Compact<u32>"},InstanceDetails:{owner:"AccountId",approved:"Option<AccountId>",isFrozen:"bool",deposit:"DepositBalance"},ClassMetadata:{deposit:"DepositBalance",data:"Vec<u8>",isFrozen:"bool"},InstanceMetadata:{deposit:"DepositBalance",data:"Vec<u8>",isFrozen:"bool"}}},definitions$k={rpc:{},types:{Multisig:{when:"Timepoint",deposit:"Balance",depositor:"AccountId",approvals:"Vec<AccountId>"},Timepoint:{height:"BlockNumber",index:"u32"}}},definitions$j={rpc:{},types:{VestingInfo:{locked:"Balance",perBlock:"Balance",startingBlock:"BlockNumber"}}},definitions$i={rpc:{},types:{BlockAttestations:{receipt:"CandidateReceipt",valid:"Vec<AccountId>",invalid:"Vec<AccountId>"},IncludedBlocks:{actualNumber:"BlockNumber",session:"SessionIndex",randomSeed:"H256",activeParachains:"Vec<ParaId>",paraBlocks:"Vec<Hash>"},MoreAttestations:{}}},definitions$h={rpc:{},types:{BridgedBlockHash:"H256",BridgedBlockNumber:"BlockNumber",BridgedHeader:"Header",BridgeMessageId:"(LaneId, MessageNonce)",CallOrigin:{_enum:{SourceRoot:"Null",TargetAccount:"(AccountId, MultiSigner, MultiSignature)",SourceAccount:"AccountId"}},ChainId:"[u8; 4]",DeliveredMessages:{begin:"MessageNonce",end:"MessageNonce",dispatchResults:"BitVec"},DispatchFeePayment:{_enum:["AtSourceChain","AtTargetChain"]},InboundLaneData:{relayers:"Vec<UnrewardedRelayer>",lastConfirmedNonce:"MessageNonce"},InboundRelayer:"AccountId",InitializationData:{header:"Header",authorityList:"AuthorityList",setId:"SetId",isHalted:"bool"},LaneId:"[u8; 4]",MessageData:{payload:"Bytes",fee:"Balance"},MessagesDeliveryProofOf:{bridgedHeaderHash:"BlockHash",storageProof:"Vec<Bytes>",lane:"LaneId"},MessageKey:{laneId:"LaneId",nonce:"MessageNonce"},MessageNonce:"u64",MessagesProofOf:{bridgedHeaderHash:"BridgedBlockHash",storageProof:"Vec<Bytes>",lane:"LaneId",noncesStart:"MessageNonce",noncesEnd:"MessageNonce"},OperatingMode:{_enum:["Normal","RejectingOutboundMessages","Halted"]},OutboundLaneData:{oldestUnprunedNonce:"MessageNonce",latestReceivedNonce:"MessageNonce",latestGeneratedNonce:"MessageNonce"},OutboundMessageFee:"Balance",OutboundPayload:{specVersion:"u32",weight:"Weight",origin:"CallOrigin",dispatchFeePayment:"DispatchFeePayment",call:"Bytes"},Parameter:"Null",RelayerId:"AccountId",UnrewardedRelayer:{relayer:"RelayerId",messages:"DeliveredMessages"},UnrewardedRelayersState:{unrewardedRelayer_Entries:"MessageNonce",messagesInOldestEntry:"MessageNonce",totalMessages:"MessageNonce"}}},definitions$g={rpc:{},types:{StatementKind:{_enum:["Regular","Saft"]}}},definitions$f={rpc:{},types:{FundIndex:"u32",LastContribution:{_enum:{Never:"Null",PreEnding:"u32",Ending:"BlockNumber"}},FundInfo:{depositor:"AccountId",verifier:"Option<MultiSigner>",deposit:"Balance",raised:"Balance",end:"BlockNumber",cap:"Balance",lastContribution:"LastContribution",firstPeriod:"LeasePeriod",lastPeriod:"LeasePeriod",trieIndex:"TrieIndex"},TrieIndex:"u32"}};const dmpQueue={ConfigData:{maxIndividual:"Weight"},MessageId:"[u8; 32]",OverweightIndex:"u64",PageCounter:"u32",PageIndexData:{beginUsed:"PageCounter",endUsed:"PageCounter",overweightCount:"OverweightIndex"}};var definitions$e={rpc:{},types:dmpQueue},hrmpTypes={HrmpChannel:{maxCapacity:"u32",maxTotalSize:"u32",maxMessageSize:"u32",msgCount:"u32",totalSize:"u32",mqcHead:"Option<Hash>",senderDeposit:"Balance",recipientDeposit:"Balance"},HrmpChannelId:{sender:"u32",receiver:"u32"},HrmpOpenChannelRequest:{confirmed:"bool",age:"SessionIndex",senderDeposit:"Balance",maxMessageSize:"u32",maxCapacity:"u32",maxTotalSize:"u32"}};const SlotRange10={_enum:["ZeroZero","ZeroOne","ZeroTwo","ZeroThree","OneOne","OneTwo","OneThree","TwoTwo","TwoThree","ThreeThree"]},SlotRange={_enum:["ZeroZero","ZeroOne","ZeroTwo","ZeroThree","ZeroFour","ZeroFive","ZeroSix","ZeroSeven","OneOne","OneTwo","OneThree","OneFour","OneFive","OneSix","OneSeven","TwoTwo","TwoThree","TwoFour","TwoFive","TwoSix","TwoSeven","ThreeThree","ThreeFour","ThreeFive","ThreeSix","ThreeSeven","FourFour","FourFive","FourSix","FourSeven","FiveFive","FiveSix","FiveSeven","SixSix","SixSeven","SevenSeven"]},oldTypes={Bidder:{_enum:{New:"NewBidder",Existing:"ParaId"}},IncomingParachain:{_enum:{Unset:"NewBidder",Fixed:"IncomingParachainFixed",Deploy:"IncomingParachainDeploy"}},IncomingParachainDeploy:{code:"ValidationCode",initialHeadData:"HeadData"},IncomingParachainFixed:{codeHash:"Hash",codeSize:"u32",initialHeadData:"HeadData"},NewBidder:{who:"AccountId",sub:"SubId"},SubId:"u32"};var slotTypes=objectSpread({},oldTypes,{AuctionIndex:"u32",LeasePeriod:"BlockNumber",LeasePeriodOf:"BlockNumber",SlotRange10,SlotRange,WinningData10:`[WinningDataEntry; ${SlotRange10._enum.length}]`,WinningData:`[WinningDataEntry; ${SlotRange._enum.length}]`,WinningDataEntry:"Option<(AccountId, ParaId, BalanceOf)>",WinnersData10:"Vec<WinnersDataTuple10>",WinnersData:"Vec<WinnersDataTuple>",WinnersDataTuple10:"(AccountId, ParaId, BalanceOf, SlotRange10)",WinnersDataTuple:"(AccountId, ParaId, BalanceOf, SlotRange)"});const proposeTypes={ParachainProposal:{proposer:"AccountId",genesisHead:"HeadData",validators:"Vec<ValidatorId>",name:"Bytes",balance:"Balance"},RegisteredParachainInfo:{validators:"Vec<ValidatorId>",proposer:"AccountId"}},cumulusTypes={ServiceQuality:{_enum:["Ordered","Fast"]}},disputeTypes={DisputeLocation:{_enum:["Local","Remote"]},DisputeResult:{_enum:["Valid","Invalid"]},DisputeState:{validatorsFor:"BitVec",validatorsAgainst:"BitVec",start:"BlockNumber",concludedAt:"Option<BlockNumber>"},DisputeStatement:{_enum:{Valid:"ValidDisputeStatementKind",Invalid:"InvalidDisputeStatementKind"}},DisputeStatementSet:{candidateHash:"CandidateHash",session:"SessionIndex",statements:"Vec<(DisputeStatement, ParaValidatorIndex, ValidatorSignature)>"},ExplicitDisputeStatement:{valid:"bool",candidateHash:"CandidateHash",session:"SessionIndex"},InvalidDisputeStatementKind:{_enum:["Explicit"]},MultiDisputeStatementSet:"Vec<DisputeStatementSet>",ValidDisputeStatementKind:{_enum:{Explicit:"Null",BackingSeconded:"Hash",BackingValid:"Hash",ApprovalChecking:"Null"}}};var definitions$d={rpc:{},types:objectSpread({},cumulusTypes,disputeTypes,hrmpTypes,proposeTypes,slotTypes,{AbridgedCandidateReceipt:{parachainIndex:"ParaId",relayParent:"Hash",headData:"HeadData",collator:"CollatorId",signature:"CollatorSignature",povBlockHash:"Hash",commitments:"CandidateCommitments"},AbridgedHostConfiguration:{maxCodeSize:"u32",maxHeadDataSize:"u32",maxUpwardQueueCount:"u32",maxUpwardQueueSize:"u32",maxUpwardMessageSize:"u32",maxUpwardMessageNumPerCandidate:"u32",hrmpMaxMessageNumPerCandidate:"u32",validationUpgradeFrequency:"BlockNumber",validationUpgradeDelay:"BlockNumber"},AbridgedHrmpChannel:{maxCapacity:"u32",maxTotalSize:"u32",maxMessageSize:"u32",msgCount:"u32",totalSize:"u32",mqcHead:"Option<Hash>"},AssignmentId:"AccountId",AssignmentKind:{_enum:{Parachain:"Null",Parathread:"(CollatorId, u32)"}},AttestedCandidate:{candidate:"AbridgedCandidateReceipt",validityVotes:"Vec<ValidityAttestation>",validatorIndices:"BitVec"},AuthorityDiscoveryId:"AccountId",AvailabilityBitfield:"BitVec",AvailabilityBitfieldRecord:{bitfield:"AvailabilityBitfield",submittedTt:"BlockNumber"},BackedCandidate:{candidate:"CommittedCandidateReceipt",validityVotes:"Vec<ValidityAttestation>",validatorIndices:"BitVec"},BufferedSessionChange:{applyAt:"BlockNumber",validators:"Vec<ValidatorId>",queued:"Vec<ValidatorId>",sessionIndex:"SessionIndex"},CandidateCommitments:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",headData:"HeadData",processedDownwardMessages:"u32",hrmpWatermark:"BlockNumber"},CandidateDescriptor:{paraId:"ParaId",relayParent:"RelayChainHash",collatorId:"CollatorId",persistedValidationDataHash:"Hash",povHash:"Hash",erasureRoot:"Hash",signature:"CollatorSignature",paraHead:"Hash",validationCodeHash:"ValidationCodeHash"},CandidateHash:"Hash",CandidateInfo:{who:"AccountId",deposit:"Balance"},CandidatePendingAvailability:{core:"CoreIndex",hash:"CandidateHash",descriptor:"CandidateDescriptor",availabilityVotes:"BitVec",backers:"BitVec",relayParentNumber:"BlockNumber",backedInNumber:"BlockNumber",backingGroup:"GroupIndex"},CandidateReceipt:{descriptor:"CandidateDescriptor",commitmentsHash:"Hash"},GlobalValidationData:{maxCodeSize:"u32",maxHeadDataSize:"u32",blockNumber:"BlockNumber"},CollatorId:"H256",CollatorSignature:"Signature",CommittedCandidateReceipt:{descriptor:"CandidateDescriptor",commitments:"CandidateCommitments"},CoreAssignment:{core:"CoreIndex",paraId:"ParaId",kind:"AssignmentKind",groupIdx:"GroupIndex"},CoreIndex:"u32",CoreOccupied:{_enum:{Parathread:"ParathreadEntry",Parachain:"Null"}},DoubleVoteReport:{identity:"ValidatorId",first:"(Statement, ValidatorSignature)",second:"(Statement, ValidatorSignature)",proof:"MembershipProof",signingContext:"SigningContext"},DownwardMessage:"Bytes",GroupIndex:"u32",GlobalValidationSchedule:{maxCodeSize:"u32",maxHeadDataSize:"u32",blockNumber:"BlockNumber"},HeadData:"Bytes",HostConfiguration:{maxCodeSize:"u32",maxHeadDataSize:"u32",maxUpwardQueueCount:"u32",maxUpwardQueueSize:"u32",maxUpwardMessageSize:"u32",maxUpwardMessageNumPerCandidate:"u32",hrmpMaxMessageNumPerCandidate:"u32",validationUpgradeFrequency:"BlockNumber",validationUpgradeDelay:"BlockNumber",maxPovSize:"u32",maxDownwardMessageSize:"u32",preferredDispatchableUpwardMessagesStepWeight:"Weight",hrmpMaxParachainOutboundChannels:"u32",hrmpMaxParathreadOutboundChannels:"u32",hrmpOpenRequestTtl:"u32",hrmpSenderDeposit:"Balance",hrmpRecipientDeposit:"Balance",hrmpChannelMaxCapacity:"u32",hrmpChannelMaxTotalSize:"u32",hrmpMaxParachainInboundChannels:"u32",hrmpMaxParathreadInboundChannels:"u32",hrmpChannelMaxMessageSize:"u32",codeRetentionPeriod:"BlockNumber",parathreadCores:"u32",parathreadRetries:"u32",groupRotationFrequency:"BlockNumber",chainAvailabilityPeriod:"BlockNumber",threadAvailabilityPeriod:"BlockNumber",schedulingLookahead:"u32",maxValidatorsPerCore:"Option<u32>",maxValidators:"Option<u32>",disputePeriod:"SessionIndex",disputePostConclusionAcceptancePeriod:"BlockNumber",disputeMaxSpamSlots:"u32",disputeConclusionByTimeOutPeriod:"BlockNumber",noShowSlots:"u32",nDelayTranches:"u32",zerothDelayTrancheWidth:"u32",neededApprovals:"u32",relayVrfModuloSamples:"u32"},InboundDownwardMessage:{pubSentAt:"BlockNumber",pubMsg:"DownwardMessage"},InboundHrmpMessage:{sentAt:"BlockNumber",data:"Bytes"},InboundHrmpMessages:"Vec<InboundHrmpMessage>",LocalValidationData:{parentHead:"HeadData",balance:"Balance",codeUpgradeAllowed:"Option<BlockNumber>"},MessageIngestionType:{downwardMessages:"Vec<InboundDownwardMessage>",horizontalMessages:"BTreeMap<ParaId, InboundHrmpMessages>"},MessageQueueChain:"RelayChainHash",OutboundHrmpMessage:{recipient:"u32",data:"Bytes"},ParachainDispatchOrigin:{_enum:["Signed","Parachain","Root"]},ParachainInherentData:{validationData:"PersistedValidationData",relayChainState:"StorageProof",downwardMessages:"Vec<InboundDownwardMessage>",horizontalMessages:"BTreeMap<ParaId, VecInboundHrmpMessage>"},ParachainsInherentData:{bitfields:"SignedAvailabilityBitfields",backedCandidates:"Vec<BackedCandidate>",disputes:"MultiDisputeStatementSet",parentHeader:"Header"},ParaGenesisArgs:{genesisHead:"Bytes",validationCode:"Bytes",parachain:"bool"},ParaId:"u32",ParaInfo:{manager:"AccountId",deposit:"Balance",locked:"bool"},ParaLifecycle:{_enum:["Onboarding","Parathread","Parachain","UpgradingToParachain","DowngradingToParathread","OutgoingParathread","OutgoingParachain"]},ParaPastCodeMeta:{upgradeTimes:"Vec<ReplacementTimes>",lastPruned:"Option<BlockNumber>"},ParaScheduling:{_enum:["Always","Dynamic"]},ParathreadClaim:"(ParaId, CollatorId)",ParathreadClaimQueue:{queue:"Vec<QueuedParathread>",nextCoreOffset:"u32"},ParathreadEntry:{claim:"ParathreadClaim",retries:"u32"},ParaValidatorIndex:"u32",PersistedValidationData:{parentHead:"HeadData",relayParentNumber:"RelayChainBlockNumber",relayParentStorageRoot:"Hash",maxPovSize:"u32"},QueuedParathread:{claim:"ParathreadEntry",coreOffset:"u32"},RelayBlockNumber:"u32",RelayChainBlockNumber:"RelayBlockNumber",RelayHash:"Hash",RelayChainHash:"RelayHash",Remark:"[u8; 32]",ReplacementTimes:{expectedAt:"BlockNumber",activatedAt:"BlockNumber"},Retriable:{_enum:{Never:"Null",WithRetries:"u32"}},Scheduling:{_enum:["Always","Dynamic"]},SessionInfo:{validators:"Vec<ValidatorId>",discoveryKeys:"Vec<AuthorityDiscoveryId>",assignmentKeys:"Vec<AssignmentId>",validatorGroups:"Vec<SessionInfoValidatorGroup>",nCores:"u32",zerothDelayTrancheWidth:"u32",relayVrfModuloSamples:"u32",nDelayTranches:"u32",noShowSlots:"u32",neededApprovals:"u32"},SessionInfoValidatorGroup:"Vec<ParaValidatorIndex>",SignedAvailabilityBitfield:{payload:"BitVec",validatorIndex:"ParaValidatorIndex",signature:"ValidatorSignature"},SignedAvailabilityBitfields:"Vec<SignedAvailabilityBitfield>",SigningContext:{sessionIndex:"SessionIndex",parentHash:"Hash"},Statement:{_enum:{Never:"Null",Candidate:"Hash",Valid:"Hash",Invalid:"Hash"}},TransientValidationData:{maxCodeSize:"u32",maxHeadDataSize:"u32",balance:"Balance",codeUpgradeAllowed:"Option<BlockNumber>",dmqLength:"u32"},UpgradeGoAhead:{_enum:["Abort","GoAhead"]},UpgradeRestriction:{_enum:["Present"]},UpwardMessage:"Bytes",ValidationFunctionParams:{maxCodeSize:"u32",relayChainHeight:"RelayChainBlockNumber",codeUpgradeAllowed:"Option<RelayChainBlockNumber>"},ValidationCode:"Bytes",ValidationCodeHash:"Hash",ValidationData:{persisted:"PersistedValidationData",transient:"TransientValidationData"},ValidationDataType:{validationData:"ValidationData",relayChainState:"Vec<Bytes>"},ValidatorSignature:"Signature",ValidityAttestation:{_enum:{Never:"Null",Implicit:"ValidatorSignature",Explicit:"ValidatorSignature"}},MessagingStateSnapshot:{relayDispatchQueueSize:"(u32, u32)",egressChannels:"Vec<MessagingStateSnapshotEgressEntry>"},MessagingStateSnapshotEgressEntry:"(ParaId, AbridgedHrmpChannel)",SystemInherentData:"ParachainInherentData",VecInboundHrmpMessage:"Vec<InboundHrmpMessage>"})},definitions$c={rpc:{},types:{Approvals:"[bool; 4]"}},definitions$b={rpc:{},types:{AccountStatus:{validity:"AccountValidity",freeBalance:"Balance",lockedBalance:"Balance",signature:"Vec<u8>",vat:"Permill"},AccountValidity:{_enum:["Invalid","Initiated","Pending","ValidLow","ValidHigh","Completed"]}}};let TypeDefInfo;(function(r){r[r.BTreeMap=0]="BTreeMap",r[r.BTreeSet=1]="BTreeSet",r[r.Compact=2]="Compact",r[r.DoNotConstruct=3]="DoNotConstruct",r[r.Enum=4]="Enum",r[r.HashMap=5]="HashMap",r[r.Int=6]="Int",r[r.Linkage=7]="Linkage",r[r.Null=8]="Null",r[r.Option=9]="Option",r[r.Plain=10]="Plain",r[r.Range=11]="Range",r[r.RangeInclusive=12]="RangeInclusive",r[r.Result=13]="Result",r[r.Set=14]="Set",r[r.Si=15]="Si",r[r.Struct=16]="Struct",r[r.Tuple=17]="Tuple",r[r.UInt=18]="UInt",r[r.Vec=19]="Vec",r[r.VecFixed=20]="VecFixed",r[r.WrapperKeepOpaque=21]="WrapperKeepOpaque",r[r.WrapperOpaque=22]="WrapperOpaque"})(TypeDefInfo||(TypeDefInfo={}));function hasEq(r){return isFunction$3(r.eq)}function compareArray(r,e){return Array.isArray(e)?r.length===e.length&&isUndefined(r.find((t,n)=>hasEq(t)?!t.eq(e[n]):t!==e[n])):!1}class AbstractArray extends Array{constructor(e,t,n){super(t.length);for(let s=0;s<t.length;s++)this[s]=t[s];this.registry=e,this.initialU8aLength=n}get encodedLength(){let e=compactToU8a(this.length).length;for(let t=0;t<this.length;t++)e+=this[t].encodedLength;return e}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.length===0}get length(){return super.length}eq(e){return compareArray(this,e)}inspect(){return{inner:this.inspectInner(),outer:[compactToU8a(this.length)]}}inspectInner(){const e=new Array(this.length);for(let t=0;t<this.length;t++)e[t]=this[t].inspect();return e}toArray(){return Array.from(this)}toHex(){return u8aToHex(this.toU8a())}toHuman(e){const t=new Array(this.length);for(let n=0;n<this.length;n++)t[n]=this[n].toHuman(e);return t}toJSON(){const e=new Array(this.length);for(let t=0;t<this.length;t++)e[t]=this[t].toJSON();return e}toString(){const e=new Array(this.length);for(let t=0;t<this.length;t++)e[t]=this[t].toString();return`[${e.join(", ")}]`}toU8a(e){const t=this.toU8aInner();return e?u8aConcat(...t):u8aConcat(compactToU8a(this.length),...t)}toU8aInner(e){const t=new Array(this.length);for(let n=0;n<this.length;n++)t[n]=this[n].toU8a(e);return t}concat(e){return this.toArray().concat(e instanceof AbstractArray?e.toArray():e)}filter(e,t){return this.toArray().filter(e,t)}map(e,t){return this.toArray().map(e,t)}includes(e){return this.some(t=>t.eq(e))}slice(e,t){return this.toArray().slice(e,t)}}const DEFAULT_UINT_BITS=64,MAX_NUMBER_BITS=52,MUL_P=new BN(1e4),FORMATTERS=[["Perquintill",BN_QUINTILL],["Perbill",BN_BILLION],["Permill",BN_MILLION],["Percent",BN_HUNDRED]];function toPercentage(r,e){return`${(r.mul(MUL_P).div(e).toNumber()/100).toFixed(2)}%`}function decodeAbstractInt(r,e,t){return isU8a(r)?u8aToBn(r.subarray(0,e/8),{isLe:!0,isNegative:t}).toString():isBn(r)?r.toString():isHex(r,-1,!0)?hexToBn(r,{isLe:!1,isNegative:t}).toString():(isNumber(r)?assert(r<=Number.MAX_SAFE_INTEGER&&r>=Number.MIN_SAFE_INTEGER&&Math.floor(r)===r,"Number needs to be an integer <= Number.MAX_SAFE_INTEGER, i.e. 2 ^ 53 - 1"):isString(r)&&assert(!(r.includes(".")||r.includes(",")||r.includes("e")),"String should not contain decimal points or scientific notation"),bnToBn(r).toString())}var sr,Pr;class AbstractInt extends BN{constructor(t,n=0,s=DEFAULT_UINT_BITS,i=!1){super(isU8a(n)?u8aToBn(n.subarray(0,s/8),{isLe:!0,isNegative:i}).toString():decodeAbstractInt(n,s,i));G(this,sr,void 0);G(this,Pr,void 0);this.registry=t,te(this,sr,s),this.encodedLength=T(this,sr)/8,te(this,Pr,i);const a=this.gte(BN_ZERO),o=s-(i&&a?1:0);assert(i||a,()=>`${this.toRawType()}: Negative number passed to unsigned type`),assert(super.bitLength()<=o,()=>`${this.toRawType()}: Input too large. Found input with ${super.bitLength()} bits, expected ${o}`)}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isZero()}get isUnsigned(){return!T(this,Pr)}bitLength(){return T(this,sr)}eq(t){return super.eq(isHex(t)?hexToBn(t.toString(),{isLe:!1,isNegative:T(this,Pr)}):bnToBn(t))}inspect(){return{outer:[this.toU8a()]}}isMax(){return this.toU8a().filter(n=>n===255).length===T(this,sr)/8}toBigInt(){return BigInt(this.toString())}toBn(){return this}toHex(t=!1){return bnToHex(this,{bitLength:this.bitLength(),isLe:t,isNegative:!this.isUnsigned})}toHuman(t){const n=this.toRawType();if(n==="Balance")return this.isMax()?"everything":formatBalance(this,{decimals:this.registry.chainDecimals[0],withSi:!0,withUnit:this.registry.chainTokens[0]});const[,s]=FORMATTERS.find(([i])=>i===n)||[];return s?toPercentage(this,s):formatNumber(this)}toJSON(t=!1){return t||super.bitLength()>MAX_NUMBER_BITS?this.toHex():this.toNumber()}toRawType(){return this instanceof this.registry.createClassUnsafe("Balance")?"Balance":`${this.isUnsigned?"u":"i"}${this.bitLength()}`}toString(t){return super.toString(t)}toU8a(t){return bnToU8a(this,{bitLength:this.bitLength(),isLe:!0,isNegative:!this.isUnsigned})}}sr=new WeakMap,Pr=new WeakMap;var cn,Ut;class Base$2{constructor(e,t,n){G(this,cn,void 0);G(this,Ut,void 0);te(this,cn,e),te(this,Ut,t),this.initialU8aLength=n}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get inner(){return T(this,Ut)}get isEmpty(){return T(this,Ut).isEmpty}get registry(){return T(this,cn)}eq(e){return T(this,Ut).eq(e)}inspect(){return T(this,Ut).inspect()}toHex(e){return T(this,Ut).toHex(e)}toHuman(e){return T(this,Ut).toHuman(e)}toJSON(){return T(this,Ut).toJSON()}toString(){return T(this,Ut).toString()}toU8a(e){return T(this,Ut).toU8a(e)}toRawType(){return"Base"}unwrap(){return T(this,Ut)}}cn=new WeakMap,Ut=new WeakMap;function hasMismatch(r,e){return isUndefined(r)||(hasEq(r)?!r.eq(e):r!==e)}function notEntry(r){return!Array.isArray(r)||r.length!==2}function compareMapArray(r,e){return r.size===e.length&&!e.some(t=>notEntry(t)||hasMismatch(r.get(t[0]),t[1]))}function compareMap(r,e){return Array.isArray(e)?compareMapArray(r,e):e instanceof Map?compareMapArray(r,[...e.entries()]):isObject$2(e)?compareMapArray(r,Object.entries(e)):!1}function compareSetArray(r,e){return r.size===e.length&&!e.some(t=>!r.has(t))}function compareSet(r,e){return Array.isArray(e)?compareSetArray(r,e):e instanceof Set?compareSetArray(r,[...e.values()]):isObject$2(e)?compareSetArray(r,Object.values(e)):!1}function formatFailure(r,e,t,n){return`decodeU8a: failed at ${u8aToHex(t)}\u2026${n?` on ${n}`:""}${e?`: ${e}`:""}:: ${r.message}`}function getRawType(r,e){try{return new e(r).toRawType()}catch{return null}}function decodeU8a$5(r,e,t,n){const[s,i]=Array.isArray(t)?[t,[]]:[Object.values(t),Object.keys(t)],a=new Array(s.length);let o=0;for(let c=0;c<s.length;c++)try{const h=new s[c](r,e.subarray(o));o+=h.initialU8aLength||h.encodedLength,a[c]=n?[i[c],h]:h}catch(h){throw new Error(formatFailure(h,getRawType(r,s[c]),e.subarray(o,o+16),i[c]))}return[a,o]}function decodeU8aVec(r,e,t,n,s){const i=new Array(s);let a=t;for(let o=0;o<s;o++)try{const c=new n(r,e.subarray(a));a+=c.initialU8aLength||c.encodedLength,i[o]=c}catch(c){throw new Error(formatFailure(c,getRawType(r,n),e.subarray(a,a+16)))}return[i,a,a-t]}function typeToConstructor(r,e){return isString(e)?r.createClassUnsafe(e):e}function mapToTypeMap(r,e){const t=Object.entries(e),n={};for(let s=0;s<t.length;s++)n[t[s][0]]=typeToConstructor(r,t[s][1]);return n}const BOUNDED=["BTreeMap","BTreeSet","HashMap","Vec"],ALLOWED_BOXES=BOUNDED.concat(["Compact","DoNotConstruct","Int","Linkage","Range","RangeInclusive","Result","Option","UInt","WrapperKeepOpaque","WrapperOpaque"]),BOX_PRECEDING=["<","(","[",'"',","," "],mappings=[alias("<T::InherentOfflineReport as InherentOfflineReport>::Inherent","InherentOfflineReport",!1),alias("VecDeque<","Vec<",!1),cleanupCompact(),removeExtensions("Bounded",!0),removeExtensions("Weak",!1),removeTraits(),removePairOf(),removeWrap("Box<"),removeGenerics(),alias("String","Text"),alias("Vec<u8>","Bytes"),alias("&\\[u8\\]","Bytes"),alias("&'static\\[u8\\]","Bytes"),alias("RawAddress","Address"),alias("Lookup::Source","LookupSource"),alias("Lookup::Target","LookupTarget"),alias("exec::StorageKey","ContractStorageKey"),flattenSingleTuple(),removeColons()];function findClosing(r,e){let t=0;for(let n=e;n<r.length;n++)if(r[n]===">"){if(!t)return n;t--}else r[n]==="<"&&t++;throw new Error(`Unable to find closing matching <> on '${r}' (start ${e})`)}function alias(r,e,t=!0){const n=new RegExp(`(^${r}|${BOX_PRECEDING.map(i=>`\\${i}${r}`).join("|")})`,"g"),s=i=>(n.lastIndex=0,t&&BOX_PRECEDING.includes(i[0])?`${i[0]}${e}`:e);return i=>i.replace(n,s)}function cleanupCompact(){return r=>{for(let e=0;e<r.length;e++)if(r[e]==="<"){const t=findClosing(r,e+1)-14;r.substr(t,14)===" as HasCompact"&&(r=`Compact<${r.substr(e+1,t-e-1)}>`)}return r}}function flattenSingleTuple(){const r=/,\)/g,e=/\(([^,]+)\)/;return t=>(r.lastIndex=0,t.replace(r,")").replace(e,"$1"))}function replaceTagWith(r,e,t){let n=-1;for(;;){if(n=r.indexOf(e,n+1),n===-1)return r;const s=n+e.length,i=findClosing(r,s);r=`${r.substr(0,n)}${t(r.substr(s,i-s))}${r.substr(i+1)}`}}function removeExtensions(r,e){return t=>BOUNDED.reduce((n,s)=>replaceTagWith(n,`${r}${s}<`,i=>{const a=i.split(",").map(o=>o.trim()).filter(o=>o);return e&&a.pop(),`${s}<${a.join(",")}>`}),t)}function removeColons(){return(r,{allowNamespaces:e}={})=>{let t=0;for(;t!==-1;)if(t=r.indexOf("::"),t===0)r=r.substr(2);else if(t!==-1){if(e)return r;let n=t;for(;n!==-1&&!BOX_PRECEDING.includes(r[n]);)n--;r=`${r.substr(0,n+1)}${r.substr(t+2)}`}return r}}function removeGenerics(){return r=>{for(let e=0;e<r.length;e++)if(r[e]==="<"&&!ALLOWED_BOXES.find(n=>{const s=e-n.length;return s>=0&&r.substr(s,n.length)===n&&(s===0||BOX_PRECEDING.includes(r[s-1]))})){const n=findClosing(r,e+1);r=`${r.substr(0,e)}${r.substr(n+1)}`}return r}}function removePairOf(){const r=e=>`(${e},${e})`;return e=>replaceTagWith(e,"PairOf<",r)}function removeTraits(){const r=/\s/g,e=/(T|Self)::/g,t=/<(T|Self)asTrait>::/g,n=/<Tas[a-z]+::Trait>::/g,s=/<LookupasStaticLookup>/g,i=/::Type/g;return a=>(r.lastIndex=0,e.lastIndex=0,t.lastIndex=0,n.lastIndex=0,s.lastIndex=0,i.lastIndex=0,a.replace(r,"").replace(e,"").replace(t,"").replace(n,"").replace(s,"Lookup").replace(i,""))}function removeWrap(r){const e=t=>t;return t=>replaceTagWith(t,r,e)}const sanitizeMap=new Map;function sanitize(r,e){let t=r.toString();if(!e){const n=sanitizeMap.get(t);if(n)return n}for(let n=0;n<mappings.length;n++)t=mappings[n](t,e);return t=t.trim(),e||sanitizeMap.set(r.toString(),t),t}function isArrayLike$1(r){return r instanceof Uint8Array||Array.isArray(r)}function isCodec(r){return isFunction$3(r&&r.toU8a)}function isEnum(r){return isCodec(r)&&isNumber(r.index)&&isCodec(r.value)}function isNumberLike(r){return isNumber(r)||isBn(r)||isBigInt(r)}function sortArray(r,e){let t=0;const n=Math.min(r.length,e.length);for(let s=0;s<n;++s)if(t=sortAsc(r[s],e[s]),t!==0)return t;return r.length-e.length}function sortAsc(r,e){if(isNumberLike(r)&&isNumberLike(e))return bnToBn(r).cmp(bnToBn(e));if(r instanceof Map&&e instanceof Map)return sortAsc(Array.from(r.values()),Array.from(e.values()));if(isEnum(r)&&isEnum(e))return sortAsc(r.index,e.index)||sortAsc(r.value,e.value);if(isArrayLike$1(r)&&isArrayLike$1(e))return sortArray(r,e);if(isCodec(r)&&isCodec(e))return sortAsc(r.toU8a(!0),e.toU8a(!0));throw new Error(`Attempting to sort unrecognized values: ${stringify(r)} (typeof ${typeof r}) <-> ${stringify(e)} (typeof ${typeof e})`)}function sortSet(r){return new Set(Array.from(r).sort(sortAsc))}function sortMap(r){return new Map(Array.from(r.entries()).sort(([e],[t])=>sortAsc(e,t)))}function typesToMap(r,e){const t=Object.entries(e),n={};for(let s=0;s<t.length;s++){const[i,a]=t[s];n[i]=r.getClassName(a)||new a(r).toRawType()}return n}var Ar,Nt;const Sr=class{constructor(e,t,n=0){G(this,Ar,void 0);G(this,Nt,void 0);this.registry=e,te(this,Ar,typeToConstructor(e,t));const[s,i]=Sr.decodeCompact(e,T(this,Ar),n);this.initialU8aLength=i,te(this,Nt,s)}static with(e){return class extends Sr{constructor(t,n){super(t,e,n)}}}static decodeCompact(e,t,n){if(n instanceof Sr)return[new t(e,T(n,Nt)),0];if(n instanceof t)return[n,0];if(isString(n)||isNumber(n)||isBn(n)||isBigInt(n))return[new t(e,n),0];const[s,i]=compactFromU8a(n);return[new t(e,i),s]}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return T(this,Nt).isEmpty}bitLength(){return T(this,Nt).bitLength()}eq(e){return T(this,Nt).eq(e instanceof Sr?T(e,Nt):e)}inspect(){return{outer:[this.toU8a()]}}toBigInt(){return T(this,Nt).toBigInt()}toBn(){return T(this,Nt).toBn()}toHex(e){return T(this,Nt).toHex(e)}toHuman(e){return T(this,Nt).toHuman(e)}toJSON(){return T(this,Nt).toJSON()}toNumber(){return T(this,Nt).toNumber()}toRawType(){return`Compact<${this.registry.getClassName(T(this,Ar))||T(this,Nt).toRawType()}>`}toString(){return T(this,Nt).toString()}toU8a(e){return compactToU8a(T(this,Nt).toBn())}unwrap(){return T(this,Nt)}};let Compact=Sr;Ar=new WeakMap,Nt=new WeakMap;var Bt;const ls=class{constructor(e,t="DoNotConstruct"){G(this,Bt,void 0);throw this.registry=e,te(this,Bt,new Error(`DoNotConstruct: Cannot construct unknown type ${t}`)),T(this,Bt)}static with(e){return class extends ls{constructor(t){super(t,e)}}}get encodedLength(){throw T(this,Bt)}get hash(){throw T(this,Bt)}get isEmpty(){throw T(this,Bt)}eq(){throw T(this,Bt)}inspect(){throw T(this,Bt)}toHex(){throw T(this,Bt)}toHuman(){throw T(this,Bt)}toJSON(){throw T(this,Bt)}toRawType(){throw T(this,Bt)}toString(){throw T(this,Bt)}toU8a(){throw T(this,Bt)}};let DoNotConstruct=ls;Bt=new WeakMap;class Null{constructor(e){je(this,"initialU8aLength",0);this.registry=e}get encodedLength(){return 0}get hash(){throw new Error(".hash is not implemented on Null")}get isEmpty(){return!0}eq(e){return e instanceof Null||isNull(e)}inspect(){return{}}toHex(){return"0x"}toHuman(){return this.toJSON()}toJSON(){return null}toRawType(){return"Null"}toString(){return""}toU8a(e){return new Uint8Array}}function isRustEnum$1(r){const e=Object.values(r);return e.some(t=>isNumber(t))?(assert(e.every(t=>isNumber(t)&&t>=0&&t<=255),"Invalid number-indexed enum definition"),!1):!0}function extractDef(r,e){const t={};let n,s;if(Array.isArray(e)){for(let i=0;i<e.length;i++)t[e[i]]={Type:Null,index:i};n=!0,s=!1}else if(isRustEnum$1(e)){const i=Object.entries(mapToTypeMap(r,e));for(let a=0;a<i.length;a++){const[o,c]=i[a];t[o]={Type:c,index:a}}n=!Object.values(t).some(({Type:a})=>a!==Null),s=!1}else{const i=Object.entries(e);for(let a=0;a<i.length;a++){const[o,c]=i[a];t[o]={Type:Null,index:c}}n=!0,s=!0}return{def:t,isBasic:n,isIndexed:s}}function createFromValue(r,e,t=0,n){const s=Object.values(e).find(i=>i.index===t);return assert(!isUndefined(s),()=>`Unable to create Enum via index ${t}, in ${Object.keys(e).join(", ")}`),{index:t,value:n instanceof s.Type?n:new s.Type(r,n)}}function decodeFromJSON(r,e,t,n){const s=Object.keys(e).map(o=>o.toLowerCase()),i=t.toLowerCase(),a=s.indexOf(i);assert(a!==-1,()=>`Cannot map Enum JSON, unable to find '${t}' in ${s.join(", ")}`);try{return createFromValue(r,e,Object.values(e)[a].index,n)}catch(o){throw new Error(`Enum(${t}):: ${o.message}`)}}function decodeEnum(r,e,t,n){if(isNumber(n))return createFromValue(r,e,n,t);if(isU8a(t)||isHex(t)){const s=u8aToU8a(t);if(s.length)return createFromValue(r,e,s[0],s.subarray(1))}else{if(t instanceof Enum)return createFromValue(r,e,t.index,t.value);if(isNumber(t))return createFromValue(r,e,t);if(isString(t))return decodeFromJSON(r,e,t.toString());if(isObject$2(t)){const s=Object.keys(t)[0];return decodeFromJSON(r,e,s,t[s])}}return createFromValue(r,e,Object.values(e)[0].index)}var Er,Mr,Jt,Kt,un,Vt;const Zn=class{constructor(e,t,n,s){G(this,Er,void 0);G(this,Mr,void 0);G(this,Jt,void 0);G(this,Kt,void 0);G(this,un,void 0);G(this,Vt,void 0);const{def:i,isBasic:a,isIndexed:o}=extractDef(e,t),c=isU8a(n)&&n.length&&!isNumber(s)?createFromValue(e,i,n[0],n.subarray(1)):decodeEnum(e,i,n,s);this.registry=e,te(this,Er,i),te(this,Kt,a),te(this,un,o),te(this,Jt,Object.values(i).map(({index:h})=>h)),te(this,Mr,T(this,Jt).indexOf(c.index)||0),te(this,Vt,c.value),T(this,Vt).initialU8aLength&&(this.initialU8aLength=1+T(this,Vt).initialU8aLength)}static with(e){const t=Array.isArray(e)?e:Object.keys(e),n=new Array(t.length),s=new Array(t.length);for(let i=0;i<t.length;i++){const a=stringPascalCase(t[i].replace(" ","_"));n[i]=`as${a}`,s[i]=`is${a}`}return class extends Zn{constructor(i,a,o){super(i,e,a,o),objectProperties(this,s,(c,h)=>this.type===t[h]),objectProperties(this,n,(c,h)=>(assert(this[s[h]],()=>`Cannot convert '${this.type}' via ${c}`),this.value))}}}get encodedLength(){return 1+T(this,Vt).encodedLength}get hash(){return this.registry.hash(this.toU8a())}get index(){return T(this,Jt)[T(this,Mr)]}get inner(){return T(this,Vt)}get isBasic(){return T(this,Kt)}get isEmpty(){return T(this,Vt).isEmpty}get isNone(){return T(this,Vt)instanceof Null}get isNull(){return T(this,Vt)instanceof Null}get defIndexes(){return T(this,Jt)}get defKeys(){return Object.keys(T(this,Er))}get type(){return this.defKeys[T(this,Mr)]}get value(){return T(this,Vt)}eq(e){return isU8a(e)?!this.toU8a().some((t,n)=>t!==e[n]):isNumber(e)?this.toNumber()===e:T(this,Kt)&&isString(e)?this.type===e:isHex(e)?this.toHex()===e:e instanceof Zn?this.index===e.index&&this.value.eq(e.value):isObject$2(e)?this.value.eq(e[this.type]):this.value.eq(e)}inspect(){if(this.isBasic)return{outer:[new Uint8Array([this.index])]};const{inner:e,outer:t=[]}=T(this,Vt).inspect();return{inner:e,outer:[new Uint8Array([this.index]),...t]}}toHex(){return u8aToHex(this.toU8a())}toHuman(e){return T(this,Kt)||this.isNone?this.type:{[this.type]:T(this,Vt).toHuman(e)}}toJSON(){return T(this,Kt)?this.type:{[stringCamelCase(this.type)]:T(this,Vt).toJSON()}}toNumber(){return this.index}_toRawStruct(){if(T(this,Kt))return T(this,un)?this.defKeys.reduce((t,n,s)=>(t[n]=T(this,Jt)[s],t),{}):this.defKeys;const e=Object.entries(T(this,Er)).reduce((t,[n,{Type:s}])=>(t[n]=s,t),{});return typesToMap(this.registry,e)}toRawType(){return stringify({_enum:this._toRawStruct()})}toString(){return this.isNull?this.type:stringify(this.toJSON())}toU8a(e){return u8aConcat(new Uint8Array(e?[]:[this.index]),T(this,Vt).toU8a(e))}};let Enum=Zn;Er=new WeakMap,Mr=new WeakMap,Jt=new WeakMap,Kt=new WeakMap,un=new WeakMap,Vt=new WeakMap;class Int extends AbstractInt{constructor(e,t=0,n){super(e,t,n,!0)}static with(e,t){return class extends Int{constructor(n,s){super(n,s,e)}toRawType(){return t||super.toRawType()}}}}class None extends Null{toRawType(){return"None"}}function decodeOption(r,e,t){return t instanceof Option&&(t=t.value),isNull(t)||isUndefined(t)||t==="0x"||t instanceof None?new None(r):t instanceof e?t:isU8a(t)?!t.length||t[0]===0?new None(r):new e(r,t.subarray(1)):new e(r,t)}var ir,ln,Rt;const Yn=class{constructor(e,t,n){G(this,ir,void 0);G(this,ln,void 0);G(this,Rt,void 0);const s=typeToConstructor(e,t),i=isU8a(n)&&n.length&&!isCodec$1(n)?n[0]===0?new None(e):new s(e,n.subarray(1)):decodeOption(e,s,n);this.registry=e,te(this,ir,s),te(this,Rt,i),i&&i.initialU8aLength&&te(this,ln,1+i.initialU8aLength)}static with(e){return class extends Yn{constructor(t,n){super(t,e,n)}}}get encodedLength(){return 1+T(this,Rt).encodedLength}get initialU8aLength(){return T(this,ln)}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isNone}get isNone(){return T(this,Rt)instanceof None}get isSome(){return!this.isNone}get value(){return T(this,Rt)}eq(e){return e instanceof Yn?this.isSome===e.isSome&&this.value.eq(e.value):this.value.eq(e)}inspect(){if(this.isNone)return{outer:[new Uint8Array([0])]};const{inner:e,outer:t=[]}=T(this,Rt).inspect();return{inner:e,outer:[new Uint8Array([1]),...t]}}toHex(){return this.isNone?"0x":u8aToHex(this.toU8a().subarray(1))}toHuman(e){return T(this,Rt).toHuman(e)}toJSON(){return this.isNone?null:T(this,Rt).toJSON()}toRawType(e){const t=this.registry.getClassName(T(this,ir))||new(T(this,ir))(this.registry).toRawType();return e?t:`Option<${t}>`}toString(){return T(this,Rt).toString()}toU8a(e){if(e)return T(this,Rt).toU8a(!0);const t=new Uint8Array(this.encodedLength);return this.isSome&&(t.set([1]),t.set(T(this,Rt).toU8a(),1)),t}unwrap(){return assert(this.isSome,"Option: unwrapping a None value"),T(this,Rt)}unwrapOr(e){return this.isSome?this.unwrap():e}unwrapOrDefault(){return this.isSome?this.unwrap():new(T(this,ir))(this.registry)}};let Option=Yn;ir=new WeakMap,ln=new WeakMap,Rt=new WeakMap;class Result extends Enum{constructor(e,t,n,s){super(e,{Ok:t,Err:n},s)}static with(e){return class extends Result{constructor(t,n){super(t,e.Ok,e.Err,n)}}}get asErr(){return assert(this.isErr,"Cannot extract Err value from Ok result, check isErr first"),this.value}get asError(){return this.asErr}get asOk(){return assert(this.isOk,"Cannot extract Ok value from Err result, check isOk first"),this.value}get isEmpty(){return this.isOk&&this.value.isEmpty}get isErr(){return!this.isOk}get isError(){return this.isErr}get isOk(){return this.index===0}toRawType(){const e=this._toRawStruct();return`Result<${e.Ok},${e.Err}>`}}function decodeTuple(r,e,t){return isU8a(t)||isHex(t)?decodeU8a$5(r,u8aToU8a(t),e):[(Array.isArray(e)?e:Object.values(e)).map((s,i)=>{try{const a=t==null?void 0:t[i];return a instanceof s?a:new s(r,a)}catch(a){throw new Error(`Tuple: failed on ${i}:: ${a.message}`)}}),0]}var qt;const ds=class extends AbstractArray{constructor(t,n,s){const i=Array.isArray(n)?n.map(c=>typeToConstructor(t,c)):isFunction$3(n)||isString(n)?[typeToConstructor(t,n)]:mapToTypeMap(t,n),[a,o]=isU8a(s)?decodeU8a$5(t,s,i):decodeTuple(t,i,s);super(t,a,o);G(this,qt,void 0);te(this,qt,i)}static with(t){return class extends ds{constructor(n,s){super(n,t,s)}}}get encodedLength(){let t=0;for(let n=0;n<this.length;n++)t+=this[n].encodedLength;return t}get Types(){return Array.isArray(T(this,qt))?T(this,qt).map(t=>new t(this.registry).toRawType()):Object.keys(T(this,qt))}inspect(){return{inner:this.inspectInner()}}toRawType(){return`(${(Array.isArray(T(this,qt))?T(this,qt):Object.values(T(this,qt))).map(n=>this.registry.getClassName(n)||new n(this.registry).toRawType()).join(",")})`}toString(){return stringify(this.toJSON())}toU8a(t){return u8aConcat(...this.toU8aInner(t))}};let Tuple=ds;qt=new WeakMap;class UInt extends AbstractInt{static with(e,t){return class extends UInt{constructor(n,s){super(n,s,e)}toRawType(){return t||super.toRawType()}}}}const MAX_LENGTH$2=64*1024,l$e=logger("Vec");function decodeVec(r,e,t,n=-1){if(Array.isArray(t)){const a=new Array(t.length);for(let o=0;o<t.length;o++){const c=t[o];try{a[o]=c instanceof e?c:new e(r,c)}catch(h){throw l$e.error(`Unable to decode on index ${o}`,h.message),h}}return[a,0,0]}const s=u8aToU8a(t);let i=0;if(n===-1){const[a,o]=compactFromU8a(s);assert(o.lten(MAX_LENGTH$2),()=>`Vec length ${o.toString()} exceeds ${MAX_LENGTH$2}`),n=o.toNumber(),i=a}return decodeU8aVec(r,s,i,e,n)}var _t;const fs=class extends AbstractArray{constructor(t,n,s=[]){const i=typeToConstructor(t,n),[a,o]=decodeVec(t,i,s);super(t,a,o);G(this,_t,void 0);te(this,_t,i)}static with(t){return class extends fs{constructor(n,s){super(n,t,s)}}}get Type(){return T(this,_t).name}indexOf(t){const n=t instanceof T(this,_t)?t:new(T(this,_t))(this.registry,t);for(let s=0;s<this.length;s++)if(n.eq(this[s]))return s;return-1}toRawType(){return`Vec<${this.registry.getClassName(T(this,_t))||new(T(this,_t))(this.registry).toRawType()}>`}};let Vec=fs;_t=new WeakMap;function decodeVecFixed(r,e,t,n){const[s,i,a]=decodeVec(r,t,e,n);for(;s.length<n;)s.push(new t(r));return assert(s.length===n,()=>`Expected a length of exactly ${n} entries`),[s,i,a]}var dn;const hs=class extends AbstractArray{constructor(t,n,s,i=[]){const a=typeToConstructor(t,n),[o,,c]=isU8a(i)?decodeU8aVec(t,i,0,a,s):decodeVecFixed(t,i,a,s);super(t,o,c);G(this,dn,void 0);te(this,dn,a)}static with(t,n){return class extends hs{constructor(s,i){super(s,t,n,i)}}}get Type(){return new(T(this,dn))(this.registry).toRawType()}get encodedLength(){let t=0;for(let n=0;n<this.length;n++)t+=this[n].encodedLength;return t}inspect(){return{inner:this.inspectInner()}}toU8a(){const t=this.toU8aInner();return t.length?u8aConcat(...t):new Uint8Array([])}toRawType(){return`[${this.Type};${this.length}]`}};let VecFixed=hs;dn=new WeakMap;class Raw extends Uint8Array{constructor(e,t,n){super(u8aToU8a(t)),this.registry=e,this.initialU8aLength=n}get encodedLength(){return this.length}get hash(){return this.registry.hash(this.toU8a())}get isAscii(){return isAscii(this)}get isEmpty(){return!this.length||isUndefined(this.find(e=>!!e))}get isUtf8(){return isUtf8(this)}get length(){return super.length}bitLength(){return this.length*8}eq(e){return e instanceof Uint8Array?this.length===e.length&&!this.some((t,n)=>t!==e[n]):this.eq(u8aToU8a(e))}inspect(){return{outer:[this.toU8a()]}}slice(e,t){return Uint8Array.from(this).slice(e,t)}subarray(e,t){return Uint8Array.from(this).subarray(e,t)}toHex(){return u8aToHex(this)}toHuman(){if(this.isAscii){const e=this.toUtf8();if(isAscii(e))return e}return this.toJSON()}toJSON(){return this.toHex()}toRawType(){return"Raw"}toString(){return this.toHex()}toU8a(e){return Uint8Array.from(this)}toUtf8(){return assert(this.isUtf8,"The character sequence is not a valid Utf8 string"),u8aToString(this)}}function decodeBitVecU8a(r){if(!r||!r.length)return[0,new Uint8Array];const[e,t]=compactFromU8a(r),n=e+Math.ceil(t.toNumber()/8);return assert(n<=r.length,()=>`BitVec: required length less than remainder, expected at least ${n}, found ${r.length}`),[t.toNumber(),r.subarray(e,n)]}function decodeBitVec(r){if(Array.isArray(r)||isString(r)){const e=u8aToU8a(r);return[e.length/8,e]}return decodeBitVecU8a(r)}var ar,fn;class BitVec extends Raw{constructor(t,n,s=!1){const[i,a]=decodeBitVec(n);super(t,a);G(this,ar,void 0);G(this,fn,void 0);te(this,ar,i),te(this,fn,s)}get encodedLength(){return this.length+compactToU8a(T(this,ar)).length}inspect(){return{outer:[compactToU8a(T(this,ar)),super.toU8a()]}}toHuman(){return`0b${[...this.toU8a(!0)].map(t=>`00000000${t.toString(2)}`.slice(-8)).map(t=>T(this,fn)?t:t.split("").reverse().join("")).join("_")}`}toRawType(){return"BitVec"}toU8a(t){const n=super.toU8a();return t?n:u8aConcat(compactToU8a(T(this,ar)),n)}}ar=new WeakMap,fn=new WeakMap;function decodeStructFromObject(r,e,t,n){let s;const i=Object.keys(e),a=Array.isArray(t),o=t instanceof Map;assert(a||o||isObject$2(t),()=>`Struct: Cannot decode value ${stringify(t)} (typeof ${typeof t}), expected an input object, map or array`),assert(!a||t.length===i.length,()=>`Struct: Unable to map ${stringify(t)} array to object with known keys ${i.join(", ")}`);const c=new Array(i.length);for(let h=0;h<i.length;h++){const y=i[h],x=n.get(y)||y,E=e[y];let V;try{if(a)V=t[h];else if(o)V=x&&t.get(x);else if(V=x&&t[x],isUndefined(V)){if(isUndefined(s)){const F=Object.entries(t);s={};for(let q=0;q<F.length;q++)s[stringCamelCase(F[q][0])]=F[q][1]}V=x&&s[x]}c[h]=[y,V instanceof E?V:new E(r,V)]}catch(F){let q=E.name;try{q=new E(r).toRawType()}catch{}throw new Error(`Struct: failed on ${x}: ${q}:: ${F.message}`)}}return[c,0]}var hn,pn,or;const Jn=class extends Map{constructor(t,n,s,i=new Map){const a=mapToTypeMap(t,n),[o,c]=isU8a(s)?decodeU8a$5(t,s,a,!0):isHex(s)?decodeU8a$5(t,u8aToU8a(s),a,!0):s instanceof Jn?[s,0]:decodeStructFromObject(t,a,s||{},i);super(o);G(this,hn,void 0);G(this,pn,void 0);G(this,or,void 0);te(this,hn,t),this.initialU8aLength=c,te(this,pn,i),te(this,or,a)}static with(t,n){const s=Object.keys(t);return class extends Jn{constructor(i,a){super(i,t,a,n),objectProperties(this,s,o=>this.get(o))}}}get defKeys(){return Object.keys(T(this,or))}getT(t){return this.get(t)}get isEmpty(){for(const t of this.values())if(!t.isEmpty)return!1;return!0}get Type(){const t={},n=Object.entries(T(this,or));for(let s=0;s<n.length;s++){const[i,a]=n[s];t[i]=new a(this.registry).toRawType()}return t}get encodedLength(){let t=0;for(const n of this.values())t+=n.encodedLength;return t}get hash(){return this.registry.hash(this.toU8a())}get registry(){return T(this,hn)}eq(t){return compareMap(this,t)}get(t){return super.get(t)}getAtIndex(t){return this.toArray()[t]}inspect(){const t=new Array;for(const[n,s]of this.entries())t.push(Je(Ce({},s.inspect()),{name:stringCamelCase(n)}));return{inner:t}}toArray(){return[...this.values()]}toHex(){return u8aToHex(this.toU8a())}toHuman(t){const n={};for(const[s,i]of this.entries())n[s]=i&&i.toHuman(t);return n}toJSON(){const t={};for(const[n,s]of this.entries()){const i=T(this,pn).get(n)||n;t[i]=s&&s.toJSON()}return t}toRawType(){return stringify(typesToMap(this.registry,T(this,or)))}toString(){return stringify(this.toJSON())}toU8a(t){const n=[];for(const[s,i]of this.entries())i&&isFunction$3(i.toU8a)&&n.push(i.toU8a(!t||isBoolean(t)?t:t[s]));return u8aConcat(...n)}};let Struct=Jn;hn=new WeakMap,pn=new WeakMap,or=new WeakMap;const l$d=logger("Map");function decodeMapFromU8a(r,e,t,n){const s=new Map,[i,a]=compactFromU8a(n),o=a.toNumber(),c=[];for(let x=0;x<o;x++)c.push(e,t);const[h,y]=decodeU8a$5(r,n.subarray(i),c);for(let x=0;x<h.length;x+=2)s.set(h[x],h[x+1]);return[s,i+y]}function decodeMapFromMap(r,e,t,n){const s=new Map;for(const[i,a]of n.entries()){const o=e.prototype instanceof AbstractArray||e.prototype instanceof Struct||e.prototype instanceof Enum;try{s.set(i instanceof e?i:new e(r,o?JSON.parse(i):i),a instanceof t?a:new t(r,a))}catch(c){throw l$d.error("Failed to decode key or value:",c.message),c}}return[s,0]}function decodeMap(r,e,t,n){const s=typeToConstructor(r,e),i=typeToConstructor(r,t);if(n){if(isU8a(n)||isHex(n))return decodeMapFromU8a(r,s,i,u8aToU8a(n));if(n instanceof Map)return decodeMapFromMap(r,s,i,n);if(isObject$2(n))return decodeMapFromMap(r,s,i,new Map(Object.entries(n)))}else return[new Map,0];throw new Error("Map: cannot decode type")}var Nr,kr,mn;class CodecMap extends Map{constructor(t,n,s,i,a="HashMap"){const[o,c]=decodeMap(t,n,s,i);super(a==="BTreeMap"?sortMap(o):o);G(this,Nr,void 0);G(this,kr,void 0);G(this,mn,void 0);this.registry=t,this.initialU8aLength=c,te(this,Nr,typeToConstructor(t,n)),te(this,kr,typeToConstructor(t,s)),te(this,mn,a)}get encodedLength(){let t=compactToU8a(this.size).length;for(const[n,s]of this.entries())t+=n.encodedLength+s.encodedLength;return t}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.size===0}eq(t){return compareMap(this,t)}inspect(){const t=new Array;for(const[n,s]of this.entries())t.push(n.inspect()),t.push(s.inspect());return{inner:t,outer:[compactToU8a(this.size)]}}toHex(){return u8aToHex(this.toU8a())}toHuman(t){const n={};for(const[s,i]of this.entries())n[s.toString()]=i.toHuman(t);return n}toJSON(){const t={};for(const[n,s]of this.entries())t[n.toString()]=s.toJSON();return t}toRawType(){return`${T(this,mn)}<${this.registry.getClassName(T(this,Nr))||new(T(this,Nr))(this.registry).toRawType()},${this.registry.getClassName(T(this,kr))||new(T(this,kr))(this.registry).toRawType()}>`}toString(){return stringify(this.toJSON())}toU8a(t){const n=new Array;t||n.push(compactToU8a(this.size));for(const[s,i]of this.entries())n.push(s.toU8a(t),i.toU8a(t));return u8aConcat(...n)}}Nr=new WeakMap,kr=new WeakMap,mn=new WeakMap;class BTreeMap extends CodecMap{static with(e,t){return class extends BTreeMap{constructor(n,s){super(n,e,t,s,"BTreeMap")}}}}const l$c=logger("BTreeSet");function decodeSetFromU8a(r,e,t){const n=new Set,[s,i]=compactFromU8a(t),[a,o]=decodeU8aVec(r,t,s,e,i.toNumber());for(let c=0;c<a.length;c++)n.add(a[c]);return[n,o]}function decodeSetFromSet(r,e,t){const n=new Set;return t.forEach(s=>{try{n.add(s instanceof e?s:new e(r,s))}catch(i){throw l$c.error("Failed to decode key or value:",i.message),i}}),[n,0]}function decodeSet$1(r,e,t){if(!t)return[new Set,0];const n=typeToConstructor(r,e);if(isU8a(t)||isHex(t))return decodeSetFromU8a(r,n,u8aToU8a(t));if(Array.isArray(t)||t instanceof Set)return decodeSetFromSet(r,n,t);throw new Error("BTreeSet: cannot decode type")}var Cr;const ps=class extends Set{constructor(t,n,s){const[i,a]=decodeSet$1(t,n,s);super(sortSet(i));G(this,Cr,void 0);this.registry=t,this.initialU8aLength=a,te(this,Cr,typeToConstructor(t,n))}static with(t){return class extends ps{constructor(n,s){super(n,t,s)}}}get encodedLength(){let t=compactToU8a(this.size).length;for(const n of this.values())t+=n.encodedLength;return t}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.size===0}get strings(){return[...super.values()].map(t=>t.toString())}eq(t){return compareSet(this,t)}inspect(){const t=new Array;for(const n of this.values())t.push(n.inspect());return{inner:t,outer:[compactToU8a(this.size)]}}toHex(){return u8aToHex(this.toU8a())}toHuman(t){const n=[];for(const s of this.values())n.push(s.toHuman(t));return n}toJSON(){const t=[];for(const n of this.values())t.push(n.toJSON());return t}toRawType(){return`BTreeSet<${this.registry.getClassName(T(this,Cr))||new(T(this,Cr))(this.registry).toRawType()}>`}toString(){return stringify(this.toJSON())}toU8a(t){const n=new Array;t||n.push(compactToU8a(this.size));for(const s of this.values())n.push(s.toU8a(t));return u8aConcat(...n)}};let BTreeSet=ps;Cr=new WeakMap;const MAX_LENGTH$1=10*1024*1024;function decodeBytesU8a(r){if(!r.length)return[new Uint8Array,0];const[e,t]=compactFromU8a(r),n=e+t.toNumber();return assert(t.lten(MAX_LENGTH$1),()=>`Bytes length ${t.toString()} exceeds ${MAX_LENGTH$1}`),assert(n<=r.length,()=>`Bytes: required length less than remainder, expected at least ${n}, found ${r.length}`),[r.subarray(e,n),n]}function decodeBytes(r){return Array.isArray(r)||isString(r)?[u8aToU8a(r),0]:!(r instanceof Raw)&&isU8a(r)?decodeBytesU8a(r):[r,0]}class Bytes extends Raw{constructor(e,t){const[n,s]=decodeBytes(t);super(e,n,s)}get encodedLength(){return this.length+compactToU8a(this.length).length}inspect(){const e=compactToU8a(this.length);return{outer:this.length?[e,super.toU8a()]:[e]}}toRawType(){return"Bytes"}toU8a(e){return e?super.toU8a(e):compactAddLength(this)}}class HashMap extends CodecMap{static with(e,t){return class extends HashMap{constructor(n,s){super(n,e,t,s)}}}}var yn;const ms=class extends Tuple{constructor(t,n,s,i="Range"){super(t,{end:n,start:n},s);G(this,yn,void 0);te(this,yn,i)}static with(t){return class extends ms{constructor(n,s){super(n,t,s)}}}get start(){return this[0]}get end(){return this[1]}toRawType(){return`${T(this,yn)}<${this.start.toRawType()}>`}};let Range=ms;yn=new WeakMap;class RangeInclusive extends Range{constructor(e,t,n){super(e,t,n,"RangeInclusive")}static with(e){return class extends RangeInclusive{constructor(t,n){super(t,e,n)}}}}const MAX_LENGTH=128*1024;function decodeText(r){if(isU8a(r)){if(!r.length)return["",0];if(r instanceof Raw)return[u8aToString(r),0];const[e,t]=compactFromU8a(r),n=e+t.toNumber();return assert(t.lten(MAX_LENGTH),()=>`Text: length ${t.toString()} exceeds ${MAX_LENGTH}`),assert(n<=r.length,()=>`Text: required length less than remainder, expected at least ${n}, found ${r.length}`),[u8aToString(r.subarray(e,n)),n]}else if(isHex(r))return[u8aToString(hexToU8a(r)),0];return[r?r.toString():"",0]}var gn,xn;class Text extends String{constructor(t,n){const[s,i]=decodeText(n);super(s);G(this,gn,void 0);G(this,xn,null);this.registry=t,te(this,gn,i)}get encodedLength(){return this.toU8a().length}get initialU8aLength(){return T(this,gn)}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.length===0}get length(){return super.length}eq(t){return isString(t)?this.toString()===t.toString():!1}inspect(){const t=stringToU8a(super.toString());return{outer:t.length?[compactToU8a(t.length),t]:[compactToU8a(t.length)]}}setOverride(t){te(this,xn,t)}toHex(){return u8aToHex(this.toU8a(!0))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toRawType(){return"Text"}toString(){return T(this,xn)||super.toString()}toU8a(t){const n=stringToU8a(super.toString());return t?n:compactAddLength(n)}}gn=new WeakMap,xn=new WeakMap;class Type extends Text{constructor(e,t=""){super(e,t),this.setOverride(sanitize(this.toString()))}toRawType(){return"Type"}}function decodeU8aFixed(r,e){const t=u8aToU8a(r),n=e/8;return t.length?(assert(isU8a(r)?t.length>=n:t.length===n,()=>`Expected input with ${n} bytes (${e} bits), found ${t.length} bytes`),[t.subarray(0,n),n]):[new Uint8Array(n),0]}class U8aFixed extends Raw{constructor(e,t=new Uint8Array,n=256){const[s,i]=decodeU8aFixed(t,n);super(e,s,i)}static with(e,t){return class extends U8aFixed{constructor(n,s){super(n,s,e)}toRawType(){return t||super.toRawType()}}}toRawType(){return`[u8;${this.length}]`}}function decodeRaw(r,e,t){const n=typeToConstructor(r,e);if(isU8a(t)||isHex(t))try{const[,i]=isHex(t)||t instanceof Raw?[0,t]:compactStripLength(t);return[n,new n(r,i),t]}catch{return[n,null,t]}const s=new n(r,t);return[n,s,compactAddLength(s.toU8a())]}var Ir,Lt,Br;const ys=class extends Bytes{constructor(t,n,s,i="WrapperKeepOpaque"){const[a,o,c]=decodeRaw(t,n,s);super(t,c);G(this,Ir,void 0);G(this,Lt,void 0);G(this,Br,void 0);te(this,Ir,a),te(this,Lt,o),te(this,Br,i)}static with(t){return class extends ys{constructor(n,s){super(n,t,s)}}}get isDecoded(){return!!T(this,Lt)}inspect(){return T(this,Lt)?{inner:[T(this,Lt).inspect()],outer:[compactToU8a(this.length)]}:{outer:[compactToU8a(this.length),this.toU8a(!0)]}}toHuman(t){return T(this,Lt)?T(this,Lt).toHuman(t):super.toHuman()}toRawType(){return`${T(this,Br)}<${this.registry.getClassName(T(this,Ir))||(T(this,Lt)?T(this,Lt).toRawType():new(T(this,Ir))(this.registry).toRawType())}>`}toString(){return T(this,Lt)?T(this,Lt).toString():super.toString()}unwrap(){return assertReturn(T(this,Lt),()=>`${T(this,Br)}: unwrapping an undecodable value`)}};let WrapperKeepOpaque=ys;Ir=new WeakMap,Lt=new WeakMap,Br=new WeakMap;class WrapperOpaque extends WrapperKeepOpaque{constructor(e,t,n){super(e,t,n,"WrapperOpaque")}static with(e){return class extends WrapperOpaque{constructor(t,n){super(t,e,n)}}}get inner(){return this.unwrap()}}function decodeBool(r){return isU8a(r)?r[0]===1:r instanceof Boolean?r.valueOf():!!r}class bool extends Boolean{constructor(e,t=!1){super(decodeBool(t)),this.registry=e}get encodedLength(){return 1}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isFalse}get isFalse(){return!this.isTrue}get isTrue(){return this.valueOf()}eq(e){return this.valueOf()===(e instanceof Boolean?e.valueOf():e)}inspect(){return{outer:[this.toU8a()]}}toHex(){return u8aToHex(this.toU8a())}toHuman(){return this.toJSON()}toJSON(){return this.valueOf()}toRawType(){return"bool"}toString(){return this.toJSON().toString()}toU8a(e){return new Uint8Array([this.valueOf()?1:0])}}function decodeJson(r){return Object.entries(r||{})}class Json extends Map{constructor(e,t){const n=decodeJson(t);super(n),this.registry=e,objectProperties(this,n.map(([s])=>s),s=>this.get(s))}get encodedLength(){return 0}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return[...this.keys()].length===0}eq(e){return compareMap(this,e)}getT(e){return this.get(e)}inspect(){throw new Error("Unimplemented")}toHex(){throw new Error("Unimplemented")}toHuman(){return[...this.entries()].reduce((e,[t,n])=>(e[t]=isFunction$3(n.toHuman)?n.toHuman():n,e),{})}toJSON(){return[...this.entries()].reduce((e,[t,n])=>(e[t]=n,e),{})}toRawType(){return"Json"}toString(){return stringify(this.toJSON())}toU8a(e){throw new Error("Unimplemented")}}function encodeSet(r,e){const t=new BN(0);for(let n=0;n<e.length;n++)t.ior(bnToBn(r[e[n]]||0));return t}function decodeSetArray(r,e){const t=new Array(e.length);for(let n=0;n<e.length;n++){const s=e[n];assert(!isUndefined(r[s]),()=>`Set: Invalid key '${s}' passed to Set, allowed ${Object.keys(r).join(", ")}`),t[n]=s}return t}function decodeSetNumber(r,e){const t=bnToBn(e),n=Object.keys(r),s=[];for(let a=0;a<n.length;a++){const o=n[a];t.and(bnToBn(r[o])).eq(bnToBn(r[o]))&&s.push(o)}const i=encodeSet(r,s);return assert(t.eq(i),()=>`Set: Mismatch decoding '${t.toString()}', computed as '${i.toString()}' with ${s.join(", ")}`),s}function decodeSet(r,e=0,t){assert(t%8===0,()=>`Expected valid bitLength, power of 8, found ${t}`);const n=t/8;if(isU8a(e))return e.length===0?[]:decodeSetNumber(r,u8aToBn(e.subarray(0,n),{isLe:!0}));if(isString(e))return decodeSet(r,u8aToU8a(e),n);if(e instanceof Set||Array.isArray(e)){const s=Array.isArray(e)?e:[...e.values()];return decodeSetArray(r,s)}return decodeSetNumber(r,e)}var Qt,Vr;const gs=class extends Set{constructor(t,n,s,i=8){super(decodeSet(n,s,i));G(this,Qt,void 0);G(this,Vr,void 0);je(this,"add",t=>(assert(isUndefined(T(this,Qt))||!isUndefined(T(this,Qt)[t]),()=>`Set: Invalid key '${t}' on add`),super.add(t),this));this.registry=t,te(this,Qt,n),te(this,Vr,i/8)}static with(t,n){const s=Object.keys(t),i=new Array(s.length);for(let a=0;a<s.length;a++)i[a]=`is${stringPascalCase(s[a])}`;return class extends gs{constructor(a,o){super(a,t,o,n),objectProperties(this,i,(c,h)=>this.strings.includes(s[h]))}}}get encodedLength(){return T(this,Vr)}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.size===0}get strings(){return[...super.values()]}get valueEncoded(){return encodeSet(T(this,Qt),this.strings)}eq(t){return Array.isArray(t)?compareArray(this.strings.sort(),t.sort()):t instanceof Set?this.eq([...t.values()]):isNumber(t)||isBn(t)?this.valueEncoded.eq(bnToBn(t)):!1}inspect(){return{outer:[this.toU8a()]}}toHex(){return u8aToHex(this.toU8a())}toHuman(){return this.toJSON()}toJSON(){return this.strings}toNumber(){return this.valueEncoded.toNumber()}toRawType(){return stringify({_set:T(this,Qt)})}toString(){return`[${this.strings.join(", ")}]`}toU8a(t){return bnToU8a(this.valueEncoded,{bitLength:T(this,Vr)*8,isLe:!0})}};let CodecSet=gs;Qt=new WeakMap,Vr=new WeakMap;class i8 extends Int.with(8){constructor(){super(...arguments);je(this,"__IntType","i8")}}class i16 extends Int.with(16){constructor(){super(...arguments);je(this,"__IntType","i16")}}class i32 extends Int.with(32){constructor(){super(...arguments);je(this,"__IntType","i32")}}class i64 extends Int.with(64){constructor(){super(...arguments);je(this,"__IntType","i64")}}class i128 extends Int.with(128){constructor(){super(...arguments);je(this,"__IntType","i128")}}class i256 extends Int.with(256){constructor(){super(...arguments);je(this,"__IntType","i256")}}class u8 extends UInt.with(8){constructor(){super(...arguments);je(this,"__UIntType","u8")}}class u16 extends UInt.with(16){constructor(){super(...arguments);je(this,"__UIntType","u16")}}class u32 extends UInt.with(32){constructor(){super(...arguments);je(this,"__UIntType","u32")}}class u64 extends UInt.with(64){constructor(){super(...arguments);je(this,"__UIntType","u64")}}class u128 extends UInt.with(128){constructor(){super(...arguments);je(this,"__UIntType","u128")}}class u256 extends UInt.with(256){constructor(){super(...arguments);je(this,"__UIntType","u256")}}class usize extends u32{constructor(e,t){throw super(e,t),new Error("The `usize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally u64) and WASM (always u32) code. Use one of the `u32` or `u64` types explicitly.")}}function isNotNested(...r){return!r.some(e=>e!==0)}function typeSplit(r){let[e,t,n,s,i]=[0,0,0,0,0];const a=[],o=c=>{isNotNested(e,t,n,s)&&(a.push(r.substr(i,c-i).trim()),i=c+1)};for(let c=0;c<r.length;c++)switch(r[c]){case",":o(c);break;case"<":e++;break;case">":e--;break;case"[":t++;break;case"]":t--;break;case"{":n++;break;case"}":n--;break;case"(":s++;break;case")":s--;break}return assert(isNotNested(e,t,n,s),()=>`Invalid definition (missing terminators) found in ${r}`),a.push(r.substr(i,r.length-i).trim()),a}const MAX_NESTED=64,KNOWN_INTERNALS=["_alias","_fallback"];function getTypeString(r){return isString(r)?r.toString():JSON.stringify(r)}function isRustEnum(r){const e=Object.values(r);return e.some(t=>isNumber(t))?(assert(e.every(t=>isNumber(t)&&t>=0&&t<=255),"Invalid number-indexed enum definition"),!1):!0}function _decodeEnum(r,e,t,n){return r.info=TypeDefInfo.Enum,r.fallbackType=n,Array.isArray(e)?r.sub=e.map((s,i)=>({index:i,info:TypeDefInfo.Plain,name:s,type:"Null"})):isRustEnum(e)?r.sub=Object.entries(e).map(([s,i],a)=>objectSpread({},getTypeDef(getTypeString(i||"Null"),{name:s},t),{index:a})):r.sub=Object.entries(e).map(([s,i])=>({index:i,info:TypeDefInfo.Plain,name:s,type:"Null"})),r}function _decodeSet(r,e,t){return r.info=TypeDefInfo.Set,r.fallbackType=t,r.length=e._bitLength,r.sub=Object.entries(e).filter(([n])=>!n.startsWith("_")).map(([n,s])=>({index:s,info:TypeDefInfo.Plain,name:n,type:"Null"})),r}function _decodeStruct(r,e,t,n){const s=JSON.parse(e),i=Object.keys(s);return i.includes("_enum")?_decodeEnum(r,s._enum,n,s._fallback):i.includes("_set")?_decodeSet(r,s._set,s._fallback):(r.alias=s._alias?new Map(Object.entries(s._alias)):void 0,r.fallbackType=s._fallback,r.sub=i.filter(a=>!KNOWN_INTERNALS.includes(a)).map(a=>getTypeDef(getTypeString(s[a]),{name:a},n)),r)}function _decodeFixedVec(r,e,t,n){const s=e.length-1;let i=-1,a=0;for(let x=1;x<s&&i===-1;x++)e[x]===";"&&a===0?i=x:["[","(","<"].includes(e[x])?a++:["]",")",">"].includes(e[x])&&a--;assert(i!==-1,()=>`${e}: Unable to extract location of ';'`);const o=e.substr(1,i-1),[c,h]=e.substr(i+1,s-i-1).split(";"),y=parseInt(c.trim(),10);return assert(y<=256,()=>`${e}: Only support for [Type; <length>], where length <= 256`),r.displayName=h,r.length=y,r.sub=getTypeDef(o,{},n),r}function _decodeTuple(r,e,t,n){return r.sub=t.length===0?[]:typeSplit(t).map(s=>getTypeDef(s,{},n)),r}function _decodeAnyInt(r,e,t,n){const[s,i]=e.substr(n.length+1,e.length-n.length-1-1).split(","),a=parseInt(s.trim(),10);return assert(a<=8192&&a%8===0,()=>`${e}: Only support for ${n}<bitLength>, where length <= 8192 and a power of 8, found ${a}`),r.displayName=i,r.length=a,r}function _decodeInt(r,e,t){return _decodeAnyInt(r,e,t,"Int")}function _decodeUInt(r,e,t){return _decodeAnyInt(r,e,t,"UInt")}function _decodeDoNotConstruct(r,e,t){return r.displayName=e.substr(14+1,e.length-14-1-1),r}function hasWrapper(r,[e,t]){return r.substr(0,e.length)===e&&r.substr(-1*t.length)===t}const nestedExtraction=[["[","]",TypeDefInfo.VecFixed,_decodeFixedVec],["{","}",TypeDefInfo.Struct,_decodeStruct],["(",")",TypeDefInfo.Tuple,_decodeTuple],["BTreeMap<",">",TypeDefInfo.BTreeMap,_decodeTuple],["HashMap<",">",TypeDefInfo.HashMap,_decodeTuple],["Int<",">",TypeDefInfo.Int,_decodeInt],["Result<",">",TypeDefInfo.Result,_decodeTuple],["UInt<",">",TypeDefInfo.UInt,_decodeUInt],["DoNotConstruct<",">",TypeDefInfo.DoNotConstruct,_decodeDoNotConstruct]],wrappedExtraction=[["BTreeSet<",">",TypeDefInfo.BTreeSet],["Compact<",">",TypeDefInfo.Compact],["Linkage<",">",TypeDefInfo.Linkage],["Option<",">",TypeDefInfo.Option],["Range<",">",TypeDefInfo.Range],["RangeInclusive<",">",TypeDefInfo.RangeInclusive],["Vec<",">",TypeDefInfo.Vec],["WrapperKeepOpaque<",">",TypeDefInfo.WrapperKeepOpaque],["WrapperOpaque<",">",TypeDefInfo.WrapperOpaque]];function extractSubType(r,[e,t]){return r.substr(e.length,r.length-e.length-t.length)}function getTypeDef(r,{displayName:e,name:t}={},n=0){const s=sanitize(r),i={displayName:e,info:TypeDefInfo.Plain,name:t,type:s};assert(++n!==MAX_NESTED,"getTypeDef: Maximum nested limit reached");const a=nestedExtraction.find(c=>hasWrapper(s,c));if(a)return i.info=a[2],a[3](i,s,extractSubType(s,a),n);const o=wrappedExtraction.find(c=>hasWrapper(s,c));return o&&(i.info=o[2],i.sub=getTypeDef(extractSubType(s,o),{},n)),i}function getTypeDefType({lookupName:r,type:e}){return r||e}function getSubDefArray(r){return assert(r.sub&&Array.isArray(r.sub),()=>`Expected subtype as TypeDef[] in ${stringify(r)}`),r.sub}function getSubDef(r){return assert(r.sub&&!Array.isArray(r.sub),()=>`Expected subtype as TypeDef in ${stringify(r)}`),r.sub}function getSubType(r){return getTypeDefType(getSubDef(r))}function getTypeClassMap(r){const e=getSubDefArray(r),t={};for(let n=0;n<e.length;n++)t[e[n].name]=getTypeDefType(e[n]);return t}function getTypeClassArray(r){return getSubDefArray(r).map(getTypeDefType)}function createInt(r,{displayName:e,length:t}){return assert(isNumber(t),()=>`Expected bitLength information for ${e||r.constructor.name}<bitLength>`),r.with(t,e)}function createHashMap(r,e){const[t,n]=getTypeClassArray(e);return r.with(t,n)}function createWithSub(r,e){return r.with(getSubType(e))}const infoMapping={[TypeDefInfo.BTreeMap]:(r,e)=>createHashMap(BTreeMap,e),[TypeDefInfo.BTreeSet]:(r,e)=>createWithSub(BTreeSet,e),[TypeDefInfo.Compact]:(r,e)=>createWithSub(Compact,e),[TypeDefInfo.DoNotConstruct]:(r,e)=>DoNotConstruct.with(e.displayName||e.type),[TypeDefInfo.Enum]:(r,e)=>{const t=getSubDefArray(e);return Enum.with(t.every(({type:n})=>n==="Null")?t.reduce((n,{index:s,name:i},a)=>(n[i]=s||a,n),{}):getTypeClassMap(e))},[TypeDefInfo.HashMap]:(r,e)=>createHashMap(HashMap,e),[TypeDefInfo.Int]:(r,e)=>createInt(Int,e),[TypeDefInfo.Linkage]:(r,e)=>{const t=`Option<${getSubType(e)}>`,n=Struct.with({previous:t,next:t});return n.prototype.toRawType=function(){return`Linkage<${this.next.toRawType(!0)}>`},n},[TypeDefInfo.Null]:(r,e)=>Null,[TypeDefInfo.Option]:(r,e)=>createWithSub(Option,e),[TypeDefInfo.Plain]:(r,e)=>r.getOrUnknown(e.type),[TypeDefInfo.Range]:(r,e)=>createWithSub(Range,e),[TypeDefInfo.RangeInclusive]:(r,e)=>createWithSub(RangeInclusive,e),[TypeDefInfo.Result]:(r,e)=>{const[t,n]=getTypeClassArray(e);return Result.with({Err:n,Ok:t})},[TypeDefInfo.Set]:(r,e)=>CodecSet.with(getSubDefArray(e).reduce((t,{index:n,name:s})=>(t[s]=n,t),{}),e.length),[TypeDefInfo.Si]:(r,e)=>getTypeClass(r,r.lookup.getTypeDef(e.type)),[TypeDefInfo.Struct]:(r,e)=>Struct.with(getTypeClassMap(e),e.alias),[TypeDefInfo.Tuple]:(r,e)=>Tuple.with(getTypeClassArray(e)),[TypeDefInfo.UInt]:(r,e)=>createInt(UInt,e),[TypeDefInfo.Vec]:(r,{sub:e})=>(assert(e&&!Array.isArray(e),"Expected type information for vector"),e.type==="u8"?Bytes:Vec.with(getTypeDefType(e))),[TypeDefInfo.VecFixed]:(r,{displayName:e,length:t,sub:n})=>(assert(n&&isNumber(t)&&!Array.isArray(n),"Expected length & type information for fixed vector"),n.type==="u8"?U8aFixed.with(t*8,e):VecFixed.with(getTypeDefType(n),t)),[TypeDefInfo.WrapperKeepOpaque]:(r,e)=>createWithSub(WrapperKeepOpaque,e),[TypeDefInfo.WrapperOpaque]:(r,e)=>createWithSub(WrapperOpaque,e)};function constructTypeClass(r,e){try{const t=infoMapping[e.info](r,e);return assert(t,"No class created"),!t.__fallbackType&&e.fallbackType&&(t.__fallbackType=e.fallbackType),t}catch(t){throw new Error(`Unable to construct class from ${stringify(e)}: ${t.message}`)}}function getTypeClass(r,e){return r.getUnsafe(e.type,!1,e)}function createClassUnsafe(r,e){return getTypeClass(r,r.isLookupType(e)?r.lookup.getTypeDef(e):getTypeDef(e))}function checkInstance(r,e){const t=r.toU8a(),n=r.toRawType(),s=u8aEq(t,e)||["Bytes","Text","Type"].includes(n)&&e.length===r.length||r.isEmpty&&e.every(i=>!i);assert(s,()=>`${n}:: Decoded input doesn't match input, received ${u8aToHex(e,512)} (${e.length} bytes), created ${u8aToHex(t,512)} (${t.length} bytes)`)}function checkPedantic(r,[e],t=!1){t&&(isU8a(e)?checkInstance(r,e):isHex(e)&&checkInstance(r,u8aToU8a(e)))}function initType(r,e,t=[],{blockHash:n,isOptional:s,isPedantic:i}={}){const a=new(s?Option.with(e):e)(r,...t);return checkPedantic(a,t,i),n&&(a.createdAtHash=createTypeUnsafe(r,"Hash",[n])),a}function createTypeUnsafe(r,e,t=[],n={}){let s=null,i=null;try{return s=createClassUnsafe(r,e),initType(r,s,t,n)}catch(a){i=new Error(`createType(${e}):: ${a.message}`)}if(s&&s.__fallbackType)try{return s=createClassUnsafe(r,s.__fallbackType),initType(r,s,t,n)}catch{}throw i}const stringIdentity=r=>r.toString(),INFO_WRAP=["BTreeMap","BTreeSet","Compact","HashMap","Option","Result","Vec"];function paramsNotation(r,e,t=stringIdentity){return`${r}${e?`<${(Array.isArray(e)?e:[e]).map(t).join(", ")}>`:""}`}function encodeWithParams(r,e,t){const{info:n,sub:s}=e;switch(n){case TypeDefInfo.BTreeMap:case TypeDefInfo.BTreeSet:case TypeDefInfo.Compact:case TypeDefInfo.HashMap:case TypeDefInfo.Linkage:case TypeDefInfo.Option:case TypeDefInfo.Range:case TypeDefInfo.RangeInclusive:case TypeDefInfo.Result:case TypeDefInfo.Vec:case TypeDefInfo.WrapperKeepOpaque:case TypeDefInfo.WrapperOpaque:return paramsNotation(t,s,i=>encodeTypeDef(r,i))}throw new Error(`Unable to encode ${stringify(e)} with params`)}function encodeSubTypes(r,e,t,n){const s=e.map(({name:a})=>a);assert(s.every(a=>!!a),()=>`Subtypes does not have consistent names, ${s.join(", ")}`);const i=objectSpread({},n);for(let a=0;a<e.length;a++){const o=e[a];i[o.name]=encodeTypeDef(r,o)}return stringify(t?{_enum:i}:i)}const encoders={[TypeDefInfo.BTreeMap]:(r,e)=>encodeWithParams(r,e,"BTreeMap"),[TypeDefInfo.BTreeSet]:(r,e)=>encodeWithParams(r,e,"BTreeSet"),[TypeDefInfo.Compact]:(r,e)=>encodeWithParams(r,e,"Compact"),[TypeDefInfo.DoNotConstruct]:(r,{displayName:e,lookupIndex:t,lookupName:n})=>`DoNotConstruct<${n||e||(isUndefined(t)?"Unknown":r.createLookupType(t))}>`,[TypeDefInfo.Enum]:(r,{sub:e})=>(assert(e&&Array.isArray(e),"Unable to encode Enum type"),e.every(({type:t})=>t==="Null")?stringify({_enum:e.map(({name:t},n)=>`${t||`Empty${n}`}`)}):encodeSubTypes(r,e,!0)),[TypeDefInfo.HashMap]:(r,e)=>encodeWithParams(r,e,"HashMap"),[TypeDefInfo.Int]:(r,{length:e=32})=>`Int<${e}>`,[TypeDefInfo.Linkage]:(r,e)=>encodeWithParams(r,e,"Linkage"),[TypeDefInfo.Null]:(r,e)=>"Null",[TypeDefInfo.Option]:(r,e)=>encodeWithParams(r,e,"Option"),[TypeDefInfo.Plain]:(r,{displayName:e,type:t})=>e||t,[TypeDefInfo.Range]:(r,e)=>encodeWithParams(r,e,"Range"),[TypeDefInfo.RangeInclusive]:(r,e)=>encodeWithParams(r,e,"RangeInclusive"),[TypeDefInfo.Result]:(r,e)=>encodeWithParams(r,e,"Result"),[TypeDefInfo.Set]:(r,{length:e=8,sub:t})=>(assert(t&&Array.isArray(t),"Unable to encode Set type"),stringify({_set:t.reduce((n,{index:s,name:i},a)=>objectSpread(n,{[`${i||`Unknown${s||a}`}`]:s||a}),{_bitLength:e||8})})),[TypeDefInfo.Si]:(r,{lookupName:e,type:t})=>e||t,[TypeDefInfo.Struct]:(r,{alias:e,sub:t})=>(assert(t&&Array.isArray(t),"Unable to encode Struct type"),encodeSubTypes(r,t,!1,e?{_alias:[...e.entries()].reduce((n,[s,i])=>objectSpread(n,{[s]:i}),{})}:{})),[TypeDefInfo.Tuple]:(r,{sub:e})=>(assert(e&&Array.isArray(e),"Unable to encode Tuple type"),`(${e.map(t=>encodeTypeDef(r,t)).join(",")})`),[TypeDefInfo.UInt]:(r,{length:e=32})=>`UInt<${e}>`,[TypeDefInfo.Vec]:(r,e)=>encodeWithParams(r,e,"Vec"),[TypeDefInfo.VecFixed]:(r,{length:e,sub:t})=>(assert(isNumber(e)&&!isUndefined(t)&&!Array.isArray(t),"Unable to encode VecFixed type"),`[${t.type};${e}]`),[TypeDefInfo.WrapperKeepOpaque]:(r,e)=>encodeWithParams(r,e,"WrapperKeepOpaque"),[TypeDefInfo.WrapperOpaque]:(r,e)=>encodeWithParams(r,e,"WrapperOpaque")};function encodeType(r,e,t=!0){return t&&e.lookupName?e.lookupName:encoders[e.info](r,e)}function encodeTypeDef(r,e){return e.displayName&&!INFO_WRAP.some(t=>e.displayName===t)?e.displayName:encodeType(r,e)}function withTypeString(r,e){return objectSpread({},e,{type:encodeType(r,e,!1)})}const XCM_MAPPINGS=["AssetInstance","Fungibility","Junction","Junctions","MultiAsset","MultiAssetFilter","MultiLocation","Response","WildFungibility","WildMultiAsset","Xcm","XcmError","XcmOrder"];function mapXcmTypes(r){return XCM_MAPPINGS.reduce((e,t)=>objectSpread(e,{[t]:`${t}${r}`}),{})}const v0={FungibilityV0:"FungibilityV1",WildFungibilityV0:"WildFungibilityV1",AssetInstanceV0:{_enum:{Undefined:"Null",Index8:"u8",Index16:"Compact<u16>",Index32:"Compact<u32>",Index64:"Compact<u64>",Index128:"Compact<u128>",Array4:"[u8; 4]",Array8:"[u8; 8]",Array16:"[u8; 16]",Array32:"[u8; 32]",Blob:"Vec<u8>"}},JunctionV0:{_enum:{Parent:"Null",Parachain:"Compact<u32>",AccountId32:{network:"NetworkId",id:"AccountId"},AccountIndex64:{network:"NetworkId",index:"Compact<u64>"},AccountKey20:{network:"NetworkId",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Vec<u8>",OnlyChild:"Null",Plurality:{id:"BodyId",part:"BodyPart"}}},MultiAssetV0:{_enum:{None:"Null",All:"Null",AllFungible:"Null",AllNonFungible:"Null",AllAbstractFungible:"Vec<u8>",AllAbstractNonFungible:"Vec<u8>",AllConcreteFungible:"MultiLocationV0",AllConcreteNonFungible:"MultiLocationV0",AbstractFungible:{id:"Vec<u8>",instance:"Compact<u128>"},AbstractNonFungible:{class:"Vec<u8>",instance:"AssetInstanceV0"},ConcreteFungible:{id:"MultiLocationV0",amount:"Compact<u128>"},ConcreteNonFungible:{class:"MultiLocationV0",instance:"AssetInstanceV0"}}},MultiLocationV0:{_enum:{Here:"Null",X1:"JunctionV0",X2:"(JunctionV0, JunctionV0)",X3:"(JunctionV0, JunctionV0, JunctionV0)",X4:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X5:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X6:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X7:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X8:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)"}},OriginKindV0:{_enum:["Native","SovereignAccount","Superuser","Xcm"]},ResponseV0:{_enum:{Assets:"Vec<MultiAssetV0>"}},XcmV0:{_enum:{WithdrawAsset:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},ReserveAssetDeposit:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},ReceiveTeleportedAsset:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},QueryResponse:{queryId:"Compact<u64>",response:"ResponseV0"},TransferAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0"},TransferReserveAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},RelayedFrom:{who:"MultiLocationV0",message:"XcmV0"}}},XcmErrorV0:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",SendFailed:"Null",CannotReachDestination:"(MultiLocation, Xcm)",MultiLocationFull:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",RecursionLimitReached:"Null"}},XcmOrderV0:{_enum:{Null:"Null",DepositAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0"},DepositReserveAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},ExchangeAsset:{give:"Vec<MultiAssetV0>",receive:"Vec<MultiAssetV0>"},InitiateReserveWithdraw:{assets:"Vec<MultiAssetV0>",reserve:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},InitiateTeleport:{assets:"Vec<MultiAsset>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV0",assets:"Vec<MultiAssetV0>"},BuyExecution:{fees:"MultiAsset",weight:"u64",debt:"u64",haltOnError:"bool",xcm:"Vec<XcmV0>"}}}},v1={AssetInstanceV1:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8; 4]",Array8:"[u8; 8]",Array16:"[u8; 16]",Array32:"[u8; 32]",Blob:"Bytes"}},FungibilityV1:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV1"}},JunctionV1:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"NetworkId",id:"AccountId"},AccountIndex64:{network:"NetworkId",index:"Compact<u64>"},AccountKey20:{network:"NetworkId",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Vec<u8>",OnlyChild:"Null",Plurality:{id:"BodyId",part:"BodyPart"}}},JunctionsV1:{_enum:{Here:"Null",X1:"JunctionV1",X2:"(JunctionV1, JunctionV1)",X3:"(JunctionV1, JunctionV1, JunctionV1)",X4:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X5:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X6:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X7:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X8:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)"}},MultiAssetsV1:"Vec<MultiAssetV1>",MultiAssetV1:{id:"XcmAssetId",fungibility:"FungibilityV1"},MultiAssetFilterV1:{_enum:{Definite:"MultiAssetsV1",Wild:"WildMultiAssetV1"}},MultiLocationV1:{parents:"u8",interior:"JunctionsV1"},OriginKindV1:"OriginKindV0",ResponseV1:{_enum:{Assets:"MultiAssetsV1"}},WildFungibilityV1:{_enum:["Fungible","NonFungible"]},WildMultiAssetV1:{_enum:{All:"Null",AllOf:{id:"XcmAssetId",fungibility:"WildFungibilityV1"}}},XcmV1:{_enum:{WithdrawAsset:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},ReserveAssetDeposit:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},ReceiveTeleportedAsset:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},QueryResponse:{queryId:"Compact<u64>",response:"ResponseV1"},TransferAsset:{assets:"MultiAssetsV1",dest:"MultiLocationV1"},TransferReserveAsset:{assets:"MultiAssetsV1",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},RelayedFrom:{who:"MultiLocationV1",message:"XcmV1"}}},XcmErrorV1:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",SendFailed:"Null",CannotReachDestination:"(MultiLocationV1, XcmV1)",MultiLocationFull:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",DestinationUnsupported:"Null",RecursionLimitReached:"Null"}},XcmOrderV1:{_enum:{Noop:"Null",DepositAsset:{assets:"MultiAssetFilterV1",maxAssets:"u32",beneficiary:"MultiLocationV1"},DepositReserveAsset:{assets:"MultiAssetFilterV1",maxAssets:"u32",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},ExchangeAsset:{give:"MultiAssetFilterV1",receive:"MultiAssetsV1"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV1",reserve:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},InitiateTeleport:{assets:"MultiAssetFilterV1",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV1",assets:"MultiAssetFilterV1"},BuyExecution:{fees:"MultiAssetV1",weight:"u64",debt:"u64",haltOnError:"bool",instructions:"Vec<XcmV1>"}}}},v2={AssetInstanceV2:"AssetInstanceV1",FungibilityV2:"FungibilityV1",JunctionV2:"JunctionV1",JunctionsV2:"JunctionsV1",MultiAssetsV2:"MultiAssetsV1",MultiAssetV2:"MultiAssetV1",MultiAssetFilterV2:"MultiAssetFilterV1",MultiLocationV2:"MultiLocationV1",OriginKindV2:"OriginKindV1",WildFungibilityV2:"WildFungibilityV1",ResponseV2:{_enum:{Null:"Null",Assets:"MultiAssetsV2",ExecutionResult:"ResponseV2Result"}},ResponseV2Error:"(u32, XcmErrorV2)",ResponseV2Result:"Result<Null, ResponseV2Error>",WeightLimitV2:{_enum:{Unlimited:"Null",Limited:"Compact<u64>"}},InstructionV2:{_enum:{WithdrawAsset:"MultiAssetsV2",ReserveAssetDeposited:"MultiAssetsV2",ReceiveTeleportedAsset:"MultiAssetsV2",QueryResponse:{queryId:"Compact<u64>",response:"ResponseV2",maxWeight:"Compact<u64>"},TransferAsset:{assets:"MultiAssetsV2",beneficiary:"MultiLocationV2"},TransferReserveAsset:{assets:"MultiAssetsV2",dest:"MultiLocationV2",xcm:"XcmV2"},Transact:{originType:"OriginKindV2",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},ClearOrigin:"Null",DescendOrigin:"InteriorMultiLocation",ReportError:{queryId:"Compact<u64>",dest:"MultiLocationV2",maxResponseWeight:"Compact<u64>"},DepositAsset:{assets:"MultiAssetFilterV2",maxAssets:"u32",beneficiary:"MultiLocationV2"},DepositReserveAsset:{assets:"MultiAssetFilterV2",maxAssets:"u32",dest:"MultiLocationV2",xcm:"XcmV2"},ExchangeAsset:{give:"MultiAssetFilterV2",receive:"MultiAssetsV2"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV2",reserve:"MultiLocationV2",xcm:"XcmV2"},InitiateTeleport:{assets:"MultiAssetFilterV2",dest:"MultiLocationV2",xcm:"XcmV2"},QueryHolding:{query_id:"Compact<u64>",dest:"MultiLocationV2",assets:"MultiAssetFilterV2",maxResponse_Weight:"Compact<u64>"},BuyExecution:{fees:"MultiAssetV2",weightLimit:"WeightLimitV2"},RefundSurplus:"Null",SetErrorHandler:"XcmV2",SetAppendix:"XcmV2",ClearError:"Null",ClaimAsset:{assets:"MultiAssetsV2",ticket:"MultiLocationV2"},Trap:"u64"}},WildMultiAssetV2:"WildMultiAssetV1",XcmV2:"Vec<InstructionV2>",XcmErrorV2:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",MultiLocationFull:"Null",MultiLocationNotInvertible:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",DestinationUnsupported:"Null",RecursionLimitReached:"Null",Transport:"Null",Unroutable:"Null",UnknownWeightRequired:"Null",Trap:"u64",UnknownClaim:"Null",InvalidLocation:"Null"}},XcmOrderV2:"XcmOrderV1"},XCM_LATEST="V2",xcm={XcmOrigin:{_enum:{Xcm:"MultiLocation"}},XcmpMessageFormat:{_enum:["ConcatenatedVersionedXcm","ConcatenatedEncodedBlob","Signals"]},XcmAssetId:{_enum:{Concrete:"MultiLocation",Abstract:"Bytes"}},InboundStatus:{_enum:["Ok","Suspended"]},OutboundStatus:{_enum:["Ok","Suspended"]},MultiAssets:"Vec<MultiAsset>"},location={BodyId:{_enum:{Unit:"Null",Named:"Vec<u8>",Index:"Compact<u32>",Executive:"Null",Technical:"Null",Legislative:"Null",Judicial:"Null"}},BodyPart:{_enum:{Voice:"Null",Members:"Compact<u32>",Fraction:{nom:"Compact<u32>",denom:"Compact<u32>"},AtLeastProportion:{nom:"Compact<u32>",denom:"Compact<u32>"},MoreThanProportion:{nom:"Compact<u32>",denom:"Compact<u32>"}}},InteriorMultiLocation:"Junctions",NetworkId:{_enum:{Any:"Null",Named:"Vec<u8>",Polkadot:"Null",Kusama:"Null"}}};var definitions$a={rpc:{},types:objectSpread({},location,xcm,v0,v1,v2,mapXcmTypes(XCM_LATEST),{DoubleEncodedCall:{encoded:"Vec<u8>"},XcmOriginKind:{_enum:["Native","SovereignAccount","Superuser","Xcm"]},Outcome:{_enum:{Complete:"Weight",Incomplete:"(Weight, XcmErrorV0)",Error:"XcmErrorV0"}},QueryId:"u64",QueryStatus:{_enum:{Pending:{responder:"VersionedMultiLocation",maybeNotify:"Option<(u8, u8)>",timeout:"BlockNumber"},Ready:{response:"VersionedResponse",at:"BlockNumber"}}},QueueConfigData:{suspendThreshold:"u32",dropThreshold:"u32",resumeThreshold:"u32",thresholdWeight:"Weight",weightRestrictDecay:"Weight"},VersionMigrationStage:{_enum:{MigrateSupportedVersion:"Null",MigrateVersionNotifiers:"Null",NotifyCurrentTargets:"Option<Bytes>",MigrateAndNotifyOldTargets:"Null"}},VersionedMultiAsset:{_enum:{V0:"MultiAssetV0",V1:"MultiAssetV1",V2:"MultiAssetV2"}},VersionedMultiAssets:{_enum:{V0:"Vec<MultiAssetV0>",V1:"MultiAssetsV1",V2:"MultiAssetsV2"}},VersionedMultiLocation:{_enum:{V0:"MultiLocationV0",V1:"MultiLocationV1",V2:"MultiLocationV2"}},VersionedResponse:{V0:"ResponseV0",V1:"ResponseV1",V2:"ResponseV2"},VersionedXcm:{_enum:{V0:"XcmV0",V1:"XcmV1",V2:"XcmV2"}},XcmVersion:"u32"})};const layout={ContractCryptoHasher:{_enum:["Blake2x256","Sha2x256","Keccak256"]},ContractDiscriminant:"u32",ContractLayoutArray:{offset:"ContractLayoutKey",len:"u32",cellsPerElem:"u64",layout:"ContractStorageLayout"},ContractLayoutCell:{key:"ContractLayoutKey",ty:"SiLookupTypeId"},ContractLayoutEnum:{dispatchKey:"ContractLayoutKey",variants:"BTreeMap<ContractDiscriminant, ContractLayoutStruct>"},ContractLayoutHash:{offset:"ContractLayoutKey",strategy:"ContractLayoutHashingStrategy",layout:"ContractStorageLayout"},ContractLayoutHashingStrategy:{hasher:"ContractCryptoHasher",postfix:"Vec<u8>",prefix:"Vec<u8>"},ContractLayoutKey:"[u8; 32]",ContractLayoutStruct:{fields:"Vec<ContractLayoutStructField>"},ContractLayoutStructField:{layout:"ContractStorageLayout",name:"Text"},ContractStorageLayout:{_enum:{Cell:"ContractLayoutCell",Hash:"ContractLayoutHash",Array:"ContractLayoutArray",Struct:"ContractLayoutStruct",Enum:"ContractLayoutEnum"}}},spec={ContractConstructorSpecV0:{name:"Text",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV0>",docs:"Vec<Text>"},ContractConstructorSpecV1:{name:"Vec<Text>",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV0>",docs:"Vec<Text>"},ContractConstructorSpecV2:{label:"Text",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV2>",docs:"Vec<Text>"},ContractConstructorSpecV3:{label:"Text",selector:"ContractSelector",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",docs:"Vec<Text>"},ContractContractSpecV0:{constructors:"Vec<ContractConstructorSpecV0>",messages:"Vec<ContractMessageSpecV0>",events:"Vec<ContractEventSpecV0>",docs:"Vec<Text>"},ContractContractSpecV1:{constructors:"Vec<ContractConstructorSpecV1>",messages:"Vec<ContractMessageSpecV1>",events:"Vec<ContractEventSpecV1>",docs:"Vec<Text>"},ContractContractSpecV2:{constructors:"Vec<ContractConstructorSpecV2>",messages:"Vec<ContractMessageSpecV2>",events:"Vec<ContractEventSpecV2>",docs:"Vec<Text>"},ContractContractSpecV3:{constructors:"Vec<ContractConstructorSpecV3>",messages:"Vec<ContractMessageSpecV2>",events:"Vec<ContractEventSpecV2>",docs:"Vec<Text>"},ContractDisplayName:"SiPath",ContractEventParamSpecV0:{name:"Text",indexed:"bool",type:"ContractTypeSpec",docs:"Vec<Text>"},ContractEventParamSpecV2:{label:"Text",indexed:"bool",type:"ContractTypeSpec",docs:"Vec<Text>"},ContractEventSpecV0:{name:"Text",args:"Vec<ContractEventParamSpecV0>",docs:"Vec<Text>"},ContractEventSpecV1:{name:"Text",args:"Vec<ContractEventParamSpecV0>",docs:"Vec<Text>"},ContractEventSpecV2:{label:"Text",args:"Vec<ContractEventParamSpecV2>",docs:"Vec<Text>"},ContractMessageParamSpecV0:{name:"Text",type:"ContractTypeSpec"},ContractMessageParamSpecV2:{label:"Text",type:"ContractTypeSpec"},ContractMessageSpecV0:{name:"Text",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV0>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractMessageSpecV1:{name:"Vec<Text>",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV0>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractMessageSpecV2:{label:"Text",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractSelector:"[u8; 4]",ContractTypeSpec:{type:"SiLookupTypeId",displayName:"ContractDisplayName"}},ContractMetadataV0={types:"Vec<Si0Type>",spec:"ContractContractSpecV0"},ContractMetadataV1={types:"Vec<PortableType>",spec:"ContractContractSpecV1"},ContractMetadataV2={types:"Vec<PortableType>",spec:"ContractContractSpecV2"},ContractMetadataV3={types:"Vec<PortableType>",spec:"ContractContractSpecV3"},ContractProjectInfo={source:"ContractProjectSource",contract:"ContractProjectContract"},latest={ContractConstructorSpecLatest:"ContractConstructorSpecV3",ContractEventSpecLatest:"ContractEventSpecV2",ContractEventParamSpecLatest:"ContractEventParamSpecV2",ContractMessageParamSpecLatest:"ContractMessageParamSpecV2",ContractMessageSpecLatest:"ContractMessageSpecV2",ContractMetadataLatest:"ContractMetadataV3"};var definitions$9={rpc:{},types:objectSpread({},layout,spec,latest,{ContractProjectInfo,ContractMetadataV0,ContractMetadataV1,ContractMetadataV2,ContractMetadataV3,ContractMetadata:{_enum:{V0:"ContractMetadataV0",V1:"ContractMetadataV1",V2:"ContractMetadataV2",V3:"ContractMetadataV3"}},ContractProjectV0:objectSpread({metadataVersion:"Text"},ContractProjectInfo,ContractMetadataV0),ContractProject:"(ContractProjectInfo, ContractMetadata)",ContractProjectContract:{_alias:{docs:"documentation"},name:"Text",version:"Text",authors:"Vec<Text>",description:"Option<Text>",docs:"Option<Text>",repository:"Option<Text>",homepage:"Option<Text>",license:"Option<Text>"},ContractProjectSource:{_alias:{wasmHash:"hash"},wasmHash:"[u8; 32]",language:"Text",compiler:"Text",wasm:"Raw"}})};const netRpc={listening:{aliasSection:"net",description:"Returns true if client is actively listening for network connections. Otherwise false.",params:[],type:"bool"},peerCount:{aliasSection:"net",description:"Returns number of peers connected to node.",params:[],type:"String"},version:{aliasSection:"net",description:"Returns protocol version.",params:[],type:"String"}},web3Rpc={clientVersion:{aliasSection:"web3",description:"Returns current client version.",params:[],type:"String"},sha3:{aliasSection:"web3",description:"Returns sha3 of the given data",params:[{name:"data",type:"Bytes"}],type:"H256"}},rpc=objectSpread({},netRpc,web3Rpc,{accounts:{description:"Returns accounts list.",params:[],type:"Vec<H160>"},blockNumber:{description:"Returns the blockNumber",params:[],type:"U256"},call:{description:"Call contract, returning the output data.",params:[{name:"request",type:"EthCallRequest"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"Bytes"},chainId:{description:"Returns the chain ID used for transaction signing at the current best block. None is returned if not available.",params:[],type:"U64"},coinbase:{description:"Returns block author.",params:[],type:"H160"},estimateGas:{description:"Estimate gas needed for execution of given contract.",params:[{name:"request",type:"EthCallRequest"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},gasPrice:{description:"Returns current gas price.",params:[],type:"U256"},getBalance:{description:"Returns balance of the given account.",params:[{name:"address",type:"H160"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},getBlockByHash:{description:"Returns block with given hash.",params:[{name:"hash",type:"H256"},{name:"full",type:"bool"}],type:"Option<EthRichBlock>"},getBlockByNumber:{description:"Returns block with given number.",params:[{name:"block",type:"BlockNumber"},{name:"full",type:"bool"}],type:"Option<EthRichBlock>"},getBlockTransactionCountByHash:{description:"Returns the number of transactions in a block with given hash.",params:[{name:"hash",type:"H256"}],type:"U256"},getBlockTransactionCountByNumber:{description:"Returns the number of transactions in a block with given block number.",params:[{name:"block",type:"BlockNumber"}],type:"U256"},getCode:{description:"Returns the code at given address at given time (block number).",params:[{name:"address",type:"H160"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"Bytes"},getFilterChanges:{description:"Returns filter changes since last poll.",params:[{name:"index",type:"U256"}],type:"EthFilterChanges"},getFilterLogs:{description:"Returns all logs matching given filter (in a range 'from' - 'to').",params:[{name:"index",type:"U256"}],type:"Vec<EthLog>"},getLogs:{description:"Returns logs matching given filter object.",params:[{name:"filter",type:"EthFilter"}],type:"Vec<EthLog>"},getProof:{description:"Returns proof for account and storage.",params:[{name:"address",type:"H160"},{name:"storageKeys",type:"Vec<H256>"},{name:"number",type:"BlockNumber"}],type:"EthAccount"},getStorageAt:{description:"Returns content of the storage at given address.",params:[{name:"address",type:"H160"},{name:"index",type:"U256"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"H256"},getTransactionByBlockHashAndIndex:{description:"Returns transaction at given block hash and index.",params:[{name:"hash",type:"H256"},{name:"index",type:"U256"}],type:"EthTransaction"},getTransactionByBlockNumberAndIndex:{description:"Returns transaction by given block number and index.",params:[{name:"number",type:"BlockNumber"},{name:"index",type:"U256"}],type:"EthTransaction"},getTransactionByHash:{description:"Get transaction by its hash.",params:[{name:"hash",type:"H256"}],type:"EthTransaction"},getTransactionCount:{description:"Returns the number of transactions sent from given address at given time (block number).",params:[{name:"hash",type:"H256"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},getTransactionReceipt:{description:"Returns transaction receipt by transaction hash.",params:[{name:"hash",type:"H256"}],type:"EthReceipt"},getUncleByBlockHashAndIndex:{description:"Returns an uncles at given block and index.",params:[{name:"hash",type:"H256"},{name:"index",type:"U256"}],type:"EthRichBlock"},getUncleByBlockNumberAndIndex:{description:"Returns an uncles at given block and index.",params:[{name:"number",type:"BlockNumber"},{name:"index",type:"U256"}],type:"EthRichBlock"},getUncleCountByBlockHash:{description:"Returns the number of uncles in a block with given hash.",params:[{name:"hash",type:"H256"}],type:"U256"},getUncleCountByBlockNumber:{description:"Returns the number of uncles in a block with given block number.",params:[{name:"number",type:"BlockNumber"}],type:"U256"},getWork:{description:"Returns the hash of the current block, the seedHash, and the boundary condition to be met.",params:[],type:"EthWork"},hashrate:{description:"Returns the number of hashes per second that the node is mining with.",params:[],type:"U256"},mining:{description:"Returns true if client is actively mining new blocks.",params:[],type:"bool"},newBlockFilter:{description:"Returns id of new block filter.",params:[],type:"U256"},newFilter:{description:"Returns id of new filter.",params:[{name:"filter",type:"EthFilter"}],type:"U256"},newPendingTransactionFilter:{description:"Returns id of new block filter.",params:[],type:"U256"},protocolVersion:{description:"Returns protocol version encoded as a string (quotes are necessary).",params:[],type:"u64"},sendRawTransaction:{description:"Sends signed transaction, returning its hash.",params:[{name:"bytes",type:"Bytes"}],type:"H256"},sendTransaction:{description:"Sends transaction; will block waiting for signer to return the transaction hash",params:[{name:"tx",type:"EthTransactionRequest"}],type:"H256"},submitHashrate:{description:"Used for submitting mining hashrate.",params:[{name:"index",type:"U256"},{name:"hash",type:"H256"}],type:"bool"},submitWork:{description:"Used for submitting a proof-of-work solution.",params:[{name:"nonce",type:"H64"},{name:"headerHash",type:"H256"},{name:"mixDigest",type:"H256"}],type:"bool"},subscribe:{description:"Subscribe to Eth subscription.",params:[{name:"kind",type:"EthSubKind"},{isOptional:!0,name:"params",type:"EthSubParams"}],pubsub:["subscription","subscribe","unsubscribe"],type:"Null"},syncing:{description:"Returns an object with data about the sync status or false.",params:[],type:"EthSyncStatus"},uninstallFilter:{description:"Uninstalls filter.",params:[{name:"index",type:"U256"}],type:"bool"}}),V0={BlockV0:{header:"EthHeader",transactions:"Vec<TransactionV0>",ommers:"Vec<EthHeader>"},LegacyTransaction:{nonce:"U256",gasPrice:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",signature:"EthTransactionSignature"},TransactionV0:"LegacyTransaction"},V1={BlockV1:{header:"EthHeader",transactions:"Vec<TransactionV1>",ommers:"Vec<EthHeader>"},EIP2930Transaction:{chainId:"u64",nonce:"U256",gasPrice:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",accessList:"EthAccessList",oddYParity:"bool",r:"H256",s:"H256"},TransactionV1:{_enum:{Legacy:"LegacyTransaction",EIP2930:"EIP2930Transaction"}}},V2={BlockV2:{header:"EthHeader",transactions:"Vec<TransactionV2>",ommers:"Vec<EthHeader>"},EIP1559Transaction:{chainId:"u64",nonce:"U256",maxPriorityFeePerGas:"U256",maxFeePerGas:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",accessList:"EthAccessList",oddYParity:"bool",r:"H256",s:"H256"},TransactionV2:{_enum:{Legacy:"LegacyTransaction",EIP2930:"EIP2930Transaction",EIP1559:"EIP1559Transaction"}}},types=objectSpread({},V0,V1,V2,{EthereumAccountId:"GenericEthereumAccountId",EthereumAddress:"GenericEthereumAccountId",EthereumLookupSource:"GenericEthereumLookupSource",EthereumSignature:"[u8; 65]",EthAccessListItem:{address:"EthAddress",slots:"Vec<H256>"},EthAccessList:"Vec<EthAccessListItem>",EthAccount:{address:"EthAddress",balance:"U256",nonce:"U256",codeHash:"H256",storageHash:"H256",accountProof:"Vec<Bytes>",storageProof:"Vec<EthStorageProof>"},EthAddress:"H160",EthBlock:{header:"EthHeader",transactions:"Vec<EthTransaction>",ommers:"Vec<EthHeader>"},EthHeader:{parentHash:"H256",ommersHash:"H256",beneficiary:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",logsBloom:"EthBloom",difficulty:"U256",number:"U256",gasLimit:"U256",gasUsed:"U256",timestamp:"u64",extraData:"Bytes",mixMash:"H256",nonce:"H64"},EthRichBlock:{_alias:{blockHash:"hash",blockSize:"size"},blockHash:"Option<H256>",parentHash:"H256",sha3Uncles:"H256",author:"EthAddress",miner:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",number:"Option<U256>",gasUsed:"U256",gasLimit:"U256",extraData:"Bytes",logsBloom:"EthBloom",timestamp:"U256",difficulty:"U256",totalDifficulty:"Option<U256>",sealFields:"Vec<Bytes>",uncles:"Vec<H256>",transactions:"Vec<EthTransaction>",blockSize:"Option<U256>"},EthBloom:"H2048",EthCallRequest:{from:"Option<EthAddress>",to:"Option<EthAddress>",gasPrice:"Option<U256>",gas:"Option<U256>",value:"Option<U256>",data:"Option<Bytes>",nonce:"Option<U256>"},EthFilter:{fromBlock:"Option<BlockNumber>",toBlock:"Option<BlockNumber>",blockHash:"Option<H256>",address:"Option<EthFilterAddress>",topics:"Option<EthFilterTopic>"},EthFilterAddress:{_enum:{Single:"EthAddress",Multiple:"Vec<EthAddress>",Null:"Null"}},EthFilterChanges:{_enum:{Logs:"Vec<EthLog>",Hashes:"Vec<H256>",Empty:"Null"}},EthFilterTopic:{_enum:{Single:"EthFilterTopicInner",Multiple:"Vec<EthFilterTopicInner>",Null:"Null"}},EthFilterTopicEntry:"Option<H256>",EthFilterTopicInner:{_enum:{Single:"EthFilterTopicEntry",Multiple:"Vec<EthFilterTopicEntry>",Null:"Null"}},EthRichHeader:{_alias:{blockHash:"hash",blockSize:"size"},blockHash:"Option<H256>",parentHash:"H256",sha3Uncles:"H256",author:"EthAddress",miner:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",number:"Option<U256>",gasUsed:"U256",gasLimit:"U256",extraData:"Bytes",logsBloom:"EthBloom",timestamp:"U256",difficulty:"U256",sealFields:"Vec<Bytes>",blockSize:"Option<U256>"},EthLog:{address:"EthAddress",topics:"Vec<H256>",data:"Bytes",blockHash:"Option<H256>",blockNumber:"Option<U256>",transactionHash:"Option<H256>",transactionIndex:"Option<U256>",logIndex:"Option<U256>",transactionLogIndex:"Option<U256>",removed:"bool"},EthReceipt:{transactionHash:"Option<H256>",transactionIndex:"Option<U256>",blockHash:"Option<H256>",from:"Option<EthAddress>",to:"Option<EthAddress>",blockNumber:"Option<U256>",cumulativeGasUsed:"U256",gasUsed:"Option<U256>",contractAddress:"Option<EthAddress>",logs:"Vec<EthLog>",root:"Option<H256>",logsBloom:"EthBloom",statusCode:"Option<U64>"},EthStorageProof:{key:"U256",value:"U256",proof:"Vec<Bytes>"},EthSubKind:{_enum:["newHeads","logs","newPendingTransactions","syncing"]},EthSubParams:{_enum:{None:"Null",Logs:"EthFilter"}},EthSubResult:{_enum:{Header:"EthRichHeader",Log:"EthLog",TransactionHash:"H256",SyncState:"EthSyncStatus"}},EthSyncInfo:{startingBlock:"U256",currentBlock:"U256",highestBlock:"U256",warpChunksAmount:"Option<U256>",warpChunksProcessed:"Option<U256>"},EthSyncStatus:{_enum:{Info:"EthSyncInfo",None:"Null"}},EthTransaction:"LegacyTransaction",EthTransactionSignature:{v:"u64",r:"H256",s:"H256"},EthTransactionAction:{_enum:{Call:"H160",Create:"Null"}},EthTransactionCondition:{_enum:{block:"u64",time:"u64"}},EthTransactionRequest:{from:"Option<EthAddress>",to:"Option<EthAddress>",gasPrice:"Option<U256>",gas:"Option<U256>",value:"Option<U256>",data:"Option<Bytes>",nonce:"Option<U256>"},EthTransactionStatus:{transactionHash:"H256",transactionIndex:"u32",from:"EthAddress",to:"Option<EthAddress>",contractAddress:"Option<EthAddress>",logs:"Vec<EthLog>",logsBloom:"EthBloom"},EthWork:{powHash:"H256",seedHash:"H256",target:"H256",number:"Option<u64>"}});var definitions$8={rpc,types},definitions$7={rpc:{methods:{description:"Retrieves the list of RPC methods that are exposed by the node",params:[],type:"RpcMethods"}},types:{RpcMethods:{version:"u32",methods:"Vec<Text>"}}},definitions$6={rpc:{hasKey:{description:"Returns true if the keystore has private keys for the given public key and key type.",params:[{name:"publicKey",type:"Bytes"},{name:"keyType",type:"Text"}],type:"bool"},hasSessionKeys:{description:"Returns true if the keystore has private keys for the given session public keys.",params:[{name:"sessionKeys",type:"Bytes"}],type:"bool"},removeExtrinsic:{description:"Remove given extrinsic from the pool and temporarily ban it to prevent reimporting",params:[{name:"bytesOrHash",type:"Vec<ExtrinsicOrHash>"}],type:"Vec<Hash>"},insertKey:{description:"Insert a key into the keystore.",params:[{name:"keyType",type:"Text"},{name:"suri",type:"Text"},{name:"publicKey",type:"Bytes"}],type:"Bytes"},rotateKeys:{description:"Generate new session keys and returns the corresponding public keys",params:[],type:"Bytes"},pendingExtrinsics:{description:"Returns all pending extrinsics, potentially grouped by sender",params:[],type:"Vec<Extrinsic>"},submitExtrinsic:{isSigned:!0,description:"Submit a fully formatted extrinsic for block inclusion",params:[{name:"extrinsic",type:"Extrinsic"}],type:"Hash"},submitAndWatchExtrinsic:{description:"Submit and subscribe to watch an extrinsic until unsubscribed",isSigned:!0,params:[{name:"extrinsic",type:"Extrinsic"}],pubsub:["extrinsicUpdate","submitAndWatchExtrinsic","unwatchExtrinsic"],type:"ExtrinsicStatus"}},types:{ExtrinsicOrHash:{_enum:{Hash:"Hash",Extrinsic:"Bytes"}},ExtrinsicStatus:{_enum:{Future:"Null",Ready:"Null",Broadcast:"Vec<Text>",InBlock:"Hash",Retracted:"Hash",FinalityTimeout:"Hash",Finalized:"Hash",Usurped:"Hash",Dropped:"Null",Invalid:"Null"}}}},definitions$5={rpc:{getHeader:{alias:["chain_getHead"],description:"Retrieves the header for a specific block",params:[{name:"hash",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Header"},getBlock:{description:"Get header and body of a relay chain block",params:[{name:"hash",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"SignedBlock"},getBlockHash:{description:"Get the block hash for a specific block",params:[{name:"blockNumber",type:"BlockNumber",isOptional:!0}],type:"BlockHash"},getFinalizedHead:{alias:["chain_getFinalisedHead"],description:"Get hash of the last finalized block in the canon chain",params:[],type:"BlockHash"},subscribeNewHeads:{alias:["chain_unsubscribeNewHeads","subscribe_newHead","unsubscribe_newHead"],description:"Retrieves the best header via subscription",params:[],pubsub:["newHead","subscribeNewHead","unsubscribeNewHead"],type:"Header"},subscribeFinalizedHeads:{alias:["chain_subscribeFinalisedHeads","chain_unsubscribeFinalisedHeads"],description:"Retrieves the best finalized header via subscription",params:[],pubsub:["finalizedHead","subscribeFinalizedHeads","unsubscribeFinalizedHeads"],type:"Header"},subscribeAllHeads:{description:"Retrieves the newest header via subscription",params:[],pubsub:["allHead","subscribeAllHeads","unsubscribeAllHeads"],type:"Header"}},types:{BlockHash:"Hash"}},definitions$4={rpc:{getKeys:{description:"Returns the keys with prefix from a child storage, leave empty to get all the keys",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"prefix",type:"StorageKey"},{name:"at",type:"Hash",isHistoric:!0,isOptional:!0}],type:"Vec<StorageKey>"},getKeysPaged:{alias:["childstate_getKeysPagedAt"],description:"Returns the keys with prefix from a child storage with pagination support",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"prefix",type:"StorageKey"},{name:"count",type:"u32"},{name:"startKey",type:"StorageKey",isOptional:!0},{name:"at",type:"Hash",isHistoric:!0,isOptional:!0}],type:"Vec<StorageKey>"},getStorage:{description:"Returns a child storage entry at a specific block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{name:"at",type:"Hash",isHistoric:!0,isOptional:!0}],type:"Option<StorageData>"},getStorageEntries:{description:"Returns child storage entries for multiple keys at a specific block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"keys",type:"Vec<StorageKey>"},{name:"at",type:"Hash",isHistoric:!0,isOptional:!0}],type:"Vec<Option<StorageData>>"},getStorageHash:{description:"Returns the hash of a child storage entry at a block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{name:"at",type:"Hash",isHistoric:!0,isOptional:!0}],type:"Option<Hash>"},getStorageSize:{description:"Returns the size of a child storage entry at a block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{name:"at",type:"Hash",isHistoric:!0,isOptional:!0}],type:"Option<u64>"}},types:{PrefixedStorageKey:"StorageKey"}},definitions$3={rpc:{localStorageSet:{description:"Set offchain local storage under given key and prefix",params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"},{name:"value",type:"Bytes"}],type:"Null"},localStorageGet:{description:"Get offchain local storage under given key and prefix",params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"}},types:{StorageKind:{_enum:{PERSISTENT:1,LOCAL:2}}}};const QUERY_PARAMS=[{name:"extrinsic",type:"Bytes"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}];var definitions$2={rpc:{queryInfo:{description:"Retrieves the fee information for an encoded extrinsic",params:QUERY_PARAMS,type:"RuntimeDispatchInfo"},queryFeeDetails:{description:"Query the detailed fee of a given encoded extrinsic",params:QUERY_PARAMS,type:"FeeDetails"}},types:{FeeDetails:{inclusionFee:"Option<InclusionFee>"},InclusionFee:{baseFee:"Balance",lenFee:"Balance",adjustedWeightFee:"Balance"},RuntimeDispatchInfo:{weight:"Weight",class:"DispatchClass",partialFee:"Balance"}}},definitions$1={rpc:{call:{alias:["state_callAt"],description:"Perform a call to a builtin on the chain",params:[{name:"method",type:"Text"},{name:"data",type:"Bytes"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Bytes"},getKeys:{description:"Retrieves the keys with a certain prefix",params:[{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Vec<StorageKey>"},getPairs:{description:"Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)",params:[{name:"prefix",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Vec<KeyValue>"},getKeysPaged:{alias:["state_getKeysPagedAt"],description:"Returns the keys with prefix with pagination support.",params:[{name:"key",type:"StorageKey"},{name:"count",type:"u32"},{name:"startKey",type:"StorageKey",isOptional:!0},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Vec<StorageKey>"},getStorage:{alias:["state_getStorageAt"],description:"Retrieves the storage for a key",params:[{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"StorageData"},getStorageHash:{alias:["state_getStorageHashAt"],description:"Retrieves the storage hash",params:[{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Hash"},getStorageSize:{alias:["state_getStorageSizeAt"],description:"Retrieves the storage size",params:[{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"u64"},getChildKeys:{description:"Retrieves the keys with prefix of a specific child storage",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Vec<StorageKey>"},getChildStorage:{description:"Retrieves the child storage for a key",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"StorageData"},getChildStorageHash:{description:"Retrieves the child storage hash",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Hash"},getChildStorageSize:{description:"Retrieves the child storage size",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"u64"},getMetadata:{description:"Returns the runtime metadata",params:[{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Metadata"},getRuntimeVersion:{alias:["chain_getRuntimeVersion"],description:"Get the runtime version",params:[{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"RuntimeVersion"},queryStorage:{description:"Query historical storage entries (by key) starting from a start block",params:[{name:"keys",type:"Vec<StorageKey>"},{name:"fromBlock",type:"Hash"},{name:"toBlock",type:"BlockHash",isOptional:!0}],type:"Vec<StorageChangeSet>"},queryStorageAt:{description:"Query storage entries (by key) starting at block hash given as the second parameter",params:[{name:"keys",type:"Vec<StorageKey>"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Vec<StorageChangeSet>"},getChildReadProof:{description:"Returns proof of storage for child key entries at a specific block state.",params:[{name:"childStorageKey",type:"PrefixedStorageKey"},{name:"keys",type:"Vec<StorageKey>"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"ReadProof"},getReadProof:{description:"Returns proof of storage entries at a specific block state",params:[{name:"keys",type:"Vec<StorageKey>"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"ReadProof"},subscribeRuntimeVersion:{alias:["chain_subscribeRuntimeVersion","chain_unsubscribeRuntimeVersion"],description:"Retrieves the runtime version via subscription",params:[],pubsub:["runtimeVersion","subscribeRuntimeVersion","unsubscribeRuntimeVersion"],type:"RuntimeVersion"},subscribeStorage:{description:"Subscribes to storage changes for the provided keys",params:[{name:"keys",type:"Vec<StorageKey>",isOptional:!0}],pubsub:["storage","subscribeStorage","unsubscribeStorage"],type:"StorageChangeSet"},traceBlock:{description:"Provides a way to trace the re-execution of a single block",params:[{name:"block",type:"Hash"},{name:"targets",type:"Option<Text>"},{name:"storageKeys",type:"Option<Text>"},{name:"methods",type:"Option<Text>"}],type:"TraceBlockResponse"},trieMigrationStatus:{description:"Check current migration state",params:[{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"MigrationStatusResult"}},types:{ApiId:"[u8; 8]",BlockTrace:{blockHash:"Text",parentHash:"Text",tracingTargets:"Text",storageKeys:"Text",spans:"Vec<BlockTraceSpan>",events:"Vec<BlockTraceEvent>"},BlockTraceEvent:{target:"Text",data:"BlockTraceEventData",parentId:"Option<u64>"},BlockTraceEventData:{stringValues:"HashMap<Text, Text>"},BlockTraceSpan:{id:"u64",parentId:"Option<u64>",name:"Text",target:"Text",wasm:"bool"},KeyValueOption:"(StorageKey, Option<StorageData>)",MigrationStatusResult:{topRemainingToMigrate:"u64",childRemainingToMigrate:"u64"},ReadProof:{at:"Hash",proof:"Vec<Bytes>"},RuntimeVersionApi:"(ApiId, u32)",RuntimeVersion:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>",transactionVersion:"u32"},RuntimeVersionPartial:{specName:"Text",specVersion:"u32"},SpecVersion:"u32",StorageChangeSet:{block:"Hash",changes:"Vec<KeyValueOption>"},TraceBlockResponse:{_enum:{TraceError:"TraceError",BlockTrace:"BlockTrace"}},TraceError:{error:"Text"}}},definitions=Object.freeze(Object.defineProperty({__proto__:null,assets:definitions$T,authorship:definitions$S,aura:definitions$R,babe:definitions$Q,balances:definitions$P,beefy:definitions$O,collective:definitions$N,consensus:definitions$M,contracts:definitions$L,democracy:definitions$K,dev:definitions$J,elections:definitions$I,engine:definitions$H,evm:definitions$G,extrinsics:definitions$F,genericAsset:definitions$E,gilt:definitions$D,grandpa:definitions$C,identity:definitions$B,imOnline:definitions$A,lottery:definitions$z,mmr:definitions$y,offences:definitions$x,proxy:definitions$w,recovery:definitions$v,scheduler:definitions$u,session:definitions$t,society:definitions$s,staking:definitions$r,support:definitions$q,syncstate:definitions$p,system:definitions$o,treasury:definitions$n,txpayment:definitions$m,uniques:definitions$l,utility:definitions$k,vesting:definitions$j,attestations:definitions$i,bridges:definitions$h,claims:definitions$g,crowdloan:definitions$f,cumulus:definitions$e,parachains:definitions$d,poll:definitions$c,purchase:definitions$b,xcm:definitions$a,contractsAbi:definitions$9,eth:definitions$8,rpc:definitions$7,author:definitions$6,chain:definitions$5,childstate:definitions$4,offchain:definitions$3,payment:definitions$2,state:definitions$1,metadata:definitions$W,runtime:definitions$V,scaleInfo:definitions$U},Symbol.toStringTag,{value:"Module"}));const jsonrpc={};Object.keys(definitions).forEach(r=>Object.entries(definitions[r].rpc||{}).forEach(([e,t])=>{const n=t.aliasSection||r;jsonrpc[n]||(jsonrpc[n]={}),jsonrpc[n][e]=objectSpread({},t,{isSubscription:!!t.pubsub,jsonrpc:`${n}_${e}`,method:e,section:n})}));var rpcDefinitions=jsonrpc;function lazyVariants(r,{type:e},t,n){const s={},i=r.getSiType(e).def.asVariant.variants;for(let a=0;a<i.length;a++)lazyMethod(s,i[a],n,t);return s}const emptyCheck={extrinsic:{},payload:{}},polkadot$2={LimitParathreadCommits:emptyCheck,OnlyStakingAndClaims:emptyCheck,PrevalidateAttests:emptyCheck,RestrictFunctionality:emptyCheck,TransactionCallFilter:emptyCheck,ValidateDoubleVoteReports:emptyCheck},shell$1={DisallowSigned:emptyCheck},statemint$1={ChargeAssetTxPayment:{extrinsic:{tip:"Compact<Balance>",assetId:"Option<AssetId>"},payload:{}}},CheckMortality={extrinsic:{era:"ExtrinsicEra"},payload:{blockHash:"Hash"}},substrate$1={ChargeTransactionPayment:{extrinsic:{tip:"Compact<Balance>"},payload:{}},CheckBlockGasLimit:emptyCheck,CheckEra:CheckMortality,CheckGenesis:{extrinsic:{},payload:{genesisHash:"Hash"}},CheckMortality,CheckNonZeroSender:emptyCheck,CheckNonce:{extrinsic:{nonce:"Compact<Index>"},payload:{}},CheckSpecVersion:{extrinsic:{},payload:{specVersion:"u32"}},CheckTxVersion:{extrinsic:{},payload:{transactionVersion:"u32"}},CheckVersion:{extrinsic:{},payload:{specVersion:"u32"}},CheckWeight:emptyCheck,LockStakingStatus:emptyCheck,ValidateEquivocationReport:emptyCheck},allExtensions=objectSpread({},substrate$1,polkadot$2,shell$1,statemint$1),fallbackExtensions=["CheckVersion","CheckGenesis","CheckEra","CheckNonce","CheckWeight","ChargeTransactionPayment","CheckBlockGasLimit"];function findUnknownExtensions(r,e={}){const t=[...Object.keys(allExtensions),...Object.keys(e)];return r.filter(n=>!t.includes(n))}function expandExtensionTypes(r,e,t={}){return r.map(n=>t[n]||allExtensions[n]).filter(n=>!!n).reduce((n,s)=>objectSpread(n,s[e]),{})}function decodeEvent(r,e){if(!e||!e.length)return{DataType:Null};const t=e.subarray(0,2);return{DataType:r.findMetaEvent(t),value:{data:e.subarray(2),index:t}}}var vn,wn,Sn,Tn;class GenericEventData extends Tuple{constructor(t,n,s,i="<unknown>",a="<unknown>"){const o=(s==null?void 0:s.fields)||[];super(t,o.map(({type:c})=>t.createLookupType(c)),n);G(this,vn,void 0);G(this,wn,void 0);G(this,Sn,void 0);G(this,Tn,void 0);te(this,vn,s),te(this,wn,a),te(this,Sn,i),te(this,Tn,o.map(({type:c})=>t.lookup.getTypeDef(c)))}get meta(){return T(this,vn)}get method(){return T(this,wn)}get section(){return T(this,Sn)}get typeDef(){return T(this,Tn)}}vn=new WeakMap,wn=new WeakMap,Sn=new WeakMap,Tn=new WeakMap;class GenericEvent extends Struct{constructor(e,t){const{DataType:n,value:s}=decodeEvent(e,t);super(e,{index:"EventId",data:n},s)}get data(){return this.getT("data")}get index(){return this.getT("index")}get meta(){return this.data.meta}get method(){return this.data.method}get section(){return this.data.section}get typeDef(){return this.data.typeDef}toHuman(e){return objectSpread({method:this.method,section:this.section},e?{docs:this.meta.docs.map(t=>t.toString())}:null,super.toHuman(e))}}const BIT_SIGNED=128,BIT_UNSIGNED=0,EMPTY_U8A=new Uint8Array,DEFAULT_VERSION=4,IMMORTAL_ERA=new Uint8Array([0]),UNMASK_VERSION=127,EXTRINSIC_VERSION=4;class GenericExtrinsicV4 extends Struct{constructor(e,t,{isSigned:n}={}){super(e,{signature:"ExtrinsicSignatureV4",method:"Call"},GenericExtrinsicV4.decodeExtrinsic(e,t,n))}static decodeExtrinsic(e,t,n=!1){if(t instanceof GenericExtrinsicV4)return t;if(t instanceof e.createClassUnsafe("Call"))return{method:t};if(isU8a(t)){const s=e.createTypeUnsafe("ExtrinsicSignatureV4",[t,{isSigned:n}]);return{method:e.createTypeUnsafe("Call",[t.subarray(s.encodedLength)]),signature:s}}return t||{}}get encodedLength(){return this.toU8a().length}get method(){return this.getT("method")}get registry(){return super.registry}get signature(){return this.getT("signature")}get version(){return EXTRINSIC_VERSION}addSignature(e,t,n){return this.signature.addSignature(e,t,n),this}sign(e,t){return this.signature.sign(this.method,e,t),this}signFake(e,t){return this.signature.signFake(this.method,e,t),this}}const VERSIONS$1=["ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicV4"];function newFromValue(r,e,t){if(e instanceof GenericExtrinsic)return e.unwrap();const n=(t&BIT_SIGNED)===BIT_SIGNED,s=VERSIONS$1[t&UNMASK_VERSION]||VERSIONS$1[0];return r.createTypeUnsafe(s,[e,{isSigned:n,version:t}])}function decodeExtrinsic(r,e,t=DEFAULT_VERSION){return isU8a(e)||Array.isArray(e)||isHex(e)?decodeU8a$4(r,u8aToU8a(e),t):e instanceof r.createClassUnsafe("Call")?newFromValue(r,{method:e},t):newFromValue(r,e,t)}function decodeU8a$4(r,e,t){if(!e.length)return newFromValue(r,new Uint8Array,t);const[n,s]=compactFromU8a(e),i=n+s.toNumber();assert(i<=e.length,()=>`Extrinsic: length less than remainder, expected at least ${i}, found ${e.length}`);const a=e.subarray(n,i);return newFromValue(r,a.subarray(1),a[0])}class ExtrinsicBase extends Base$2{constructor(e,t,n){super(e,t,n);const s=Object.keys(e.getSignedExtensionTypes()),i=a=>this.inner.signature[a];for(let a=0;a<s.length;a++)objectProperty(this,s[a],i)}get args(){return this.method.args}get argsDef(){return this.method.argsDef}get callIndex(){return this.method.callIndex}get data(){return this.method.data}get era(){return this.inner.signature.era}get encodedLength(){return this.toU8a().length}get isSigned(){return this.inner.signature.isSigned}get length(){return this.toU8a(!0).length}get meta(){return this.method.meta}get method(){return this.inner.method}get nonce(){return this.inner.signature.nonce}get registry(){return super.registry}get signature(){return this.inner.signature.signature}get signer(){return this.inner.signature.signer}get tip(){return this.inner.signature.tip}get type(){return this.inner.version}get inner(){return this.unwrap()}get version(){return this.type|(this.isSigned?BIT_SIGNED:BIT_UNSIGNED)}is(e){return this.method.is(e)}unwrap(){return super.unwrap()}}var Gt;class GenericExtrinsic extends ExtrinsicBase{constructor(t,n,{version:s}={}){super(t,decodeExtrinsic(t,n,s));G(this,Gt,void 0)}get hash(){return T(this,Gt)||te(this,Gt,super.hash),T(this,Gt)}addSignature(t,n,s){return this.inner.addSignature(t,n,s),te(this,Gt,void 0),this}inspect(){const t=u8aConcat(...this.toU8aInner());return{inner:this.inner.inspect().inner,outer:[compactToU8a(t.length),new Uint8Array([this.version])]}}sign(t,n){return this.inner.sign(t,n),te(this,Gt,void 0),this}signFake(t,n){return this.inner.signFake(t,n),te(this,Gt,void 0),this}toHex(t){return u8aToHex(this.toU8a(t))}toHuman(t){return objectSpread({},{isSigned:this.isSigned,method:this.method.toHuman(t)},this.isSigned?{era:this.era.toHuman(t),nonce:this.nonce.toHuman(t),signature:this.signature.toHex(),signer:this.signer.toHuman(t),tip:this.tip.toHuman(t)}:null)}toJSON(){return this.toHex()}toRawType(){return"Extrinsic"}toU8a(t){const n=u8aConcat(...this.toU8aInner());return t?n:compactAddLength(n)}toU8aInner(){return[new Uint8Array([this.version]),this.inner.toU8a()]}}Gt=new WeakMap;function getTrailingZeros(r){const e=r.toString(2);let t=0;for(;e[e.length-1-t]==="0";)t++;return t}function decodeMortalEra(r,e){if(isU8a(e)||isHex(e)||Array.isArray(e))return decodeMortalU8a(r,u8aToU8a(e));if(e){if(isObject$2(e))return decodeMortalObject(r,e)}else return[new u64(r),new u64(r)];throw new Error("Invalid data passed to Mortal era")}function decodeMortalObject(r,e){const{current:t,period:n}=e;let s=Math.pow(2,Math.ceil(Math.log2(n)));s=Math.min(Math.max(s,4),1<<16);const i=t%s,a=Math.max(s>>12,1),o=i/a*a;return[new u64(r,s),new u64(r,o)]}function decodeMortalU8a(r,e){if(e.length===0)return[new u64(r),new u64(r)];const t=u8aToBn(e.subarray(0,1)).toNumber(),n=u8aToBn(e.subarray(1,2)).toNumber(),s=t+(n<<8),i=2<<s%(1<<4),a=Math.max(i>>12,1),o=(s>>4)*a;return assert(i>=4&&o<i,"Invalid data passed to Mortal era"),[new u64(r,i),new u64(r,o)]}function decodeExtrinsicEra(r=new Uint8Array){if(isU8a(r))return!r.length||r[0]===0?new Uint8Array([0]):new Uint8Array([1,r[0],r[1]]);if(r){if(r instanceof GenericExtrinsicEra)return decodeExtrinsicEra(r.toU8a());if(isHex(r))return decodeExtrinsicEra(hexToU8a(r));if(isObject$2(r)){const e=Object.entries(r).map(([s,i])=>[s.toLowerCase(),i]),t=e.find(([s])=>s.toLowerCase()==="mortalera"),n=e.find(([s])=>s.toLowerCase()==="immortalera");return t?{MortalEra:t[1]}:n?{ImmortalEra:n[1]}:{MortalEra:r}}}else return new Uint8Array([0]);throw new Error("Invalid data passed to Era")}class ImmortalEra extends Raw{constructor(e,t){super(e,IMMORTAL_ERA)}}class MortalEra extends Tuple{constructor(e,t){super(e,{period:u64,phase:u64},decodeMortalEra(e,t))}get encodedLength(){return 2}get period(){return this[0]}get phase(){return this[1]}toHuman(){return{period:formatNumber(this.period),phase:formatNumber(this.phase)}}toJSON(){return this.toHex()}toU8a(e){const t=this.period.toNumber(),n=this.phase.toNumber(),s=Math.max(t>>12,1),i=getTrailingZeros(t),a=Math.min(15,Math.max(1,i-1))+(n/s<<4),o=a>>8,c=a&255;return new Uint8Array([c,o])}birth(e){return Math.floor((Math.max(bnToBn(e).toNumber(),this.phase.toNumber())-this.phase.toNumber())/this.period.toNumber())*this.period.toNumber()+this.phase.toNumber()}death(e){return this.birth(e)+this.period.toNumber()}}class GenericExtrinsicEra extends Enum{constructor(e,t){super(e,{ImmortalEra,MortalEra},decodeExtrinsicEra(t))}get encodedLength(){return this.isImmortalEra?this.asImmortalEra.encodedLength:this.asMortalEra.encodedLength}get asImmortalEra(){return assert(this.isImmortalEra,()=>`Cannot convert '${this.type}' via asImmortalEra`),this.inner}get asMortalEra(){return assert(this.isMortalEra,()=>`Cannot convert '${this.type}' via asMortalEra`),this.inner}get isImmortalEra(){return this.index===0}get isMortalEra(){return this.index>0}toU8a(e){return this.isMortalEra?this.asMortalEra.toU8a(e):this.asImmortalEra.toU8a(e)}}const VERSIONS=["ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadV4"];function decodeExtrinsicPayload(r,e,t=DEFAULT_VERSION){return e instanceof GenericExtrinsicPayload?e.unwrap():r.createTypeUnsafe(VERSIONS[t]||VERSIONS[0],[e,{version:t}])}class GenericExtrinsicPayload extends Base$2{constructor(e,t,{version:n}={}){super(e,decodeExtrinsicPayload(e,t,n))}get blockHash(){return this.inner.blockHash}get era(){return this.inner.era}get genesisHash(){return this.inner.genesisHash||this.registry.createTypeUnsafe("Hash",[])}get method(){return this.inner.method}get nonce(){return this.inner.nonce}get specVersion(){return this.inner.specVersion||this.registry.createTypeUnsafe("u32",[])}get tip(){return this.inner.tip||this.registry.createTypeUnsafe("Compact<Balance>",[])}get transactionVersion(){return this.inner.transactionVersion||this.registry.createTypeUnsafe("u32",[])}eq(e){return this.inner.eq(e)}sign(e){const t=this.inner.sign(e);return{signature:u8aToHex(t)}}toHuman(e){return this.inner.toHuman(e)}toJSON(){return this.toHex()}toString(){return this.toHex()}toU8a(e){return super.toU8a(e?{method:!0}:!1)}}class GenericExtrinsicPayloadUnknown extends Struct{constructor(e,t,{version:n=0}={}){throw super(e,{}),new Error(`Unsupported extrinsic payload version ${n}`)}}class GenericExtrinsicUnknown extends Struct{constructor(e,t,{isSigned:n=!1,version:s=0}={}){throw super(e,{}),new Error(`Unsupported ${n?"":"un"}signed extrinsic version ${s&UNMASK_VERSION}`)}}const knownTypes={address:"Address",blockHash:"Hash",blockNumber:"BlockNumber",era:"ExtrinsicEra",genesisHash:"Hash",method:"Call",nonce:"Compact<Index>",runtimeVersion:"RuntimeVersion",signedExtensions:"Vec<Text>",tip:"Compact<Balance>",version:"u8"};var Or;class GenericSignerPayload extends Struct{constructor(t,n){const s=objectSpread({},t.getSignedExtensionTypes(),t.getSignedExtensionExtra());super(t,objectSpread({},s,knownTypes),n);G(this,Or,void 0);te(this,Or,{});const i=a=>this.get(a);for(const[a,o]of Object.entries(s))knownTypes[a]||(T(this,Or)[a]=o),objectProperty(this,a,i)}get address(){return this.getT("address")}get blockHash(){return this.getT("blockHash")}get blockNumber(){return this.getT("blockNumber")}get era(){return this.getT("era")}get genesisHash(){return this.getT("genesisHash")}get method(){return this.getT("method")}get nonce(){return this.getT("nonce")}get runtimeVersion(){return this.getT("runtimeVersion")}get signedExtensions(){return this.getT("signedExtensions")}get tip(){return this.getT("tip")}get version(){return this.getT("version")}toPayload(){const t={},n=Object.keys(T(this,Or));for(let s=0;s<n.length;s++){const i=n[s],a=this.get(i);(!(a instanceof Option)||a.isSome)&&(t[i]=a.toHex())}return objectSpread(t,{address:this.address.toString(),blockHash:this.blockHash.toHex(),blockNumber:this.blockNumber.toHex(),era:this.era.toHex(),genesisHash:this.genesisHash.toHex(),method:this.method.toHex(),nonce:this.nonce.toHex(),signedExtensions:this.signedExtensions.map(s=>s.toString()),specVersion:this.runtimeVersion.specVersion.toHex(),tip:this.tip.toHex(),transactionVersion:this.runtimeVersion.transactionVersion.toHex(),version:this.version.toNumber()})}toRaw(){const t=this.toPayload(),n=u8aToHex(this.registry.createTypeUnsafe("ExtrinsicPayload",[t,{version:t.version}]).toU8a({method:!0}));return{address:t.address,data:n,type:"payload"}}}Or=new WeakMap;function sign(r,e,t,n){const s=t.length>256?r.hash(t):t;return e.sign(s,n)}var Pn;class GenericExtrinsicPayloadV4 extends Struct{constructor(t,n){super(t,objectSpread({method:"Bytes"},t.getSignedExtensionTypes(),t.getSignedExtensionExtra()),n);G(this,Pn,void 0);te(this,Pn,{withType:t.createTypeUnsafe("ExtrinsicSignature",[])instanceof Enum})}get blockHash(){return this.getT("blockHash")}get era(){return this.getT("era")}get genesisHash(){return this.getT("genesisHash")}get method(){return this.getT("method")}get nonce(){return this.getT("nonce")}get specVersion(){return this.getT("specVersion")}get tip(){return this.getT("tip")}get transactionVersion(){return this.getT("transactionVersion")}get assetId(){return this.getT("assetId")}sign(t){return sign(this.registry,t,this.toU8a({method:!0}),T(this,Pn))}}Pn=new WeakMap;const FAKE_SIGNATURE=new Uint8Array(256).fill(1);function toAddress(r,e){return r.createTypeUnsafe("Address",[isU8a(e)?u8aToHex(e):e])}var cr;const Qn=class extends Struct{constructor(t,n,{isSigned:s}={}){const i=t.getSignedExtensionTypes();super(t,objectSpread({signer:"Address",signature:"ExtrinsicSignature"},i),Qn.decodeExtrinsicSignature(n,s));G(this,cr,void 0);te(this,cr,Object.keys(i)),objectProperties(this,T(this,cr),a=>this.get(a))}static decodeExtrinsicSignature(t,n=!1){if(t){if(t instanceof Qn)return t}else return EMPTY_U8A;return n?t:EMPTY_U8A}get encodedLength(){return this.isSigned?super.encodedLength:0}get isSigned(){return!this.signature.isEmpty}get era(){return this.getT("era")}get nonce(){return this.getT("nonce")}get registry(){return super.registry}get signature(){return this.multiSignature.value||this.multiSignature}get multiSignature(){return this.getT("signature")}get signer(){return this.getT("signer")}get tip(){return this.getT("tip")}_injectSignature(t,n,s){for(let i=0;i<T(this,cr).length;i++){const a=T(this,cr)[i],o=s.get(a);isUndefined(o)||this.set(a,o)}return this.set("signer",t),this.set("signature",n),this}addSignature(t,n,s){return this._injectSignature(toAddress(this.registry,t),this.registry.createTypeUnsafe("ExtrinsicSignature",[n]),new GenericExtrinsicPayloadV4(this.registry,s))}createPayload(t,n){const{era:s,runtimeVersion:{specVersion:i,transactionVersion:a}}=n;return new GenericExtrinsicPayloadV4(this.registry,objectSpread({},n,{era:s||IMMORTAL_ERA,method:t.toHex(),specVersion:i,transactionVersion:a}))}sign(t,n,s){assert(n&&n.addressRaw,()=>`Expected a valid keypair for signing, found ${stringify(n)}`);const i=this.createPayload(t,s);return this._injectSignature(toAddress(this.registry,n.addressRaw),this.registry.createTypeUnsafe("ExtrinsicSignature",[i.sign(n)]),i)}signFake(t,n,s){assert(n,()=>`Expected a valid address for signing, found ${stringify(n)}`);const i=this.createPayload(t,s);return this._injectSignature(toAddress(this.registry,n),this.registry.createTypeUnsafe("ExtrinsicSignature",[FAKE_SIGNATURE]),i)}toU8a(t){return this.isSigned?super.toU8a(t):EMPTY_U8A}};let GenericExtrinsicSignatureV4=Qn;cr=new WeakMap;function decodeAccountId$1(r){return isU8a(r)||Array.isArray(r)?u8aToU8a(r):isHex(r)||isEthereumAddress(r)?hexToU8a(r):isString(r)?u8aToU8a(r):r}class GenericEthereumAccountId extends U8aFixed{constructor(e,t=new Uint8Array){super(e,decodeAccountId$1(t),160)}eq(e){return super.eq(decodeAccountId$1(e))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toString(){return ethereumEncode(this)}toRawType(){return"AccountId"}}const PREFIX_1BYTE=239,PREFIX_2BYTE=252,PREFIX_4BYTE=253,PREFIX_8BYTE=254,MAX_1BYTE=new BN(PREFIX_1BYTE),MAX_2BYTE=new BN(1).shln(16),MAX_4BYTE=new BN(1).shln(32);function decodeAccountIndex(r){return r instanceof GenericAccountIndex?r.toBn():isBn(r)||isNumber(r)||isHex(r)||isU8a(r)||isBigInt(r)?r:decodeAccountIndex(decodeAddress(r))}class GenericAccountIndex extends u32{constructor(e,t=new BN(0)){super(e,decodeAccountIndex(t))}static calcLength(e){const t=bnToBn(e);return t.lte(MAX_1BYTE)?1:t.lt(MAX_2BYTE)?2:t.lt(MAX_4BYTE)?4:8}static readLength(e){const t=e[0];return t===PREFIX_2BYTE?[1,2]:t===PREFIX_4BYTE?[1,4]:t===PREFIX_8BYTE?[1,8]:[0,1]}static writeLength(e){switch(e.length){case 2:return new Uint8Array([PREFIX_2BYTE]);case 4:return new Uint8Array([PREFIX_4BYTE]);case 8:return new Uint8Array([PREFIX_8BYTE]);default:return new Uint8Array([])}}eq(e){return isBn(e)||isNumber(e)?super.eq(e):super.eq(this.registry.createTypeUnsafe("AccountIndex",[e]))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toString(){const e=GenericAccountIndex.calcLength(this);return encodeAddress(this.toU8a().subarray(0,e),this.registry.chainSS58)}toRawType(){return"AccountIndex"}}const ACCOUNT_ID_PREFIX$1=new Uint8Array([255]);function decodeString$1(r,e){const t=decodeAddress(e);return t.length===20?r.createTypeUnsafe("EthereumAccountId",[t]):r.createTypeUnsafe("AccountIndex",[u8aToBn(t,!0)])}function decodeU8a$3(r,e){if(e.length===20)return r.createTypeUnsafe("EthereumAccountId",[e]);if(e[0]===255)return r.createTypeUnsafe("EthereumAccountId",[e.subarray(1)]);const[t,n]=GenericAccountIndex.readLength(e);return r.createTypeUnsafe("AccountIndex",[u8aToBn(e.subarray(t,t+n),!0)])}function decodeAddressOrIndex$1(r,e){return e instanceof GenericEthereumLookupSource?e.inner:e instanceof GenericEthereumAccountId||e instanceof GenericAccountIndex?e:isU8a(e)||Array.isArray(e)||isHex(e)?decodeU8a$3(r,u8aToU8a(e)):isBn(e)||isNumber(e)||isBigInt(e)?r.createTypeUnsafe("AccountIndex",[e]):decodeString$1(r,e)}class GenericEthereumLookupSource extends Base$2{constructor(e,t=new Uint8Array){super(e,decodeAddressOrIndex$1(e,t))}get encodedLength(){const e=this._rawLength;return e+(e>1?1:0)}get _rawLength(){return this.inner instanceof GenericAccountIndex?GenericAccountIndex.calcLength(this.inner):this.inner.encodedLength}toHex(){return u8aToHex(this.toU8a())}toRawType(){return"Address"}toU8a(e){const t=this.inner.toU8a().subarray(0,this._rawLength);return e?t:u8aConcat(this.inner instanceof GenericAccountIndex?GenericAccountIndex.writeLength(t):ACCOUNT_ID_PREFIX$1,t)}}function decodeAccountId(r){if(isU8a(r)||Array.isArray(r))return u8aToU8a(r);if(r){if(isHex(r))return hexToU8a(r);if(isString(r))return decodeAddress(r)}else return new Uint8Array;throw new Error(`Unknown type passed to AccountId constructor, found typeof ${typeof r}`)}class GenericAccountId extends U8aFixed{constructor(e,t){const n=decodeAccountId(t);assert(n.length>=32||!n.some(s=>s),()=>`Invalid AccountId provided, expected 32 bytes, found ${n.length}`),super(e,n,256)}eq(e){return super.eq(decodeAccountId(e))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toString(){return encodeAddress(this,this.registry.chainSS58)}toRawType(){return"AccountId"}}class GenericBlock extends Struct{constructor(e,t){super(e,{header:"Header",extrinsics:"Vec<Extrinsic>"},t)}get contentHash(){return this.registry.hash(this.toU8a())}get extrinsics(){return this.getT("extrinsics")}get hash(){return this.header.hash}get header(){return this.getT("header")}}function getArgsDef(r,e){return e.fields.reduce((t,{name:n,type:s},i)=>(t[n.unwrapOr(`param${i}`).toString()]=r.createLookupType(s),t),{})}function decodeCallViaObject(r,e,t){const{args:n,callIndex:s}=e,i=s instanceof GenericCallIndex?s.toU8a():s,a=t||r.findMetaCall(i).meta;return{args:n,argsDef:getArgsDef(r,a),callIndex:s,meta:a}}function decodeCallViaU8a(r,e,t){const n=new Uint8Array(2);n.set(e.subarray(0,2),0);const s=t||r.findMetaCall(n).meta;return{args:e.subarray(2),argsDef:getArgsDef(r,s),callIndex:n,meta:s}}function decodeCall(r,e=new Uint8Array,t){if(isU8a(e)||isHex(e))return decodeCallViaU8a(r,u8aToU8a(e),t);if(isObject$2(e)&&e.callIndex&&e.args)return decodeCallViaObject(r,e,t);throw new Error(`Call: Cannot decode value '${e}' of type ${typeof e}`)}class GenericCallIndex extends U8aFixed{constructor(e,t){super(e,t,16)}}class GenericCall extends Struct{constructor(e,t,n){const s=decodeCall(e,t,n);try{super(e,{callIndex:GenericCallIndex,args:Struct.with(s.argsDef)},s)}catch(i){let a="unknown.unknown";try{const o=e.findMetaCall(s.callIndex);a=`${o.section}.${o.method}`}catch{}throw new Error(`Call: failed decoding ${a}:: ${i.message}`)}this._meta=s.meta}get args(){return[...this.getT("args").values()]}get argsDef(){return getArgsDef(this.registry,this.meta)}get argsEntries(){return[...this.getT("args").entries()]}get callIndex(){return this.getT("callIndex").toU8a()}get data(){return this.getT("args").toU8a()}get meta(){return this._meta}get method(){return this.registry.findMetaCall(this.callIndex).method}get registry(){return super.registry}get section(){return this.registry.findMetaCall(this.callIndex).section}is(e){return e.callIndex[0]===this.callIndex[0]&&e.callIndex[1]===this.callIndex[1]}toHuman(e){var t,n;let s;try{s=this.registry.findMetaCall(this.callIndex)}catch{}return objectSpread({args:this.argsEntries.reduce((i,[a,o])=>objectSpread(i,{[a]:o.toHuman(e)}),{}),method:(t=s)===null||t===void 0?void 0:t.method,section:(n=s)===null||n===void 0?void 0:n.section},e&&s?{docs:s.meta.docs.map(i=>i.toString())}:null)}toRawType(){return"Call"}}function createValue(r,e,t,n=!0){return t&&isFunction$3(t.unwrapOrDefault)?t:r.createTypeUnsafe(e,[n?isNull(t)||isUndefined(t)?null:Array.isArray(t)?t:[t]:t])}function decodeValue(r,e,t){return e==="ss58Format"?createValue(r,"Option<u32>",t,!1):e==="tokenDecimals"?createValue(r,"Option<Vec<u32>>",t):e==="tokenSymbol"?createValue(r,"Option<Vec<Text>>",t):t}function decode(r,e){return(e&&isFunction$3(e.entries)?[...e.entries()]:Object.entries(e||{})).reduce((t,[n,s])=>(t[n]=decodeValue(r,n,s),t),{ss58Format:r.createTypeUnsafe("Option<u32>",[]),tokenDecimals:r.createTypeUnsafe("Option<Vec<u32>>",[]),tokenSymbol:r.createTypeUnsafe("Option<Vec<Text>>",[])})}class GenericChainProperties extends Json{constructor(e,t){super(e,decode(e,t))}get ss58Format(){return this.getT("ss58Format")}get tokenDecimals(){return this.getT("tokenDecimals")}get tokenSymbol(){return this.getT("tokenSymbol")}}const CID_AURA=stringToU8a("aura"),CID_BABE=stringToU8a("BABE"),CID_GRPA=stringToU8a("FRNK"),CID_POW=stringToU8a("pow_");function getAuraAuthor(r,e,t){return t[r.createTypeUnsafe("RawAuraPreDigest",[e.toU8a(!0)]).slotNumber.mod(new BN(t.length)).toNumber()]}function getBabeAuthor(r,e,t){const n=r.createTypeUnsafe("RawBabePreDigestCompat",[e.toU8a(!0)]);return t[n.value.toNumber()]}function getBytesAsAuthor(r,e){return r.createTypeUnsafe("AccountId",[e])}class GenericConsensusEngineId extends U8aFixed{constructor(e,t){super(e,isNumber(t)?bnToU8a(t,{isLe:!1}):t,32)}get isAura(){return this.eq(CID_AURA)}get isBabe(){return this.eq(CID_BABE)}get isGrandpa(){return this.eq(CID_GRPA)}get isPow(){return this.eq(CID_POW)}extractAuthor(e,t){if(t!=null&&t.length){if(this.isAura)return getAuraAuthor(this.registry,e,t);if(this.isBabe)return getBabeAuthor(this.registry,e,t)}if(this.isPow||e.length===20)return getBytesAsAuthor(this.registry,e)}toHuman(){return this.toString()}toRawType(){return"ConsensusEngineId"}toString(){return this.isAscii?u8aToString(this):u8aToHex(this)}}const ACCOUNT_ID_PREFIX=new Uint8Array([255]);function decodeString(r,e){const t=decodeAddress(e);return t.length===32?r.createTypeUnsafe("AccountId",[t]):r.createTypeUnsafe("AccountIndex",[u8aToBn(t,!0)])}function decodeU8a$2(r,e){if(e.length===32)return r.createTypeUnsafe("AccountId",[e]);if(e[0]===255)return r.createTypeUnsafe("AccountId",[e.subarray(1)]);const[t,n]=GenericAccountIndex.readLength(e);return r.createTypeUnsafe("AccountIndex",[u8aToBn(e.subarray(t,t+n),!0)])}function decodeAddressOrIndex(r,e){return e instanceof GenericLookupSource?e.inner:e instanceof GenericAccountId||e instanceof GenericAccountIndex?e:isBn(e)||isNumber(e)||isBigInt(e)?r.createTypeUnsafe("AccountIndex",[e]):Array.isArray(e)||isHex(e)||isU8a(e)?decodeU8a$2(r,u8aToU8a(e)):decodeString(r,e)}class GenericLookupSource extends Base$2{constructor(e,t=new Uint8Array){super(e,decodeAddressOrIndex(e,t))}get encodedLength(){const e=this._rawLength;return e+(e>1?1:0)}get _rawLength(){return this.inner instanceof GenericAccountIndex?GenericAccountIndex.calcLength(this.inner):this.inner.encodedLength}inspect(){const e=this.inner.toU8a().subarray(0,this._rawLength);return{outer:[new Uint8Array(this.inner instanceof GenericAccountIndex?GenericAccountIndex.writeLength(e):ACCOUNT_ID_PREFIX),e]}}toHex(){return u8aToHex(this.toU8a())}toRawType(){return"Address"}toU8a(e){const t=this.inner.toU8a().subarray(0,this._rawLength);return e?t:u8aConcat(this.inner instanceof GenericAccountIndex?GenericAccountIndex.writeLength(t):ACCOUNT_ID_PREFIX,t)}}function decodeU8a$1(r,e){return[0,32].includes(e.length)?{Id:e}:e.length===20?{Address20:e}:e.length<=8?{Index:r.createTypeUnsafe("AccountIndex",[e]).toNumber()}:e}function decodeMultiAny(r,e){return e instanceof GenericAccountId?{Id:e}:isU8a(e)?decodeU8a$1(r,e):e instanceof GenericMultiAddress?e:e instanceof GenericAccountIndex||isBn(e)||isNumber(e)?{Index:isNumber(e)?e:e.toNumber()}:isString(e)?decodeU8a$1(r,decodeAddress(e.toString())):e}class GenericMultiAddress extends Enum{constructor(e,t){super(e,{Id:"AccountId",Index:"Compact<AccountIndex>",Raw:"Bytes",Address32:"H256",Address20:"H160"},decodeMultiAny(e,t))}inspect(){const{inner:e,outer:t=[]}=this.inner.inspect();return{inner:e,outer:[new Uint8Array([this.index]),...t]}}toString(){return this.value.toString()}}const AYE_BITS=128,NAY_BITS=0,CON_MASK=127,DEF_CONV=0;function decodeVoteBool(r){return r?new Uint8Array([AYE_BITS|DEF_CONV]):new Uint8Array([NAY_BITS])}function decodeVoteU8a(r){return r.length?r.subarray(0,1):new Uint8Array([NAY_BITS])}function decodeVoteType(r,e){return new Uint8Array([(new bool(r,e.aye).isTrue?AYE_BITS:NAY_BITS)|r.createTypeUnsafe("Conviction",[e.conviction||DEF_CONV]).index])}function decodeVote(r,e){return isU8a(e)?decodeVoteU8a(e):isUndefined(e)||e instanceof Boolean||isBoolean(e)?decodeVoteBool(new bool(r,e).isTrue):isNumber(e)?decodeVoteBool(e<0):decodeVoteType(r,e)}var An,En;class GenericVote extends U8aFixed{constructor(t,n){const s=decodeVote(t,n);super(t,s,8);G(this,An,void 0);G(this,En,void 0);te(this,An,(s[0]&AYE_BITS)===AYE_BITS),te(this,En,this.registry.createTypeUnsafe("Conviction",[s[0]&CON_MASK]))}get conviction(){return T(this,En)}get isAye(){return T(this,An)}get isNay(){return!this.isAye}toHuman(t){return{conviction:this.conviction.toHuman(t),vote:this.isAye?"Aye":"Nay"}}toRawType(){return"Vote"}}An=new WeakMap,En=new WeakMap;function decodeDataU8a(r,e){const t=e[0];if(t){if(t>=1&&t<=33){const n=t-1,s=e.subarray(1,n+1);return[r.createTypeUnsafe("Raw",[s]),1]}else if(t>=34&&t<=37)return[e.subarray(1,32+1),t-32]}else return[void 0,void 0];throw new Error(`Unable to decode Data, invalid indicator byte ${t}`)}function decodeData(r,e){return isU8a(e)||isString(e)?decodeDataU8a(r,u8aToU8a(e)):e?[e,void 0]:[void 0,void 0]}class Data extends Enum{constructor(e,t){super(e,{None:"Null",Raw:"Bytes",BlakeTwo256:"H256",Sha256:"H256",Keccak256:"H256",ShaThree256:"H256"},...decodeData(e,t)),assert(!this.isRaw||this.asRaw.length<=32,"Data.Raw values are limited to a maximum length of 32 bytes")}get asBlakeTwo256(){return this.value}get asKeccak256(){return this.value}get asRaw(){return this.value}get asSha256(){return this.value}get asShaThree256(){return this.value}get isBlakeTwo256(){return this.index===2}get isKeccak256(){return this.index===4}get isNone(){return this.index===0}get isRaw(){return this.index===1}get isSha256(){return this.index===3}get isShaThree256(){return this.index===5}get encodedLength(){return this.toU8a().length}toU8a(){if(this.index===0)return new Uint8Array(1);if(this.index===1){const t=this.value.toU8a(!0),n=Math.min(t.length,32),s=new Uint8Array(n+1);return s.set([n+1],0),s.set(t.subarray(0,n),1),s}const e=new Uint8Array(33);return e.set([this.index+32],0),e.set(this.value.toU8a(),1),e}}function flattenUniq(r,e=[]){for(let t=0;t<r.length;t++){const n=r[t];Array.isArray(n)?flattenUniq(n,e):e.push(n)}return[...new Set(e)]}function getSiName(r,e){const t=r.getTypeDef(e);return t.lookupName||t.type}function extractSubSingle(r,{sub:e}){const{lookupName:t,type:n}=e;return extractTypes$1([t||n])}function extractSubArray(r,{sub:e}){return extractTypes$1(e.map(({lookupName:t,type:n})=>t||n))}function unhandled(r,{info:e}){throw new Error(`Unhandled: Unable to create and validate type from ${r} (info=${TypeDefInfo[e]})`)}const mapping={[TypeDefInfo.BTreeMap]:extractSubArray,[TypeDefInfo.BTreeSet]:extractSubSingle,[TypeDefInfo.Compact]:extractSubSingle,[TypeDefInfo.DoNotConstruct]:unhandled,[TypeDefInfo.Enum]:extractSubArray,[TypeDefInfo.HashMap]:extractSubArray,[TypeDefInfo.Int]:unhandled,[TypeDefInfo.Linkage]:unhandled,[TypeDefInfo.Null]:unhandled,[TypeDefInfo.Option]:extractSubSingle,[TypeDefInfo.Plain]:(r,e)=>e.lookupName||e.type,[TypeDefInfo.Range]:extractSubSingle,[TypeDefInfo.RangeInclusive]:extractSubSingle,[TypeDefInfo.Result]:extractSubArray,[TypeDefInfo.Set]:extractSubArray,[TypeDefInfo.Si]:unhandled,[TypeDefInfo.Struct]:extractSubArray,[TypeDefInfo.Tuple]:extractSubArray,[TypeDefInfo.UInt]:unhandled,[TypeDefInfo.Vec]:extractSubSingle,[TypeDefInfo.VecFixed]:extractSubSingle,[TypeDefInfo.WrapperKeepOpaque]:extractSubSingle,[TypeDefInfo.WrapperOpaque]:extractSubSingle};function extractTypes$1(r){return r.map(e=>{const t=getTypeDef(e);return mapping[t.info](e,t)})}const l$b=logger("metadata");function validateTypes(r,e,t){const n=flattenUniq(extractTypes$1(t)).filter(s=>!r.hasType(s)&&!r.isLookupType(s)).sort();if(n.length!==0){const s=`Unknown types found, no types for ${n.join(", ")}`;if(e)throw new Error(s);l$b.warn(s)}return t}function extractTypes(r,e){return e.map(({type:t})=>r.getTypeDef(t).type)}function extractFieldTypes(r,e){return r.getSiType(e).def.asVariant.variants.map(({fields:t})=>extractTypes(r,t))}function getPalletNames({lookup:r,pallets:e}){return e.reduce((t,{calls:n,constants:s,events:i,storage:a})=>(t.push([extractTypes(r,s)]),n.isSome&&t.push(extractFieldTypes(r,n.unwrap().type)),i.isSome&&t.push(extractFieldTypes(r,i.unwrap().type)),a.isSome&&t.push(a.unwrap().items.map(({type:o})=>{if(o.isPlain)return[r.getTypeDef(o.asPlain).type];const{hashers:c,key:h,value:y}=o.asMap;return c.length===1?[r.getTypeDef(y).type,r.getTypeDef(h).type]:[r.getTypeDef(y).type,...r.getSiType(h).def.asTuple.map(x=>r.getTypeDef(x).type)]})),t),[])}function getUniqTypes(r,e,t){return validateTypes(r,t,flattenUniq(getPalletNames(e)))}function trimDocs(r){const e=r.map(n=>n.toString().trim()),t=e.findIndex(n=>!n.length);return t===-1?e:e.slice(0,t)}function toCallsOnly(r,{extrinsic:e,lookup:t,pallets:n}){return r.createTypeUnsafe("MetadataLatest",[{extrinsic:e,lookup:{types:t.types.map(({id:s,type:i})=>r.createTypeUnsafe("PortableType",[{id:s,type:Je(Ce({},i),{docs:trimDocs(i.docs)})}]))},pallets:n.map(({calls:s,index:i,name:a})=>({calls:r.createTypeUnsafe("Option<PalletCallMetadataLatest>",[s.unwrapOr(null)]),index:i,name:a}))}]).toJSON()}const HASHER_MAP={Blake2_128:[16,!1],Blake2_128Concat:[16,!0],Blake2_256:[32,!1],Identity:[0,!0],Twox128:[16,!1],Twox256:[32,!1],Twox64Concat:[8,!0]};function unwrapStorageSi(r){return r.isPlain?r.asPlain:r.asMap.value}function unwrapStorageType(r,e,t){const n=getSiName(r.lookup,unwrapStorageSi(e));return t?`Option<${n}>`:n}function decodeStorageKey(r){if(isU8a(r)||!r||isString(r))return{key:r};if(r instanceof StorageKey)return{key:r,method:r.method,section:r.section};if(isFunction$3(r))return{key:r(),method:r.method,section:r.section};if(Array.isArray(r)){const[e,t=[]]=r;if(assert(isFunction$3(e),"Expected function input for key construction"),e.meta&&e.meta.type.isMap){const n=e.meta.type.asMap;assert(Array.isArray(t)&&t.length===n.hashers.length,()=>`Expected an array of ${n.hashers.length} values as params to a Map query`)}return{key:e(...t),method:e.method,section:e.section}}throw new Error(`Unable to convert input ${r} to StorageKey`)}function decodeHashers(r,e,t){let n=32;const s=new Array(t.length);for(let i=0;i<t.length;i++){const[a,o]=t[i],[c,h]=HASHER_MAP[a.type],y=h?r.createTypeUnsafe(getSiName(r.lookup,o),[e.subarray(n+c)]):r.createTypeUnsafe("Raw",[e.subarray(n,n+c)]);n+=c+(h?y.encodedLength:0),s[i]=y}return s}function decodeArgsFromMeta(r,e,t){if(!t||!t.type.isMap)return[];const{hashers:n,key:s}=t.type.asMap,i=n.length===1?[s]:r.lookup.getSiType(s).def.asTuple;return decodeHashers(r,e,n.map((a,o)=>[a,i[o]]))}function getMeta(r){if(r instanceof StorageKey)return r.meta;if(isFunction$3(r))return r.meta;if(Array.isArray(r)){const[e]=r;return e.meta}}function getType(r,e){if(e instanceof StorageKey)return e.outputType;if(isFunction$3(e))return unwrapStorageType(r,e.meta.type);if(Array.isArray(e)){const[t]=e;if(t.meta)return unwrapStorageType(r,t.meta.type)}return"Raw"}var ur,Mn,Hr,Ur,Rr;class StorageKey extends Bytes{constructor(t,n,s={}){const{key:i,method:a,section:o}=decodeStorageKey(n);super(t,i);G(this,ur,void 0);G(this,Mn,void 0);G(this,Hr,void 0);G(this,Ur,void 0);G(this,Rr,void 0);te(this,Hr,getType(t,n)),this.setMeta(getMeta(n),s.section||o,s.method||a)}get args(){return T(this,ur)}get meta(){return T(this,Mn)}get method(){return T(this,Ur)}get outputType(){return T(this,Hr)}get section(){return T(this,Rr)}is(t){return t.section===this.section&&t.method===this.method}setMeta(t,n,s){te(this,Mn,t),te(this,Ur,s||T(this,Ur)),te(this,Rr,n||T(this,Rr)),t&&te(this,Hr,unwrapStorageType(this.registry,t.type));try{te(this,ur,decodeArgsFromMeta(this.registry,this.toU8a(!0),t))}catch{}return this}toHuman(){return T(this,ur).length?T(this,ur).map(t=>t.toHuman()):super.toHuman()}toRawType(){return"StorageKey"}}ur=new WeakMap,Mn=new WeakMap,Hr=new WeakMap,Ur=new WeakMap,Rr=new WeakMap;var baseTypes=Object.freeze(Object.defineProperty({__proto__:null,GenericExtrinsic,GenericExtrinsicEra,GenericMortalEra:MortalEra,GenericImmortalEra:ImmortalEra,GenericExtrinsicPayload,GenericExtrinsicPayloadUnknown,GenericExtrinsicUnknown,GenericSignerPayload,GenericExtrinsicV4,GenericExtrinsicPayloadV4,GenericExtrinsicSignatureV4,GenericAccountId,GenericAccountIndex,GenericBlock,GenericCall,GenericChainProperties,GenericConsensusEngineId,GenericEvent,GenericEventData,GenericLookupSource,GenericMultiAddress,GenericAddress:GenericMultiAddress,GenericVote,GenericEthereumAccountId,GenericEthereumLookupSource,BitVec,bool,Bool:bool,Bytes,i8,I8:i8,i16,I16:i16,i32,I32:i32,i64,I64:i64,i128,I128:i128,i256,I256:i256,Null,Text,Type,u8,U8:u8,u16,U16:u16,u32,U32:u32,u64,U64:u64,u128,U128:u128,u256,U256:u256,usize,USize:usize,Data,StorageKey},Symbol.toStringTag,{value:"Module"}));function createStorageHasher(r,e){return e.toNumber()>=2?r.createTypeUnsafe("StorageHasherV10",[e.toNumber()+1]):r.createTypeUnsafe("StorageHasherV10",[e])}function createStorageType(r,e){return e.isMap?[Je(Ce({},e.asMap),{hasher:createStorageHasher(r,e.asMap.hasher)}),1]:e.isDoubleMap?[Je(Ce({},e.asDoubleMap),{hasher:createStorageHasher(r,e.asDoubleMap.hasher),key2Hasher:createStorageHasher(r,e.asDoubleMap.key2Hasher)}),2]:[e.asPlain,0]}function convertModule(r,e){const t=e.storage.unwrapOr(null);return r.createTypeUnsafe("ModuleMetadataV10",[Je(Ce({},e),{storage:t?Je(Ce({},t),{items:t.items.map(n=>Je(Ce({},n),{type:r.createTypeUnsafe("StorageEntryTypeV10",createStorageType(r,n.type))}))}):null})])}function toV10(r,{modules:e}){return r.createTypeUnsafe("MetadataV10",[{modules:e.map(t=>convertModule(r,t))}])}function toV11(r,{modules:e}){return r.createTypeUnsafe("MetadataV11",[{extrinsic:{signedExtensions:[],version:0},modules:e}])}function toV12(r,{extrinsic:e,modules:t}){return r.createTypeUnsafe("MetadataV12",[{extrinsic:e,modules:t.map(n=>r.createTypeUnsafe("ModuleMetadataV12",[Je(Ce({},n),{index:255})]))}])}function toV13(r,e){return r.createTypeUnsafe("MetadataV13",[e])}const typesAlias={assets:{Approval:"AssetApproval",ApprovalKey:"AssetApprovalKey",Balance:"TAssetBalance",DestroyWitness:"AssetDestroyWitness"},babe:{EquivocationProof:"BabeEquivocationProof"},balances:{Status:"BalanceStatus"},beefy:{AuthorityId:"BeefyId"},contracts:{StorageKey:"ContractStorageKey"},electionProviderMultiPhase:{Phase:"ElectionPhase"},ethereum:{Block:"EthBlock",Header:"EthHeader",Receipt:"EthReceipt",Transaction:"EthTransaction",TransactionStatus:"EthTransactionStatus"},evm:{Account:"EvmAccount",Log:"EvmLog",Vicinity:"EvmVicinity"},grandpa:{Equivocation:"GrandpaEquivocation",EquivocationProof:"GrandpaEquivocationProof"},identity:{Judgement:"IdentityJudgement"},inclusion:{ValidatorIndex:"ParaValidatorIndex"},paraDisputes:{ValidatorIndex:"ParaValidatorIndex"},paraInclusion:{ValidatorIndex:"ParaValidatorIndex"},paraScheduler:{ValidatorIndex:"ParaValidatorIndex"},paraShared:{ValidatorIndex:"ParaValidatorIndex"},parachains:{Id:"ParaId"},parasDisputes:{ValidatorIndex:"ParaValidatorIndex"},parasInclusion:{ValidatorIndex:"ParaValidatorIndex"},parasScheduler:{ValidatorIndex:"ParaValidatorIndex"},parasShared:{ValidatorIndex:"ParaValidatorIndex"},proposeParachain:{Proposal:"ParachainProposal"},proxy:{Announcement:"ProxyAnnouncement"},scheduler:{ValidatorIndex:"ParaValidatorIndex"},shared:{ValidatorIndex:"ParaValidatorIndex"},society:{Judgement:"SocietyJudgement",Vote:"SocietyVote"},staking:{Compact:"CompactAssignments"},treasury:{Proposal:"TreasuryProposal"},xcm:{AssetId:"XcmAssetId"},xcmPallet:{AssetId:"XcmAssetId"}};function getAliasTypes({knownTypes:r},e){var t;return objectSpread({},typesAlias[e],(t=r.typesAlias)===null||t===void 0?void 0:t[e])}const BOXES=[["<",">"],["<",","],[",",">"],["(",")"],["(",","],[",",","],[",",")"]];function compatType(r,e){const t=e.toString(),n=r.findIndex(({def:s})=>s.HistoricMetaCompat===t);return n!==-1?n:r.push({def:{HistoricMetaCompat:t}})-1}function compatTypes(r,...e){for(let t=0;t<e.length;t++)compatType(r,e[t])}function makeTupleType(r,e){return r.push({def:{Tuple:e}})-1}function makeVariantType(r,e,t,n){return t.push({def:{Variant:{variants:n}},path:[`pallet_${r.toString()}`,"pallet",e]})-1}function registerOriginCaller(r,e,t){r.register({OriginCaller:{_enum:e.map((n,s)=>[n.name.toString(),t>=12?n.index.toNumber():s]).sort((n,s)=>n[1]-s[1]).reduce((n,[s,i])=>{for(let a=Object.keys(n).length;a<i;a++)n[`Empty${a}`]="Null";return n[s]=knownOrigins[s]||"Null",n},{})}})}function setTypeOverride(r,e){e.forEach(t=>{const n=Object.keys(r).find(s=>t.eq(s));if(n)t.setOverride(r[n]);else{const s=t.toString(),i=Object.entries(r).reduce((a,[o,c])=>BOXES.reduce((h,[y,x])=>h.replace(`${y}${o}${x}`,`${y}${c}${x}`),a),s);s!==i&&t.setOverride(i)}})}function convertCalls(r,e,t,n,s){const i=n.map(({args:a,docs:o,name:c},h)=>(setTypeOverride(s,a.map(({type:y})=>y)),e.createTypeUnsafe("SiVariant",[{docs:o,fields:a.map(({name:y,type:x})=>e.createTypeUnsafe("SiField",[{name:y,type:compatType(r,x)}])),index:h,name:c}])));return e.createTypeUnsafe("PalletCallMetadataV14",[{type:makeVariantType(t,"Call",r,i)}])}function convertConstants(r,e,t,n){return t.map(({docs:s,name:i,type:a,value:o})=>(setTypeOverride(n,[a]),e.createTypeUnsafe("PalletConstantMetadataV14",[{docs:s,name:i,type:compatType(r,a),value:o}])))}function convertErrors(r,e,t,n,s){const i=n.map(({docs:a,name:o},c)=>e.createTypeUnsafe("SiVariant",[{docs:a,fields:[],index:c,name:o}]));return e.createTypeUnsafe("PalletErrorMetadataV14",[{type:makeVariantType(t,"Error",r,i)}])}function convertEvents(r,e,t,n,s){const i=n.map(({args:a,docs:o,name:c},h)=>(setTypeOverride(s,a),e.createTypeUnsafe("SiVariant",[{docs:o,fields:a.map(y=>e.createTypeUnsafe("SiField",[{type:compatType(r,y)}])),index:h,name:c}])));return e.createTypeUnsafe("PalletEventMetadataV14",[{type:makeVariantType(t,"Event",r,i)}])}function createMapEntry(r,e,t,{hashers:n,keys:s,value:i}){return setTypeOverride(t,[i,...Array.isArray(s)?s:[s]]),e.createTypeUnsafe("StorageEntryTypeV14",[{Map:{hashers:n,key:n.length===1?compatType(r,s[0]):makeTupleType(r,s.map(a=>compatType(r,a))),value:compatType(r,i)}}])}function convertStorage(r,e,{items:t,prefix:n},s){return e.createTypeUnsafe("PalletStorageMetadataV14",[{items:t.map(({docs:i,fallback:a,modifier:o,name:c,type:h})=>{let y;if(h.isPlain){const x=h.asPlain;setTypeOverride(s,[x]),y=e.createTypeUnsafe("StorageEntryTypeV14",[{Plain:compatType(r,x)}])}else if(h.isMap){const x=h.asMap;y=createMapEntry(r,e,s,{hashers:[x.hasher],keys:[x.key],value:x.value})}else if(h.isDoubleMap){const x=h.asDoubleMap;y=createMapEntry(r,e,s,{hashers:[x.hasher,x.key2Hasher],keys:[x.key1,x.key2],value:x.value})}else{const x=h.asNMap;y=createMapEntry(r,e,s,{hashers:x.hashers,keys:x.keyVec,value:x.value})}return e.createTypeUnsafe("StorageEntryMetadataV14",[{docs:i,fallback:a,modifier:o,name:c,type:y}])}),prefix:n}])}function convertExtrinsic(r,{signedExtensions:e,version:t}){return r.createTypeUnsafe("ExtrinsicMetadataV14",[{signedExtensions:e.map(n=>({identifier:n,type:0})),type:0,version:t}])}function createPallet(r,e,t,{calls:n,constants:s,errors:i,events:a,storage:o}){const c=getAliasTypes(e,stringCamelCase(t.name));return e.createTypeUnsafe("PalletMetadataV14",[{calls:n&&convertCalls(r,e,t.name,n,c),constants:convertConstants(r,e,s,c),errors:i&&convertErrors(r,e,t.name,i,c),events:a&&convertEvents(r,e,t.name,a,c),index:t.index,name:t.name,storage:o&&convertStorage(r,e,o,c)}])}function toV14(r,e,t){const n=[];compatTypes(n,"Null","u8","u16","u32","u64"),registerOriginCaller(r,e.modules,t);const s=convertExtrinsic(r,e.extrinsic),i=e.modules.map(a=>createPallet(n,r,a,{calls:a.calls.unwrapOr(null),constants:a.constants,errors:a.errors.length?a.errors:null,events:a.events.unwrapOr(null),storage:a.storage.unwrapOr(null)}));return r.createTypeUnsafe("MetadataV14",[{extrinsic:s,lookup:{types:n.map((a,o)=>r.createTypeUnsafe("PortableType",[{id:o,type:a}]))},pallets:i}])}function toLatest(r,e,t){return e}const MAGIC_NUMBER=1635018093;class MagicNumber extends u32{constructor(e,t){super(e,t),this.isEmpty||assert(this.eq(MAGIC_NUMBER),()=>`MagicNumber mismatch: expected ${e.createTypeUnsafe("u32",[MAGIC_NUMBER]).toHex()}, found ${this.toHex()}`)}}const LATEST_VERSION=14;var Lr,Nn,Zt,Fr;const bs=class extends Struct{constructor(t,n){super(t,{magicNumber:MagicNumber,metadata:"MetadataAll"},n);G(this,Lr,new Map);G(this,Nn,t=>(assert(this.version<=t,()=>`Cannot convert metadata from version ${this.version} to ${t}`),this.version===t));G(this,Zt,(t,n)=>{const s=`asV${t}`,i=t==="latest"?`asV${LATEST_VERSION}`:`asV${t-1}`;return t!=="latest"&&T(this,Nn).call(this,t)?T(this,Fr).call(this)[s]:(T(this,Lr).has(t)||T(this,Lr).set(t,n(this.registry,this[i],this.version)),T(this,Lr).get(t))});G(this,Fr,()=>this.getT("metadata"))}get registry(){return super.registry}get asCallsOnly(){return new bs(this.registry,{magicNumber:this.magicNumber,metadata:this.registry.createTypeUnsafe("MetadataAll",[toCallsOnly(this.registry,this.asLatest),LATEST_VERSION])})}get asV9(){return T(this,Nn).call(this,9),T(this,Fr).call(this).asV9}get asV10(){return T(this,Zt).call(this,10,toV10)}get asV11(){return T(this,Zt).call(this,11,toV11)}get asV12(){return T(this,Zt).call(this,12,toV12)}get asV13(){return T(this,Zt).call(this,13,toV13)}get asV14(){return T(this,Zt).call(this,14,toV14)}get asLatest(){return T(this,Zt).call(this,"latest",toLatest)}get magicNumber(){return this.getT("magicNumber")}get version(){return T(this,Fr).call(this).index}getUniqTypes(t){return getUniqTypes(this.registry,this.asLatest,t)}toJSON(){return this.asLatest,super.toJSON()}};let MetadataVersioned=bs;Lr=new WeakMap,Nn=new WeakMap,Zt=new WeakMap,Fr=new WeakMap;const VERSION_IDX=4,EMPTY_METADATA=new Uint8Array([109,101,116,97,9]);function toU8a(r){return isHex(r)?toU8a(u8aToU8a(r)):r.length===0?EMPTY_METADATA:r}function decodeU8a(r,e){try{return new MetadataVersioned(r,e)}catch(t){if(e[VERSION_IDX]===9)return e[VERSION_IDX]=10,decodeU8a(r,e);throw t}}class Metadata extends MetadataVersioned{constructor(e,t){super(e,isU8a(t)||isHex(t)?decodeU8a(e,toU8a(t)):new MetadataVersioned(e,t))}}function convert(r){return({name:e})=>r(e)}const objectNameToCamel=convert(stringCamelCase),objectNameToString=convert(r=>r.toString());function decorateConstants(r,{pallets:e},t){const n={};for(let s=0;s<e.length;s++){const{constants:i,name:a}=e[s];i.isEmpty||lazyMethod(n,stringCamelCase(a),()=>lazyMethods({},i,o=>{const c=r.createTypeUnsafe(r.createLookupType(o.type),[hexToU8a(o.value.toHex())]);return c.meta=o,c},objectNameToCamel))}return n}function variantToMeta(r,e){return objectSpread({args:e.fields.map(({type:t})=>r.getTypeDef(t).type)},e)}function decorateErrors(r,{lookup:e,pallets:t},n){const s={};for(let i=0;i<t.length;i++){const{errors:a,index:o,name:c}=t[i];if(a.isSome){const h=n>=12?o.toNumber():i;lazyMethod(s,stringCamelCase(c),()=>lazyVariants(e,a.unwrap(),objectNameToString,y=>({is:({error:x,index:E})=>E.eq(h)&&(isU8a(x)?x[0]===y.index.toNumber():x.eq(y.index)),meta:r.createTypeUnsafe("ErrorMetadataLatest",[variantToMeta(e,y)])})))}}return s}function filterEventsSome({events:r}){return r.isSome}function decorateEvents(r,{lookup:e,pallets:t},n){const s={},i=t.filter(filterEventsSome);for(let a=0;a<i.length;a++){const{events:o,index:c,name:h}=i[a],y=n>=12?c.toNumber():a;lazyMethod(s,stringCamelCase(h),()=>lazyVariants(e,o.unwrap(),objectNameToString,x=>({is:E=>y===E.index[0]&&x.index.eq(E.index[1]),meta:r.createTypeUnsafe("EventMetadataLatest",[variantToMeta(e,x)])})))}return s}function isTx(r,e){return r.callIndex[0]===e[0]&&r.callIndex[1]===e[1]}function createUnchecked(r,e,t,n){const s=n.fields,i=stringCamelCase(n.name),a=(...o)=>(assert(s.length===o.length,()=>`Extrinsic ${e}.${i} expects ${s.length} arguments, got ${o.length}.`),r.createTypeUnsafe("Call",[{args:o,callIndex:t},n]));return a.is=o=>isTx(o,t),a.callIndex=t,a.meta=n,a.method=i,a.section=e,a.toJSON=()=>n.toJSON(),a}function filterCallsSome({calls:r}){return r.isSome}function createCallFunction(r,e,t,n,s){const{fields:i,index:a}=t,o=new Array(i.length);for(let c=0;c<i.length;c++){const{name:h,type:y,typeName:x}=i[c];o[c]=objectSpread({name:stringCamelCase(h.unwrapOr(`param${c}`)),type:getSiName(e,y)},x.isSome?{typeName:x.unwrap()}:null)}return createUnchecked(r,n,new Uint8Array([s,a.toNumber()]),r.createTypeUnsafe("FunctionMetadataLatest",[objectSpread({args:o},t)]))}function decorateExtrinsics(r,{lookup:e,pallets:t},n){const s={},i=t.filter(filterCallsSome);for(let a=0;a<i.length;a++){const{calls:o,index:c,name:h}=i[a],y=stringCamelCase(h),x=n>=12?c.toNumber():a;lazyMethod(s,y,()=>lazyVariants(e,o.unwrap(),objectNameToCamel,E=>createCallFunction(r,e,E,y,x)))}return s}const DEFAULT_FN=r=>xxhashAsU8a(r,128),HASHERS={Blake2_128:r=>blake2AsU8a(r,128),Blake2_128Concat:r=>u8aConcat(blake2AsU8a(r,128),u8aToU8a(r)),Blake2_256:r=>blake2AsU8a(r,256),Identity:r=>u8aToU8a(r),Twox128:r=>xxhashAsU8a(r,128),Twox256:r=>xxhashAsU8a(r,256),Twox64Concat:r=>u8aConcat(xxhashAsU8a(r,64),u8aToU8a(r))};function getHasher(r){return HASHERS[r.type]||DEFAULT_FN}const NO_RAW_ARGS={args:[],hashers:[],keys:[]};function assertArgs({method:r,section:e},{args:t,keys:n}){assert(Array.isArray(t),()=>`Call to ${stringCamelCase(e||"unknown")}.${stringCamelCase(r||"unknown")} needs ${n.length} arguments`),assert(t.filter(filterDefined).length===n.length,()=>`Call to ${stringCamelCase(e||"unknown")}.${stringCamelCase(r||"unknown")} needs ${n.length} arguments, found [${t.join(", ")}]`)}function createKeyRawParts(r,e,{args:t,hashers:n,keys:s}){const i=new Array(s.length);for(let a=0;a<s.length;a++)i[a]=getHasher(n[a])(r.createTypeUnsafe(r.createLookupType(s[a]),[t[a]]).toU8a());return[[xxhashAsU8a(e.prefix,128),xxhashAsU8a(e.method,128)],i]}function createKeyInspect(r,e,t){assertArgs(e,t);const{meta:n}=e,[s,i]=createKeyRawParts(r,e,t);let a=[];if(n.type.isMap){const{hashers:c,key:h}=n.type.asMap;a=c.length===1?[`${c[0].type}(${getSiName(r.lookup,h)})`]:r.lookup.getSiType(h).def.asTuple.map((y,x)=>`${c[x].type}(${getSiName(r.lookup,y)})`)}const o=["module","method"].concat(...t.args.map((c,h)=>a[h]));return{inner:s.concat(...i).map((c,h)=>({name:o[h],outer:[c]}))}}function createKeyRaw(r,e,t){const[n,s]=createKeyRawParts(r,e,t);return u8aConcat(...n,...s)}function filterDefined(r){return!isUndefined(r)}function createKey(r,e,t){return assertArgs(e,t),compactAddLength(createKeyRaw(r,e,t))}function createStorageInspect(r,e,t){const{meta:{type:n}}=e;return(...s)=>{if(n.isPlain)return t.skipHashing?{inner:[],name:"wellKnown",outer:[u8aToU8a(t.key)]}:createKeyInspect(r,e,NO_RAW_ARGS);const{hashers:i,key:a}=n.asMap;return i.length===1?createKeyInspect(r,e,{args:s,hashers:i,keys:[a]}):createKeyInspect(r,e,{args:s,hashers:i,keys:r.lookup.getSiType(a).def.asTuple})}}function createStorageFn(r,e,t){const{meta:{type:n}}=e;let s=null;return(...i)=>{if(n.isPlain)return s||(s=t.skipHashing?compactAddLength(u8aToU8a(t.key)):createKey(r,e,NO_RAW_ARGS)),s;const{hashers:a,key:o}=n.asMap;return a.length===1?createKey(r,e,{args:i,hashers:a,keys:[o]}):createKey(r,e,{args:i,hashers:a,keys:r.lookup.getSiType(o).def.asTuple})}}function createWithMeta(r,e,t){const{meta:n,method:s,prefix:i,section:a}=e,o=createStorageFn(r,e,t);return o.inspect=createStorageInspect(r,e,t),o.meta=n,o.method=stringCamelCase(s),o.prefix=i,o.section=a,o.toJSON=()=>objectSpread({storage:{method:s,prefix:i,section:a}},n.toJSON()),o}function extendHeadMeta(r,{meta:{docs:e,name:t,type:n},section:s},{method:i},a){const o=r.createTypeUnsafe("StorageEntryMetadataLatest",[{docs:e,fallback:r.createTypeUnsafe("Bytes",[]),modifier:r.createTypeUnsafe("StorageEntryModifierLatest",[1]),name:t,type:r.createTypeUnsafe("StorageEntryTypeLatest",[n.asMap.key,0])}]);a.meta=o;const c=(...h)=>r.createTypeUnsafe("StorageKey",[a(...h),{method:i,section:s}]);return c.meta=o,c}function extendPrefixedMap(r,e,t){const{meta:{type:n},method:s,section:i}=e;return t.iterKey=extendHeadMeta(r,e,t,(...a)=>{if(assert(a.length===0||n.isMap&&a.length<n.asMap.hashers.length,()=>`Iteration ${stringCamelCase(i||"unknown")}.${stringCamelCase(s||"unknown")} needs arguments to be at least one less than the full arguments, found [${a.join(", ")}]`),a.length&&n.isMap){const{hashers:o,key:c}=n.asMap,h=o.length===1?[c]:r.lookup.getSiType(c).def.asTuple;return new Raw(r,createKeyRaw(r,e,{args:a,hashers:o.slice(0,a.length),keys:h.slice(0,a.length)}))}return new Raw(r,createKeyRaw(r,e,NO_RAW_ARGS))}),t}function createFunction(r,e,t){const{meta:{type:n}}=e,s=createWithMeta(r,e,t);return n.isMap&&extendPrefixedMap(r,e,s),s.keyPrefix=(...i)=>s.iterKey&&s.iterKey(...i)||compactStripLength(s())[1],s}function findSiPrimitive(r,e){const t=e.toLowerCase();return r.lookup.types.find(n=>n.type.def.isPrimitive&&n.type.def.asPrimitive.toString().toLowerCase()===t||n.type.def.isHistoricMetaCompat&&n.type.def.asHistoricMetaCompat.toString().toLowerCase()===t)}function findSiType(r,e){let t=findSiPrimitive(r,e);if(!t&&e==="Bytes"){const n=findSiPrimitive(r,"u8");n&&(t=r.lookup.types.find(s=>s.type.def.isSequence&&s.type.def.asSequence.type.eq(n.id)||s.type.def.isHistoricMetaCompat&&s.type.def.asHistoricMetaCompat.eq(e)))}return t||console.warn(`Unable to map ${e} to a lookup index`),t}function createRuntimeFunction({method:r,prefix:e,section:t},n,{docs:s,type:i}){return a=>{var o;return createFunction(a,{meta:a.createTypeUnsafe("StorageEntryMetadataLatest",[{docs:a.createTypeUnsafe("Vec<Text>",[[s]]),modifier:a.createTypeUnsafe("StorageEntryModifierLatest",["Required"]),name:a.createTypeUnsafe("Text",[r]),toJSON:()=>n,type:a.createTypeUnsafe("StorageEntryTypeLatest",[{Plain:((o=findSiType(a,i))===null||o===void 0?void 0:o.id)||0}])}]),method:r,prefix:e,section:t},{key:n,skipHashing:!0})}}const prefix="Substrate",section="substrate";function createSubstrateFn(r,e,t){return createRuntimeFunction({method:r,prefix,section},e,t)}const substrate={changesTrieConfig:createSubstrateFn("changesTrieConfig",":changes_trie",{docs:"Changes trie configuration is stored under this key.",type:"u32"}),childStorageKeyPrefix:createSubstrateFn("childStorageKeyPrefix",":child_storage:",{docs:"Prefix of child storage keys.",type:"u32"}),code:createSubstrateFn("code",":code",{docs:"Wasm code of the runtime.",type:"Bytes"}),extrinsicIndex:createSubstrateFn("extrinsicIndex",":extrinsic_index",{docs:"Current extrinsic index (u32) is stored under this key.",type:"u32"}),heapPages:createSubstrateFn("heapPages",":heappages",{docs:"Number of wasm linear memory pages required for execution of the runtime.",type:"u64"})};function getStorage(r){const e={},t=Object.entries(substrate);for(let n=0;n<t.length;n++)e[t[n][0]]=t[n][1](r);return{substrate:e}}const VERSION_NAME="palletVersion",VERSION_KEY=":__STORAGE_VERSION__:",VERSION_DOCS={docs:"Returns the current pallet version from storage",type:"u16"};function decorateStorage(r,{pallets:e},t){const n=getStorage(r);for(let s=0;s<e.length;s++){const{name:i,storage:a}=e[s];if(a.isSome){const o=stringCamelCase(i),{items:c,prefix:h}=a.unwrap(),y=h.toString();lazyMethod(n,o,()=>lazyMethods({palletVersion:createRuntimeFunction({method:VERSION_NAME,prefix:y,section:o},createKeyRaw(r,{method:VERSION_KEY,prefix:i.toString()},NO_RAW_ARGS),VERSION_DOCS)(r)},c,x=>createFunction(r,{meta:x,method:x.name.toString(),prefix:y,section:o},{}),objectNameToCamel))}}return n}function expandMetadata(r,e){assert(e instanceof Metadata,"You need to pass a valid Metadata instance to Decorated");const t=e.asLatest,n=e.version;return{consts:decorateConstants(r,t,n),errors:decorateErrors(r,t,n),events:decorateEvents(r,t,n),query:decorateStorage(r,t,n),registry:r,tx:decorateExtrinsics(r,t,n)}}function _classPrivateFieldBase(r,e){if(!Object.prototype.hasOwnProperty.call(r,e))throw new TypeError("attempted to use private field on non-instance");return r}var id=0;function _classPrivateFieldKey(r){return"__private_"+id+++"_"+r}const l$a=logger("PortableRegistry"),TYPE_UNWRAP={toNumber:()=>-1},PRIMITIVE_ALIAS={Char:"u32",Str:"Text"},PATHS_ALIAS=splitNamespace(["sp_core::crypto::AccountId32","sp_runtime::generic::era::Era","sp_runtime::multiaddress::MultiAddress","account::AccountId20","polkadot_runtime_common::claims::EthereumAddress","*_democracy::vote::Vote","*_identity::types::Data","primitive_types::*","sp_arithmetic::per_things::*","ink_env::types::*"]),PATHS_SET=splitNamespace(["pallet_identity::types::BitFlags"]),BITVEC_NS_LSB=["bitvec::order::Lsb0","BitOrderLsb0"],BITVEC_NS_MSB=["bitvec::order::Msb0","BitOrderMsb0"],BITVEC_NS=[...BITVEC_NS_LSB,...BITVEC_NS_MSB],WRAPPERS=["BoundedBTreeMap","BoundedBTreeSet","BoundedVec","Box","BTreeMap","BTreeSet","Cow","Result","Option","WeakBoundedVec","WrapperKeepOpaque","WrapperOpaque"],RESERVED=["entries","hash","keys","new","size"],PATH_RM_INDEX_1=["generic","misc","pallet","traits","types"];function splitNamespace(r){return r.map(e=>e.split("::"))}function createNamespace({path:r}){return sanitizeDocs(r).join("::")}function sanitizeDocs(r){return r.map(e=>e.toString())}function matchParts(r,e){return r.length===e.length&&r.every((t,n)=>{const s=e[n].toString();if(t==="*"||t===s)return!0;if(t.includes("*")&&t.includes("_")&&s.includes("_")){let i=t.split("_"),a=s.split("_");if(i[0]==="*"){const o=a.indexOf(i[1]);o!==-1&&(i=i.slice(1),a=a.slice(o))}return i.length===2&&i[1]==="*"&&i[0]===a[0]?!0:matchParts(i,a)}return!1})}function getAliasPath(r){return r.length&&PATHS_ALIAS.some(e=>matchParts(e,r))?r[r.length-1].toString():null}function hasNoDupes(r){for(let e=0;e<r.length;e++){const[t,n]=r[e];for(let s=0;s<r.length;s++){const[i,a]=r[s];if(t!==i&&n===a)return!1}}return!0}function removeDuplicateNames(r,e){const t={};return e.map(([n,s,i])=>{if(!s)return null;const a=e.filter(([,y])=>s===y);if(!a.some(([y,,x])=>n!==y&&(i.length!==x.length||i.some((E,V)=>!E.name.eq(x[V].name)||E.type.unwrapOr(TYPE_UNWRAP).toNumber()!==x[V].type.unwrapOr(TYPE_UNWRAP).toNumber())))||!a[0][2].length)return[n,s,i];const c=a[0][2].findIndex(({type:y},x)=>a.every(([,,E])=>E[x].type.isSome)&&a.every(([,,E],V)=>V===0||!E[x].type.eq(y)));if(c===-1)return[n,s,i];const h=new Array(a.length);for(let y=0;y<a.length;y++){const[x,E,V]=a[y],{def:F,path:q}=r.getSiType(V[c].type.unwrap());if(!F.isPrimitive&&!q.length)return null;h[y]=[x,F.isPrimitive?`${E}${F.asPrimitive.toString()}`:`${E}${q[q.length-1].toString()}`,i]}if(hasNoDupes(h)){for(let y=0;y<h.length;y++){const[x,E]=h[y];t[x]=E}return[n,s,i]}return null}).filter(n=>!!n).map(([n,s,i])=>[n,t[n]||s,i])}function extractName(r,{id:e,type:{params:t,path:n}}){if(!n.length||WRAPPERS.includes(n[n.length-1].toString()))return null;const s=n.map(a=>stringPascalCase(a)).filter((a,o)=>{const c=a.toLowerCase();return(o!==1||!PATH_RM_INDEX_1.includes(c))&&(o===n.length-1||c!==n[o+1].toLowerCase())});let i=s.join("");if(s.length===2&&s[1]==="RawOrigin"&&t.length===2&&t[1].type.isSome){const a=r[t[1].type.unwrap().toNumber()];a.type.path.length===2&&(i=`${i}${a.type.path[1].toString()}`)}return[e.toNumber(),i,t]}function registerTypes(r,e,t,n){if(r.registry.register(e),n.SpRuntimeUncheckedExtrinsic){const[s,,i]=n.SpRuntimeUncheckedExtrinsic,a=r.getSiType(s.type.unwrap()),o=r.getSiType(i.type.unwrap()),c=createNamespace(o);let h=createNamespace(a);const y=h==="sp_runtime::multiaddress::MultiAddress";if(y){const[x]=a.params;h=createNamespace(r.getSiType(x.type.unwrap()))}r.registry.register({AccountId:["sp_core::crypto::AccountId32"].includes(h)?"AccountId32":["account::AccountId20","primitive_types::H160"].includes(h)?"AccountId20":"AccountId32",Address:y?"MultiAddress":"AccountId",ExtrinsicSignature:["sp_runtime::MultiSignature"].includes(c)?"MultiSignature":t[i.type.unwrap().toNumber()]||"MultiSignature"})}}function extractAliases(r,e){const t=Object.keys(r).some(s=>!s.startsWith("Pallet")),n={};if(r.SpRuntimeUncheckedExtrinsic){const[,{type:s}]=r.SpRuntimeUncheckedExtrinsic;n[s.unwrap().toNumber()]="Call"}else t&&!e&&l$a.warn("Unable to determine runtime Call type, cannot inspect sp_runtime::generic::unchecked_extrinsic::UncheckedExtrinsic");if(r.FrameSystemEventRecord){const[{type:s}]=r.FrameSystemEventRecord;n[s.unwrap().toNumber()]="Event"}else t&&!e&&l$a.warn("Unable to determine runtime Event type, cannot inspect frame_system::EventRecord");return n}function extractTypeInfo(r,e){const t=[],n={};for(let c=0;c<e.length;c++){const h=e[c],y=extractName(e,e[c]);y&&t.push(y),n[h.id.toNumber()]=h}const s=removeDuplicateNames(r,t),i={},a={},o={};for(let c=0;c<s.length;c++){const[h,y,x]=s[c];a[h]=y,i[y]=r.registry.createLookupType(h),o[y]=x}return[n,i,a,o]}var _alias=_classPrivateFieldKey("alias"),_lookups=_classPrivateFieldKey("lookups"),_names=_classPrivateFieldKey("names"),_params=_classPrivateFieldKey("params"),_typeDefs=_classPrivateFieldKey("typeDefs"),_types=_classPrivateFieldKey("types"),_createSiDef=_classPrivateFieldKey("createSiDef"),_getLookupId=_classPrivateFieldKey("getLookupId"),_extract=_classPrivateFieldKey("extract"),_extractArray=_classPrivateFieldKey("extractArray"),_extractBitSequence=_classPrivateFieldKey("extractBitSequence"),_extractCompact=_classPrivateFieldKey("extractCompact"),_extractComposite=_classPrivateFieldKey("extractComposite"),_extractCompositeSet=_classPrivateFieldKey("extractCompositeSet"),_extractFields=_classPrivateFieldKey("extractFields"),_extractFieldsAlias=_classPrivateFieldKey("extractFieldsAlias"),_extractHistoric=_classPrivateFieldKey("extractHistoric"),_extractPrimitive=_classPrivateFieldKey("extractPrimitive"),_extractAliasPath=_classPrivateFieldKey("extractAliasPath"),_extractSequence=_classPrivateFieldKey("extractSequence"),_extractTuple=_classPrivateFieldKey("extractTuple"),_extractVariant=_classPrivateFieldKey("extractVariant"),_extractVariantEnum=_classPrivateFieldKey("extractVariantEnum");class PortableRegistry extends Struct{constructor(e,t,n){super(e,{types:"Vec<PortableType>"},t),Object.defineProperty(this,_extractVariantEnum,{value:_extractVariantEnum2}),Object.defineProperty(this,_extractVariant,{value:_extractVariant2}),Object.defineProperty(this,_extractTuple,{value:_extractTuple2}),Object.defineProperty(this,_extractSequence,{value:_extractSequence2}),Object.defineProperty(this,_extractAliasPath,{value:_extractAliasPath2}),Object.defineProperty(this,_extractPrimitive,{value:_extractPrimitive2}),Object.defineProperty(this,_extractHistoric,{value:_extractHistoric2}),Object.defineProperty(this,_extractFieldsAlias,{value:_extractFieldsAlias2}),Object.defineProperty(this,_extractFields,{value:_extractFields2}),Object.defineProperty(this,_extractCompositeSet,{value:_extractCompositeSet2}),Object.defineProperty(this,_extractComposite,{value:_extractComposite2}),Object.defineProperty(this,_extractCompact,{value:_extractCompact2}),Object.defineProperty(this,_extractBitSequence,{value:_extractBitSequence2}),Object.defineProperty(this,_extractArray,{value:_extractArray2}),Object.defineProperty(this,_extract,{value:_extract2}),Object.defineProperty(this,_getLookupId,{value:_getLookupId2}),Object.defineProperty(this,_createSiDef,{value:_createSiDef2}),Object.defineProperty(this,_alias,{writable:!0,value:void 0}),Object.defineProperty(this,_lookups,{writable:!0,value:void 0}),Object.defineProperty(this,_names,{writable:!0,value:void 0}),Object.defineProperty(this,_params,{writable:!0,value:void 0}),Object.defineProperty(this,_typeDefs,{writable:!0,value:{}}),Object.defineProperty(this,_types,{writable:!0,value:void 0});const[s,i,a,o]=extractTypeInfo(this,this.types);_classPrivateFieldBase(this,_alias)[_alias]=extractAliases(o,n),_classPrivateFieldBase(this,_lookups)[_lookups]=i,_classPrivateFieldBase(this,_names)[_names]=a,_classPrivateFieldBase(this,_params)[_params]=o,_classPrivateFieldBase(this,_types)[_types]=s}get names(){return Object.values(_classPrivateFieldBase(this,_names)[_names]).sort()}get types(){return this.getT("types")}register(){registerTypes(this,_classPrivateFieldBase(this,_lookups)[_lookups],_classPrivateFieldBase(this,_names)[_names],_classPrivateFieldBase(this,_params)[_params])}getName(e){return _classPrivateFieldBase(this,_names)[_names][_classPrivateFieldBase(this,_getLookupId)[_getLookupId](e)]}getSiType(e){const t=(_classPrivateFieldBase(this,_types)[_types]||this.types)[_classPrivateFieldBase(this,_getLookupId)[_getLookupId](e)];return assert(t,()=>`PortableRegistry: Unable to find type with lookupId ${e.toString()}`),t.type}getTypeDef(e){const t=_classPrivateFieldBase(this,_getLookupId)[_getLookupId](e);if(!_classPrivateFieldBase(this,_typeDefs)[_typeDefs][t]){const n=_classPrivateFieldBase(this,_names)[_names][t],s={info:TypeDefInfo.DoNotConstruct,lookupIndex:t,lookupName:n,type:this.registry.createLookupType(t)};n&&(_classPrivateFieldBase(this,_typeDefs)[_typeDefs][t]=s);const i=_classPrivateFieldBase(this,_extract)[_extract](this.getSiType(e),t);n||(_classPrivateFieldBase(this,_typeDefs)[_typeDefs][t]=s),Object.keys(i).forEach(a=>{(a!=="lookupName"||i[a])&&(_classPrivateFieldBase(this,_typeDefs)[_typeDefs][t][a]=i[a])}),i.info===TypeDefInfo.Plain&&(_classPrivateFieldBase(this,_typeDefs)[_typeDefs][t].lookupNameRoot=_classPrivateFieldBase(this,_typeDefs)[_typeDefs][t].lookupName,delete _classPrivateFieldBase(this,_typeDefs)[_typeDefs][t].lookupName)}return _classPrivateFieldBase(this,_typeDefs)[_typeDefs][t]}}function _createSiDef2(r){const e=this.getTypeDef(r),t=r.toNumber();return[TypeDefInfo.DoNotConstruct,TypeDefInfo.Enum,TypeDefInfo.Struct].includes(e.info)&&e.lookupName?{docs:e.docs,info:TypeDefInfo.Si,lookupIndex:t,lookupName:_classPrivateFieldBase(this,_names)[_names][t],type:this.registry.createLookupType(r)}:e}function _getLookupId2(r){return isString(r)?(assert(this.registry.isLookupType(r),()=>`PortableRegistry: Expected a lookup string type, found ${r}`),parseInt(r.replace("Lookup",""),10)):isNumber(r)?r:r.toNumber()}function _extract2(r,e){const t=[...r.path].join("::");let n;const s=_classPrivateFieldBase(this,_alias)[_alias][e]||getAliasPath(r.path);try{if(s)n=_classPrivateFieldBase(this,_extractAliasPath)[_extractAliasPath](e,s);else switch(r.def.type){case"Array":n=_classPrivateFieldBase(this,_extractArray)[_extractArray](e,r.def.asArray);break;case"BitSequence":n=_classPrivateFieldBase(this,_extractBitSequence)[_extractBitSequence](e,r.def.asBitSequence);break;case"Compact":n=_classPrivateFieldBase(this,_extractCompact)[_extractCompact](e,r.def.asCompact);break;case"Composite":n=_classPrivateFieldBase(this,_extractComposite)[_extractComposite](e,r,r.def.asComposite);break;case"HistoricMetaCompat":n=_classPrivateFieldBase(this,_extractHistoric)[_extractHistoric](e,r.def.asHistoricMetaCompat);break;case"Primitive":n=_classPrivateFieldBase(this,_extractPrimitive)[_extractPrimitive](e,r);break;case"Sequence":n=_classPrivateFieldBase(this,_extractSequence)[_extractSequence](e,r.def.asSequence);break;case"Tuple":n=_classPrivateFieldBase(this,_extractTuple)[_extractTuple](e,r.def.asTuple);break;case"Variant":n=_classPrivateFieldBase(this,_extractVariant)[_extractVariant](e,r,r.def.asVariant);break;default:assertUnreachable(r.def.type)}}catch(i){throw new Error(`PortableRegistry: ${e}${t?` (${t})`:""}: Error extracting ${stringify(r)}: ${i.message}`)}return objectSpread({docs:sanitizeDocs(r.docs),namespace:t},n)}function _extractArray2(r,{len:e,type:t}){return assert(!e||e.toNumber()<=256,"Only support for [Type; <length>], where length <= 256"),withTypeString(this.registry,{info:TypeDefInfo.VecFixed,length:e.toNumber(),sub:_classPrivateFieldBase(this,_createSiDef)[_createSiDef](t)})}function _extractBitSequence2(r,{bitOrderType:e,bitStoreType:t}){const n=_classPrivateFieldBase(this,_createSiDef)[_createSiDef](e),s=_classPrivateFieldBase(this,_createSiDef)[_createSiDef](t),[i,a]=BITVEC_NS.includes(n.namespace||"")?[n,s]:[s,n];return assert(BITVEC_NS.includes(i.namespace||""),()=>`Unexpected bitOrder found as ${i.namespace||"<unknown>"}`),assert(a.info===TypeDefInfo.Plain&&a.type==="u8",()=>`Only u8 bitStore is currently supported, found ${a.type}`),{info:TypeDefInfo.Plain,type:"BitVec"}}function _extractCompact2(r,{type:e}){return withTypeString(this.registry,{info:TypeDefInfo.Compact,sub:_classPrivateFieldBase(this,_createSiDef)[_createSiDef](e)})}function _extractComposite2(r,{params:e,path:t},{fields:n}){const s=t[0].toString(),i=t[t.length-1].toString();return t.length===1&&s==="BTreeMap"?withTypeString(this.registry,{info:TypeDefInfo.BTreeMap,sub:e.map(({type:a})=>_classPrivateFieldBase(this,_createSiDef)[_createSiDef](a.unwrap()))}):t.length===1&&s==="BTreeSet"?withTypeString(this.registry,{info:TypeDefInfo.BTreeSet,sub:_classPrivateFieldBase(this,_createSiDef)[_createSiDef](e[0].type.unwrap())}):["Range","RangeInclusive"].includes(s)?withTypeString(this.registry,{info:s==="Range"?TypeDefInfo.Range:TypeDefInfo.RangeInclusive,sub:_classPrivateFieldBase(this,_createSiDef)[_createSiDef](e[0].type.unwrap()),type:s}):["WrapperKeepOpaque","WrapperOpaque"].includes(i)?withTypeString(this.registry,{info:i==="WrapperKeepOpaque"?TypeDefInfo.WrapperKeepOpaque:TypeDefInfo.WrapperOpaque,sub:_classPrivateFieldBase(this,_createSiDef)[_createSiDef](e[0].type.unwrap()),type:i}):PATHS_SET.some(a=>matchParts(a,t))?_classPrivateFieldBase(this,_extractCompositeSet)[_extractCompositeSet](r,e,n):_classPrivateFieldBase(this,_extractFields)[_extractFields](r,n)}function _extractCompositeSet2(r,e,t){return assert(e.length===1&&t.length===1,"Set handling expects param/field as single entries"),withTypeString(this.registry,{info:TypeDefInfo.Set,length:this.registry.createTypeUnsafe(this.registry.createLookupType(t[0].type),[]).bitLength(),sub:this.getSiType(e[0].type.unwrap()).def.asVariant.variants.map(({index:n,name:s})=>({index:n.toNumber(),info:TypeDefInfo.Plain,name:s.toString(),type:"Null"}))})}function _extractFields2(r,e){let t=!0,n=!0;for(let a=0;a<e.length;a++){const{name:o}=e[a];t=t&&o.isSome,n=n&&o.isNone}if(assert(n||t,"Invalid fields type detected, expected either Tuple (all unnamed) or Struct (all named)"),e.length===0)return{info:TypeDefInfo.Null,type:"Null"};if(n&&e.length===1){const a=_classPrivateFieldBase(this,_createSiDef)[_createSiDef](e[0].type);return objectSpread({},a,r===-1?{}:{lookupIndex:r,lookupName:_classPrivateFieldBase(this,_names)[_names][r],lookupNameRoot:a.lookupName},e[0].typeName.isSome?{typeName:sanitize(e[0].typeName.unwrap())}:null)}const[s,i]=_classPrivateFieldBase(this,_extractFieldsAlias)[_extractFieldsAlias](e);return withTypeString(this.registry,objectSpread({info:n?TypeDefInfo.Tuple:TypeDefInfo.Struct},i.size?{alias:i}:null,r===-1?{}:{lookupIndex:r,lookupName:_classPrivateFieldBase(this,_names)[_names][r]},{sub:s}))}function _extractFieldsAlias2(r){const e=new Map,t=new Array(r.length);for(let n=0;n<r.length;n++){const{docs:s,name:i,type:a,typeName:o}=r[n],c=_classPrivateFieldBase(this,_createSiDef)[_createSiDef](a);if(i.isNone)t[n]=c;else{let h=stringCamelCase(i.unwrap()),y=null;h.includes("#")?(y=h,h=y.replace(/#/g,"_")):RESERVED.includes(h)&&(y=h,h=`${h}_`),y&&e.set(h,y),t[n]=objectSpread({},c,{docs:sanitizeDocs(s),name:h},o.isSome?{typeName:sanitize(o.unwrap())}:null)}}return[t,e]}function _extractHistoric2(r,e){return objectSpread({},getTypeDef(e),{displayName:e.toString(),isFromSi:!0})}function _extractPrimitive2(r,e){const t=e.def.asPrimitive.type.toString();return{info:TypeDefInfo.Plain,type:PRIMITIVE_ALIAS[t]||t.toLowerCase()}}function _extractAliasPath2(r,e){return{info:TypeDefInfo.Plain,type:e}}function _extractSequence2(r,{type:e}){const t=_classPrivateFieldBase(this,_createSiDef)[_createSiDef](e);return t.type==="u8"?{info:TypeDefInfo.Plain,type:"Bytes"}:withTypeString(this.registry,{info:TypeDefInfo.Vec,lookupIndex:r,lookupName:_classPrivateFieldBase(this,_names)[_names][r],sub:t})}function _extractTuple2(r,e){if(e.length===0)return{info:TypeDefInfo.Null,type:"Null"};if(e.length===1)return this.getTypeDef(e[0]);const t=e.map(n=>_classPrivateFieldBase(this,_createSiDef)[_createSiDef](n));return withTypeString(this.registry,{info:TypeDefInfo.Tuple,lookupIndex:r,lookupName:_classPrivateFieldBase(this,_names)[_names][r],sub:t})}function _extractVariant2(r,{params:e,path:t},{variants:n}){const s=t[0].toString();return s==="Option"?withTypeString(this.registry,{info:TypeDefInfo.Option,sub:_classPrivateFieldBase(this,_createSiDef)[_createSiDef](e[0].type.unwrap())}):s==="Result"?withTypeString(this.registry,{info:TypeDefInfo.Result,sub:e.map(({type:i},a)=>objectSpread({name:["Ok","Error"][a]},_classPrivateFieldBase(this,_createSiDef)[_createSiDef](i.unwrap())))}):n.length===0?{info:TypeDefInfo.Null,type:"Null"}:_classPrivateFieldBase(this,_extractVariantEnum)[_extractVariantEnum](r,n)}function _extractVariantEnum2(r,e){const t=[];return[...e].sort((n,s)=>n.index.cmp(s.index)).forEach(({fields:n,index:s,name:i})=>{const a=s.toNumber();for(;t.length!==a;)t.push({index:t.length,info:TypeDefInfo.Null,name:`__Unused${t.length}`,type:"Null"});t.push(objectSpread(_classPrivateFieldBase(this,_extractFields)[_extractFields](-1,n),{index:s.toNumber(),name:i.toString()}))}),withTypeString(this.registry,{info:TypeDefInfo.Enum,lookupIndex:r,lookupName:_classPrivateFieldBase(this,_names)[_names][r],sub:t})}function convertType(r){return(e,{type:t})=>e.createType("Si1TypeDef",{[r]:{type:t.toNumber()}})}function convertArray(r,{len:e,type:t}){return r.createType("Si1TypeDef",{Array:{len:e,type:t.toNumber()}})}function convertBitSequence(r,{bitOrderType:e,bitStoreType:t}){return r.createType("Si1TypeDef",{BitSequence:{bitOrderType:e.toNumber(),bitStoreType:t.toNumber()}})}const convertCompact=convertType("Compact");function convertComposite(r,{fields:e}){return r.createType("Si1TypeDef",{Composite:{fields:convertFields(r,e)}})}function convertFields(r,e){return e.map(({docs:t,name:n,type:s,typeName:i})=>r.createType("Si1Field",{docs:t,name:n,type:s.toNumber(),typeName:i}))}function convertPhantom(r,e){return console.warn(`Converting phantom type ${e.map(t=>t.toString()).join("::")} to empty tuple`),r.createType("Si1TypeDef",{Tuple:[]})}function convertPrimitive(r,e){return r.createType("Si1TypeDef",{Primitive:e.toString()})}const convertSequence=convertType("Sequence");function convertTuple(r,e){return r.createType("Si1TypeDef",{Tuple:e.map(t=>t.toNumber())})}function convertVariant(r,{variants:e}){return r.createType("Si1TypeDef",{Variant:{variants:e.map(({discriminant:t,docs:n,fields:s,name:i},a)=>r.createType("Si1Variant",{docs:n,fields:convertFields(r,s),index:t.isSome?t.unwrap().toNumber():a,name:i}))}})}function convertDef(r,{def:e,path:t}){let n;switch(e.type){case"Array":n=convertArray(r,e.asArray);break;case"BitSequence":n=convertBitSequence(r,e.asBitSequence);break;case"Compact":n=convertCompact(r,e.asCompact);break;case"Composite":n=convertComposite(r,e.asComposite);break;case"Phantom":n=convertPhantom(r,t);break;case"Primitive":n=convertPrimitive(r,e.asPrimitive);break;case"Sequence":n=convertSequence(r,e.asSequence);break;case"Tuple":n=convertTuple(r,e.asTuple);break;case"Variant":n=convertVariant(r,e.asVariant);break;default:assertUnreachable(e.type)}return n}function toV1(r,e){return e.map((t,n)=>r.createType("PortableType",{id:n+1,type:{def:convertDef(r,t),docs:[],params:t.params.map(s=>r.createType("Si1TypeParameter",{type:s.toNumber()})),path:t.path.map(s=>s.toString())}}))}const l$9=logger("registry");function valueToString(r){return r.toString()}function getFieldArgs(r,e){const t=new Array(e.length);for(let n=0;n<e.length;n++)t[n]=r.getTypeDef(e[n].type).type;return t}function clearRecord(r){const e=Object.keys(r);for(let t=0;t<e.length;t++)delete r[e[t]]}function getVariantStringIdx({index:r}){return r.toString()}function injectErrors(r,{lookup:e,pallets:t},n,s){clearRecord(s);for(let i=0;i<t.length;i++){const{errors:a,index:o,name:c}=t[i];if(a.isSome){const h=stringCamelCase(c);lazyMethod(s,n>=12?o.toNumber():i,()=>lazyVariants(e,a.unwrap(),getVariantStringIdx,({docs:y,fields:x,index:E,name:V})=>({args:getFieldArgs(e,x),docs:y.map(valueToString),fields:x,index:E.toNumber(),method:V.toString(),name:V.toString(),section:h})))}}}function injectEvents(r,{lookup:e,pallets:t},n,s){const i=t.filter(filterEventsSome);clearRecord(s);for(let a=0;a<i.length;a++){const{events:o,index:c,name:h}=i[a];lazyMethod(s,n>=12?c.toNumber():a,()=>lazyVariants(e,o.unwrap(),getVariantStringIdx,y=>{const x=r.createType("EventMetadataLatest",objectSpread({},y,{args:getFieldArgs(e,y.fields)}));return class extends GenericEventData{constructor(E,V){super(E,V,x,stringCamelCase(h),y.name.toString())}}}))}}function injectExtrinsics(r,{lookup:e,pallets:t},n,s){const i=t.filter(filterCallsSome);clearRecord(s);for(let a=0;a<i.length;a++){const{calls:o,index:c,name:h}=i[a],y=n>=12?c.toNumber():a;lazyMethod(s,y,()=>lazyVariants(e,o.unwrap(),getVariantStringIdx,x=>createCallFunction(r,e,x,stringCamelCase(h),y)))}}function extractProperties(r,e){const t=r.getChainProperties(),n=decorateConstants(r,e.asLatest,e.version),s=n.system&&(n.system.sS58Prefix||n.system.ss58Prefix);if(!s)return t;const{tokenDecimals:i,tokenSymbol:a}=t||{};return r.createTypeUnsafe("ChainProperties",[{ss58Format:s,tokenDecimals:i,tokenSymbol:a}])}var Ft,lr,kn,Dt,dr,Dr,zr,jr,qr,zt,Cn,fr,In,Xr,$t,hr;class TypeRegistry{constructor(e){G(this,Ft,new Map);G(this,lr,new Map);G(this,kn,void 0);G(this,Dt,void 0);G(this,dr,0);G(this,Dr,{});G(this,zr,{});G(this,jr,{});G(this,qr,new Map);G(this,zt,void 0);G(this,Cn,blake2AsU8a);G(this,fr,void 0);G(this,In,void 0);G(this,Xr,{});G(this,$t,fallbackExtensions);G(this,hr,void 0);te(this,fr,objectSpread({Json,Metadata,PortableRegistry,Raw},baseTypes)),te(this,In,definitions);const t=Object.values(T(this,In));for(let n=0;n<t.length;n++)this.register(t[n].types);e&&(this.createdAtHash=this.createType("Hash",e))}get chainDecimals(){var e;if((e=T(this,zt))!==null&&e!==void 0&&e.tokenDecimals.isSome){const t=T(this,zt).tokenDecimals.unwrap();if(t.length)return t.map(n=>n.toNumber())}return[12]}get chainSS58(){var e;return(e=T(this,zt))!==null&&e!==void 0&&e.ss58Format.isSome?T(this,zt).ss58Format.unwrap().toNumber():void 0}get chainTokens(){var e;if((e=T(this,zt))!==null&&e!==void 0&&e.tokenSymbol.isSome){const t=T(this,zt).tokenSymbol.unwrap();if(t.length)return t.map(valueToString)}return[formatBalance.getDefaults().unit]}isLookupType(e){return/Lookup\d+$/.test(e)}createLookupType(e){return`Lookup${e.toString()}`}get knownTypes(){return T(this,Xr)}get lookup(){return assertReturn(T(this,kn),"Lookup has not been set on this registry")}get metadata(){return assertReturn(T(this,Dt),"Metadata has not been set on this registry")}get unknownTypes(){return[...T(this,qr).keys()]}get signedExtensions(){return T(this,$t)}clearCache(){te(this,Ft,new Map)}createClass(e){return this.createClassUnsafe(e)}createClassUnsafe(e){return createClassUnsafe(this,e)}createType(e,...t){return this.createTypeUnsafe(e,t)}createTypeUnsafe(e,t,n){return createTypeUnsafe(this,e,t,n)}findMetaCall(e){const[t,n]=[e[0],e[1]];return assertReturn(T(this,Dr)[`${t}`]&&T(this,Dr)[`${t}`][`${n}`],()=>`findMetaCall: Unable to find Call with index [${t}, ${n}]/[${e.toString()}]`)}findMetaError(e){const[t,n]=isU8a(e)?[e[0],e[1]]:[e.index.toNumber(),isU8a(e.error)?e.error[0]:e.error.toNumber()];return assertReturn(T(this,zr)[`${t}`]&&T(this,zr)[`${t}`][`${n}`],()=>`findMetaError: Unable to find Error with index [${t}, ${n}]/[${e.toString()}]`)}findMetaEvent(e){const[t,n]=[e[0],e[1]];return assertReturn(T(this,jr)[`${t}`]&&T(this,jr)[`${t}`][`${n}`],()=>`findMetaEvent: Unable to find Event with index [${t}, ${n}]/[${e.toString()}]`)}get(e,t,n){return this.getUnsafe(e,t,n)}getUnsafe(e,t,n){let s=T(this,Ft).get(e)||T(this,fr)[e];if(!s){const i=T(this,lr).get(e);let a;i?a=createClassUnsafe(this,i):n?a=constructTypeClass(this,n):t&&(l$9.warn(`Unable to resolve type ${e}, it will fail on construction`),T(this,qr).set(e,!0),a=DoNotConstruct.with(e)),a&&(s=class extends a{},T(this,Ft).set(e,s))}return s}getChainProperties(){return T(this,zt)}getClassName(e){const t=[];for(const[n,s]of Object.entries(T(this,fr)))e===s&&t.push(n);for(const[n,s]of T(this,Ft).entries())e===s&&t.push(n);return t.sort().reverse(),t.length?t[0]:void 0}getDefinition(e){return T(this,lr).get(e)}getModuleInstances(e,t){var n,s,i,a,o;return(n=T(this,Xr))===null||n===void 0||(s=n.typesBundle)===null||s===void 0||(i=s.spec)===null||i===void 0||(a=i[e])===null||a===void 0||(o=a.instances)===null||o===void 0?void 0:o[t]}getOrThrow(e,t){const n=this.get(e);return assert(n,t||`type ${e} not found`),n}getOrUnknown(e){return this.get(e,!0)}getSignedExtensionExtra(){return expandExtensionTypes(T(this,$t),"payload",T(this,hr))}getSignedExtensionTypes(){return expandExtensionTypes(T(this,$t),"extrinsic",T(this,hr))}hasClass(e){return T(this,Ft).has(e)||!!T(this,fr)[e]}hasDef(e){return T(this,lr).has(e)}hasType(e){return!T(this,qr).get(e)&&(this.hasClass(e)||this.hasDef(e))}hash(e){return this.createType("CodecHash",T(this,Cn).call(this,e))}register(e,t){isFunction$3(e)?T(this,Ft).set(e.name,e):isString(e)?(assert(isFunction$3(t),()=>`Expected class definition passed to '${e}' registration`),assert(e!==t.toString(),()=>`Unable to register circular ${e} === ${e}`),T(this,Ft).set(e,t)):this._registerObject(e)}_registerObject(e){const t=Object.entries(e);for(let n=0;n<t.length;n++){const[s,i]=t[n];if(isFunction$3(i))T(this,Ft).set(s,i);else{const a=isString(i)?i:stringify(i);assert(s!==a,()=>`Unable to register circular ${s} === ${a}`),T(this,Ft).has(s)&&T(this,Ft).delete(s),T(this,lr).set(s,a)}}}setChainProperties(e){e&&te(this,zt,e)}setHasher(e){te(this,Cn,e||blake2AsU8a)}setKnownTypes(e){te(this,Xr,e)}setLookup(e){te(this,kn,e),e.register()}setMetadata(e,t,n){te(this,Dt,e.asLatest),te(this,dr,e.version),this.setLookup(T(this,Dt).lookup),injectExtrinsics(this,T(this,Dt),T(this,dr),T(this,Dr)),injectErrors(this,T(this,Dt),T(this,dr),T(this,zr)),injectEvents(this,T(this,Dt),T(this,dr),T(this,jr)),this.setSignedExtensions(t||(T(this,Dt).extrinsic.version.gt(BN_ZERO)?T(this,Dt).extrinsic.signedExtensions.map(({identifier:s})=>s.toString()):fallbackExtensions),n),this.setChainProperties(extractProperties(this,e))}setSignedExtensions(e=fallbackExtensions,t){te(this,$t,e),te(this,hr,t);const n=findUnknownExtensions(T(this,$t),T(this,hr));n.length&&l$9.warn(`Unknown signed extensions ${n.join(", ")} found, treating them as no-effect`)}}Ft=new WeakMap,lr=new WeakMap,kn=new WeakMap,Dt=new WeakMap,dr=new WeakMap,Dr=new WeakMap,zr=new WeakMap,jr=new WeakMap,qr=new WeakMap,zt=new WeakMap,Cn=new WeakMap,fr=new WeakMap,In=new WeakMap,Xr=new WeakMap,$t=new WeakMap,hr=new WeakMap;const DEV_PHRASE="bottom drive obey lake curtain smoke basket hold race lonely fit walk",PKCS8_DIVIDER=new Uint8Array([161,35,3,33,0]),PKCS8_HEADER=new Uint8Array([48,83,2,1,1,48,5,6,3,43,101,112,4,34,4,32]),PUB_LENGTH=32,SEC_LENGTH=64,SEED_LENGTH=32,SEED_OFFSET=PKCS8_HEADER.length;function decodePair(r,e,t){const n=Array.isArray(t)||isUndefined(t)?t:[t],s=jsonDecryptData(e,r,n),i=s.subarray(0,PKCS8_HEADER.length);assert(u8aEq(i,PKCS8_HEADER),"Invalid Pkcs8 header found in body");let a=s.subarray(SEED_OFFSET,SEED_OFFSET+SEC_LENGTH),o=SEED_OFFSET+SEC_LENGTH,c=s.subarray(o,o+PKCS8_DIVIDER.length);u8aEq(c,PKCS8_DIVIDER)||(o=SEED_OFFSET+SEED_LENGTH,a=s.subarray(SEED_OFFSET,o),c=s.subarray(o,o+PKCS8_DIVIDER.length),assert(u8aEq(c,PKCS8_DIVIDER),"Invalid Pkcs8 divider found in body"));const h=o+PKCS8_DIVIDER.length;return{publicKey:s.subarray(h,h+PUB_LENGTH),secretKey:a}}function encodePair({publicKey:r,secretKey:e},t){assert(e,"Expected a valid secretKey to be passed to encode");const n=u8aConcat(PKCS8_HEADER,e,PKCS8_DIVIDER,r);if(!t)return n;const{params:s,password:i,salt:a}=scryptEncode(t),{encrypted:o,nonce:c}=naclEncrypt(n,i.subarray(0,32));return u8aConcat(scryptToU8a(a,s),c,o)}function pairToJson(r,{address:e,meta:t},n,s){return objectSpread(jsonEncryptFormat(n,["pkcs8",r],s),{address:e,meta:t})}const SIG_TYPE_NONE=new Uint8Array,TYPE_FROM_SEED={ecdsa:secp256k1PairFromSeed,ed25519:ed25519PairFromSeed,ethereum:secp256k1PairFromSeed,sr25519:sr25519PairFromSeed},TYPE_PREFIX={ecdsa:new Uint8Array([2]),ed25519:new Uint8Array([0]),ethereum:new Uint8Array([2]),sr25519:new Uint8Array([1])},TYPE_SIGNATURE={ecdsa:(r,e)=>secp256k1Sign(r,e,"blake2"),ed25519:ed25519Sign,ethereum:(r,e)=>secp256k1Sign(r,e,"keccak"),sr25519:sr25519Sign},TYPE_ADDRESS={ecdsa:r=>r.length>32?blake2AsU8a(r):r,ed25519:r=>r,ethereum:r=>r.length===20?r:keccakAsU8a(secp256k1Expand(r)),sr25519:r=>r};function isLocked(r){return!r||u8aEmpty(r)}function vrfHash(r,e,t){return blake2AsU8a(u8aConcat(e||"",t||"",r))}function createPair({toSS58:r,type:e},{publicKey:t,secretKey:n},s={},i=null,a){const o=(y,x)=>{const E=decodePair(y,x||i,a);if(E.secretKey.length===64)t=E.publicKey,n=E.secretKey;else{const V=TYPE_FROM_SEED[e](E.secretKey);t=V.publicKey,n=V.secretKey}},c=y=>(isLocked(n)&&i&&o(y,i),i=encodePair({publicKey:t,secretKey:n},y),a=void 0,i),h=()=>{const y=TYPE_ADDRESS[e](t);return e==="ethereum"?ethereumEncode(y):r(y)};return{get address(){return h()},get addressRaw(){const y=TYPE_ADDRESS[e](t);return e==="ethereum"?y.slice(-20):y},get isLocked(){return isLocked(n)},get meta(){return s},get publicKey(){return t},get type(){return e},decodePkcs8:o,decryptMessage:(y,x)=>{assert(!isLocked(n),"Cannot encrypt with a locked key pair"),assert(!["ecdsa","ethereum"].includes(e),"Secp256k1 not supported yet");const E=u8aToU8a(y);return naclOpen(E.slice(24,E.length),E.slice(0,24),convertPublicKeyToCurve25519(u8aToU8a(x)),convertSecretKeyToCurve25519(n))},derive:(y,x)=>{assert(e!=="ethereum","Unable to derive on this keypair"),assert(!isLocked(n),"Cannot derive on a locked keypair");const{path:E}=keyExtractPath(y),V=keyFromPath({publicKey:t,secretKey:n},E,e);return createPair({toSS58:r,type:e},V,x,null)},encodePkcs8:y=>c(y),encryptMessage:(y,x,E)=>{assert(!isLocked(n),"Cannot encrypt with a locked key pair"),assert(!["ecdsa","ethereum"].includes(e),"Secp256k1 not supported yet");const{nonce:V,sealed:F}=naclSeal(u8aToU8a(y),convertSecretKeyToCurve25519(n),convertPublicKeyToCurve25519(u8aToU8a(x)),E);return u8aConcat(V,F)},lock:()=>{n=new Uint8Array},setMeta:y=>{s=objectSpread({},s,y)},sign:(y,x={})=>(assert(!isLocked(n),"Cannot sign with a locked key pair"),u8aConcat(x.withType?TYPE_PREFIX[e]:SIG_TYPE_NONE,TYPE_SIGNATURE[e](u8aToU8a(y),{publicKey:t,secretKey:n}))),toJson:y=>{const x=["ecdsa","ethereum"].includes(e)?t.length===20?u8aToHex(t):u8aToHex(secp256k1Compress(t)):h();return pairToJson(e,{address:x,meta:s},c(y),!!y)},unlock:y=>o(y),verify:(y,x,E)=>signatureVerify(y,x,TYPE_ADDRESS[e](u8aToU8a(E))).isValid,vrfSign:(y,x,E)=>{if(assert(!isLocked(n),"Cannot sign with a locked key pair"),e==="sr25519")return sr25519VrfSign(y,{secretKey:n},x,E);const V=TYPE_SIGNATURE[e](u8aToU8a(y),{publicKey:t,secretKey:n});return u8aConcat(vrfHash(V,x,E),V)},vrfVerify:(y,x,E,V,F)=>e==="sr25519"?sr25519VrfVerify(y,x,t,V,F):signatureVerify(y,u8aConcat(TYPE_PREFIX[e],x.subarray(32)),TYPE_ADDRESS[e](u8aToU8a(E))).isValid&&u8aEq(x.subarray(0,32),vrfHash(x.subarray(32),V,F))}}var pr;class Pairs{constructor(){G(this,pr,{})}add(e){return T(this,pr)[decodeAddress(e.address).toString()]=e,e}all(){return Object.values(T(this,pr))}get(e){const t=T(this,pr)[decodeAddress(e).toString()];return assert(t,()=>`Unable to retrieve keypair '${isU8a(e)||isHex(e)?u8aToHex(u8aToU8a(e)):e}'`),t}remove(e){delete T(this,pr)[decodeAddress(e).toString()]}}pr=new WeakMap;const PairFromSeed={ecdsa:r=>secp256k1PairFromSeed(r),ed25519:r=>ed25519PairFromSeed(r),ethereum:r=>secp256k1PairFromSeed(r),sr25519:r=>sr25519PairFromSeed(r)};function pairToPublic({publicKey:r}){return r}var Xt,Bn,Wr;class Keyring$1{constructor(e={}){G(this,Xt,void 0);G(this,Bn,void 0);G(this,Wr,void 0);je(this,"decodeAddress",decodeAddress);je(this,"encodeAddress",(e,t)=>this.type==="ethereum"?ethereumEncode(e):encodeAddress(e,isUndefined(t)?T(this,Wr):t));e.type=e.type||"ed25519",assert(["ecdsa","ethereum","ed25519","sr25519"].includes(e.type||"undefined"),()=>`Expected a keyring type of either 'ed25519', 'sr25519', 'ethereum' or 'ecdsa', found '${e.type||"unknown"}`),te(this,Xt,new Pairs),te(this,Wr,e.ss58Format),te(this,Bn,e.type)}get pairs(){return this.getPairs()}get publicKeys(){return this.getPublicKeys()}get type(){return T(this,Bn)}addPair(e){return T(this,Xt).add(e)}addFromAddress(e,t={},n=null,s=this.type,i,a){const o=this.decodeAddress(e,i);return this.addPair(createPair({toSS58:this.encodeAddress,type:s},{publicKey:o,secretKey:new Uint8Array},t,n,a))}addFromJson(e,t){return this.addPair(this.createFromJson(e,t))}addFromMnemonic(e,t={},n=this.type){return this.addFromUri(e,t,n)}addFromPair(e,t={},n=this.type){return this.addPair(this.createFromPair(e,t,n))}addFromSeed(e,t={},n=this.type){return this.addPair(createPair({toSS58:this.encodeAddress,type:n},PairFromSeed[n](e),t,null))}addFromUri(e,t={},n=this.type){return this.addPair(this.createFromUri(e,t,n))}createFromJson({address:e,encoded:t,encoding:{content:n,type:s,version:i},meta:a},o){assert(i!=="3"||n[0]==="pkcs8",()=>`Unable to decode non-pkcs8 type, [${n.join(",")}] found}`);const c=i==="0"||!Array.isArray(n)?this.type:n[1],h=Array.isArray(s)?s:[s];assert(["ed25519","sr25519","ecdsa","ethereum"].includes(c),()=>`Unknown crypto type ${c}`);const y=isHex(e)?hexToU8a(e):this.decodeAddress(e,o),x=isHex(t)?hexToU8a(t):base64Decode(t);return createPair({toSS58:this.encodeAddress,type:c},{publicKey:y,secretKey:new Uint8Array},a,x,h)}createFromPair(e,t={},n=this.type){return createPair({toSS58:this.encodeAddress,type:n},e,t,null)}createFromUri(e,t={},n=this.type){const s=e.startsWith("//")?`${DEV_PHRASE}${e}`:e,{derivePath:i,password:a,path:o,phrase:c}=keyExtractSuri(s);let h;const y=isHex(c,256);if(y)h=hexToU8a(c);else{const E=c.split(" ");[12,15,18,21,24].includes(E.length)?h=n==="ethereum"?mnemonicToLegacySeed(c,"",!1,64):mnemonicToMiniSecret(c,a):(assert(c.length<=32,"specified phrase is not a valid mnemonic and is invalid as a raw seed at > 32 bytes"),h=stringToU8a(c.padEnd(32)))}const x=n==="ethereum"?y?PairFromSeed[n](h):hdEthereum(h,i.substring(1)):keyFromPath(PairFromSeed[n](h),o,n);return createPair({toSS58:this.encodeAddress,type:n},x,t,null)}getPair(e){return T(this,Xt).get(e)}getPairs(){return T(this,Xt).all()}getPublicKeys(){return T(this,Xt).all().map(pairToPublic)}removePair(e){T(this,Xt).remove(e)}setSS58Format(e){te(this,Wr,e)}toJson(e,t){return T(this,Xt).get(e).toJson(t)}}Xt=new WeakMap,Bn=new WeakMap,Wr=new WeakMap;const PAIRSSR25519=[{publicKey:hexToU8a("0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d"),secretKey:hexToU8a("0x98319d4ff8a9508c4bb0cf0b5a78d760a0b2082c02775e6e82370816fedfff48925a225d97aa00682d6a59b95b18780c10d7032336e88f3442b42361f4a66011"),seed:"Alice",type:"sr25519"},{publicKey:hexToU8a("0xbe5ddb1579b72e84524fc29e78609e3caf42e85aa118ebfe0b0ad404b5bdd25f"),secretKey:hexToU8a("0xe8da6c9d810e020f5e3c7f5af2dea314cbeaa0d72bc6421e92c0808a0c584a6046ab28e97c3ffc77fe12b5a4d37e8cd4afbfebbf2391ffc7cb07c0f38c023efd"),seed:"Alice//stash",type:"sr25519"},{publicKey:hexToU8a("0x8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48"),secretKey:hexToU8a("0x081ff694633e255136bdb456c20a5fc8fed21f8b964c11bb17ff534ce80ebd5941ae88f85d0c1bfc37be41c904e1dfc01de8c8067b0d6d5df25dd1ac0894a325"),seed:"Bob",type:"sr25519"},{publicKey:hexToU8a("0xfe65717dad0447d715f660a0a58411de509b42e6efb8375f562f58a554d5860e"),secretKey:hexToU8a("0xc006507cdfc267a21532394c49ca9b754ca71de21e15a1cdf807c7ceab6d0b6c3ed408d9d35311540dcd54931933e67cf1ea10d46f75408f82b789d9bd212fde"),seed:"Bob//stash",type:"sr25519"},{publicKey:hexToU8a("0x90b5ab205c6974c9ea841be688864633dc9ca8a357843eeacf2314649965fe22"),secretKey:hexToU8a("0xa8f2d83016052e5d6d77b2f6fd5d59418922a09024cda701b3c34369ec43a7668faf12ff39cd4e5d92bb773972f41a7a5279ebc2ed92264bed8f47d344f8f18c"),seed:"Charlie",type:"sr25519"},{publicKey:hexToU8a("0x306721211d5404bd9da88e0204360a1a9ab8b87c66c1bc2fcdd37f3c2222cc20"),secretKey:hexToU8a("0x20e05482ca4677e0edbc58ae9a3a59f6ed3b1a9484ba17e64d6fe8688b2b7b5d108c4487b9323b98b11fe36cb301b084e920f7b7895536809a6d62a451b25568"),seed:"Dave",type:"sr25519"},{publicKey:hexToU8a("0xe659a7a1628cdd93febc04a4e0646ea20e9f5f0ce097d9a05290d4a9e054df4e"),secretKey:hexToU8a("0x683576abfd5dc35273e4264c23095a1bf21c14517bece57c7f0cc5c0ed4ce06a3dbf386b7828f348abe15d76973a72009e6ef86a5c91db2990cb36bb657c6587"),seed:"Eve",type:"sr25519"},{publicKey:hexToU8a("0x1cbd2d43530a44705ad088af313e18f80b53ef16b36177cd4b77b846f2a5f07c"),secretKey:hexToU8a("0xb835c20f450079cf4f513900ae9faf8df06ad86c681884122c752a4b2bf74d4303e4f21bc6cc62bb4eeed5a9cce642c25e2d2ac1464093b50f6196d78e3a7426"),seed:"Ferdie",type:"sr25519"}],PAIRSETHEREUM=[{name:"Alith",publicKey:hexToU8a("0x02509540919faacf9ab52146c9aa40db68172d83777250b28e4679176e49ccdd9f"),secretKey:hexToU8a("0x5fb92d6e98884f76de468fa3f6278f8807c48bebc13595d45af5bdc4da702133"),type:"ethereum"},{name:"Baltathar",publicKey:hexToU8a("0x033bc19e36ff1673910575b6727a974a9abd80c9a875d41ab3e2648dbfb9e4b518"),secretKey:hexToU8a("0x8075991ce870b93a8870eca0c0f91913d12f47948ca0fd25b49c6fa7cdbeee8b"),type:"ethereum"},{name:"Charleth",publicKey:hexToU8a("0x0234637bdc0e89b5d46543bcbf8edff329d2702bc995e27e9af4b1ba009a3c2a5e"),secretKey:hexToU8a("0x0b6e18cafb6ed99687ec547bd28139cafdd2bffe70e6b688025de6b445aa5c5b"),type:"ethereum"},{name:"Dorothy",publicKey:hexToU8a("0x02a00d60b2b408c2a14c5d70cdd2c205db8985ef737a7e55ad20ea32cc9e7c417c"),secretKey:hexToU8a("0x39539ab1876910bbf3a223d84a29e28f1cb4e2e456503e7e91ed39b2e7223d68"),type:"ethereum"},{name:"Ethan",publicKey:hexToU8a("0x025cdc005b752651cd3f728fb9192182acb3a9c89e19072cbd5b03f3ee1f1b3ffa"),secretKey:hexToU8a("0x7dce9bc8babb68fec1409be38c8e1a52650206a7ed90ff956ae8a6d15eeaaef4"),type:"ethereum"},{name:"Faith",publicKey:hexToU8a("0x037964b6c9d546da4646ada28a99e34acaa1d14e7aba861a9055f9bd200c8abf74"),secretKey:hexToU8a("0xb9d2ea9a615f3165812e8d44de0d24da9bbd164b65c4f0573e1ce2c8dbd9c8df"),type:"ethereum"}];function createMeta(r,e){return assert(r||e,"Testing pair should have either a name or a seed"),{isTesting:!0,name:r||e&&e.replace("//","_").toLowerCase()}}function createTestKeyring(r={},e=!0){const t=new Keyring$1(r),n=r.type&&r.type==="ethereum"?PAIRSETHEREUM:PAIRSSR25519;for(const{name:s,publicKey:i,secretKey:a,seed:o,type:c}of n){const h=createMeta(s,o),y=!e&&!s&&o?t.addFromUri(o,h,r.type):t.addPair(createPair({toSS58:t.encodeAddress,type:c},{publicKey:i,secretKey:a},h));y.lock=()=>{}}return t}var eventemitter3={exports:{}};(function(r){var e=Object.prototype.hasOwnProperty,t="~";function n(){}Object.create&&(n.prototype=Object.create(null),new n().__proto__||(t=!1));function s(c,h,y){this.fn=c,this.context=h,this.once=y||!1}function i(c,h,y,x,E){if(typeof y!="function")throw new TypeError("The listener must be a function");var V=new s(y,x||c,E),F=t?t+h:h;return c._events[F]?c._events[F].fn?c._events[F]=[c._events[F],V]:c._events[F].push(V):(c._events[F]=V,c._eventsCount++),c}function a(c,h){--c._eventsCount===0?c._events=new n:delete c._events[h]}function o(){this._events=new n,this._eventsCount=0}o.prototype.eventNames=function(){var h=[],y,x;if(this._eventsCount===0)return h;for(x in y=this._events)e.call(y,x)&&h.push(t?x.slice(1):x);return Object.getOwnPropertySymbols?h.concat(Object.getOwnPropertySymbols(y)):h},o.prototype.listeners=function(h){var y=t?t+h:h,x=this._events[y];if(!x)return[];if(x.fn)return[x.fn];for(var E=0,V=x.length,F=new Array(V);E<V;E++)F[E]=x[E].fn;return F},o.prototype.listenerCount=function(h){var y=t?t+h:h,x=this._events[y];return x?x.fn?1:x.length:0},o.prototype.emit=function(h,y,x,E,V,F){var q=t?t+h:h;if(!this._events[q])return!1;var X=this._events[q],Y=arguments.length,oe,Q;if(X.fn){switch(X.once&&this.removeListener(h,X.fn,void 0,!0),Y){case 1:return X.fn.call(X.context),!0;case 2:return X.fn.call(X.context,y),!0;case 3:return X.fn.call(X.context,y,x),!0;case 4:return X.fn.call(X.context,y,x,E),!0;case 5:return X.fn.call(X.context,y,x,E,V),!0;case 6:return X.fn.call(X.context,y,x,E,V,F),!0}for(Q=1,oe=new Array(Y-1);Q<Y;Q++)oe[Q-1]=arguments[Q];X.fn.apply(X.context,oe)}else{var le=X.length,fe;for(Q=0;Q<le;Q++)switch(X[Q].once&&this.removeListener(h,X[Q].fn,void 0,!0),Y){case 1:X[Q].fn.call(X[Q].context);break;case 2:X[Q].fn.call(X[Q].context,y);break;case 3:X[Q].fn.call(X[Q].context,y,x);break;case 4:X[Q].fn.call(X[Q].context,y,x,E);break;default:if(!oe)for(fe=1,oe=new Array(Y-1);fe<Y;fe++)oe[fe-1]=arguments[fe];X[Q].fn.apply(X[Q].context,oe)}}return!0},o.prototype.on=function(h,y,x){return i(this,h,y,x,!1)},o.prototype.once=function(h,y,x){return i(this,h,y,x,!0)},o.prototype.removeListener=function(h,y,x,E){var V=t?t+h:h;if(!this._events[V])return this;if(!y)return a(this,V),this;var F=this._events[V];if(F.fn)F.fn===y&&(!E||F.once)&&(!x||F.context===x)&&a(this,V);else{for(var q=0,X=[],Y=F.length;q<Y;q++)(F[q].fn!==y||E&&!F[q].once||x&&F[q].context!==x)&&X.push(F[q]);X.length?this._events[V]=X.length===1?X[0]:X:a(this,V)}return this},o.prototype.removeAllListeners=function(h){var y;return h?(y=t?t+h:h,this._events[y]&&a(this,y)):(this._events=new n,this._eventsCount=0),this},o.prototype.off=o.prototype.removeListener,o.prototype.addListener=o.prototype.on,o.prefixed=t,o.EventEmitter=o,r.exports=o})(eventemitter3);var EventEmitter=eventemitter3.exports,assign=make_assign(),create$1=make_create(),trim$1=make_trim(),Global$5=typeof window!="undefined"?window:commonjsGlobal,util$6={assign,create:create$1,trim:trim$1,bind:bind$2,slice:slice$1,each:each$7,map:map$1,pluck:pluck$1,isList:isList$1,isFunction:isFunction$2,isObject:isObject$1,Global:Global$5};function make_assign(){return Object.assign?Object.assign:function(e,t,n,s){for(var i=1;i<arguments.length;i++)each$7(Object(arguments[i]),function(a,o){e[o]=a});return e}}function make_create(){if(Object.create)return function(e,t,n,s){var i=slice$1(arguments,1);return assign.apply(this,[Object.create(e)].concat(i))};{let r=function(){};return function(t,n,s,i){var a=slice$1(arguments,1);return r.prototype=t,assign.apply(this,[new r].concat(a))}}}function make_trim(){return String.prototype.trim?function(e){return String.prototype.trim.call(e)}:function(e){return e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}}function bind$2(r,e){return function(){return e.apply(r,Array.prototype.slice.call(arguments,0))}}function slice$1(r,e){return Array.prototype.slice.call(r,e||0)}function each$7(r,e){pluck$1(r,function(t,n){return e(t,n),!1})}function map$1(r,e){var t=isList$1(r)?[]:{};return pluck$1(r,function(n,s){return t[s]=e(n,s),!1}),t}function pluck$1(r,e){if(isList$1(r)){for(var t=0;t<r.length;t++)if(e(r[t],t))return r[t]}else for(var n in r)if(r.hasOwnProperty(n)&&e(r[n],n))return r[n]}function isList$1(r){return r!=null&&typeof r!="function"&&typeof r.length=="number"}function isFunction$2(r){return r&&{}.toString.call(r)==="[object Function]"}function isObject$1(r){return r&&{}.toString.call(r)==="[object Object]"}var util$5=util$6,slice=util$5.slice,pluck=util$5.pluck,each$6=util$5.each,bind$1=util$5.bind,create=util$5.create,isList=util$5.isList,isFunction$1=util$5.isFunction,isObject=util$5.isObject,storeEngine={createStore},storeAPI={version:"2.0.12",enabled:!1,get:function(r,e){var t=this.storage.read(this._namespacePrefix+r);return this._deserialize(t,e)},set:function(r,e){return e===void 0?this.remove(r):(this.storage.write(this._namespacePrefix+r,this._serialize(e)),e)},remove:function(r){this.storage.remove(this._namespacePrefix+r)},each:function(r){var e=this;this.storage.each(function(t,n){r.call(e,e._deserialize(t),(n||"").replace(e._namespaceRegexp,""))})},clearAll:function(){this.storage.clearAll()},hasNamespace:function(r){return this._namespacePrefix=="__storejs_"+r+"_"},createStore:function(){return createStore.apply(this,arguments)},addPlugin:function(r){this._addPlugin(r)},namespace:function(r){return createStore(this.storage,this.plugins,r)}};function _warn(){var r=typeof console=="undefined"?null:console;if(!!r){var e=r.warn?r.warn:r.log;e.apply(r,arguments)}}function createStore(r,e,t){t||(t=""),r&&!isList(r)&&(r=[r]),e&&!isList(e)&&(e=[e]);var n=t?"__storejs_"+t+"_":"",s=t?new RegExp("^"+n):null,i=/^[a-zA-Z0-9_\-]*$/;if(!i.test(t))throw new Error("store.js namespaces can only have alphanumerics + underscores and dashes");var a={_namespacePrefix:n,_namespaceRegexp:s,_testStorage:function(c){try{var h="__storejs__test__";c.write(h,h);var y=c.read(h)===h;return c.remove(h),y}catch{return!1}},_assignPluginFnProp:function(c,h){var y=this[h];this[h]=function(){var E=slice(arguments,0),V=this;function F(){if(!!y)return each$6(arguments,function(X,Y){E[Y]=X}),y.apply(V,E)}var q=[F].concat(E);return c.apply(V,q)}},_serialize:function(c){return JSON.stringify(c)},_deserialize:function(c,h){if(!c)return h;var y="";try{y=JSON.parse(c)}catch{y=c}return y!==void 0?y:h},_addStorage:function(c){this.enabled||this._testStorage(c)&&(this.storage=c,this.enabled=!0)},_addPlugin:function(c){var h=this;if(isList(c)){each$6(c,function(E){h._addPlugin(E)});return}var y=pluck(this.plugins,function(E){return c===E});if(!y){if(this.plugins.push(c),!isFunction$1(c))throw new Error("Plugins must be function values that return objects");var x=c.call(this);if(!isObject(x))throw new Error("Plugins must return an object of function properties");each$6(x,function(E,V){if(!isFunction$1(E))throw new Error("Bad plugin property: "+V+" from plugin "+c.name+". Plugins should only return functions.");h._assignPluginFnProp(E,V)})}},addStorage:function(c){_warn("store.addStorage(storage) is deprecated. Use createStore([storages])"),this._addStorage(c)}},o=create(a,storeAPI,{plugins:[]});return o.raw={},each$6(o,function(c,h){isFunction$1(c)&&(o.raw[h]=bind$1(o,c))}),each$6(r,function(c){o._addStorage(c)}),each$6(e,function(c){o._addPlugin(c)}),o}var util$4=util$6,Global$4=util$4.Global,localStorage_1={name:"localStorage",read:read$5,write:write$5,each:each$5,remove:remove$5,clearAll:clearAll$5};function localStorage(){return Global$4.localStorage}function read$5(r){return localStorage().getItem(r)}function write$5(r,e){return localStorage().setItem(r,e)}function each$5(r){for(var e=localStorage().length-1;e>=0;e--){var t=localStorage().key(e);r(read$5(t),t)}}function remove$5(r){return localStorage().removeItem(r)}function clearAll$5(){return localStorage().clear()}var util$3=util$6,Global$3=util$3.Global,oldFFGlobalStorage={name:"oldFF-globalStorage",read:read$4,write:write$4,each:each$4,remove:remove$4,clearAll:clearAll$4},globalStorage=Global$3.globalStorage;function read$4(r){return globalStorage[r]}function write$4(r,e){globalStorage[r]=e}function each$4(r){for(var e=globalStorage.length-1;e>=0;e--){var t=globalStorage.key(e);r(globalStorage[t],t)}}function remove$4(r){return globalStorage.removeItem(r)}function clearAll$4(){each$4(function(r,e){delete globalStorage[r]})}var util$2=util$6,Global$2=util$2.Global,oldIEUserDataStorage={name:"oldIE-userDataStorage",write:write$3,read:read$3,each:each$3,remove:remove$3,clearAll:clearAll$3},storageName="storejs",doc$1=Global$2.document,_withStorageEl=_makeIEStorageElFunction(),disable=(Global$2.navigator?Global$2.navigator.userAgent:"").match(/ (MSIE 8|MSIE 9|MSIE 10)\./);function write$3(r,e){if(!disable){var t=fixKey(r);_withStorageEl(function(n){n.setAttribute(t,e),n.save(storageName)})}}function read$3(r){if(!disable){var e=fixKey(r),t=null;return _withStorageEl(function(n){t=n.getAttribute(e)}),t}}function each$3(r){_withStorageEl(function(e){for(var t=e.XMLDocument.documentElement.attributes,n=t.length-1;n>=0;n--){var s=t[n];r(e.getAttribute(s.name),s.name)}})}function remove$3(r){var e=fixKey(r);_withStorageEl(function(t){t.removeAttribute(e),t.save(storageName)})}function clearAll$3(){_withStorageEl(function(r){var e=r.XMLDocument.documentElement.attributes;r.load(storageName);for(var t=e.length-1;t>=0;t--)r.removeAttribute(e[t].name);r.save(storageName)})}var forbiddenCharsRegex=new RegExp("[!\"#$%&'()*+,/\\\\:;<=>?@[\\]^`{|}~]","g");function fixKey(r){return r.replace(/^\d/,"___$&").replace(forbiddenCharsRegex,"___")}function _makeIEStorageElFunction(){if(!doc$1||!doc$1.documentElement||!doc$1.documentElement.addBehavior)return null;var r="script",e,t,n;try{t=new ActiveXObject("htmlfile"),t.open(),t.write("<"+r+">document.w=window</"+r+'><iframe src="/favicon.ico"></iframe>'),t.close(),e=t.w.frames[0].document,n=e.createElement("div")}catch{n=doc$1.createElement("div"),e=doc$1.body}return function(s){var i=[].slice.call(arguments,0);i.unshift(n),e.appendChild(n),n.addBehavior("#default#userData"),n.load(storageName),s.apply(this,i),e.removeChild(n)}}var util$1=util$6,Global$1=util$1.Global,trim=util$1.trim,cookieStorage={name:"cookieStorage",read:read$2,write:write$2,each:each$2,remove:remove$2,clearAll:clearAll$2},doc=Global$1.document;function read$2(r){if(!r||!_has(r))return null;var e="(?:^|.*;\\s*)"+escape(r).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=\\s*((?:[^;](?!;))*[^;]?).*";return unescape(doc.cookie.replace(new RegExp(e),"$1"))}function each$2(r){for(var e=doc.cookie.split(/; ?/g),t=e.length-1;t>=0;t--)if(!!trim(e[t])){var n=e[t].split("="),s=unescape(n[0]),i=unescape(n[1]);r(i,s)}}function write$2(r,e){!r||(doc.cookie=escape(r)+"="+escape(e)+"; expires=Tue, 19 Jan 2038 03:14:07 GMT; path=/")}function remove$2(r){!r||!_has(r)||(doc.cookie=escape(r)+"=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/")}function clearAll$2(){each$2(function(r,e){remove$2(e)})}function _has(r){return new RegExp("(?:^|;\\s*)"+escape(r).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=").test(doc.cookie)}var util=util$6,Global=util.Global,sessionStorage_1={name:"sessionStorage",read:read$1,write:write$1,each:each$1,remove:remove$1,clearAll:clearAll$1};function sessionStorage(){return Global.sessionStorage}function read$1(r){return sessionStorage().getItem(r)}function write$1(r,e){return sessionStorage().setItem(r,e)}function each$1(r){for(var e=sessionStorage().length-1;e>=0;e--){var t=sessionStorage().key(e);r(read$1(t),t)}}function remove$1(r){return sessionStorage().removeItem(r)}function clearAll$1(){return sessionStorage().clear()}var memoryStorage_1={name:"memoryStorage",read,write,each,remove,clearAll},memoryStorage={};function read(r){return memoryStorage[r]}function write(r,e){memoryStorage[r]=e}function each(r){for(var e in memoryStorage)memoryStorage.hasOwnProperty(e)&&r(memoryStorage[e],e)}function remove(r){delete memoryStorage[r]}function clearAll(r){memoryStorage={}}var all$2=[localStorage_1,oldFFGlobalStorage,oldIEUserDataStorage,cookieStorage,sessionStorage_1,memoryStorage_1];typeof JSON!="object"&&(JSON={});(function(){var rx_one=/^[\],:{}\s]*$/,rx_two=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,rx_three=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,rx_four=/(?:^|:|,)(?:\s*\[)+/g,rx_escapable=/[\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,rx_dangerous=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;function f(r){return r<10?"0"+r:r}function this_value(){return this.valueOf()}typeof Date.prototype.toJSON!="function"&&(Date.prototype.toJSON=function(){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null},Boolean.prototype.toJSON=this_value,Number.prototype.toJSON=this_value,String.prototype.toJSON=this_value);var gap,indent,meta,rep;function quote(r){return rx_escapable.lastIndex=0,rx_escapable.test(r)?'"'+r.replace(rx_escapable,function(e){var t=meta[e];return typeof t=="string"?t:"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+r+'"'}function str(r,e){var t,n,s,i,a=gap,o,c=e[r];switch(c&&typeof c=="object"&&typeof c.toJSON=="function"&&(c=c.toJSON(r)),typeof rep=="function"&&(c=rep.call(e,r,c)),typeof c){case"string":return quote(c);case"number":return isFinite(c)?String(c):"null";case"boolean":case"null":return String(c);case"object":if(!c)return"null";if(gap+=indent,o=[],Object.prototype.toString.apply(c)==="[object Array]"){for(i=c.length,t=0;t<i;t+=1)o[t]=str(t,c)||"null";return s=o.length===0?"[]":gap?`[
`+gap+o.join(`,
`+gap)+`
`+a+"]":"["+o.join(",")+"]",gap=a,s}if(rep&&typeof rep=="object")for(i=rep.length,t=0;t<i;t+=1)typeof rep[t]=="string"&&(n=rep[t],s=str(n,c),s&&o.push(quote(n)+(gap?": ":":")+s));else for(n in c)Object.prototype.hasOwnProperty.call(c,n)&&(s=str(n,c),s&&o.push(quote(n)+(gap?": ":":")+s));return s=o.length===0?"{}":gap?`{
`+gap+o.join(`,
`+gap)+`
`+a+"}":"{"+o.join(",")+"}",gap=a,s}}typeof JSON.stringify!="function"&&(meta={"\b":"\\b","	":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},JSON.stringify=function(r,e,t){var n;if(gap="",indent="",typeof t=="number")for(n=0;n<t;n+=1)indent+=" ";else typeof t=="string"&&(indent=t);if(rep=e,e&&typeof e!="function"&&(typeof e!="object"||typeof e.length!="number"))throw new Error("JSON.stringify");return str("",{"":r})}),typeof JSON.parse!="function"&&(JSON.parse=function(text,reviver){var j;function walk(r,e){var t,n,s=r[e];if(s&&typeof s=="object")for(t in s)Object.prototype.hasOwnProperty.call(s,t)&&(n=walk(s,t),n!==void 0?s[t]=n:delete s[t]);return reviver.call(r,e,s)}if(text=String(text),rx_dangerous.lastIndex=0,rx_dangerous.test(text)&&(text=text.replace(rx_dangerous,function(r){return"\\u"+("0000"+r.charCodeAt(0).toString(16)).slice(-4)})),rx_one.test(text.replace(rx_two,"@").replace(rx_three,"]").replace(rx_four,"")))return j=eval("("+text+")"),typeof reviver=="function"?walk({"":j},""):j;throw new SyntaxError("JSON.parse")})})();var json2=json2Plugin;function json2Plugin(){return{}}var engine=storeEngine,storages=all$2,plugins=[json2],store_legacy=engine.createStore(storages,plugins);const chains=selectableNetworks.filter(r=>r.genesisHash.length).reduce((r,{genesisHash:e,network:t})=>objectSpread(r,{[t]:e}),{});/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */var extendStatics=function(r,e){return extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&(t[s]=n[s])},extendStatics(r,e)};function __extends(r,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");extendStatics(r,e);function t(){this.constructor=r}r.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}function __awaiter(r,e,t,n){function s(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function o(y){try{h(n.next(y))}catch(x){a(x)}}function c(y){try{h(n.throw(y))}catch(x){a(x)}}function h(y){y.done?i(y.value):s(y.value).then(o,c)}h((n=n.apply(r,e||[])).next())})}function __generator(r,e){var t={label:0,sent:function(){if(i[0]&1)throw i[1];return i[1]},trys:[],ops:[]},n,s,i,a;return a={next:o(0),throw:o(1),return:o(2)},typeof Symbol=="function"&&(a[Symbol.iterator]=function(){return this}),a;function o(h){return function(y){return c([h,y])}}function c(h){if(n)throw new TypeError("Generator is already executing.");for(;t;)try{if(n=1,s&&(i=h[0]&2?s.return:h[0]?s.throw||((i=s.return)&&i.call(s),0):s.next)&&!(i=i.call(s,h[1])).done)return i;switch(s=0,i&&(h=[h[0]&2,i.value]),h[0]){case 0:case 1:i=h;break;case 4:return t.label++,{value:h[1],done:!1};case 5:t.label++,s=h[1],h=[0];continue;case 7:h=t.ops.pop(),t.trys.pop();continue;default:if(i=t.trys,!(i=i.length>0&&i[i.length-1])&&(h[0]===6||h[0]===2)){t=0;continue}if(h[0]===3&&(!i||h[1]>i[0]&&h[1]<i[3])){t.label=h[1];break}if(h[0]===6&&t.label<i[1]){t.label=i[1],i=h;break}if(i&&t.label<i[2]){t.label=i[2],t.ops.push(h);break}i[2]&&t.ops.pop(),t.trys.pop();continue}h=e.call(r,t)}catch(y){h=[6,y],s=0}finally{n=i=0}if(h[0]&5)throw h[1];return{value:h[0]?h[1]:void 0,done:!0}}}function __values(r){var e=typeof Symbol=="function"&&Symbol.iterator,t=e&&r[e],n=0;if(t)return t.call(r);if(r&&typeof r.length=="number")return{next:function(){return r&&n>=r.length&&(r=void 0),{value:r&&r[n++],done:!r}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function __read(r,e){var t=typeof Symbol=="function"&&r[Symbol.iterator];if(!t)return r;var n=t.call(r),s,i=[],a;try{for(;(e===void 0||e-- >0)&&!(s=n.next()).done;)i.push(s.value)}catch(o){a={error:o}}finally{try{s&&!s.done&&(t=n.return)&&t.call(n)}finally{if(a)throw a.error}}return i}function __spreadArray(r,e,t){if(t||arguments.length===2)for(var n=0,s=e.length,i;n<s;n++)(i||!(n in e))&&(i||(i=Array.prototype.slice.call(e,0,n)),i[n]=e[n]);return r.concat(i||Array.prototype.slice.call(e))}function __await(r){return this instanceof __await?(this.v=r,this):new __await(r)}function __asyncGenerator(r,e,t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n=t.apply(r,e||[]),s,i=[];return s={},a("next"),a("throw"),a("return"),s[Symbol.asyncIterator]=function(){return this},s;function a(E){n[E]&&(s[E]=function(V){return new Promise(function(F,q){i.push([E,V,F,q])>1||o(E,V)})})}function o(E,V){try{c(n[E](V))}catch(F){x(i[0][3],F)}}function c(E){E.value instanceof __await?Promise.resolve(E.value.v).then(h,y):x(i[0][2],E)}function h(E){o("next",E)}function y(E){o("throw",E)}function x(E,V){E(V),i.shift(),i.length&&o(i[0][0],i[0][1])}}function __asyncValues(r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=r[Symbol.asyncIterator],t;return e?e.call(r):(r=typeof __values=="function"?__values(r):r[Symbol.iterator](),t={},n("next"),n("throw"),n("return"),t[Symbol.asyncIterator]=function(){return this},t);function n(i){t[i]=r[i]&&function(a){return new Promise(function(o,c){a=r[i](a),s(o,c,a.done,a.value)})}}function s(i,a,o,c){Promise.resolve(c).then(function(h){i({value:h,done:o})},a)}}function isFunction(r){return typeof r=="function"}function createErrorClass(r){var e=function(n){Error.call(n),n.stack=new Error().stack},t=r(e);return t.prototype=Object.create(Error.prototype),t.prototype.constructor=t,t}var UnsubscriptionError=createErrorClass(function(r){return function(t){r(this),this.message=t?t.length+` errors occurred during unsubscription:
`+t.map(function(n,s){return s+1+") "+n.toString()}).join(`
  `):"",this.name="UnsubscriptionError",this.errors=t}});function arrRemove(r,e){if(r){var t=r.indexOf(e);0<=t&&r.splice(t,1)}}var Subscription=function(){function r(e){this.initialTeardown=e,this.closed=!1,this._parentage=null,this._finalizers=null}return r.prototype.unsubscribe=function(){var e,t,n,s,i;if(!this.closed){this.closed=!0;var a=this._parentage;if(a)if(this._parentage=null,Array.isArray(a))try{for(var o=__values(a),c=o.next();!c.done;c=o.next()){var h=c.value;h.remove(this)}}catch(q){e={error:q}}finally{try{c&&!c.done&&(t=o.return)&&t.call(o)}finally{if(e)throw e.error}}else a.remove(this);var y=this.initialTeardown;if(isFunction(y))try{y()}catch(q){i=q instanceof UnsubscriptionError?q.errors:[q]}var x=this._finalizers;if(x){this._finalizers=null;try{for(var E=__values(x),V=E.next();!V.done;V=E.next()){var F=V.value;try{execFinalizer(F)}catch(q){i=i!=null?i:[],q instanceof UnsubscriptionError?i=__spreadArray(__spreadArray([],__read(i)),__read(q.errors)):i.push(q)}}}catch(q){n={error:q}}finally{try{V&&!V.done&&(s=E.return)&&s.call(E)}finally{if(n)throw n.error}}}if(i)throw new UnsubscriptionError(i)}},r.prototype.add=function(e){var t;if(e&&e!==this)if(this.closed)execFinalizer(e);else{if(e instanceof r){if(e.closed||e._hasParent(this))return;e._addParent(this)}(this._finalizers=(t=this._finalizers)!==null&&t!==void 0?t:[]).push(e)}},r.prototype._hasParent=function(e){var t=this._parentage;return t===e||Array.isArray(t)&&t.includes(e)},r.prototype._addParent=function(e){var t=this._parentage;this._parentage=Array.isArray(t)?(t.push(e),t):t?[t,e]:e},r.prototype._removeParent=function(e){var t=this._parentage;t===e?this._parentage=null:Array.isArray(t)&&arrRemove(t,e)},r.prototype.remove=function(e){var t=this._finalizers;t&&arrRemove(t,e),e instanceof r&&e._removeParent(this)},r.EMPTY=function(){var e=new r;return e.closed=!0,e}(),r}(),EMPTY_SUBSCRIPTION=Subscription.EMPTY;function isSubscription(r){return r instanceof Subscription||r&&"closed"in r&&isFunction(r.remove)&&isFunction(r.add)&&isFunction(r.unsubscribe)}function execFinalizer(r){isFunction(r)?r():r.unsubscribe()}var config={onUnhandledError:null,onStoppedNotification:null,Promise:void 0,useDeprecatedSynchronousErrorHandling:!1,useDeprecatedNextContext:!1},timeoutProvider={setTimeout:function(r,e){for(var t=[],n=2;n<arguments.length;n++)t[n-2]=arguments[n];var s=timeoutProvider.delegate;return s!=null&&s.setTimeout?s.setTimeout.apply(s,__spreadArray([r,e],__read(t))):setTimeout.apply(void 0,__spreadArray([r,e],__read(t)))},clearTimeout:function(r){var e=timeoutProvider.delegate;return((e==null?void 0:e.clearTimeout)||clearTimeout)(r)},delegate:void 0};function reportUnhandledError(r){timeoutProvider.setTimeout(function(){throw r})}function noop(){}var COMPLETE_NOTIFICATION=function(){return createNotification("C",void 0,void 0)}();function errorNotification(r){return createNotification("E",void 0,r)}function nextNotification(r){return createNotification("N",r,void 0)}function createNotification(r,e,t){return{kind:r,value:e,error:t}}function errorContext(r){r()}var Subscriber=function(r){__extends(e,r);function e(t){var n=r.call(this)||this;return n.isStopped=!1,t?(n.destination=t,isSubscription(t)&&t.add(n)):n.destination=EMPTY_OBSERVER,n}return e.create=function(t,n,s){return new SafeSubscriber(t,n,s)},e.prototype.next=function(t){this.isStopped?handleStoppedNotification(nextNotification(t),this):this._next(t)},e.prototype.error=function(t){this.isStopped?handleStoppedNotification(errorNotification(t),this):(this.isStopped=!0,this._error(t))},e.prototype.complete=function(){this.isStopped?handleStoppedNotification(COMPLETE_NOTIFICATION,this):(this.isStopped=!0,this._complete())},e.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,r.prototype.unsubscribe.call(this),this.destination=null)},e.prototype._next=function(t){this.destination.next(t)},e.prototype._error=function(t){try{this.destination.error(t)}finally{this.unsubscribe()}},e.prototype._complete=function(){try{this.destination.complete()}finally{this.unsubscribe()}},e}(Subscription),_bind=Function.prototype.bind;function bind(r,e){return _bind.call(r,e)}var ConsumerObserver=function(){function r(e){this.partialObserver=e}return r.prototype.next=function(e){var t=this.partialObserver;if(t.next)try{t.next(e)}catch(n){handleUnhandledError(n)}},r.prototype.error=function(e){var t=this.partialObserver;if(t.error)try{t.error(e)}catch(n){handleUnhandledError(n)}else handleUnhandledError(e)},r.prototype.complete=function(){var e=this.partialObserver;if(e.complete)try{e.complete()}catch(t){handleUnhandledError(t)}},r}(),SafeSubscriber=function(r){__extends(e,r);function e(t,n,s){var i=r.call(this)||this,a;if(isFunction(t)||!t)a={next:t!=null?t:void 0,error:n!=null?n:void 0,complete:s!=null?s:void 0};else{var o;i&&config.useDeprecatedNextContext?(o=Object.create(t),o.unsubscribe=function(){return i.unsubscribe()},a={next:t.next&&bind(t.next,o),error:t.error&&bind(t.error,o),complete:t.complete&&bind(t.complete,o)}):a=t}return i.destination=new ConsumerObserver(a),i}return e}(Subscriber);function handleUnhandledError(r){reportUnhandledError(r)}function defaultErrorHandler(r){throw r}function handleStoppedNotification(r,e){var t=config.onStoppedNotification;t&&timeoutProvider.setTimeout(function(){return t(r,e)})}var EMPTY_OBSERVER={closed:!0,next:noop,error:defaultErrorHandler,complete:noop},observable=function(){return typeof Symbol=="function"&&Symbol.observable||"@@observable"}();function identity$2(r){return r}function pipeFromArray(r){return r.length===0?identity$2:r.length===1?r[0]:function(t){return r.reduce(function(n,s){return s(n)},t)}}var Observable=function(){function r(e){e&&(this._subscribe=e)}return r.prototype.lift=function(e){var t=new r;return t.source=this,t.operator=e,t},r.prototype.subscribe=function(e,t,n){var s=this,i=isSubscriber(e)?e:new SafeSubscriber(e,t,n);return errorContext(function(){var a=s,o=a.operator,c=a.source;i.add(o?o.call(i,c):c?s._subscribe(i):s._trySubscribe(i))}),i},r.prototype._trySubscribe=function(e){try{return this._subscribe(e)}catch(t){e.error(t)}},r.prototype.forEach=function(e,t){var n=this;return t=getPromiseCtor(t),new t(function(s,i){var a=new SafeSubscriber({next:function(o){try{e(o)}catch(c){i(c),a.unsubscribe()}},error:i,complete:s});n.subscribe(a)})},r.prototype._subscribe=function(e){var t;return(t=this.source)===null||t===void 0?void 0:t.subscribe(e)},r.prototype[observable]=function(){return this},r.prototype.pipe=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return pipeFromArray(e)(this)},r.prototype.toPromise=function(e){var t=this;return e=getPromiseCtor(e),new e(function(n,s){var i;t.subscribe(function(a){return i=a},function(a){return s(a)},function(){return n(i)})})},r.create=function(e){return new r(e)},r}();function getPromiseCtor(r){var e;return(e=r!=null?r:config.Promise)!==null&&e!==void 0?e:Promise}function isObserver(r){return r&&isFunction(r.next)&&isFunction(r.error)&&isFunction(r.complete)}function isSubscriber(r){return r&&r instanceof Subscriber||isObserver(r)&&isSubscription(r)}function hasLift(r){return isFunction(r==null?void 0:r.lift)}function operate(r){return function(e){if(hasLift(e))return e.lift(function(t){try{return r(t,this)}catch(n){this.error(n)}});throw new TypeError("Unable to lift unknown Observable type")}}function createOperatorSubscriber(r,e,t,n,s){return new OperatorSubscriber(r,e,t,n,s)}var OperatorSubscriber=function(r){__extends(e,r);function e(t,n,s,i,a,o){var c=r.call(this,t)||this;return c.onFinalize=a,c.shouldUnsubscribe=o,c._next=n?function(h){try{n(h)}catch(y){t.error(y)}}:r.prototype._next,c._error=i?function(h){try{i(h)}catch(y){t.error(y)}finally{this.unsubscribe()}}:r.prototype._error,c._complete=s?function(){try{s()}catch(h){t.error(h)}finally{this.unsubscribe()}}:r.prototype._complete,c}return e.prototype.unsubscribe=function(){var t;if(!this.shouldUnsubscribe||this.shouldUnsubscribe()){var n=this.closed;r.prototype.unsubscribe.call(this),!n&&((t=this.onFinalize)===null||t===void 0||t.call(this))}},e}(Subscriber);function refCount(){return operate(function(r,e){var t=null;r._refCount++;var n=createOperatorSubscriber(e,void 0,void 0,void 0,function(){if(!r||r._refCount<=0||0<--r._refCount){t=null;return}var s=r._connection,i=t;t=null,s&&(!i||s===i)&&s.unsubscribe(),e.unsubscribe()});r.subscribe(n),n.closed||(t=r.connect())})}var ConnectableObservable=function(r){__extends(e,r);function e(t,n){var s=r.call(this)||this;return s.source=t,s.subjectFactory=n,s._subject=null,s._refCount=0,s._connection=null,hasLift(t)&&(s.lift=t.lift),s}return e.prototype._subscribe=function(t){return this.getSubject().subscribe(t)},e.prototype.getSubject=function(){var t=this._subject;return(!t||t.isStopped)&&(this._subject=this.subjectFactory()),this._subject},e.prototype._teardown=function(){this._refCount=0;var t=this._connection;this._subject=this._connection=null,t==null||t.unsubscribe()},e.prototype.connect=function(){var t=this,n=this._connection;if(!n){n=this._connection=new Subscription;var s=this.getSubject();n.add(this.source.subscribe(createOperatorSubscriber(s,void 0,function(){t._teardown(),s.complete()},function(i){t._teardown(),s.error(i)},function(){return t._teardown()}))),n.closed&&(this._connection=null,n=Subscription.EMPTY)}return n},e.prototype.refCount=function(){return refCount()(this)},e}(Observable),ObjectUnsubscribedError=createErrorClass(function(r){return function(){r(this),this.name="ObjectUnsubscribedError",this.message="object unsubscribed"}}),Subject=function(r){__extends(e,r);function e(){var t=r.call(this)||this;return t.closed=!1,t.currentObservers=null,t.observers=[],t.isStopped=!1,t.hasError=!1,t.thrownError=null,t}return e.prototype.lift=function(t){var n=new AnonymousSubject(this,this);return n.operator=t,n},e.prototype._throwIfClosed=function(){if(this.closed)throw new ObjectUnsubscribedError},e.prototype.next=function(t){var n=this;errorContext(function(){var s,i;if(n._throwIfClosed(),!n.isStopped){n.currentObservers||(n.currentObservers=Array.from(n.observers));try{for(var a=__values(n.currentObservers),o=a.next();!o.done;o=a.next()){var c=o.value;c.next(t)}}catch(h){s={error:h}}finally{try{o&&!o.done&&(i=a.return)&&i.call(a)}finally{if(s)throw s.error}}}})},e.prototype.error=function(t){var n=this;errorContext(function(){if(n._throwIfClosed(),!n.isStopped){n.hasError=n.isStopped=!0,n.thrownError=t;for(var s=n.observers;s.length;)s.shift().error(t)}})},e.prototype.complete=function(){var t=this;errorContext(function(){if(t._throwIfClosed(),!t.isStopped){t.isStopped=!0;for(var n=t.observers;n.length;)n.shift().complete()}})},e.prototype.unsubscribe=function(){this.isStopped=this.closed=!0,this.observers=this.currentObservers=null},Object.defineProperty(e.prototype,"observed",{get:function(){var t;return((t=this.observers)===null||t===void 0?void 0:t.length)>0},enumerable:!1,configurable:!0}),e.prototype._trySubscribe=function(t){return this._throwIfClosed(),r.prototype._trySubscribe.call(this,t)},e.prototype._subscribe=function(t){return this._throwIfClosed(),this._checkFinalizedStatuses(t),this._innerSubscribe(t)},e.prototype._innerSubscribe=function(t){var n=this,s=this,i=s.hasError,a=s.isStopped,o=s.observers;return i||a?EMPTY_SUBSCRIPTION:(this.currentObservers=null,o.push(t),new Subscription(function(){n.currentObservers=null,arrRemove(o,t)}))},e.prototype._checkFinalizedStatuses=function(t){var n=this,s=n.hasError,i=n.thrownError,a=n.isStopped;s?t.error(i):a&&t.complete()},e.prototype.asObservable=function(){var t=new Observable;return t.source=this,t},e.create=function(t,n){return new AnonymousSubject(t,n)},e}(Observable),AnonymousSubject=function(r){__extends(e,r);function e(t,n){var s=r.call(this)||this;return s.destination=t,s.source=n,s}return e.prototype.next=function(t){var n,s;(s=(n=this.destination)===null||n===void 0?void 0:n.next)===null||s===void 0||s.call(n,t)},e.prototype.error=function(t){var n,s;(s=(n=this.destination)===null||n===void 0?void 0:n.error)===null||s===void 0||s.call(n,t)},e.prototype.complete=function(){var t,n;(n=(t=this.destination)===null||t===void 0?void 0:t.complete)===null||n===void 0||n.call(t)},e.prototype._subscribe=function(t){var n,s;return(s=(n=this.source)===null||n===void 0?void 0:n.subscribe(t))!==null&&s!==void 0?s:EMPTY_SUBSCRIPTION},e}(Subject),BehaviorSubject=function(r){__extends(e,r);function e(t){var n=r.call(this)||this;return n._value=t,n}return Object.defineProperty(e.prototype,"value",{get:function(){return this.getValue()},enumerable:!1,configurable:!0}),e.prototype._subscribe=function(t){var n=r.prototype._subscribe.call(this,t);return!n.closed&&t.next(this._value),n},e.prototype.getValue=function(){var t=this,n=t.hasError,s=t.thrownError,i=t._value;if(n)throw s;return this._throwIfClosed(),i},e.prototype.next=function(t){r.prototype.next.call(this,this._value=t)},e}(Subject),dateTimestampProvider={now:function(){return(dateTimestampProvider.delegate||Date).now()},delegate:void 0},ReplaySubject=function(r){__extends(e,r);function e(t,n,s){t===void 0&&(t=1/0),n===void 0&&(n=1/0),s===void 0&&(s=dateTimestampProvider);var i=r.call(this)||this;return i._bufferSize=t,i._windowTime=n,i._timestampProvider=s,i._buffer=[],i._infiniteTimeWindow=!0,i._infiniteTimeWindow=n===1/0,i._bufferSize=Math.max(1,t),i._windowTime=Math.max(1,n),i}return e.prototype.next=function(t){var n=this,s=n.isStopped,i=n._buffer,a=n._infiniteTimeWindow,o=n._timestampProvider,c=n._windowTime;s||(i.push(t),!a&&i.push(o.now()+c)),this._trimBuffer(),r.prototype.next.call(this,t)},e.prototype._subscribe=function(t){this._throwIfClosed(),this._trimBuffer();for(var n=this._innerSubscribe(t),s=this,i=s._infiniteTimeWindow,a=s._buffer,o=a.slice(),c=0;c<o.length&&!t.closed;c+=i?1:2)t.next(o[c]);return this._checkFinalizedStatuses(t),n},e.prototype._trimBuffer=function(){var t=this,n=t._bufferSize,s=t._timestampProvider,i=t._buffer,a=t._infiniteTimeWindow,o=(a?1:2)*n;if(n<1/0&&o<i.length&&i.splice(0,i.length-o),!a){for(var c=s.now(),h=0,y=1;y<i.length&&i[y]<=c;y+=2)h=y;h&&i.splice(0,h+1)}},e}(Subject),Action=function(r){__extends(e,r);function e(t,n){return r.call(this)||this}return e.prototype.schedule=function(t,n){return this},e}(Subscription),intervalProvider={setInterval:function(r,e){for(var t=[],n=2;n<arguments.length;n++)t[n-2]=arguments[n];var s=intervalProvider.delegate;return s!=null&&s.setInterval?s.setInterval.apply(s,__spreadArray([r,e],__read(t))):setInterval.apply(void 0,__spreadArray([r,e],__read(t)))},clearInterval:function(r){var e=intervalProvider.delegate;return((e==null?void 0:e.clearInterval)||clearInterval)(r)},delegate:void 0},AsyncAction=function(r){__extends(e,r);function e(t,n){var s=r.call(this,t,n)||this;return s.scheduler=t,s.work=n,s.pending=!1,s}return e.prototype.schedule=function(t,n){if(n===void 0&&(n=0),this.closed)return this;this.state=t;var s=this.id,i=this.scheduler;return s!=null&&(this.id=this.recycleAsyncId(i,s,n)),this.pending=!0,this.delay=n,this.id=this.id||this.requestAsyncId(i,this.id,n),this},e.prototype.requestAsyncId=function(t,n,s){return s===void 0&&(s=0),intervalProvider.setInterval(t.flush.bind(t,this),s)},e.prototype.recycleAsyncId=function(t,n,s){if(s===void 0&&(s=0),s!=null&&this.delay===s&&this.pending===!1)return n;intervalProvider.clearInterval(n)},e.prototype.execute=function(t,n){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;var s=this._execute(t,n);if(s)return s;this.pending===!1&&this.id!=null&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))},e.prototype._execute=function(t,n){var s=!1,i;try{this.work(t)}catch(a){s=!0,i=a||new Error("Scheduled action threw falsy error")}if(s)return this.unsubscribe(),i},e.prototype.unsubscribe=function(){if(!this.closed){var t=this,n=t.id,s=t.scheduler,i=s.actions;this.work=this.state=this.scheduler=null,this.pending=!1,arrRemove(i,this),n!=null&&(this.id=this.recycleAsyncId(s,n,null)),this.delay=null,r.prototype.unsubscribe.call(this)}},e}(Action),nextHandle=1,resolved,activeHandles={};function findAndClearHandle(r){return r in activeHandles?(delete activeHandles[r],!0):!1}var Immediate={setImmediate:function(r){var e=nextHandle++;return activeHandles[e]=!0,resolved||(resolved=Promise.resolve()),resolved.then(function(){return findAndClearHandle(e)&&r()}),e},clearImmediate:function(r){findAndClearHandle(r)}},setImmediate=Immediate.setImmediate,clearImmediate=Immediate.clearImmediate,immediateProvider={setImmediate:function(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];var t=immediateProvider.delegate;return((t==null?void 0:t.setImmediate)||setImmediate).apply(void 0,__spreadArray([],__read(r)))},clearImmediate:function(r){var e=immediateProvider.delegate;return((e==null?void 0:e.clearImmediate)||clearImmediate)(r)},delegate:void 0},AsapAction=function(r){__extends(e,r);function e(t,n){var s=r.call(this,t,n)||this;return s.scheduler=t,s.work=n,s}return e.prototype.requestAsyncId=function(t,n,s){return s===void 0&&(s=0),s!==null&&s>0?r.prototype.requestAsyncId.call(this,t,n,s):(t.actions.push(this),t._scheduled||(t._scheduled=immediateProvider.setImmediate(t.flush.bind(t,void 0))))},e.prototype.recycleAsyncId=function(t,n,s){if(s===void 0&&(s=0),s!=null&&s>0||s==null&&this.delay>0)return r.prototype.recycleAsyncId.call(this,t,n,s);t.actions.some(function(i){return i.id===n})||(immediateProvider.clearImmediate(n),t._scheduled=void 0)},e}(AsyncAction),Scheduler=function(){function r(e,t){t===void 0&&(t=r.now),this.schedulerActionCtor=e,this.now=t}return r.prototype.schedule=function(e,t,n){return t===void 0&&(t=0),new this.schedulerActionCtor(this,e).schedule(n,t)},r.now=dateTimestampProvider.now,r}(),AsyncScheduler=function(r){__extends(e,r);function e(t,n){n===void 0&&(n=Scheduler.now);var s=r.call(this,t,n)||this;return s.actions=[],s._active=!1,s._scheduled=void 0,s}return e.prototype.flush=function(t){var n=this.actions;if(this._active){n.push(t);return}var s;this._active=!0;do if(s=t.execute(t.state,t.delay))break;while(t=n.shift());if(this._active=!1,s){for(;t=n.shift();)t.unsubscribe();throw s}},e}(Scheduler),AsapScheduler=function(r){__extends(e,r);function e(){return r!==null&&r.apply(this,arguments)||this}return e.prototype.flush=function(t){this._active=!0;var n=this._scheduled;this._scheduled=void 0;var s=this.actions,i;t=t||s.shift();do if(i=t.execute(t.state,t.delay))break;while((t=s[0])&&t.id===n&&s.shift());if(this._active=!1,i){for(;(t=s[0])&&t.id===n&&s.shift();)t.unsubscribe();throw i}},e}(AsyncScheduler),asapScheduler=new AsapScheduler(AsapAction),EMPTY=new Observable(function(r){return r.complete()});function isScheduler(r){return r&&isFunction(r.schedule)}function last(r){return r[r.length-1]}function popResultSelector(r){return isFunction(last(r))?r.pop():void 0}function popScheduler(r){return isScheduler(last(r))?r.pop():void 0}var isArrayLike=function(r){return r&&typeof r.length=="number"&&typeof r!="function"};function isPromise(r){return isFunction(r==null?void 0:r.then)}function isInteropObservable(r){return isFunction(r[observable])}function isAsyncIterable(r){return Symbol.asyncIterator&&isFunction(r==null?void 0:r[Symbol.asyncIterator])}function createInvalidObservableTypeError(r){return new TypeError("You provided "+(r!==null&&typeof r=="object"?"an invalid object":"'"+r+"'")+" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.")}function getSymbolIterator(){return typeof Symbol!="function"||!Symbol.iterator?"@@iterator":Symbol.iterator}var iterator=getSymbolIterator();function isIterable(r){return isFunction(r==null?void 0:r[iterator])}function readableStreamLikeToAsyncGenerator(r){return __asyncGenerator(this,arguments,function(){var t,n,s,i;return __generator(this,function(a){switch(a.label){case 0:t=r.getReader(),a.label=1;case 1:a.trys.push([1,,9,10]),a.label=2;case 2:return[4,__await(t.read())];case 3:return n=a.sent(),s=n.value,i=n.done,i?[4,__await(void 0)]:[3,5];case 4:return[2,a.sent()];case 5:return[4,__await(s)];case 6:return[4,a.sent()];case 7:return a.sent(),[3,2];case 8:return[3,10];case 9:return t.releaseLock(),[7];case 10:return[2]}})})}function isReadableStreamLike(r){return isFunction(r==null?void 0:r.getReader)}function innerFrom(r){if(r instanceof Observable)return r;if(r!=null){if(isInteropObservable(r))return fromInteropObservable(r);if(isArrayLike(r))return fromArrayLike(r);if(isPromise(r))return fromPromise(r);if(isAsyncIterable(r))return fromAsyncIterable(r);if(isIterable(r))return fromIterable(r);if(isReadableStreamLike(r))return fromReadableStreamLike(r)}throw createInvalidObservableTypeError(r)}function fromInteropObservable(r){return new Observable(function(e){var t=r[observable]();if(isFunction(t.subscribe))return t.subscribe(e);throw new TypeError("Provided object does not correctly implement Symbol.observable")})}function fromArrayLike(r){return new Observable(function(e){for(var t=0;t<r.length&&!e.closed;t++)e.next(r[t]);e.complete()})}function fromPromise(r){return new Observable(function(e){r.then(function(t){e.closed||(e.next(t),e.complete())},function(t){return e.error(t)}).then(null,reportUnhandledError)})}function fromIterable(r){return new Observable(function(e){var t,n;try{for(var s=__values(r),i=s.next();!i.done;i=s.next()){var a=i.value;if(e.next(a),e.closed)return}}catch(o){t={error:o}}finally{try{i&&!i.done&&(n=s.return)&&n.call(s)}finally{if(t)throw t.error}}e.complete()})}function fromAsyncIterable(r){return new Observable(function(e){process$1(r,e).catch(function(t){return e.error(t)})})}function fromReadableStreamLike(r){return fromAsyncIterable(readableStreamLikeToAsyncGenerator(r))}function process$1(r,e){var t,n,s,i;return __awaiter(this,void 0,void 0,function(){var a,o;return __generator(this,function(c){switch(c.label){case 0:c.trys.push([0,5,6,11]),t=__asyncValues(r),c.label=1;case 1:return[4,t.next()];case 2:if(n=c.sent(),!!n.done)return[3,4];if(a=n.value,e.next(a),e.closed)return[2];c.label=3;case 3:return[3,1];case 4:return[3,11];case 5:return o=c.sent(),s={error:o},[3,11];case 6:return c.trys.push([6,,9,10]),n&&!n.done&&(i=t.return)?[4,i.call(t)]:[3,8];case 7:c.sent(),c.label=8;case 8:return[3,10];case 9:if(s)throw s.error;return[7];case 10:return[7];case 11:return e.complete(),[2]}})})}function executeSchedule(r,e,t,n,s){n===void 0&&(n=0),s===void 0&&(s=!1);var i=e.schedule(function(){t(),s?r.add(this.schedule(null,n)):this.unsubscribe()},n);if(r.add(i),!s)return i}function observeOn(r,e){return e===void 0&&(e=0),operate(function(t,n){t.subscribe(createOperatorSubscriber(n,function(s){return executeSchedule(n,r,function(){return n.next(s)},e)},function(){return executeSchedule(n,r,function(){return n.complete()},e)},function(s){return executeSchedule(n,r,function(){return n.error(s)},e)}))})}function subscribeOn(r,e){return e===void 0&&(e=0),operate(function(t,n){n.add(r.schedule(function(){return t.subscribe(n)},e))})}function scheduleObservable(r,e){return innerFrom(r).pipe(subscribeOn(e),observeOn(e))}function schedulePromise(r,e){return innerFrom(r).pipe(subscribeOn(e),observeOn(e))}function scheduleArray(r,e){return new Observable(function(t){var n=0;return e.schedule(function(){n===r.length?t.complete():(t.next(r[n++]),t.closed||this.schedule())})})}function scheduleIterable(r,e){return new Observable(function(t){var n;return executeSchedule(t,e,function(){n=r[iterator](),executeSchedule(t,e,function(){var s,i,a;try{s=n.next(),i=s.value,a=s.done}catch(o){t.error(o);return}a?t.complete():t.next(i)},0,!0)}),function(){return isFunction(n==null?void 0:n.return)&&n.return()}})}function scheduleAsyncIterable(r,e){if(!r)throw new Error("Iterable cannot be null");return new Observable(function(t){executeSchedule(t,e,function(){var n=r[Symbol.asyncIterator]();executeSchedule(t,e,function(){n.next().then(function(s){s.done?t.complete():t.next(s.value)})},0,!0)})})}function scheduleReadableStreamLike(r,e){return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(r),e)}function scheduled(r,e){if(r!=null){if(isInteropObservable(r))return scheduleObservable(r,e);if(isArrayLike(r))return scheduleArray(r,e);if(isPromise(r))return schedulePromise(r,e);if(isAsyncIterable(r))return scheduleAsyncIterable(r,e);if(isIterable(r))return scheduleIterable(r,e);if(isReadableStreamLike(r))return scheduleReadableStreamLike(r,e)}throw createInvalidObservableTypeError(r)}function from(r,e){return e?scheduled(r,e):innerFrom(r)}function of(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];var t=popScheduler(r);return from(r,t)}var EmptyError=createErrorClass(function(r){return function(){r(this),this.name="EmptyError",this.message="no elements in sequence"}});function firstValueFrom(r,e){var t=typeof e=="object";return new Promise(function(n,s){var i=new SafeSubscriber({next:function(a){n(a),i.unsubscribe()},error:s,complete:function(){t?n(e.defaultValue):s(new EmptyError)}});r.subscribe(i)})}function map(r,e){return operate(function(t,n){var s=0;t.subscribe(createOperatorSubscriber(n,function(i){n.next(r.call(e,i,s++))}))})}var isArray$1=Array.isArray;function callOrApply(r,e){return isArray$1(e)?r.apply(void 0,__spreadArray([],__read(e))):r(e)}function mapOneOrManyArgs(r){return map(function(e){return callOrApply(r,e)})}var isArray=Array.isArray,getPrototypeOf=Object.getPrototypeOf,objectProto=Object.prototype,getKeys=Object.keys;function argsArgArrayOrObject(r){if(r.length===1){var e=r[0];if(isArray(e))return{args:e,keys:null};if(isPOJO(e)){var t=getKeys(e);return{args:t.map(function(n){return e[n]}),keys:t}}}return{args:r,keys:null}}function isPOJO(r){return r&&typeof r=="object"&&getPrototypeOf(r)===objectProto}function createObject(r,e){return r.reduce(function(t,n,s){return t[n]=e[s],t},{})}function combineLatest(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];var t=popScheduler(r),n=popResultSelector(r),s=argsArgArrayOrObject(r),i=s.args,a=s.keys;if(i.length===0)return from([],t);var o=new Observable(combineLatestInit(i,t,a?function(c){return createObject(a,c)}:identity$2));return n?o.pipe(mapOneOrManyArgs(n)):o}function combineLatestInit(r,e,t){return t===void 0&&(t=identity$2),function(n){maybeSchedule(e,function(){for(var s=r.length,i=new Array(s),a=s,o=s,c=function(y){maybeSchedule(e,function(){var x=from(r[y],e),E=!1;x.subscribe(createOperatorSubscriber(n,function(V){i[y]=V,E||(E=!0,o--),o||n.next(t(i.slice()))},function(){--a||n.complete()}))},n)},h=0;h<s;h++)c(h)},n)}}function maybeSchedule(r,e,t){r?executeSchedule(t,r,e):e()}function mergeInternals(r,e,t,n,s,i,a,o){var c=[],h=0,y=0,x=!1,E=function(){x&&!c.length&&!h&&e.complete()},V=function(q){return h<n?F(q):c.push(q)},F=function(q){i&&e.next(q),h++;var X=!1;innerFrom(t(q,y++)).subscribe(createOperatorSubscriber(e,function(Y){s==null||s(Y),i?V(Y):e.next(Y)},function(){X=!0},void 0,function(){if(X)try{h--;for(var Y=function(){var oe=c.shift();a?executeSchedule(e,a,function(){return F(oe)}):F(oe)};c.length&&h<n;)Y();E()}catch(oe){e.error(oe)}}))};return r.subscribe(createOperatorSubscriber(e,V,function(){x=!0,E()})),function(){o==null||o()}}function mergeMap(r,e,t){return t===void 0&&(t=1/0),isFunction(e)?mergeMap(function(n,s){return map(function(i,a){return e(n,i,s,a)})(innerFrom(r(n,s)))},t):(typeof e=="number"&&(t=e),operate(function(n,s){return mergeInternals(n,s,r,t)}))}function mergeAll(r){return r===void 0&&(r=1/0),mergeMap(identity$2,r)}function concatAll(){return mergeAll(1)}function concat(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];return concatAll()(from(r,popScheduler(r)))}function filter(r,e){return operate(function(t,n){var s=0;t.subscribe(createOperatorSubscriber(n,function(i){return r.call(e,i,s++)&&n.next(i)}))})}function catchError(r){return operate(function(e,t){var n=null,s=!1,i;n=e.subscribe(createOperatorSubscriber(t,void 0,void 0,function(a){i=innerFrom(r(a,catchError(r)(e))),n?(n.unsubscribe(),n=null,i.subscribe(t)):s=!0})),s&&(n.unsubscribe(),n=null,i.subscribe(t))})}function scanInternals(r,e,t,n,s){return function(i,a){var o=t,c=e,h=0;i.subscribe(createOperatorSubscriber(a,function(y){var x=h++;c=o?r(c,y,x):(o=!0,y),n&&a.next(c)},s&&function(){o&&a.next(c),a.complete()}))}}function reduce(r,e){return operate(scanInternals(r,e,arguments.length>=2,!1,!0))}var arrReducer=function(r,e){return r.push(e),r};function toArray(){return operate(function(r,e){reduce(arrReducer,[])(r).subscribe(e)})}function fromSubscribable(r){return new Observable(function(e){return r.subscribe(e)})}var DEFAULT_CONFIG={connector:function(){return new Subject}};function connect(r,e){e===void 0&&(e=DEFAULT_CONFIG);var t=e.connector;return operate(function(n,s){var i=t();from(r(fromSubscribable(i))).subscribe(s),s.add(n.subscribe(i))})}function defaultIfEmpty(r){return operate(function(e,t){var n=!1;e.subscribe(createOperatorSubscriber(t,function(s){n=!0,t.next(s)},function(){n||t.next(r),t.complete()}))})}function take(r){return r<=0?function(){return EMPTY}:operate(function(e,t){var n=0;e.subscribe(createOperatorSubscriber(t,function(s){++n<=r&&(t.next(s),r<=n&&t.complete())}))})}function mapTo(r){return map(function(){return r})}function distinctUntilChanged(r,e){return e===void 0&&(e=identity$2),r=r!=null?r:defaultCompare,operate(function(t,n){var s,i=!0;t.subscribe(createOperatorSubscriber(n,function(a){var o=e(a);(i||!r(s,o))&&(i=!1,s=o,n.next(a))}))})}function defaultCompare(r,e){return r===e}function throwIfEmpty(r){return r===void 0&&(r=defaultErrorFactory),operate(function(e,t){var n=!1;e.subscribe(createOperatorSubscriber(t,function(s){n=!0,t.next(s)},function(){return n?t.complete():t.error(r())}))})}function defaultErrorFactory(){return new EmptyError}function first(r,e){var t=arguments.length>=2;return function(n){return n.pipe(r?filter(function(s,i){return r(s,i,n)}):identity$2,take(1),t?defaultIfEmpty(e):throwIfEmpty(function(){return new EmptyError}))}}function multicast(r,e){var t=isFunction(r)?r:function(){return r};return isFunction(e)?connect(e,{connector:t}):function(n){return new ConnectableObservable(n,t)}}function publishReplay(r,e,t,n){t&&!isFunction(t)&&(n=t);var s=isFunction(t)?t:void 0;return function(i){return multicast(new ReplaySubject(r,e,n),s)(i)}}function startWith(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];var t=popScheduler(r);return operate(function(n,s){(t?concat(r,n,t):concat(r,n)).subscribe(s)})}function switchMap(r,e){return operate(function(t,n){var s=null,i=0,a=!1,o=function(){return a&&!s&&n.complete()};t.subscribe(createOperatorSubscriber(n,function(c){s==null||s.unsubscribe();var h=0,y=i++;innerFrom(r(c,y)).subscribe(s=createOperatorSubscriber(n,function(x){return n.next(e?e(c,x,y,h++):x)},function(){s=null,o()}))},function(){a=!0,o()}))})}function tap(r,e,t){var n=isFunction(r)||e||t?{next:r,error:e,complete:t}:r;return n?operate(function(s,i){var a;(a=n.subscribe)===null||a===void 0||a.call(n);var o=!0;s.subscribe(createOperatorSubscriber(i,function(c){var h;(h=n.next)===null||h===void 0||h.call(n,c),i.next(c)},function(){var c;o=!1,(c=n.complete)===null||c===void 0||c.call(n),i.complete()},function(c){var h;o=!1,(h=n.error)===null||h===void 0||h.call(n,c),i.error(c)},function(){var c,h;o&&((c=n.unsubscribe)===null||c===void 0||c.call(n)),(h=n.finalize)===null||h===void 0||h.call(n)}))}):identity$2}const subject=new BehaviorSubject(!1),env={isDevelopment:()=>subject.getValue(),set:r=>{subject.next(r)},subject},ACCOUNT_PREFIX="account:",ADDRESS_PREFIX="address:",CONTRACT_PREFIX="contract:";function toHex(r){return u8aToHex(decodeAddress(r,!0))}const accountKey=r=>`${ACCOUNT_PREFIX}${toHex(r)}`,addressKey=r=>`${ADDRESS_PREFIX}${toHex(r)}`,contractKey=r=>`${CONTRACT_PREFIX}${toHex(r)}`,accountRegex=new RegExp(`^${ACCOUNT_PREFIX}0x[0-9a-f]*`,""),addressRegex=new RegExp(`^${ADDRESS_PREFIX}0x[0-9a-f]*`,""),contractRegex=new RegExp(`^${CONTRACT_PREFIX}0x[0-9a-f]*`,"");function createOptionItem(r,e){const t=isUndefined(e)?r.length>15?`${r.slice(0,6)}\u2026${r.slice(-6)}`:r:e;return{key:r,name:t,value:r}}function callNext(r,e,t){const n=env.isDevelopment(),s={};Object.keys(r).forEach(i=>{const{json:{meta:{isTesting:a=!1}={}}={}}=r[i];(!t||n||a!==!0)&&(s[i]=r[i])}),e.next(s)}function genericSubject(r,e=!1){let t={};const n=new BehaviorSubject({}),s=()=>callNext(t,n,e);return env.subject.subscribe(s),{add:(i,a,o,c)=>(t=objectCopy(t),t[a]={json:objectSpread({},o,{address:a}),option:createOptionItem(a,o.meta.name),type:c},!o.meta.isInjected&&(!o.meta.isTesting||env.isDevelopment())&&i.set(r(a),o),s(),t[a]),remove:(i,a)=>{t=objectCopy(t),delete t[a],i.remove(r(a)),s()},subject:n}}const accounts$2=genericSubject(accountKey,!0),addresses=genericSubject(addressKey),contracts$1=genericSubject(contractKey);class BrowserStore{all(e){store_legacy.each((t,n)=>{e(n,t)})}get(e,t){t(store_legacy.get(e))}remove(e,t){store_legacy.remove(e),t&&t()}set(e,t,n){store_legacy.set(e,t),n&&n()}}var Vn,On,Hn,er;class Base$1{constructor(){G(this,Vn,void 0);G(this,On,void 0);G(this,Hn,void 0);G(this,er,void 0);je(this,"_genesisHashAdd",[]);je(this,"decodeAddress",(e,t,n)=>this.keyring.decodeAddress(e,t,n));je(this,"encodeAddress",(e,t)=>this.keyring.encodeAddress(e,t));te(this,Vn,accounts$2),te(this,On,addresses),te(this,Hn,contracts$1),this._store=new BrowserStore}get accounts(){return T(this,Vn)}get addresses(){return T(this,On)}get contracts(){return T(this,Hn)}get keyring(){if(T(this,er))return T(this,er);throw new Error("Keyring should be initialised via 'loadAll' before use")}get genesisHash(){return this._genesisHash}get genesisHashes(){return this._genesisHash?[this._genesisHash,...this._genesisHashAdd]:[...this._genesisHashAdd]}getPair(e){return this.keyring.getPair(e)}getPairs(){return this.keyring.getPairs().filter(e=>env.isDevelopment()||e.meta.isTesting!==!0)}isAvailable(e){const t=this.accounts.subject.getValue(),n=this.addresses.subject.getValue(),s=this.contracts.subject.getValue(),i=isString(e)?e:this.encodeAddress(e);return!t[i]&&!n[i]&&!s[i]}isPassValid(e){return e.length>0}setSS58Format(e){T(this,er)&&isNumber(e)&&T(this,er).setSS58Format(e)}setDevMode(e){env.set(e)}initKeyring(e){const t=createTestKeyring(e,!0);isBoolean(e.isDevelopment)&&this.setDevMode(e.isDevelopment),te(this,er,t),this._genesisHash=e.genesisHash&&(isString(e.genesisHash)?e.genesisHash.toString():e.genesisHash.toHex()),this._genesisHashAdd=e.genesisHashAdd||[],this._store=e.store||this._store,this.addAccountPairs()}addAccountPairs(){this.keyring.getPairs().forEach(({address:e,meta:t})=>{this.accounts.add(this._store,e,{address:e,meta:t})})}addTimestamp(e){e.meta.whenCreated||e.setMeta({whenCreated:Date.now()})}}Vn=new WeakMap,On=new WeakMap,Hn=new WeakMap,er=new WeakMap;const obervableAll=combineLatest([accounts$2.subject,addresses.subject,contracts$1.subject]).pipe(map(([r,e,t])=>({accounts:r,addresses:e,contracts:t})));let hasCalledInitOptions=!1;const sortByName=(r,e)=>{const t=r.option.name,n=e.option.name;return t.localeCompare(n)},sortByCreated=(r,e)=>{const t=r.json.meta.whenCreated||0,n=e.json.meta.whenCreated||0;return t<n?1:t>n?-1:0};class KeyringOption{constructor(){je(this,"optionsSubject",new BehaviorSubject(this.emptyOptions()))}createOptionHeader(e){return{key:`header-${e.toLowerCase()}`,name:e,value:null}}init(e){assert(!hasCalledInitOptions,"Unable to initialise options more than once"),obervableAll.subscribe(()=>{const t=this.emptyOptions();this.addAccounts(e,t),this.addAddresses(e,t),this.addContracts(e,t),t.address=this.linkItems({Addresses:t.address,Recent:t.recent}),t.account=this.linkItems({Accounts:t.account,Development:t.testing}),t.contract=this.linkItems({Contracts:t.contract}),t.all=[].concat(t.account,t.address),t.allPlus=[].concat(t.account,t.address,t.contract),this.optionsSubject.next(t)}),hasCalledInitOptions=!0}linkItems(e){return Object.keys(e).reduce((t,n)=>{const s=e[n];return t.concat(s.length?[this.createOptionHeader(n)]:[],s)},[])}addAccounts(e,t){const n=e.accounts.subject.getValue();Object.values(n).sort(sortByName).forEach(({json:{meta:{isTesting:s=!1}},option:i})=>{s?t.testing.push(i):t.account.push(i)})}addAddresses(e,t){const n=e.addresses.subject.getValue();Object.values(n).filter(({json:s})=>!!s.meta.isRecent).sort(sortByCreated).forEach(({option:s})=>{t.recent.push(s)}),Object.values(n).filter(({json:s})=>!s.meta.isRecent).sort(sortByName).forEach(({option:s})=>{t.address.push(s)})}addContracts(e,t){const n=e.contracts.subject.getValue();Object.values(n).sort(sortByName).forEach(({option:s})=>{t.contract.push(s)})}emptyOptions(){return{account:[],address:[],all:[],allPlus:[],contract:[],recent:[],testing:[]}}}const RECENT_EXPIRY=24*60*60;var Kr;class Keyring extends Base$1{constructor(){super(...arguments);je(this,"keyringOption",new KeyringOption);G(this,Kr,{account:()=>this.accounts,address:()=>this.addresses,contract:()=>this.contracts})}addExternal(t,n={}){const s=this.keyring.addFromAddress(t,objectSpread({},n,{isExternal:!0}),null);return{json:this.saveAccount(s),pair:s}}addHardware(t,n,s={}){return this.addExternal(t,objectSpread({},s,{hardwareType:n,isHardware:!0}))}addMultisig(t,n,s={}){const i=createKeyMulti(t,n),a=u8aSorted(t.map(o=>this.decodeAddress(o))).map(o=>this.encodeAddress(o));return this.addExternal(i,objectSpread({},s,{isMultisig:!0,threshold:bnToBn(n).toNumber(),who:a}))}addPair(t,n){return this.keyring.addPair(t),{json:this.saveAccount(t,n),pair:t}}addUri(t,n,s={},i){const a=this.keyring.addFromUri(t,s,i);return{json:this.saveAccount(a,n),pair:a}}backupAccount(t,n){return t.isLocked||t.lock(),t.decodePkcs8(n),t.toJson(n)}async backupAccounts(t,n){const s=t.map(a=>new Promise(o=>{this._store.get(accountKey(a),o)})),i=await Promise.all(s);return objectSpread({},jsonEncrypt(stringToU8a(JSON.stringify(i)),["batch-pkcs8"],n),{accounts:i.map(a=>({address:a.address,meta:a.meta}))})}createFromJson(t,n={}){return this.keyring.createFromJson(objectSpread({},t,{meta:objectSpread({},t.meta,n)}))}createFromUri(t,n={},s){return this.keyring.createFromUri(t,n,s)}encryptAccount(t,n){const s=t.toJson(n);s.meta.whenEdited=Date.now(),this.keyring.addFromJson(s),this.accounts.add(this._store,t.address,s,t.type)}forgetAccount(t){this.keyring.removePair(t),this.accounts.remove(this._store,t)}forgetAddress(t){this.addresses.remove(this._store,t)}forgetContract(t){this.contracts.remove(this._store,t)}getAccount(t){return this.getAddress(t,"account")}getAccounts(){const t=this.accounts.subject.getValue();return Object.keys(t).map(n=>this.getAddress(n,"account")).filter(n=>env.isDevelopment()||n.meta.isTesting!==!0)}getAddress(t,n=null){const s=isString(t)?t:this.encodeAddress(t),i=this.decodeAddress(s),o=(n?[T(this,Kr)[n]]:Object.values(T(this,Kr))).reduce((c,h)=>h().subject.getValue()[s]||c,void 0);return o&&{address:s,meta:o.json.meta,publicKey:i}}getAddresses(){const t=this.addresses.subject.getValue();return Object.keys(t).map(n=>this.getAddress(n))}getContract(t){return this.getAddress(t,"contract")}getContracts(){const t=this.contracts.subject.getValue();return Object.entries(t).filter(([,{json:{meta:{contract:n}}}])=>!!n&&n.genesisHash===this.genesisHash).map(([n])=>this.getContract(n))}rewriteKey(t,n,s,i){s.substr(0,2)!=="0x"&&(this._store.remove(n),this._store.set(i(s),t))}loadAccount(t,n){if(!t.meta.isTesting&&t.encoded){const i=this.keyring.addFromJson(t,!0);this.accounts.add(this._store,i.address,t,i.type)}const[,s]=n.split(":");this.rewriteKey(t,n,s.trim(),accountKey)}loadAddress(t,n){const{isRecent:s,whenCreated:i=0}=t.meta;if(s&&Date.now()-i>RECENT_EXPIRY){this._store.remove(n);return}const a=isHex(t.address)&&t.address.length!==66?t.address:this.encodeAddress(isHex(t.address)?hexToU8a(t.address):this.decodeAddress(t.address,!0)),[,o]=n.split(":");this.addresses.add(this._store,a,t),this.rewriteKey(t,n,o,addressKey)}loadContract(t,n){const s=this.encodeAddress(this.decodeAddress(t.address)),[,i]=n.split(":");t.meta.genesisHash=t.meta.genesisHash||t.meta.contract&&t.meta.contract.genesisHash,this.contracts.add(this._store,s,t),this.rewriteKey(t,n,i,contractKey)}loadInjected(t,n,s){const i={address:t,meta:objectSpread({},n,{isInjected:!0})},a=this.keyring.addFromAddress(t,i.meta,null,s);this.accounts.add(this._store,a.address,i,a.type)}allowGenesis(t){if(t&&t.meta&&this.genesisHash){const n=Object.values(chains).find(s=>s.includes(this.genesisHash||""))||[this.genesisHash];if(t.meta.genesisHash)return n.includes(t.meta.genesisHash)||this.genesisHashes.includes(t.meta.genesisHash);if(t.meta.contract)return n.includes(t.meta.contract.genesisHash)}return!0}loadAll(t,n=[]){super.initKeyring(t),this._store.all((s,i)=>{if(!isFunction$3(t.filter)||t.filter(i))try{this.allowGenesis(i)&&(accountRegex.test(s)?this.loadAccount(i,s):addressRegex.test(s)?this.loadAddress(i,s):contractRegex.test(s)&&this.loadContract(i,s))}catch{console.warn(`Keyring: Unable to load ${s}:${stringify(i)}`)}}),n.forEach(s=>{if(this.allowGenesis(s))try{this.loadInjected(s.address,s.meta,s.type)}catch{console.warn(`Keyring: Unable to inject ${stringify(s)}`)}}),this.keyringOption.init(this)}restoreAccount(t,n){const s=Array.isArray(t.encoding.content)?t.encoding.content[1]:"ed25519",i=Array.isArray(t.encoding.type)?t.encoding.type:[t.encoding.type],a=createPair({toSS58:this.encodeAddress,type:s},{publicKey:this.decodeAddress(t.address,!0)},t.meta,isHex(t.encoded)?hexToU8a(t.encoded):base64Decode(t.encoded),i);return a.decodePkcs8(n),this.addPair(a,n),a.lock(),a}restoreAccounts(t,n){JSON.parse(u8aToString(jsonDecrypt(t,n))).forEach(i=>{this.loadAccount(i,accountKey(i.address))})}saveAccount(t,n){this.addTimestamp(t);const s=t.toJson(n);return this.keyring.addFromJson(s),this.accounts.add(this._store,t.address,s,t.type),s}saveAccountMeta(t,n){const s=t.address;this._store.get(accountKey(s),i=>{t.setMeta(n),i.meta=t.meta,this.accounts.add(this._store,s,i,t.type)})}saveAddress(t,n,s="address"){const i=this.addresses.subject.getValue(),a=i[t]&&i[t].json||{address:t,meta:{isRecent:void 0,whenCreated:Date.now()}};return Object.keys(n).forEach(o=>{a.meta[o]=n[o]}),delete a.meta.isRecent,T(this,Kr)[s]().add(this._store,t,a),a}saveContract(t,n){return this.saveAddress(t,n,"contract")}saveRecent(t){return this.addresses.subject.getValue()[t]||this.addresses.add(this._store,t,{address:t,meta:{genesisHash:this.genesisHash,isRecent:!0,whenCreated:Date.now()}}),this.addresses.subject.getValue()[t]}}Kr=new WeakMap;const keyring=new Keyring,packageInfo={name:"@polkadot/api",path:Gn&&Gn.url?new URL(Gn.url).pathname.substring(0,new URL(Gn.url).pathname.lastIndexOf("/")+1):"auto",type:"esm",version:"8.3.2"};function v0ToV1Names(r){return r.map(e=>objectSpread({},e,{name:Array.isArray(e.name)?e.name:[e.name]}))}function v0ToV1(r,e){return r.createType("ContractMetadataV1",objectSpread({},e,{spec:objectSpread({},e.spec,{constructors:v0ToV1Names(e.spec.constructors),messages:v0ToV1Names(e.spec.messages)}),types:toV1(r,e.types)}))}const ARG_TYPES={ContractConstructorSpec:"ContractMessageParamSpecV2",ContractEventSpec:"ContractEventParamSpecV2",ContractMessageSpec:"ContractMessageParamSpecV2"};function v1ToV2Label(r){return objectSpread({},r,{label:Array.isArray(r.name)?r.name.join("::"):r.name})}function v1ToV2Labels(r,e,t){return t.map(n=>r.createType(`${e}V2`,objectSpread(v1ToV2Label(n),{args:n.args.map(s=>r.createType(ARG_TYPES[e],v1ToV2Label(s)))})))}function v1ToV2(r,e){return r.createType("ContractMetadataV2",objectSpread({},e,{spec:objectSpread({},e.spec,{constructors:v1ToV2Labels(r,"ContractConstructorSpec",e.spec.constructors),events:v1ToV2Labels(r,"ContractEventSpec",e.spec.events),messages:v1ToV2Labels(r,"ContractMessageSpec",e.spec.messages)})}))}function v2ToV3(r,e){return r.createType("ContractMetadataV3",objectSpread({},e,{spec:objectSpread({},e.spec,{constructors:e.spec.constructors.map(t=>r.createType("ContractConstructorSpecV3",objectSpread({},t,{payable:!0})))})}))}function createConverter(r,e){return(t,n)=>r(t,e(t,n))}function v3ToLatest(r,e){return e}const v2ToLatest=createConverter(v3ToLatest,v2ToV3),v1ToLatest=createConverter(v2ToLatest,v1ToV2),v0ToLatest=createConverter(v1ToLatest,v0ToV1),enumVersions=["V3","V2","V1"],convertVersions=[["V3",v3ToLatest],["V2",v2ToLatest],["V1",v1ToLatest],["V0",v0ToLatest]],l$8=logger("Abi"),PRIMITIVE_ALWAYS=["AccountId","AccountIndex","Address","Balance"];function findMessage(r,e){const t=isNumber(e)?r[e]:isString(e)?r.find(({identifier:n})=>[n,stringCamelCase(n)].includes(e.toString())):e;return assertReturn(t,()=>`Attempted to call an invalid contract interface, ${stringify(e)}`)}function getLatestMeta(r,e){const t=enumVersions.find(i=>isObject$2(e[i])),n=r.createType("ContractMetadata",t?{[t]:e[t]}:{V0:e}),s=convertVersions.find(([i])=>n[`is${i}`]);return assert(s,()=>`Unable to convert ABI with version ${n.type} to latest`),s[1](r,n[`as${s[0]}`])}function parseJson(r,e){const t=new TypeRegistry,n=t.createType("ContractProjectInfo",r),s=getLatestMeta(t,r),i=t.createType("PortableRegistry",{types:s.types},!0);return t.setLookup(i),e&&t.setChainProperties(e),i.types.forEach(({id:a})=>i.getTypeDef(a)),[r,t,s,n]}var Un,$n,Rn,Ln,Fn,es;class Abi{constructor(e,t){G(this,Un,(e,t)=>e.map(({label:n,type:s},i)=>{try{assert(isObject$2(s),"Invalid type definition found");const a=s.displayName.length?s.displayName[s.displayName.length-1].toString():void 0,o=stringCamelCase(n);if(a&&PRIMITIVE_ALWAYS.includes(a))return{name:o,type:{info:TypeDefInfo.Plain,type:a}};const c=this.registry.lookup.getTypeDef(s.type);return{name:o,type:a&&!c.type.startsWith(a)?Ce({displayName:a},c):c}}catch(a){throw l$8.error(`Error expanding argument ${i} in ${stringify(t)}`),a}}));G(this,$n,(e,t)=>{const n=T(this,Un).call(this,e.args,e),s={args:n,docs:e.docs.map(i=>i.toString()),fromU8a:i=>({args:T(this,Ln).call(this,n,i),event:s}),identifier:e.label.toString(),index:t};return s});G(this,Rn,(e,t,n={})=>{const s=T(this,Un).call(this,e.args,e),i=e.label.toString(),a=Je(Ce({},n),{args:s,docs:e.docs.map(o=>o.toString()),fromU8a:o=>({args:T(this,Ln).call(this,s,o),message:a}),identifier:i,index:t,method:stringCamelCase(i),path:i.split("::").map(o=>stringCamelCase(o)),selector:e.selector,toU8a:o=>T(this,es).call(this,e,s,o)});return a});G(this,Ln,(e,t)=>{let n=0;return e.map(({type:{lookupName:s,type:i}})=>{const a=this.registry.createType(s||i,t.subarray(n));return n+=a.encodedLength,a})});G(this,Fn,(e,t,n)=>{const[,s]=compactStripLength(n),i=s.subarray(0,4),a=t.find(o=>o.selector.eq(i));return assert(a,`Unable to find ${e} with selector ${u8aToHex(i)}`),a.fromU8a(s.subarray(4))});G(this,es,({label:e,selector:t},n,s)=>(assert(s.length===n.length,()=>`Expected ${n.length} arguments to contract message '${e.toString()}', found ${s.length}`),compactAddLength(u8aConcat(this.registry.createType("ContractSelector",t).toU8a(),...n.map(({type:{lookupName:i,type:a}},o)=>this.registry.createType(i||a,s[o]).toU8a())))));[this.json,this.registry,this.metadata,this.info]=parseJson(isString(e)?JSON.parse(e):e,t),this.constructors=this.metadata.spec.constructors.map((n,s)=>T(this,Rn).call(this,n,s,{isConstructor:!0,isPayable:n.payable.isTrue})),this.events=this.metadata.spec.events.map((n,s)=>T(this,$n).call(this,n,s)),this.messages=this.metadata.spec.messages.map((n,s)=>{const i=n.returnType.unwrapOr(null);return T(this,Rn).call(this,n,s,{isMutating:n.mutates.isTrue,isPayable:n.payable.isTrue,returnType:i?this.registry.lookup.getTypeDef(i.type):null})})}decodeEvent(e){const t=e[0],n=this.events[t];return assert(n,()=>`Unable to find event with index ${t}`),n.fromU8a(e.subarray(1))}decodeConstructor(e){return T(this,Fn).call(this,"message",this.constructors,e)}decodeMessage(e){return T(this,Fn).call(this,"message",this.messages,e)}findConstructor(e){return findMessage(this.constructors,e)}findMessage(e){return findMessage(this.messages,e)}}Un=new WeakMap,$n=new WeakMap,Rn=new WeakMap,Ln=new WeakMap,Fn=new WeakMap,es=new WeakMap;const UNKNOWN=-99999;function extend(r,e,t){Object.defineProperty(r,e,{configurable:!0,enumerable:!1,value:t})}class RpcError extends Error{constructor(e="",t=UNKNOWN,n){if(super(),extend(this,"message",String(e)),extend(this,"name",this.constructor.name),extend(this,"data",n),extend(this,"code",t),isFunction$3(Error.captureStackTrace))Error.captureStackTrace(this,this.constructor);else{const{stack:s}=new Error(e);s&&extend(this,"stack",s)}}}je(RpcError,"CODES",{ASSERT:-90009,INVALID_JSONRPC:-99998,METHOD_NOT_FOUND:-32601,UNKNOWN});function formatErrorData(r){if(isUndefined(r))return"";const e=`: ${isString(r)?r.replace(/Error\("/g,"").replace(/\("/g,"(").replace(/"\)/g,")").replace(/\(/g,", ").replace(/\)/g,""):stringify(r)}`;return e.length<=256?e:`${e.substring(0,255)}\u2026`}function checkError(r){if(r){const{code:e,data:t,message:n}=r;throw new RpcError(`${e}: ${n}${formatErrorData(t)}`,e,t)}}var ts;class RpcCoder{constructor(){G(this,ts,0)}decodeResponse(e){assert(e&&e.jsonrpc==="2.0","Invalid jsonrpc field in decoded object");const t=!isUndefined(e.params)&&!isUndefined(e.method);return assert(isNumber(e.id)||t&&(isNumber(e.params.subscription)||isString(e.params.subscription)),"Invalid id field in decoded object"),checkError(e.error),assert(!isUndefined(e.result)||t,"No result found in jsonrpc response"),t?(checkError(e.params.error),e.params.result):e.result}encodeJson(e,t){const[n,s]=this.encodeObject(e,t);return[n,stringify(s)]}encodeObject(e,t){const n=++ws(this,ts)._;return[n,{id:n,jsonrpc:"2.0",method:e,params:t}]}}ts=new WeakMap;const HTTP_URL="http://127.0.0.1:9933",WS_URL="ws://127.0.0.1:9944";var defaults={HTTP_URL,WS_URL};const DEFAULT_CAPACITY=384;class LRUNode{constructor(e){this.key=e,this.next=this.prev=this}}var _data=_classPrivateFieldKey("data"),_refs=_classPrivateFieldKey("refs"),_length=_classPrivateFieldKey("length"),_head=_classPrivateFieldKey("head"),_tail=_classPrivateFieldKey("tail"),_toHead=_classPrivateFieldKey("toHead");class LRUCache{constructor(e=DEFAULT_CAPACITY){Object.defineProperty(this,_toHead,{value:_toHead2}),this.capacity=void 0,Object.defineProperty(this,_data,{writable:!0,value:new Map}),Object.defineProperty(this,_refs,{writable:!0,value:new Map}),Object.defineProperty(this,_length,{writable:!0,value:0}),Object.defineProperty(this,_head,{writable:!0,value:void 0}),Object.defineProperty(this,_tail,{writable:!0,value:void 0}),this.capacity=e,_classPrivateFieldBase(this,_head)[_head]=_classPrivateFieldBase(this,_tail)[_tail]=new LRUNode("<empty>")}get length(){return _classPrivateFieldBase(this,_length)[_length]}get lengthData(){return _classPrivateFieldBase(this,_data)[_data].size}get lengthRefs(){return _classPrivateFieldBase(this,_refs)[_refs].size}entries(){const e=this.keys(),t=new Array(e.length);for(let n=0;n<e.length;n++){const s=e[n];t[n]=[s,_classPrivateFieldBase(this,_data)[_data].get(s)]}return t}keys(){const e=[];if(_classPrivateFieldBase(this,_length)[_length]){let t=_classPrivateFieldBase(this,_head)[_head];for(;t!==_classPrivateFieldBase(this,_tail)[_tail];)e.push(t.key),t=t.next;e.push(t.key)}return e}get(e){const t=_classPrivateFieldBase(this,_data)[_data].get(e);return t?(_classPrivateFieldBase(this,_toHead)[_toHead](e),t):null}set(e,t){if(_classPrivateFieldBase(this,_data)[_data].has(e))_classPrivateFieldBase(this,_toHead)[_toHead](e);else{const n=new LRUNode(e);_classPrivateFieldBase(this,_refs)[_refs].set(n.key,n),this.length===0?_classPrivateFieldBase(this,_head)[_head]=_classPrivateFieldBase(this,_tail)[_tail]=n:(_classPrivateFieldBase(this,_head)[_head].prev=n,n.next=_classPrivateFieldBase(this,_head)[_head],_classPrivateFieldBase(this,_head)[_head]=n),_classPrivateFieldBase(this,_length)[_length]===this.capacity?(_classPrivateFieldBase(this,_data)[_data].delete(_classPrivateFieldBase(this,_tail)[_tail].key),_classPrivateFieldBase(this,_refs)[_refs].delete(_classPrivateFieldBase(this,_tail)[_tail].key),_classPrivateFieldBase(this,_tail)[_tail]=_classPrivateFieldBase(this,_tail)[_tail].prev,_classPrivateFieldBase(this,_tail)[_tail].next=_classPrivateFieldBase(this,_head)[_head]):_classPrivateFieldBase(this,_length)[_length]+=1}_classPrivateFieldBase(this,_data)[_data].set(e,t)}}function _toHead2(r){const e=_classPrivateFieldBase(this,_refs)[_refs].get(r);e&&e!==_classPrivateFieldBase(this,_head)[_head]&&(e.prev.next=e.next,e.next.prev=e.prev,e.next=_classPrivateFieldBase(this,_head)[_head],_classPrivateFieldBase(this,_head)[_head].prev=e,_classPrivateFieldBase(this,_head)[_head]=e)}function evaluateThis$1(r){return r("return this")}const xglobal$1=typeof globalThis!="undefined"?globalThis:typeof global!="undefined"?global:typeof self!="undefined"?self:typeof window!="undefined"?window:evaluateThis$1(Function);function evaluateThis(r){return r("return this")}const xglobal=typeof globalThis!="undefined"?globalThis:typeof global!="undefined"?global:typeof self!="undefined"?self:typeof window!="undefined"?window:evaluateThis(Function),WebSocket=xglobal.WebSocket,known={1e3:"Normal Closure",1001:"Going Away",1002:"Protocol Error",1003:"Unsupported Data",1004:"(For future)",1005:"No Status Received",1006:"Abnormal Closure",1007:"Invalid frame payload data",1008:"Policy Violation",1009:"Message too big",1010:"Missing Extension",1011:"Internal Error",1012:"Service Restart",1013:"Try Again Later",1014:"Bad Gateway",1015:"TLS Handshake"};function getUnmapped(r){if(r<=1999)return"(For WebSocket standard)";if(r<=2999)return"(For WebSocket extensions)";if(r<=3999)return"(For libraries and frameworks)";if(r<=4999)return"(For applications)"}function getWSErrorString(r){return r>=0&&r<=999?"(Unused)":known[r]||getUnmapped(r)||"(Unknown)"}const ALIASES={chain_finalisedHead:"chain_finalizedHead",chain_subscribeFinalisedHeads:"chain_subscribeFinalizedHeads",chain_unsubscribeFinalisedHeads:"chain_unsubscribeFinalizedHeads"},RETRY_DELAY=2500,DEFAULT_TIMEOUT_MS=60*1e3,TIMEOUT_INTERVAL=5e3,MEGABYTE=1024*1024,l$7=logger("api-ws");function eraseRecord(r,e){Object.keys(r).forEach(t=>{e&&e(r[t]),delete r[t]})}var _callCache=_classPrivateFieldKey("callCache"),_coder=_classPrivateFieldKey("coder"),_endpoints=_classPrivateFieldKey("endpoints"),_headers=_classPrivateFieldKey("headers"),_eventemitter=_classPrivateFieldKey("eventemitter"),_handlers=_classPrivateFieldKey("handlers"),_isReadyPromise=_classPrivateFieldKey("isReadyPromise"),_stats=_classPrivateFieldKey("stats"),_waitingForId=_classPrivateFieldKey("waitingForId"),_autoConnectMs=_classPrivateFieldKey("autoConnectMs"),_endpointIndex=_classPrivateFieldKey("endpointIndex"),_isConnected=_classPrivateFieldKey("isConnected"),_subscriptions=_classPrivateFieldKey("subscriptions"),_timeoutId=_classPrivateFieldKey("timeoutId"),_websocket=_classPrivateFieldKey("websocket"),_timeout=_classPrivateFieldKey("timeout"),_send=_classPrivateFieldKey("send"),_emit=_classPrivateFieldKey("emit"),_onSocketClose=_classPrivateFieldKey("onSocketClose"),_onSocketError=_classPrivateFieldKey("onSocketError"),_onSocketMessage=_classPrivateFieldKey("onSocketMessage"),_onSocketMessageResult=_classPrivateFieldKey("onSocketMessageResult"),_onSocketMessageSubscribe=_classPrivateFieldKey("onSocketMessageSubscribe"),_onSocketOpen=_classPrivateFieldKey("onSocketOpen"),_resubscribe=_classPrivateFieldKey("resubscribe"),_timeoutHandlers=_classPrivateFieldKey("timeoutHandlers");class WsProvider{constructor(e=defaults.WS_URL,t=RETRY_DELAY,n={},s){Object.defineProperty(this,_send,{value:_send2}),Object.defineProperty(this,_callCache,{writable:!0,value:new LRUCache}),Object.defineProperty(this,_coder,{writable:!0,value:void 0}),Object.defineProperty(this,_endpoints,{writable:!0,value:void 0}),Object.defineProperty(this,_headers,{writable:!0,value:void 0}),Object.defineProperty(this,_eventemitter,{writable:!0,value:void 0}),Object.defineProperty(this,_handlers,{writable:!0,value:{}}),Object.defineProperty(this,_isReadyPromise,{writable:!0,value:void 0}),Object.defineProperty(this,_stats,{writable:!0,value:void 0}),Object.defineProperty(this,_waitingForId,{writable:!0,value:{}}),Object.defineProperty(this,_autoConnectMs,{writable:!0,value:void 0}),Object.defineProperty(this,_endpointIndex,{writable:!0,value:void 0}),Object.defineProperty(this,_isConnected,{writable:!0,value:!1}),Object.defineProperty(this,_subscriptions,{writable:!0,value:{}}),Object.defineProperty(this,_timeoutId,{writable:!0,value:null}),Object.defineProperty(this,_websocket,{writable:!0,value:void 0}),Object.defineProperty(this,_timeout,{writable:!0,value:void 0}),Object.defineProperty(this,_emit,{writable:!0,value:(a,...o)=>{_classPrivateFieldBase(this,_eventemitter)[_eventemitter].emit(a,...o)}}),Object.defineProperty(this,_onSocketClose,{writable:!0,value:a=>{const o=new Error(`disconnected from ${_classPrivateFieldBase(this,_endpoints)[_endpoints][_classPrivateFieldBase(this,_endpointIndex)[_endpointIndex]]}: ${a.code}:: ${a.reason||getWSErrorString(a.code)}`);_classPrivateFieldBase(this,_autoConnectMs)[_autoConnectMs]>0&&l$7.error(o.message),_classPrivateFieldBase(this,_isConnected)[_isConnected]=!1,_classPrivateFieldBase(this,_websocket)[_websocket]&&(_classPrivateFieldBase(this,_websocket)[_websocket].onclose=null,_classPrivateFieldBase(this,_websocket)[_websocket].onerror=null,_classPrivateFieldBase(this,_websocket)[_websocket].onmessage=null,_classPrivateFieldBase(this,_websocket)[_websocket].onopen=null,_classPrivateFieldBase(this,_websocket)[_websocket]=null),_classPrivateFieldBase(this,_timeoutId)[_timeoutId]&&(clearInterval(_classPrivateFieldBase(this,_timeoutId)[_timeoutId]),_classPrivateFieldBase(this,_timeoutId)[_timeoutId]=null),_classPrivateFieldBase(this,_emit)[_emit]("disconnected"),eraseRecord(_classPrivateFieldBase(this,_handlers)[_handlers],c=>{try{c.callback(o,void 0)}catch(h){l$7.error(h)}}),eraseRecord(_classPrivateFieldBase(this,_waitingForId)[_waitingForId]),_classPrivateFieldBase(this,_autoConnectMs)[_autoConnectMs]>0&&setTimeout(()=>{this.connectWithRetry().catch(()=>{})},_classPrivateFieldBase(this,_autoConnectMs)[_autoConnectMs])}}),Object.defineProperty(this,_onSocketError,{writable:!0,value:a=>{l$7.debug(()=>["socket error",a]),_classPrivateFieldBase(this,_emit)[_emit]("error",a)}}),Object.defineProperty(this,_onSocketMessage,{writable:!0,value:a=>{l$7.debug(()=>["received",a.data]),_classPrivateFieldBase(this,_stats)[_stats].total.bytesRecv+=a.data.length;const o=JSON.parse(a.data);return isUndefined(o.method)?_classPrivateFieldBase(this,_onSocketMessageResult)[_onSocketMessageResult](o):_classPrivateFieldBase(this,_onSocketMessageSubscribe)[_onSocketMessageSubscribe](o)}}),Object.defineProperty(this,_onSocketMessageResult,{writable:!0,value:a=>{const o=_classPrivateFieldBase(this,_handlers)[_handlers][a.id];if(!o){l$7.debug(()=>`Unable to find handler for id=${a.id}`);return}try{const{method:c,params:h,subscription:y}=o,x=_classPrivateFieldBase(this,_coder)[_coder].decodeResponse(a);if(o.callback(null,x),y){const E=`${y.type}::${x}`;_classPrivateFieldBase(this,_subscriptions)[_subscriptions][E]=objectSpread({},y,{method:c,params:h}),_classPrivateFieldBase(this,_waitingForId)[_waitingForId][E]&&_classPrivateFieldBase(this,_onSocketMessageSubscribe)[_onSocketMessageSubscribe](_classPrivateFieldBase(this,_waitingForId)[_waitingForId][E])}}catch(c){o.callback(c,void 0)}delete _classPrivateFieldBase(this,_handlers)[_handlers][a.id]}}),Object.defineProperty(this,_onSocketMessageSubscribe,{writable:!0,value:a=>{const c=`${ALIASES[a.method]||a.method||"invalid"}::${a.params.subscription}`,h=_classPrivateFieldBase(this,_subscriptions)[_subscriptions][c];if(!h){_classPrivateFieldBase(this,_waitingForId)[_waitingForId][c]=a,l$7.debug(()=>`Unable to find handler for subscription=${c}`);return}delete _classPrivateFieldBase(this,_waitingForId)[_waitingForId][c];try{const y=_classPrivateFieldBase(this,_coder)[_coder].decodeResponse(a);h.callback(null,y)}catch(y){h.callback(y,void 0)}}}),Object.defineProperty(this,_onSocketOpen,{writable:!0,value:()=>(assert(!isNull(_classPrivateFieldBase(this,_websocket)[_websocket]),"WebSocket cannot be null in onOpen"),l$7.debug(()=>["connected to",_classPrivateFieldBase(this,_endpoints)[_endpoints][_classPrivateFieldBase(this,_endpointIndex)[_endpointIndex]]]),_classPrivateFieldBase(this,_isConnected)[_isConnected]=!0,_classPrivateFieldBase(this,_emit)[_emit]("connected"),_classPrivateFieldBase(this,_resubscribe)[_resubscribe](),!0)}),Object.defineProperty(this,_resubscribe,{writable:!0,value:()=>{const a=_classPrivateFieldBase(this,_subscriptions)[_subscriptions];_classPrivateFieldBase(this,_subscriptions)[_subscriptions]={},Promise.all(Object.keys(a).map(async o=>{const{callback:c,method:h,params:y,type:x}=a[o];if(!x.startsWith("author_"))try{await this.subscribe(x,h,y,c)}catch(E){l$7.error(E)}})).catch(l$7.error)}}),Object.defineProperty(this,_timeoutHandlers,{writable:!0,value:()=>{const a=Date.now(),o=Object.keys(_classPrivateFieldBase(this,_handlers)[_handlers]);for(let c=0;c<o.length;c++){const h=_classPrivateFieldBase(this,_handlers)[_handlers][o[c]];if(a-h.start>_classPrivateFieldBase(this,_timeout)[_timeout]){try{h.callback(new Error(`No response received from RPC endpoint in ${_classPrivateFieldBase(this,_timeout)[_timeout]/1e3}s`),void 0)}catch{}_classPrivateFieldBase(this,_stats)[_stats].total.timeout++,delete _classPrivateFieldBase(this,_handlers)[_handlers][o[c]]}}}});const i=Array.isArray(e)?e:[e];assert(i.length!==0,"WsProvider requires at least one Endpoint"),i.forEach(a=>{assert(/^(wss|ws):\/\//.test(a),()=>`Endpoint should start with 'ws://', received '${a}'`)}),_classPrivateFieldBase(this,_eventemitter)[_eventemitter]=new EventEmitter,_classPrivateFieldBase(this,_autoConnectMs)[_autoConnectMs]=t||0,_classPrivateFieldBase(this,_coder)[_coder]=new RpcCoder,_classPrivateFieldBase(this,_endpointIndex)[_endpointIndex]=-1,_classPrivateFieldBase(this,_endpoints)[_endpoints]=i,_classPrivateFieldBase(this,_headers)[_headers]=n,_classPrivateFieldBase(this,_websocket)[_websocket]=null,_classPrivateFieldBase(this,_stats)[_stats]={active:{requests:0,subscriptions:0},total:{bytesRecv:0,bytesSent:0,cached:0,requests:0,subscriptions:0,timeout:0}},_classPrivateFieldBase(this,_timeout)[_timeout]=s||DEFAULT_TIMEOUT_MS,t>0&&this.connectWithRetry().catch(()=>{}),_classPrivateFieldBase(this,_isReadyPromise)[_isReadyPromise]=new Promise(a=>{_classPrivateFieldBase(this,_eventemitter)[_eventemitter].once("connected",()=>{a(this)})})}get hasSubscriptions(){return!0}get isConnected(){return _classPrivateFieldBase(this,_isConnected)[_isConnected]}get isReady(){return _classPrivateFieldBase(this,_isReadyPromise)[_isReadyPromise]}clone(){return new WsProvider(_classPrivateFieldBase(this,_endpoints)[_endpoints])}async connect(){try{_classPrivateFieldBase(this,_endpointIndex)[_endpointIndex]=(_classPrivateFieldBase(this,_endpointIndex)[_endpointIndex]+1)%_classPrivateFieldBase(this,_endpoints)[_endpoints].length,_classPrivateFieldBase(this,_websocket)[_websocket]=typeof xglobal$1.WebSocket!="undefined"&&isChildClass(xglobal$1.WebSocket,WebSocket)?new WebSocket(_classPrivateFieldBase(this,_endpoints)[_endpoints][_classPrivateFieldBase(this,_endpointIndex)[_endpointIndex]]):new WebSocket(_classPrivateFieldBase(this,_endpoints)[_endpoints][_classPrivateFieldBase(this,_endpointIndex)[_endpointIndex]],void 0,void 0,_classPrivateFieldBase(this,_headers)[_headers],void 0,{fragmentOutgoingMessages:!0,fragmentationThreshold:1*MEGABYTE,maxReceivedFrameSize:24*MEGABYTE,maxReceivedMessageSize:24*MEGABYTE}),_classPrivateFieldBase(this,_websocket)[_websocket].onclose=_classPrivateFieldBase(this,_onSocketClose)[_onSocketClose],_classPrivateFieldBase(this,_websocket)[_websocket].onerror=_classPrivateFieldBase(this,_onSocketError)[_onSocketError],_classPrivateFieldBase(this,_websocket)[_websocket].onmessage=_classPrivateFieldBase(this,_onSocketMessage)[_onSocketMessage],_classPrivateFieldBase(this,_websocket)[_websocket].onopen=_classPrivateFieldBase(this,_onSocketOpen)[_onSocketOpen],_classPrivateFieldBase(this,_timeoutId)[_timeoutId]=setInterval(()=>_classPrivateFieldBase(this,_timeoutHandlers)[_timeoutHandlers](),TIMEOUT_INTERVAL)}catch(e){throw l$7.error(e),_classPrivateFieldBase(this,_emit)[_emit]("error",e),e}}async connectWithRetry(){if(_classPrivateFieldBase(this,_autoConnectMs)[_autoConnectMs]>0)try{await this.connect()}catch{setTimeout(()=>{this.connectWithRetry().catch(()=>{})},_classPrivateFieldBase(this,_autoConnectMs)[_autoConnectMs])}}async disconnect(){_classPrivateFieldBase(this,_autoConnectMs)[_autoConnectMs]=0;try{_classPrivateFieldBase(this,_websocket)[_websocket]&&_classPrivateFieldBase(this,_websocket)[_websocket].close(1e3)}catch(e){throw l$7.error(e),_classPrivateFieldBase(this,_emit)[_emit]("error",e),e}}get stats(){return{active:{requests:Object.keys(_classPrivateFieldBase(this,_handlers)[_handlers]).length,subscriptions:Object.keys(_classPrivateFieldBase(this,_subscriptions)[_subscriptions]).length},total:_classPrivateFieldBase(this,_stats)[_stats].total}}on(e,t){return _classPrivateFieldBase(this,_eventemitter)[_eventemitter].on(e,t),()=>{_classPrivateFieldBase(this,_eventemitter)[_eventemitter].removeListener(e,t)}}send(e,t,n,s){_classPrivateFieldBase(this,_stats)[_stats].total.requests++;const[i,a]=_classPrivateFieldBase(this,_coder)[_coder].encodeJson(e,t);let o=n?_classPrivateFieldBase(this,_callCache)[_callCache].get(a):null;return o?_classPrivateFieldBase(this,_stats)[_stats].total.cached++:(o=_classPrivateFieldBase(this,_send)[_send](i,a,e,t,s),n&&_classPrivateFieldBase(this,_callCache)[_callCache].set(a,o)),o}subscribe(e,t,n,s){return _classPrivateFieldBase(this,_stats)[_stats].total.subscriptions++,this.send(t,n,!1,{callback:s,type:e})}async unsubscribe(e,t,n){const s=`${e}::${n}`;if(isUndefined(_classPrivateFieldBase(this,_subscriptions)[_subscriptions][s]))return l$7.debug(()=>`Unable to find active subscription=${s}`),!1;delete _classPrivateFieldBase(this,_subscriptions)[_subscriptions][s];try{return this.isConnected&&!isNull(_classPrivateFieldBase(this,_websocket)[_websocket])?this.send(t,[n]):!0}catch{return!1}}}async function _send2(r,e,t,n,s){return new Promise((i,a)=>{try{assert(this.isConnected&&!isNull(_classPrivateFieldBase(this,_websocket)[_websocket]),"WebSocket is not connected");const o=(c,h)=>{c?a(c):i(h)};l$7.debug(()=>["calling",t,e]),_classPrivateFieldBase(this,_handlers)[_handlers][r]={callback:o,method:t,params:n,start:Date.now(),subscription:s},_classPrivateFieldBase(this,_stats)[_stats].total.bytesSent+=e.length,_classPrivateFieldBase(this,_websocket)[_websocket].send(e)}catch(o){a(o)}})}function lazyDeriveSection(r,e,t,n){lazyMethod(r,e,()=>lazyMethods({},t(e),s=>n(e,s)))}function refCountDelay(r=1750){return e=>{let[t,n,s,i]=[0,0,Subscription.EMPTY,Subscription.EMPTY];return new Observable(a=>(e.subscribe(a),n++===0&&(t===1?i.unsubscribe():s=e.connect(),t=3),()=>{--n===0&&(t===2?(t=0,i.unsubscribe()):(t=1,i=asapScheduler.schedule(()=>{t=0,s.unsubscribe()},r)))}))}}const l$6=logger("drr"),CMP=(r,e)=>stringify({t:r})===stringify({t:e}),ERR=r=>{throw l$6.error(r.message),r},NOOP=()=>{},drr=({delay:r,skipChange:e=!1,skipTimeout:t=!1}={})=>n=>n.pipe(catchError(ERR),e?tap(NOOP):distinctUntilChanged(CMP),publishReplay(1),t?refCount():refCountDelay(r));function memo(r,e){const n=memoize((...s)=>new Observable(i=>{const a=e(...s).subscribe(i);return()=>{n.unmemoize(...s),a.unsubscribe()}}).pipe(drr()),{getInstanceId:()=>r});return n}const l$5=logger("rpc-core"),EMPTY_META={fallback:void 0,modifier:{isOptional:!0},type:{asMap:{linked:{isTrue:!1}},isMap:!1}};function logErrorMessage(r,{params:e,type:t},n){const s=e.map(({isOptional:i,name:a,type:o})=>`${a}${i?"?":""}: ${o}`).join(", ");l$5.error(`${r}(${s}): ${t}:: ${n.message}`)}function isTreatAsHex(r){return["0x3a636f6465"].includes(r.toHex())}var mr,_r,Gr,Dn,zn;class RpcCore{constructor(e,t,n,s={}){G(this,mr,void 0);G(this,_r,void 0);G(this,Gr,void 0);G(this,Dn,void 0);G(this,zn,new Map);je(this,"mapping",new Map);je(this,"sections",[]);assert(n&&isFunction$3(n.send),"Expected Provider to API create"),te(this,mr,e),te(this,_r,t),this.provider=n;const i=Object.keys(rpcDefinitions);this.sections.push(...i),this.addUserInterfaces(s)}get isConnected(){return this.provider.isConnected}connect(){return this.provider.connect()}disconnect(){return this.provider.disconnect()}setRegistrySwap(e){te(this,Gr,memoize(e,{getInstanceId:()=>T(this,mr)}))}setResolveBlockHash(e){te(this,Dn,memoize(e,{getInstanceId:()=>T(this,mr)}))}addUserInterfaces(e){this.sections.push(...Object.keys(e).filter(t=>!this.sections.includes(t)));for(let t=0;t<this.sections.length;t++){const n=this.sections[t],s=objectSpread({},rpcDefinitions[n],e[n]),i=Object.keys(s);for(let a=0;a<i.length;a++){const o=i[a],c=s[o],h=c.endpoint||`${n}_${o}`;if(!this.mapping.has(h)){const y=!!c.pubsub;this[n]||(this[n]={}),this.mapping.set(h,objectSpread({},c,{isSubscription:y,jsonrpc:h,method:o,section:n})),lazyMethod(this[n],o,()=>y?this._createMethodSubscribe(n,o,c):this._createMethodSend(n,o,c))}}}}_memomize(e,t){const n={getInstanceId:()=>T(this,mr)},s=memoize(e(!0),n);return s.raw=memoize(e(!1),n),s.meta=t,s}_formatResult(e,t,n,s,i,a,o){return e?this._formatOutput(t,n,s,i,a,o):o}_createMethodSend(e,t,n){const s=n.endpoint||`${e}_${t}`,i=n.params.findIndex(({isHistoric:h})=>h);let a=null;const o=async(h,y)=>{var x;const E=i===-1?null:y[i],V=E&&n.params[i].type==="BlockNumber"?await((x=T(this,Dn))===null||x===void 0?void 0:x.call(this,E)):E,{registry:F}=h&&V&&T(this,Gr)?await T(this,Gr).call(this,u8aToU8a(V)):{registry:T(this,_r)},q=this._formatInputs(F,null,n,y),X=await this.provider.send(s,q.map(Y=>Y.toJSON()),!!V);return this._formatResult(h,F,V,t,n,q,X)},c=h=>(...y)=>{const x=h&&i!==-1&&!!y[i];return new Observable(E=>(o(h,y).then(V=>{E.next(V),E.complete()}).catch(V=>{logErrorMessage(t,n,V),E.error(V),E.complete()}),()=>{if(h){var V;(V=a)===null||V===void 0||V.unmemoize(...y)}else{var F;(F=a)===null||F===void 0||F.raw.unmemoize(...y)}})).pipe(publishReplay(1),x?refCountDelay():refCount())};return a=this._memomize(c,n),a}_createSubscriber({paramsJson:e,subName:t,subType:n,update:s},i){return new Promise((a,o)=>{this.provider.subscribe(n,t,e,s).then(a).catch(c=>{i(c),o(c)})})}_createMethodSubscribe(e,t,n){const[s,i,a]=n.pubsub,o=`${e}_${i}`,c=`${e}_${a}`,h=`${e}_${s}`;let y=null;const x=E=>(...V)=>new Observable(F=>{let q=Promise.resolve(null);const X=T(this,_r),Y=oe=>{logErrorMessage(t,n,oe),F.error(oe)};try{const oe=this._formatInputs(X,null,n,V),Q=oe.map(fe=>fe.toJSON()),le=(fe,ve)=>{if(fe){logErrorMessage(t,n,fe);return}try{F.next(this._formatResult(E,X,null,t,n,oe,ve))}catch(ke){F.error(ke)}};q=this._createSubscriber({paramsJson:Q,subName:o,subType:h,update:le},Y)}catch(oe){Y(oe)}return()=>{if(E){var oe;(oe=y)===null||oe===void 0||oe.unmemoize(...V)}else{var Q;(Q=y)===null||Q===void 0||Q.raw.unmemoize(...V)}q.then(le=>isNull(le)?Promise.resolve(!1):this.provider.unsubscribe(h,c,le)).catch(le=>logErrorMessage(t,n,le))}}).pipe(drr());return y=this._memomize(x,n),y}_formatInputs(e,t,n,s){const i=n.params.filter(({isOptional:o})=>!o).length,a=i===n.params.length?"":` (${n.params.length-i} optional)`;return assert(s.length>=i&&s.length<=n.params.length,()=>`Expected ${n.params.length} parameters${a}, ${s.length} found instead`),s.map((o,c)=>e.createTypeUnsafe(n.params[c].type,[o],{blockHash:t}))}_formatOutput(e,t,n,s,i,a){if(s.type==="StorageData"){const o=i[0];return this._formatStorageData(e,t,o,a)}else if(s.type==="StorageChangeSet"){const o=i[0];return o?this._formatStorageSet(e,a.block,o,a.changes):e.createType("StorageChangeSet",a)}else if(s.type==="Vec<StorageChangeSet>"){const o=a.map(({block:c,changes:h})=>[e.createType("Hash",c),this._formatStorageSet(e,c,i[0],h)]);return n==="queryStorageAt"?o[0][1]:o}return e.createTypeUnsafe(s.type,[a],{blockHash:t})}_formatStorageData(e,t,n,s){const i=isNull(s),a=i?null:isTreatAsHex(n)?s:u8aToU8a(s);return this._newType(e,t,n,a,i)}_formatStorageSet(e,t,n,s){const i=n.length!==1;return n.reduce((a,o,c)=>(a.push(this._formatStorageSetEntry(e,t,o,s,i,c)),a),[])}_formatStorageSetEntry(e,t,n,s,i,a){const o=n.toHex(),c=s.find(([E])=>E===o),h=isUndefined(c)?i&&T(this,zn).get(o)||null:c[1],y=isNull(h),x=y||isTreatAsHex(n)?h:u8aToU8a(h);return T(this,zn).set(o,h),this._newType(e,t,n,x,y,a)}_newType(e,t,n,s,i,a=-1){const o=n.outputType||"Raw",c=n.meta||EMPTY_META,h=a===-1?"":` entry ${a}:`;try{return e.createTypeUnsafe(o,[i?c.fallback?hexToU8a(c.fallback.toHex()):void 0:c.modifier.isOptional?e.createTypeUnsafe(o,[s],{blockHash:t,isPedantic:!0}):s],{blockHash:t,isOptional:c.modifier.isOptional,isPedantic:!c.modifier.isOptional})}catch(y){throw new Error(`Unable to decode storage ${n.section||"unknown"}.${n.method||"unknown"}:${h}: ${y.message}`)}}}mr=new WeakMap,_r=new WeakMap,Gr=new WeakMap,Dn=new WeakMap,zn=new WeakMap;const deriveNoopCache={del:()=>{},forEach:()=>{},get:()=>{},set:(r,e)=>e},CHACHE_EXPIRY=7*(24*60)*(60*1e3);let deriveCache;function wrapCache(r,e){return{del:t=>e.del(`${r}${t}`),forEach:e.forEach,get:t=>{const n=`${r}${t}`,s=e.get(n);if(s)return s.x=Date.now(),e.set(n,s),s.v},set:(t,n)=>{e.set(`${r}${t}`,{v:n,x:Date.now()})}}}function clearCache(r){const e=Date.now(),t=[];r.forEach((n,{x:s})=>{e-s>CHACHE_EXPIRY&&t.push(n)}),t.forEach(n=>r.del(n))}function setDeriveCache(r="",e){deriveCache=e?wrapCache(`derive:${r}:`,e):deriveNoopCache,e&&clearCache(e)}setDeriveCache();function firstObservable(r){return r.pipe(map(([e])=>e))}function firstMemo(r){return(e,t)=>memo(e,(...n)=>firstObservable(r(t,...n)))}function accountId(r,e){return memo(r,t=>{const n=isU8a(t)?t:decodeAddress((t||"").toString());if(n.length>8)return of(e.registry.createType("AccountId",n));const s=e.registry.createType("AccountIndex",n);return e.derive.accounts.indexToId(s.toString()).pipe(map(i=>assertReturn(i,"Unable to retrieve accountId")))})}function parseFlags(r,[e,t,n,s,i]){const a=r&&r.toString(),o=c=>c.toString()===a;return{isCouncil:((e==null?void 0:e.map(([c])=>c))||t||[]).some(o),isSociety:(s||[]).some(o),isSudo:(i==null?void 0:i.toString())===a,isTechCommittee:(n||[]).some(o)}}function flags(r,e){return memo(r,t=>{var n,s,i,a;const o=e.query.phragmenElection||e.query.electionsPhragmen||e.query.elections;return combineLatest([t&&o!==null&&o!==void 0&&o.members?o.members():of(void 0),t&&(n=e.query.council)!==null&&n!==void 0&&n.members?e.query.council.members():of([]),t&&(s=e.query.technicalCommittee)!==null&&s!==void 0&&s.members?e.query.technicalCommittee.members():of([]),t&&(i=e.query.society)!==null&&i!==void 0&&i.members?e.query.society.members():of([]),t&&(a=e.query.sudo)!==null&&a!==void 0&&a.key?e.query.sudo.key():of(void 0)]).pipe(map(c=>parseFlags(t,c)))})}function idAndIndex(r,e){return memo(r,t=>{try{const n=isU8a(t)?t:decodeAddress((t||"").toString());if(n.length>8){const i=e.registry.createType("AccountId",n);return e.derive.accounts.idToIndex(i).pipe(map(a=>[i,a]))}const s=e.registry.createType("AccountIndex",n);return e.derive.accounts.indexToId(s.toString()).pipe(map(i=>[i,s]))}catch{return of([void 0,void 0])}})}function idToIndex(r,e){return memo(r,t=>e.derive.accounts.indexes().pipe(map(n=>(n||{})[t.toString()])))}const UNDEF_HEX={toHex:()=>{}};function dataAsString(r){return r.isRaw?u8aToString(r.asRaw.toU8a(!0)):r.isNone?void 0:r.toHex()}function extractOther(r){return r.reduce((e,[t,n])=>{const s=dataAsString(t),i=dataAsString(n);return s&&i&&(e[s]=i),e},{})}function extractIdentity(r,e){if(!(r!=null&&r.isSome))return{judgements:[]};const{info:t,judgements:n}=r.unwrap(),s=dataAsString(t.display);return{display:e&&dataAsString(e[1])||s,displayParent:e&&s,email:dataAsString(t.email),image:dataAsString(t.image),judgements:n,legal:dataAsString(t.legal),other:extractOther(t.additional),parent:e&&e[0],pgp:t.pgpFingerprint.unwrapOr(UNDEF_HEX).toHex(),riot:dataAsString(t.riot),twitter:dataAsString(t.twitter),web:dataAsString(t.web)}}function getParent(r,e,t){if(e!=null&&e.isSome)return of([e,void 0]);if(t!=null&&t.isSome){const n=t.unwrap();return combineLatest([r.query.identity.identityOf(n[0]),of(n)])}return of([void 0,void 0])}function getBase(r,e){var t;return e&&(t=r.query.identity)!==null&&t!==void 0&&t.identityOf?r.queryMulti([[r.query.identity.identityOf,e],[r.query.identity.superOf,e]]):of([void 0,void 0])}function identity$1(r,e){return memo(r,t=>getBase(e,t).pipe(switchMap(([n,s])=>getParent(e,n,s)),map(([n,s])=>extractIdentity(n,s))))}const hasIdentity=firstMemo((r,e)=>r.derive.accounts.hasIdentityMulti([e]));function hasIdentityMulti(r,e){return memo(r,t=>{var n;return(n=e.query.identity)!==null&&n!==void 0&&n.identityOf?combineLatest([e.query.identity.identityOf.multi(t),e.query.identity.superOf.multi(t)]).pipe(map(([s,i])=>s.map((a,o)=>{const c=i[o],h=c&&c.isSome?c.unwrap()[0].toString():void 0;let y;if(a&&a.isSome){const x=dataAsString(a.unwrap().info.display);x&&!isHex(x)&&(y=x)}return{display:y,hasIdentity:!!(y||h),parentId:h}}))):of(t.map(()=>({hasIdentity:!1})))})}function indexToId(r,e){return memo(r,t=>e.query.indices?e.query.indices.accounts(t).pipe(map(n=>n.unwrapOr([])[0])):of(void 0))}let indicesCache=null;function queryAccounts(r){return r.query.indices.accounts.entries().pipe(map(e=>e.reduce((t,[n,s])=>(s.isSome&&(t[s.unwrap()[0].toString()]=r.registry.createType("AccountIndex",n.args[0])),t),{})))}function indexes$1(r,e){return memo(r,()=>indicesCache?of(indicesCache):(e.query.indices?queryAccounts(e).pipe(startWith({})):of({})).pipe(map(t=>(indicesCache=t,t))))}function retrieveNick(r,e){var t;return(e&&(t=r.query.nicks)!==null&&t!==void 0&&t.nameOf?r.query.nicks.nameOf(e):of(void 0)).pipe(map(n=>n!=null&&n.isSome?u8aToString(n.unwrap()[0]).substr(0,r.consts.nicks.maxLength.toNumber()):void 0))}function info$4(r,e){return memo(r,t=>e.derive.accounts.idAndIndex(t).pipe(switchMap(([n,s])=>combineLatest([of({accountId:n,accountIndex:s}),e.derive.accounts.identity(n),retrieveNick(e,n)])),map(([{accountId:n,accountIndex:s},i,a])=>({accountId:n,accountIndex:s,identity:i,nickname:a}))))}var accounts$1=Object.freeze(Object.defineProperty({__proto__:null,accountId,flags,idAndIndex,idToIndex,identity:identity$1,hasIdentity,hasIdentityMulti,indexToId,indexes:indexes$1,info:info$4},Symbol.toStringTag,{value:"Module"}));function orderBags(r,e){const t=r.map((s,i)=>({bag:e[i].unwrapOr(null),id:s,key:s.toString()})).sort((s,i)=>i.id.cmp(s.id)).map((s,i)=>Je(Ce({},s),{bagLower:BN_ZERO,bagUpper:s.id,index:i})),n=t.length-1;return t.map((s,i)=>i===n?s:Je(Ce({},s),{bagLower:t[i+1].bagUpper}))}function _getIds(r,e){return memo(r,t=>{const n=t.map(s=>bnToBn(s));return n.length?e.query.listBags.multi(n).pipe(map(s=>orderBags(n,s))):of([])})}function all$1(r,e){return memo(r,()=>e.query.bagsList.listBags.keys().pipe(switchMap(t=>e.derive.bagsList._getIds(t.map(({args:[n]})=>n))),map(t=>t.filter(({bag:n})=>n))))}function get(r,e){return memo(r,t=>e.derive.bagsList._getIds([bnToBn(t)]).pipe(map(n=>n[0])))}function expand(r,e){return memo(r,t=>e.derive.bagsList.listNodes(t.bag).pipe(map(n=>Je(Ce({},t),{nodes:n}))))}function getExpanded(r,e){return memo(r,t=>e.derive.bagsList.get(t).pipe(switchMap(n=>e.derive.bagsList.expand(n))))}function traverseLinks(r,e){const t=new BehaviorSubject(e);return t.pipe(switchMap(n=>r.query.bagsList.listNodes(n)),tap(n=>{setTimeout(()=>{n.isSome&&n.value.next.isSome?t.next(n.unwrap().next.unwrap()):t.complete()},0)}),toArray(),map(n=>n.map(s=>s.unwrap())))}function listNodes(r,e){return memo(r,t=>t&&t.head.isSome?traverseLinks(e,t.head.unwrap()):of([]))}var bagsList=Object.freeze(Object.defineProperty({__proto__:null,_getIds,all:all$1,get,expand,getExpanded,listNodes},Symbol.toStringTag,{value:"Module"}));const VESTING_ID="0x76657374696e6720";function calcLocked(r,e,t){let n=r.registry.createType("Balance"),s=[],i=r.registry.createType("Balance"),a=!1;if(Array.isArray(t)){s=t.filter(({until:c})=>!c||e&&c.gt(e)),a=s.some(({amount:c})=>c&&c.isMax()),i=r.registry.createType("Balance",s.filter(({id:c})=>c.eq(VESTING_ID)).reduce((c,{amount:h})=>c.iadd(h),new BN(0)));const o=s.filter(({amount:c})=>c&&!c.isMax());o.length&&(n=r.registry.createType("Balance",bnMax(...o.map(({amount:c})=>c))))}return{allLocked:a,lockedBalance:n,lockedBreakdown:s,vestingLocked:i}}function calcShared(r,e,t,n){const{allLocked:s,lockedBalance:i,lockedBreakdown:a,vestingLocked:o}=calcLocked(r,e,n);return Je(Ce({},t),{availableBalance:r.registry.createType("Balance",s?0:bnMax(new BN(0),t.freeBalance.sub(i))),lockedBalance:i,lockedBreakdown:a,vestingLocked:o})}function calcVesting(r,e,t){const n=t||[],s=!e.vestingLocked.isZero(),i=n.map(({locked:c,perBlock:h,startingBlock:y})=>r.gt(y)?bnMin(c,h.mul(r.sub(y))):BN_ZERO),a=i.reduce((c,h)=>c.iadd(h),new BN(0)),o=n.reduce((c,{locked:h})=>c.iadd(h),new BN(0));return{isVesting:s,vestedBalance:a,vestedClaimable:s?e.vestingLocked.sub(o.sub(a)):BN_ZERO,vesting:n.map(({locked:c,perBlock:h,startingBlock:y},x)=>({endBlock:c.div(h).iadd(y),locked:c,perBlock:h,startingBlock:y,vested:i[x]})).filter(({locked:c})=>!c.isZero()),vestingTotal:o}}function calcBalances$1(r,[e,t,[n,s,i]]){const a=calcShared(r,t,e,s[0]);return Je(Ce(Ce({},a),calcVesting(t,a,n)),{accountId:e.accountId,accountNonce:e.accountNonce,additional:s.filter((o,c)=>c!==0).map((o,c)=>calcShared(r,t,e.additional[c],o)),namedReserves:i})}function queryOld(r,e){return r.queryMulti([[r.query.balances.locks,e],[r.query.balances.vesting,e]]).pipe(map(([t,n])=>{let s=null;if(n.isSome){const{offset:i,perBlock:a,startingBlock:o}=n.unwrap();s=r.registry.createType("VestingInfo",{locked:i,perBlock:a,startingBlock:o})}return[s?[s]:null,[t],[]]}))}const isNonNullable=r=>!!r;function createCalls(r,e){return[e.map(t=>!t),e.filter(isNonNullable).map(t=>[t,r])]}function queryCurrent(r,e,t=["balances"]){var n;const[s,i]=createCalls(e,t.map(c=>{var h,y;return((h=r.derive[c])===null||h===void 0?void 0:h.customLocks)||((y=r.query[c])===null||y===void 0?void 0:y.locks)})),[a,o]=createCalls(e,t.map(c=>{var h;return(h=r.query[c])===null||h===void 0?void 0:h.reserves}));return combineLatest([(n=r.query.vesting)!==null&&n!==void 0&&n.vesting?r.query.vesting.vesting(e):of(r.registry.createType("Option<VestingInfo>")),i.length?r.queryMulti(i):of([]),o.length?r.queryMulti(o):of([])]).pipe(map(([c,h,y])=>{let x=-1,E=-1;const V=c.unwrapOr(null);return[V?Array.isArray(V)?V:[V]:null,s.map(F=>F?r.registry.createType("Vec<BalanceLock>"):h[++x]),a.map(F=>F?r.registry.createType("Vec<PalletBalancesReserveData>"):y[++E])]}))}function all(r,e){const t=e.registry.getModuleInstances(e.runtimeVersion.specName.toString(),"balances");return memo(r,n=>e.derive.balances.account(n).pipe(switchMap(s=>{var i,a;return s.accountId.isEmpty?of([s,e.registry.createType("BlockNumber"),[null,[],[]]]):combineLatest([of(s),e.derive.chain.bestNumber(),isFunction$3((i=e.query.system)===null||i===void 0?void 0:i.account)||isFunction$3((a=e.query.balances)===null||a===void 0?void 0:a.account)?queryCurrent(e,s.accountId,t):queryOld(e,s.accountId)])}),map(s=>calcBalances$1(e,s))))}function zeroBalance(r){return r.registry.createType("Balance")}function getBalance(r,[e,t,n,s]){const i=r.registry.createType("Balance",e.toBn());return{freeBalance:e,frozenFee:n,frozenMisc:s,reservedBalance:t,votingBalance:i}}function calcBalances(r,[e,[t,[n,...s]]]){return Ce({accountId:e,accountNonce:t,additional:s.map(i=>getBalance(r,i))},getBalance(r,n))}function queryBalancesFree(r,e){return r.queryMulti([[r.query.balances.freeBalance,e],[r.query.balances.reservedBalance,e],[r.query.system.accountNonce,e]]).pipe(map(([t,n,s])=>[s,[[t,n,zeroBalance(r),zeroBalance(r)]]]))}function queryNonceOnly(r,e){const t=n=>[n,[[zeroBalance(r),zeroBalance(r),zeroBalance(r),zeroBalance(r)]]];return isFunction$3(r.query.system.account)?r.query.system.account(e).pipe(map(({nonce:n})=>t(n))):isFunction$3(r.query.system.accountNonce)?r.query.system.accountNonce(e).pipe(map(n=>t(n))):of(t(r.registry.createType("Index")))}function queryBalancesAccount(r,e,t=["balances"]){const n=t.map(i=>{var a,o;return((a=r.derive[i])===null||a===void 0?void 0:a.customAccount)||((o=r.query[i])===null||o===void 0?void 0:o.account)}).filter(i=>isFunction$3(i)).map(i=>[i,e]),s=(i,a)=>[i,a.map(({feeFrozen:o,free:c,miscFrozen:h,reserved:y})=>[c,y,o,h])];return n.length?isFunction$3(r.query.system.account)?r.queryMulti([[r.query.system.account,e],...n]).pipe(map(([{nonce:i},...a])=>s(i,a))):r.queryMulti([[r.query.system.accountNonce,e],...n]).pipe(map(([i,...a])=>s(i,a))):queryNonceOnly(r,e)}function querySystemAccount(r,e){return r.query.system.account(e).pipe(map(t=>{const n=t.nonce?t.data:t[1],s=t.nonce||t[0];if(!n||n.isEmpty)return[s,[[zeroBalance(r),zeroBalance(r),zeroBalance(r),zeroBalance(r)]]];const{feeFrozen:i,free:a,miscFrozen:o,reserved:c}=n;return[s,[[a,c,i,o]]]}))}function account$1(r,e){const t=e.registry.getModuleInstances(e.runtimeVersion.specName.toString(),"balances");return memo(r,n=>e.derive.accounts.accountId(n).pipe(switchMap(s=>{var i,a,o;return s?combineLatest([of(s),t?queryBalancesAccount(e,s,t):isFunction$3((i=e.query.system)===null||i===void 0?void 0:i.account)?querySystemAccount(e,s):isFunction$3((a=e.query.balances)===null||a===void 0?void 0:a.account)?queryBalancesAccount(e,s):isFunction$3((o=e.query.balances)===null||o===void 0?void 0:o.freeBalance)?queryBalancesFree(e,s):queryNonceOnly(e,s)]):of([e.registry.createType("AccountId"),[e.registry.createType("Index"),[[zeroBalance(e),zeroBalance(e),zeroBalance(e),zeroBalance(e)]]]])}),map(s=>calcBalances(e,s))))}function votingBalances(r,e){return memo(r,t=>!t||!t.length?of([]):combineLatest(t.map(n=>e.derive.balances.account(n))))}const votingBalance=all;var balances=Object.freeze(Object.defineProperty({__proto__:null,all,votingBalance,account:account$1,votingBalances},Symbol.toStringTag,{value:"Module"}));function filterBountiesProposals(r,e){const t=r.tx.bounties?r.tx.bounties:r.tx.treasury,n=[t.approveBounty,t.closeBounty,t.proposeCurator,t.unassignCurator];return e.filter(s=>n.find(i=>i.is(s.proposal)))}function parseResult$2([r,e,t,n]){const s=[];return r.forEach((i,a)=>{i.isSome&&s.push({bounty:i.unwrap(),description:e[a].unwrapOrDefault().toUtf8(),index:t[a],proposals:n.filter(o=>t[a].eq(o.proposal.args[0]))})}),s}function bounties$1(r,e){const t=e.query.bounties||e.query.treasury;return memo(r,()=>t.bounties?combineLatest([t.bountyCount(),e.query.council?e.query.council.proposalCount():of(0)]).pipe(switchMap(()=>combineLatest([t.bounties.keys(),e.derive.council?e.derive.council.proposals():of([])])),switchMap(([n,s])=>{const i=n.map(({args:[a]})=>a);return combineLatest([t.bounties.multi(i),t.bountyDescriptions.multi(i),of(i),of(filterBountiesProposals(e,s))])}),map(parseResult$2)):of(parseResult$2([[],[],[],[]])))}var bounties=Object.freeze(Object.defineProperty({__proto__:null,bounties:bounties$1},Symbol.toStringTag,{value:"Module"}));function unwrapBlockNumber(r){return(e,t)=>memo(e,()=>r(t).pipe(map(n=>n.number.unwrap())))}const bestNumber=unwrapBlockNumber(r=>r.derive.chain.subscribeNewHeads()),bestNumberFinalized=unwrapBlockNumber(r=>r.rpc.chain.subscribeFinalizedHeads());function bestNumberLag(r,e){return memo(r,()=>combineLatest([e.derive.chain.bestNumber(),e.derive.chain.bestNumberFinalized()]).pipe(map(([t,n])=>e.registry.createType("BlockNumber",t.sub(n)))))}function extractAuthor(r,e=[]){const[t]=r.logs.filter(a=>a.isConsensus),[n]=r.logs.filter(a=>a.isPreRuntime),[s]=r.logs.filter(a=>a.isSeal);let i;try{if(n){const[a,o]=n.asPreRuntime;i=a.extractAuthor(o,e)}if(!i&&t){const[a,o]=t.asConsensus;i=a.extractAuthor(o,e)}if(!i&&s){const[a,o]=s.asSeal;i=a.extractAuthor(o,e)}}catch{}return i}function createHeaderExtended(r,e,t){var i,a;const n=r.createClass("Header");class s extends n{constructor(h,y,x){super(h,y);G(this,i,void 0);G(this,a,void 0);te(this,i,extractAuthor(this.digest,x)),te(this,a,x),this.createdAtHash=y==null?void 0:y.createdAtHash}get author(){return T(this,i)}get validators(){return T(this,a)}}return i=new WeakMap,a=new WeakMap,new s(r,e,t)}function mapExtrinsics(r,e){return r.map((t,n)=>{let s,i;const a=e.filter(({phase:o})=>o.isApplyExtrinsic&&o.asApplyExtrinsic.eq(n)).map(({event:o})=>(o.section==="system"&&(o.method==="ExtrinsicSuccess"?i=o.data[0]:o.method==="ExtrinsicFailed"&&(s=o.data[0],i=o.data[1])),o));return{dispatchError:s,dispatchInfo:i,events:a,extrinsic:t}})}function createSignedBlockExtended(r,e,t,n){var a,o,c;const s=r.createClass("SignedBlock");class i extends s{constructor(x,E,V,F){super(x,E);G(this,a,void 0);G(this,o,void 0);G(this,c,void 0);te(this,a,extractAuthor(this.block.header.digest,F)),te(this,o,V||[]),te(this,c,mapExtrinsics(this.block.extrinsics,T(this,o))),this.createdAtHash=E==null?void 0:E.createdAtHash}get author(){return T(this,a)}get events(){return T(this,o)}get extrinsics(){return T(this,c)}}return a=new WeakMap,o=new WeakMap,c=new WeakMap,new i(r,e,t,n)}function getHeader(r,e){return memo(r,t=>combineLatest([e.rpc.chain.getHeader(t),e.queryAt(t).pipe(switchMap(n=>n.session?n.session.validators():of([])))]).pipe(map(([n,s])=>createHeaderExtended(n.registry,n,s)),catchError(()=>of())))}function getBlock(r,e){return memo(r,t=>combineLatest([e.rpc.chain.getBlock(t),e.queryAt(t).pipe(switchMap(n=>combineLatest([n.system.events(),n.session?n.session.validators():of([])])))]).pipe(map(([n,[s,i]])=>createSignedBlockExtended(e.registry,n,s,i)),catchError(()=>of())))}function getBlockByNumber(r,e){return memo(r,t=>e.rpc.chain.getBlockHash(t).pipe(switchMap(n=>e.derive.chain.getBlock(n))))}function subscribeNewBlocks(r,e){return memo(r,()=>e.derive.chain.subscribeNewHeads().pipe(switchMap(t=>{const n=t.createdAtHash||t.hash;return combineLatest([of(t),e.rpc.chain.getBlock(n),e.queryAt(n).pipe(switchMap(s=>s.system.events()))])}),map(([t,n,s])=>createSignedBlockExtended(n.registry,n,s,t.validators))))}function subscribeNewHeads(r,e){return memo(r,()=>combineLatest([e.rpc.chain.subscribeNewHeads(),e.query.session?e.query.session.validators():of(void 0)]).pipe(map(([t,n])=>(t.createdAtHash=t.hash,createHeaderExtended(t.registry,t,n)))))}var chain=Object.freeze(Object.defineProperty({__proto__:null,bestNumber,bestNumberFinalized,bestNumberLag,getHeader,getBlock,getBlockByNumber,subscribeNewBlocks,subscribeNewHeads},Symbol.toStringTag,{value:"Module"}));function queryConstants(r){return of([r.consts.contracts.callBaseFee||r.registry.createType("Balance"),r.consts.contracts.contractFee||r.registry.createType("Balance"),r.consts.contracts.creationFee||r.registry.createType("Balance"),r.consts.contracts.transactionBaseFee||r.registry.createType("Balance"),r.consts.contracts.transactionByteFee||r.registry.createType("Balance"),r.consts.contracts.transferFee||r.registry.createType("Balance"),r.consts.contracts.rentByteFee,r.consts.contracts.rentDepositOffset,r.consts.contracts.surchargeReward,r.consts.contracts.tombstoneDeposit])}function fees(r,e){return memo(r,()=>queryConstants(e).pipe(map(([t,n,s,i,a,o,c,h,y,x])=>({callBaseFee:t,contractFee:n,creationFee:s,rentByteFee:c,rentDepositOffset:h,surchargeReward:y,tombstoneDeposit:x,transactionBaseFee:i,transactionByteFee:a,transferFee:o}))))}var contracts=Object.freeze(Object.defineProperty({__proto__:null,fees},Symbol.toStringTag,{value:"Module"}));function getInstance(r,e){const t=r.registry.getModuleInstances(r.runtimeVersion.specName.toString(),e),n=t&&t.length?t[0]:e;return r.query[n]}function withSection(r,e){return(t,n)=>memo(t,e(getInstance(n,r),n,t))}function callMethod(r,e){return t=>withSection(t,n=>()=>isFunction$3(n==null?void 0:n[r])?n[r]():of(e))}const members$4=callMethod("members",[]);function prime$3(r){return withSection(r,e=>()=>isFunction$3(e==null?void 0:e.prime)?e.prime().pipe(map(t=>t.unwrapOr(null))):of(null))}function parse$4(r,[e,t,n]){return t.map((s,i)=>s&&s.isSome?{hash:r.registry.createType("Hash",e[i]),proposal:s.unwrap(),votes:n[i].unwrapOr(null)}:null).filter(s=>!!s)}function _proposalsFrom(r,e,t){return(isFunction$3(e==null?void 0:e.proposals)&&t.length?combineLatest([of(t),combineLatest(t.map(n=>e.proposalOf(n).pipe(catchError(()=>of(null))))),e.voting.multi(t)]):of([[],[],[]])).pipe(map(n=>parse$4(r,n)))}function hasProposals$3(r){return withSection(r,e=>()=>of(isFunction$3(e==null?void 0:e.proposals)))}function proposals$5(r){return withSection(r,(e,t)=>()=>t.derive[r].proposalHashes().pipe(switchMap(n=>_proposalsFrom(t,e,n))))}function proposal$3(r){return withSection(r,(e,t)=>n=>isFunction$3(e==null?void 0:e.proposals)?firstObservable(_proposalsFrom(t,e,[n])):of(null))}const proposalCount$3=callMethod("proposalCount",null),proposalHashes$3=callMethod("proposals",[]);function isVoter(r){return!Array.isArray(r)}function retrieveStakeOf(r){return r.stakeOf.entries().pipe(map(e=>e.map(([{args:[t]},n])=>[t,n])))}function retrieveVoteOf(r){return r.votesOf.entries().pipe(map(e=>e.map(([{args:[t]},n])=>[t,n])))}function retrievePrev(r,e){return combineLatest([retrieveStakeOf(e),retrieveVoteOf(e)]).pipe(map(([t,n])=>{const s=[];return n.forEach(([i,a])=>{s.push([i,{stake:r.registry.createType("Balance"),votes:a}])}),t.forEach(([i,a])=>{const o=s.find(([c])=>c.eq(i));o?o[1].stake=a:s.push([i,{stake:a,votes:[]}])}),s}))}function retrieveCurrent(r){return r.voting.entries().pipe(map(e=>e.map(([{args:[t]},n])=>[t,isVoter(n)?{stake:n.stake,votes:n.votes}:{stake:n[0],votes:n[1]}])))}function votes(r,e){const t=e.query.phragmenElection||e.query.electionsPhragmen||e.query.elections;return memo(r,()=>t?t.stakeOf?retrievePrev(e,t):retrieveCurrent(t):of([]))}function votesOf(r,e){return memo(r,t=>e.derive.council.votes().pipe(map(n=>(n.find(([s])=>s.eq(t))||[null,{stake:e.registry.createType("Balance"),votes:[]}])[1])))}const members$3=members$4("council"),hasProposals$2=hasProposals$3("council"),proposal$2=proposal$3("council"),proposalCount$2=proposalCount$3("council"),proposalHashes$2=proposalHashes$3("council"),proposals$4=proposals$5("council"),prime$2=prime$3("council");var council=Object.freeze(Object.defineProperty({__proto__:null,members:members$3,hasProposals:hasProposals$2,proposal:proposal$2,proposalCount:proposalCount$2,proposalHashes:proposalHashes$2,proposals:proposals$4,prime:prime$2,votes,votesOf},Symbol.toStringTag,{value:"Module"}));function createChildKey(r){return u8aToHex(u8aConcat(":child_storage:default:",blake2AsU8a(u8aConcat("crowdloan",(r.fundIndex||r.trieIndex).toU8a()))))}function childKey(r,e){return memo(r,t=>e.query.crowdloan.funds(t).pipe(map(n=>n.isSome?createChildKey(n.unwrap()):null)))}function extractContributed(r,e){var t;const n=[],s=[];return e.filter(({event:{data:[,i],method:a,section:o}})=>o==="crowdloan"&&["Contributed","Withdrew"].includes(a)&&i.eq(r)).reduce((i,{event:{data:[a],method:o}})=>(o==="Contributed"?i.added.push(a.toHex()):i.removed.push(a.toHex()),i),{added:n,blockHash:((t=e.createdAtHash)===null||t===void 0?void 0:t.toHex())||"-",removed:s})}const PAGE_SIZE_K$1=1e3;function _getUpdates(r,e){let t=[],n=[];return r.query.system.events().pipe(switchMap(s=>{const i=extractContributed(e,s);if(i.added.length||i.removed.length){var a;return t=t.concat(...i.added),n=n.concat(...i.removed),of({added:t,addedDelta:i.added,blockHash:((a=s.createdAtHash)===null||a===void 0?void 0:a.toHex())||"-",removed:n,removedDelta:i.removed})}return EMPTY}),startWith({added:t,addedDelta:[],blockHash:"-",removed:n,removedDelta:[]}))}function _eventTriggerAll(r,e){return r.query.system.events().pipe(switchMap(t=>{var n;return t.filter(({event:{data:[i],method:a,section:o}})=>o==="crowdloan"&&["AllRefunded","Dissolved","PartiallyRefunded"].includes(a)&&i.eq(e)).length?of(((n=t.createdAtHash)===null||n===void 0?void 0:n.toHex())||"-"):EMPTY}),startWith("-"))}function _getKeysPaged(r,e){const t=new BehaviorSubject(void 0);return t.pipe(switchMap(n=>r.rpc.childstate.getKeysPaged(e,"0x",PAGE_SIZE_K$1,n)),tap(n=>{setTimeout(()=>{n.length===PAGE_SIZE_K$1?t.next(n[PAGE_SIZE_K$1-1].toHex()):t.complete()},0)}),toArray(),map(n=>arrayFlatten(n)))}function _getAll(r,e,t){return _eventTriggerAll(r,e).pipe(switchMap(()=>isFunction$3(r.rpc.childstate.getKeysPaged)?_getKeysPaged(r,t):r.rpc.childstate.getKeys(t,"0x")),map(n=>n.map(s=>s.toHex())))}function _contributions$1(r,e,t){return combineLatest([_getAll(r,e,t),_getUpdates(r,e)]).pipe(map(([n,{added:s,blockHash:i,removed:a}])=>{const o={};return n.forEach(c=>{o[c]=!0}),s.forEach(c=>{o[c]=!0}),a.forEach(c=>{delete o[c]}),{blockHash:i,contributorsHex:Object.keys(o)}}))}function contributions(r,e){return memo(r,t=>e.derive.crowdloan.childKey(t).pipe(switchMap(n=>n?_contributions$1(e,t,n):of({blockHash:"-",contributorsHex:[]}))))}function _getValues(r,e,t){return combineLatest(t.map(n=>r.rpc.childstate.getStorage(e,n))).pipe(map(n=>n.map(s=>r.registry.createType("Option<StorageData>",s)).map(s=>s.isSome?r.registry.createType("Balance",s.unwrap()):r.registry.createType("Balance")).reduce((s,i,a)=>Je(Ce({},s),{[t[a]]:i}),{})))}function _watchOwnChanges(r,e,t,n){return r.query.system.events().pipe(switchMap(s=>{const i=extractContributed(e,s),a=n.filter(o=>i.added.includes(o)||i.removed.includes(o));return a.length?_getValues(r,t,a):EMPTY}),startWith({}))}function _contributions(r,e,t,n){return combineLatest([_getValues(r,t,n),_watchOwnChanges(r,e,t,n)]).pipe(map(([s,i])=>Ce(Ce({},s),i)))}function ownContributions(r,e){return memo(r,(t,n)=>e.derive.crowdloan.childKey(t).pipe(switchMap(s=>s&&n.length?_contributions(e,t,s,n):of({}))))}var crowdloan=Object.freeze(Object.defineProperty({__proto__:null,childKey,contributions,ownContributions},Symbol.toStringTag,{value:"Module"}));const DEMOCRACY_ID=stringToHex("democrac");function isMaybeHashed(r){return r.isBasic===!1}function queryQueue(r){return r.query.democracy.dispatchQueue().pipe(switchMap(e=>combineLatest([of(e),r.derive.democracy.preimages(e.map(([,t])=>t))])),map(([e,t])=>e.map(([n,s,i],a)=>({at:n,image:t[a],imageHash:s,index:i}))))}function schedulerEntries(r){return r.derive.democracy.referendumsFinished().pipe(switchMap(()=>r.query.scheduler.agenda.keys()),switchMap(e=>{const t=e.map(({args:[n]})=>n);return t.length?combineLatest([of(t),combineLatest(t.map(n=>r.query.scheduler.agenda(n).pipe(catchError(()=>of(null)))))]):of([[],[]])}))}function queryScheduler(r){return schedulerEntries(r).pipe(switchMap(([e,t])=>{const n=[];return e.forEach((s,i)=>{(t[i]||[]).filter(a=>a.isSome).forEach(a=>{const o=a.unwrap();if(o.maybeId.isSome){const c=o.maybeId.unwrap().toHex();if(c.startsWith(DEMOCRACY_ID)){const h=isMaybeHashed(o.call)?o.call.isHash?o.call.asHash:o.call.asValue.args[0]:o.call.args[0];n.push({at:s,imageHash:h,index:r.registry.createType("(u64, ReferendumIndex)",c)[1]})}}})}),combineLatest([of(n),n.length?r.derive.democracy.preimages(n.map(({imageHash:s})=>s)):of([])])}),map(([e,t])=>e.map((n,s)=>Je(Ce({},n),{image:t[s]}))))}function dispatchQueue(r,e){return memo(r,()=>{var t;return isFunction$3((t=e.query.scheduler)===null||t===void 0?void 0:t.agenda)?queryScheduler(e):e.query.democracy.dispatchQueue?queryQueue(e):of([])})}const LOCKUPS=[0,1,2,4,8,16,32];function parseEnd(r,e,{approved:t,end:n}){return[n,t.isTrue&&e.isAye||t.isFalse&&e.isNay?n.add((r.consts.democracy.voteLockingPeriod||r.consts.democracy.enactmentPeriod).muln(LOCKUPS[e.conviction.index])):BN_ZERO]}function parseLock(r,[e,t],n){const{balance:s,vote:i}=t.asStandard,[a,o]=n.isFinished?parseEnd(r,i,n.asFinished):[BN_ZERO,BN_ZERO];return{balance:s,isDelegated:!1,isFinished:n.isFinished,referendumEnd:a,referendumId:e,unlockAt:o,vote:i}}function delegateLocks(r,{balance:e,conviction:t,target:n}){return r.derive.democracy.locks(n).pipe(map(s=>s.map(({isFinished:i,referendumEnd:a,referendumId:o,unlockAt:c,vote:h})=>({balance:e,isDelegated:!0,isFinished:i,referendumEnd:a,referendumId:o,unlockAt:c.isZero()?c:a.add((r.consts.democracy.voteLockingPeriod||r.consts.democracy.enactmentPeriod).muln(LOCKUPS[t.index])),vote:r.registry.createType("Vote",{aye:h.isAye,conviction:t})}))))}function directLocks(r,{votes:e}){return e.length?r.query.democracy.referendumInfoOf.multi(e.map(([t])=>t)).pipe(map(t=>e.map((n,s)=>[n,t[s].unwrapOr(null)]).filter(n=>!!n[1]&&isUndefined(n[1].end)&&n[0][1].isStandard).map(([n,s])=>parseLock(r,n,s)))):of([])}function locks(r,e){return memo(r,t=>e.query.democracy.votingOf?e.query.democracy.votingOf(t).pipe(switchMap(n=>n.isDirect?directLocks(e,n.asDirect):n.isDelegating?delegateLocks(e,n.asDelegating):of([]))):of([]))}function withImage(r,e){if(e.isNone)return of(null);const[t,n]=e.unwrap();return r.derive.democracy.preimage(t).pipe(map(s=>({image:s,imageHash:t,threshold:n})))}function nextExternal(r,e){return memo(r,()=>{var t;return(t=e.query.democracy)!==null&&t!==void 0&&t.nextExternal?e.query.democracy.nextExternal().pipe(switchMap(n=>withImage(e,n))):of(null)})}function isDemocracyPreimage(r,e){return!!e&&!r.query.democracy.dispatchQueue}function constructProposal(r,[e,t,n,s]){let i;try{i=r.registry.createType("Proposal",e.toU8a(!0))}catch(a){console.error(a)}return{at:s,balance:n,proposal:i,proposer:t}}function parseDemocracy(r,e){if(!e.isNone){if(isDemocracyPreimage(r,e)){const t=e.unwrap();if(t.isMissing)return;const{data:n,deposit:s,provider:i,since:a}=t.asAvailable;return constructProposal(r,[n,i,s,a])}return constructProposal(r,e.unwrap())}}function getDemocracyImages(r,e){return r.query.democracy.preimages.multi(e).pipe(map(t=>t.map(n=>parseDemocracy(r,n))))}function preimages(r,e){return memo(r,t=>t.length?isFunction$3(e.query.democracy.preimages)?getDemocracyImages(e,t):of([]):of([]))}const preimage=firstMemo((r,e)=>r.derive.democracy.preimages([e]));function isNewDepositors(r){return isFunction$3(r[1].mul)}function parse$3([r,e,t]){return r.filter(([,,n],s)=>{var i;return!!((i=t[s])!==null&&i!==void 0&&i.isSome)&&!n.isEmpty}).map(([n,s,i],a)=>{const o=t[a].unwrap();return Je(Ce({},isNewDepositors(o)?{balance:o[1],seconds:o[0]}:{balance:o[0],seconds:o[1]}),{image:e[a],imageHash:s,index:n,proposer:i})})}function proposals$3(r,e){return memo(r,()=>{var t,n;return isFunction$3((t=e.query.democracy)===null||t===void 0?void 0:t.publicProps)&&isFunction$3((n=e.query.democracy)===null||n===void 0?void 0:n.preimages)?e.query.democracy.publicProps().pipe(switchMap(s=>s.length?combineLatest([of(s),e.derive.democracy.preimages(s.map(([,i])=>i)),e.query.democracy.depositOf.multi(s.map(([i])=>i))]):of([[],[],[]])),map(parse$3)):of([])})}function referendumIds(r,e){return memo(r,()=>{var t;return(t=e.query.democracy)!==null&&t!==void 0&&t.lowestUnbaked?e.queryMulti([e.query.democracy.lowestUnbaked,e.query.democracy.referendumCount]).pipe(map(([n,s])=>s.gt(n)?[...Array(s.sub(n).toNumber())].map((i,a)=>n.addn(a)):[])):of([])})}function referendums(r,e){return memo(r,()=>e.derive.democracy.referendumsActive().pipe(switchMap(t=>t.length?combineLatest([of(t),e.derive.democracy._referendumsVotes(t)]):of([[],[]])),map(([t,n])=>t.map((s,i)=>Ce(Ce({},s),n[i])))))}function referendumsActive(r,e){return memo(r,()=>e.derive.democracy.referendumIds().pipe(switchMap(t=>t.length?e.derive.democracy.referendumsInfo(t):of([]))))}function referendumsFinished(r,e){return memo(r,()=>e.derive.democracy.referendumIds().pipe(switchMap(t=>e.query.democracy.referendumInfoOf.multi(t)),map(t=>t.map(n=>n.unwrapOr(null)).filter(n=>!!n&&n.isFinished).map(n=>n.asFinished))))}function isOldInfo(r){return!!r.proposalHash}function isCurrentStatus(r){return!!r.tally}function compareRationals(r,e,t,n){for(;;){const s=r.div(e),i=t.div(n);if(s.lt(i))return!0;if(i.lt(s))return!1;const a=r.mod(e),o=t.mod(n);if(o.isZero())return!1;if(a.isZero())return!0;r=n,t=e,e=o,n=a}}function calcPassingOther(r,e,{votedAye:t,votedNay:n,votedTotal:s}){const i=bnSqrt(s);return i.isZero()?!1:r.isSuperMajorityApprove?compareRationals(n,i,t,e):compareRationals(n,e,t,i)}function calcPassing(r,e,t){return r.isSimpleMajority?t.votedAye.gt(t.votedNay):calcPassingOther(r,e,t)}function calcVotesPrev(r){return r.reduce((e,t)=>{const{balance:n,vote:s}=t,i=s.conviction.index===0,a=n.muln(i?1:s.conviction.index).divn(i?10:1);return s.isAye?(e.allAye.push(t),e.voteCountAye++,e.votedAye.iadd(a)):(e.allNay.push(t),e.voteCountNay++,e.votedNay.iadd(a)),e.voteCount++,e.votedTotal.iadd(a),e},{allAye:[],allNay:[],voteCount:0,voteCountAye:0,voteCountNay:0,votedAye:new BN(0),votedNay:new BN(0),votedTotal:new BN(0)})}function calcVotesCurrent(r,e){const t=[],n=[];return e.forEach(s=>{s.vote.isAye?t.push(s):n.push(s)}),{allAye:t,allNay:n,voteCount:t.length+n.length,voteCountAye:t.length,voteCountNay:n.length,votedAye:r.ayes,votedNay:r.nays,votedTotal:r.turnout}}function calcVotes(r,e,t){const n=isCurrentStatus(e.status)?calcVotesCurrent(e.status.tally,t):calcVotesPrev(t);return Je(Ce({},n),{isPassing:calcPassing(e.status.threshold,r,n),votes:t})}function getStatus(r){if(r.isNone)return null;const e=r.unwrap();return isOldInfo(e)?e:e.isOngoing?e.asOngoing:null}function votesPrev(r,e){return r.query.democracy.votersFor(e).pipe(switchMap(t=>combineLatest([of(t),t.length?r.query.democracy.voteOf.multi(t.map(n=>[e,n])):of([]),r.derive.balances.votingBalances(t)])),map(([t,n,s])=>t.map((i,a)=>({accountId:i,balance:s[a].votingBalance||r.registry.createType("Balance"),isDelegating:!1,vote:n[a]||r.registry.createType("Vote")}))))}function extractVotes(r,e){return r.filter(([,t])=>t.isDirect).map(([t,n])=>[t,n.asDirect.votes.filter(([s])=>s.eq(e))]).filter(([,t])=>!!t.length).reduce((t,[n,s])=>s.reduce((i,[,a])=>(a.isStandard&&i.push(Ce({accountId:n,isDelegating:!1},a.asStandard)),i),t),[])}function votesCurr(r,e){return r.query.democracy.votingOf.entries().pipe(map(t=>{const n=t.map(([{args:[a]},o])=>[a,o]),s=extractVotes(n,e),i=n.filter(([,a])=>a.isDelegating).map(([a,o])=>[a,o.asDelegating]);return i.forEach(([a,{balance:o,conviction:c,target:h}])=>{const y=i.find(([E])=>E.eq(h)),x=s.find(({accountId:E})=>E.eq(y?y[0]:h));x&&s.push({accountId:a,balance:o,isDelegating:!0,vote:r.registry.createType("Vote",{aye:x.vote.isAye,conviction:c})})}),s}))}function _referendumVotes(r,e){return memo(r,t=>combineLatest([e.derive.democracy.sqrtElectorate(),isFunction$3(e.query.democracy.votingOf)?votesCurr(e,t.index):votesPrev(e,t.index)]).pipe(map(([n,s])=>calcVotes(n,t,s))))}function _referendumsVotes(r,e){return memo(r,t=>t.length?combineLatest(t.map(n=>e.derive.democracy._referendumVotes(n))):of([]))}function _referendumInfo(r,e){return memo(r,(t,n)=>{const s=getStatus(n);return s?e.derive.democracy.preimage(s.proposalHash).pipe(map(i=>({image:i,imageHash:s.proposalHash,index:e.registry.createType("ReferendumIndex",t),status:s}))):of(null)})}function referendumsInfo(r,e){return memo(r,t=>t.length?e.query.democracy.referendumInfoOf.multi(t).pipe(switchMap(n=>combineLatest(t.map((s,i)=>e.derive.democracy._referendumInfo(s,n[i])))),map(n=>n.filter(s=>!!s))):of([]))}function sqrtElectorate(r,e){return memo(r,()=>e.query.balances.totalIssuance().pipe(map(bnSqrt)))}var democracy=Object.freeze(Object.defineProperty({__proto__:null,dispatchQueue,locks,nextExternal,preimages,preimage,proposals:proposals$3,referendumIds,referendums,referendumsActive,referendumsFinished,_referendumVotes,_referendumsVotes,_referendumInfo,referendumsInfo,sqrtElectorate},Symbol.toStringTag,{value:"Module"}));function isSeatHolder(r){return!Array.isArray(r)}function isCandidateTuple(r){return Array.isArray(r)}function getAccountTuple(r){return isSeatHolder(r)?[r.who,r.stake]:r}function getCandidate(r){return isCandidateTuple(r)?r[0]:r}function sortAccounts([,r],[,e]){return e.cmp(r)}function getConstants(r,e){return e?{candidacyBond:r.consts[e].candidacyBond,desiredRunnersUp:r.consts[e].desiredRunnersUp,desiredSeats:r.consts[e].desiredMembers,termDuration:r.consts[e].termDuration,votingBond:r.consts[e].votingBond}:{}}function getModules(r){const[e]=r.registry.getModuleInstances(r.runtimeVersion.specName.toString(),"council")||["council"],t=r.query.phragmenElection?"phragmenElection":r.query.electionsPhragmen?"electionsPhragmen":r.query.elections?"elections":null;return[e,t]}function info$3(r,e){return memo(r,()=>{const[t,n]=getModules(e);return(n?e.queryMulti([e.query[t].members,e.query[n].candidates,e.query[n].members,e.query[n].runnersUp]):combineLatest([e.query[t].members(),of([]),of([]),of([])])).pipe(map(([s,i,a,o])=>Je(Ce({},getConstants(e,n)),{candidateCount:e.registry.createType("u32",i.length),candidates:i.map(getCandidate),members:a.length?a.map(getAccountTuple).sort(sortAccounts):s.map(c=>[c,e.registry.createType("Balance")]),runnersUp:o.map(getAccountTuple).sort(sortAccounts)})))})}var elections=Object.freeze(Object.defineProperty({__proto__:null,info:info$3},Symbol.toStringTag,{value:"Module"}));function mapResult([r,e,t,n]){return e.forEach((s,i)=>{const a=s.toString(),o=n[i],c=!t[i].isEmpty,h=r[a];(!h||h.hasMessage!==c||!h.blockCount.eq(o))&&(r[a]={blockCount:o,hasMessage:c,isOnline:c||o.gt(BN_ZERO)})}),r}function receivedHeartbeats(r,e){return memo(r,()=>{var t;return(t=e.query.imOnline)!==null&&t!==void 0&&t.receivedHeartbeats?e.derive.staking.overview().pipe(switchMap(({currentIndex:n,validators:s})=>combineLatest([of({}),of(s),e.query.imOnline.receivedHeartbeats.multi(s.map((i,a)=>[n,a])),e.query.imOnline.authoredBlocks.multi(s.map(i=>[n,i]))])),map(mapResult)):of({})})}var imOnline=Object.freeze(Object.defineProperty({__proto__:null,receivedHeartbeats},Symbol.toStringTag,{value:"Module"}));const members$2=members$4("membership"),hasProposals$1=hasProposals$3("membership"),proposal$1=proposal$3("membership"),proposalCount$1=proposalCount$3("membership"),proposalHashes$1=proposalHashes$3("membership"),proposals$2=proposals$5("membership"),prime$1=prime$3("membership");var membership=Object.freeze(Object.defineProperty({__proto__:null,members:members$2,hasProposals:hasProposals$1,proposal:proposal$1,proposalCount:proposalCount$1,proposalHashes:proposalHashes$1,proposals:proposals$2,prime:prime$1},Symbol.toStringTag,{value:"Module"}));function didUpdateToBool(r,e){return r.isSome?r.unwrap().some(t=>t.eq(e)):!1}function parseActive(r,e){const t=e.find(([n])=>n===r);if(t&&t[1].isSome){const[n,s]=t[1].unwrap();return Ce({collatorId:n},s.isWithRetries?{isRetriable:!0,retries:s.asWithRetries.toNumber()}:{isRetriable:!1,retries:0})}return null}function parseCollators(r,e){return e.map(t=>{const n=t.find(([s])=>s===r);return n?n[1]:null})}function parse$2(r,[e,t,n,s,i,a,o,c]){return i.isNone?null:{active:parseActive(r,e),didUpdate:didUpdateToBool(s,r),heads:o,id:r,info:Ce({id:r},i.unwrap()),pendingSwapId:a.unwrapOr(null),relayDispatchQueue:c,retryCollators:parseCollators(r,t),selectedCollators:parseCollators(r,n)}}function info$2(r,e){return memo(r,t=>e.query.registrar&&e.query.parachains?e.queryMulti([e.query.registrar.active,e.query.registrar.retryQueue,e.query.registrar.selectedThreads,e.query.parachains.didUpdate,[e.query.registrar.paras,t],[e.query.registrar.pendingSwap,t],[e.query.parachains.heads,t],[e.query.parachains.relayDispatchQueue,t]]).pipe(map(n=>parse$2(e.registry.createType("ParaId",t),n))):of(null))}function parse$1([r,e,t,n,s]){return r.map((i,a)=>({didUpdate:didUpdateToBool(e,i),id:i,info:Ce({id:i},t[a].unwrapOr(null)),pendingSwapId:n[a].unwrapOr(null),relayDispatchQueueSize:s[a][0].toNumber()}))}function overview$1(r,e){return memo(r,()=>{var t;return(t=e.query.registrar)!==null&&t!==void 0&&t.parachains&&e.query.parachains?e.query.registrar.parachains().pipe(switchMap(n=>combineLatest([of(n),e.query.parachains.didUpdate(),e.query.registrar.paras.multi(n),e.query.registrar.pendingSwap.multi(n),e.query.parachains.relayDispatchQueueSize.multi(n)])),map(parse$1)):of([])})}var parachains=Object.freeze(Object.defineProperty({__proto__:null,info:info$2,overview:overview$1},Symbol.toStringTag,{value:"Module"}));function parse([r,e,t,n,s]){return{activeEra:e,activeEraStart:t,currentEra:n,currentIndex:r,validatorCount:s}}function queryStaking(r){return r.queryMulti([r.query.session.currentIndex,r.query.staking.activeEra,r.query.staking.currentEra,r.query.staking.validatorCount]).pipe(map(([e,t,n,s])=>{const{index:i,start:a}=t.unwrapOrDefault();return parse([e,i,a,n.unwrapOrDefault(),s])}))}function querySession(r){return r.query.session.currentIndex().pipe(map(e=>parse([e,r.registry.createType("EraIndex"),r.registry.createType("Option<Moment>"),r.registry.createType("EraIndex"),r.registry.createType("u32")])))}function empty(r){return of(parse([r.registry.createType("SessionIndex",1),r.registry.createType("EraIndex"),r.registry.createType("Option<Moment>"),r.registry.createType("EraIndex"),r.registry.createType("u32")]))}function indexes(r,e){return memo(r,()=>e.query.session?e.query.staking?queryStaking(e):querySession(e):empty(e))}function info$1(r,e){return memo(r,()=>e.derive.session.indexes().pipe(map(t=>{var n,s,i,a;const o=((n=e.consts)===null||n===void 0||(s=n.babe)===null||s===void 0?void 0:s.epochDuration)||e.registry.createType("u64",1),c=((i=e.consts)===null||i===void 0||(a=i.staking)===null||a===void 0?void 0:a.sessionsPerEra)||e.registry.createType("SessionIndex",1);return Je(Ce({},t),{eraLength:e.registry.createType("BlockNumber",c.mul(o)),isEpoch:!!e.query.babe,sessionLength:o,sessionsPerEra:c})})))}function withProgressField(r){return(e,t)=>memo(e,()=>t.derive.session.progress().pipe(map(n=>n[r])))}function createDerive(r,e,[t,n,s,i]){const a=n.mul(e.sessionLength).iadd(s),o=t.sub(a),c=e.currentIndex.sub(i).imul(e.sessionLength).iadd(o);return Je(Ce({},e),{eraProgress:r.registry.createType("BlockNumber",c),sessionProgress:r.registry.createType("BlockNumber",o)})}function queryAura(r){return r.derive.session.info().pipe(map(e=>Je(Ce({},e),{eraProgress:r.registry.createType("BlockNumber"),sessionProgress:r.registry.createType("BlockNumber")})))}function queryBabe(r){return r.derive.session.info().pipe(switchMap(e=>{var t;return combineLatest([of(e),(t=r.query.staking)!==null&&t!==void 0&&t.erasStartSessionIndex?r.queryMulti([r.query.babe.currentSlot,r.query.babe.epochIndex,r.query.babe.genesisSlot,[r.query.staking.erasStartSessionIndex,e.activeEra]]):r.queryMulti([r.query.babe.currentSlot,r.query.babe.epochIndex,r.query.babe.genesisSlot])])}),map(([e,[t,n,s,i]])=>[e,[t,n,s,i&&i.isSome?i.unwrap():r.registry.createType("SessionIndex",1)]]))}function progress(r,e){return memo(r,()=>e.query.babe?queryBabe(e).pipe(map(([t,n])=>createDerive(e,t,n))):queryAura(e))}const eraLength=withProgressField("eraLength"),eraProgress=withProgressField("eraProgress"),sessionProgress=withProgressField("sessionProgress");var session=Object.freeze(Object.defineProperty({__proto__:null,indexes,info:info$1,progress,eraLength,eraProgress,sessionProgress},Symbol.toStringTag,{value:"Module"}));function candidates(r,e){return memo(r,()=>e.query.society.candidates().pipe(switchMap(t=>combineLatest([of(t),e.query.society.suspendedCandidates.multi(t.map(({who:n})=>n))])),map(([t,n])=>t.map(({kind:s,value:i,who:a},o)=>({accountId:a,isSuspended:n[o].isSome,kind:s,value:i})))))}function info(r,e){return memo(r,()=>e.queryMulti([e.query.society.bids,e.query.society.defender,e.query.society.founder,e.query.society.head,e.query.society.maxMembers,e.query.society.pot]).pipe(map(([t,n,s,i,a,o])=>({bids:t,defender:n.unwrapOr(void 0),founder:s.unwrapOr(void 0),hasDefender:n.isSome&&i.isSome&&!i.eq(n)||!1,head:i.unwrapOr(void 0),maxMembers:a,pot:o}))))}function member(r,e){return memo(r,t=>e.derive.society._members([t]).pipe(map(([n])=>n)))}function _members(r,e){return memo(r,t=>combineLatest([of(t),e.query.society.payouts.multi(t),e.query.society.strikes.multi(t),e.query.society.defenderVotes.multi(t),e.query.society.suspendedMembers.multi(t),e.query.society.vouching.multi(t)]).pipe(map(([n,s,i,a,o,c])=>n.map((h,y)=>({accountId:h,isDefenderVoter:a[y].isSome,isSuspended:o[y].isTrue,payouts:s[y],strikes:i[y],vote:a[y].unwrapOr(void 0),vouching:c[y].unwrapOr(void 0)})))))}function members$1(r,e){return memo(r,()=>e.query.society.members().pipe(switchMap(t=>e.derive.society._members(t))))}var society=Object.freeze(Object.defineProperty({__proto__:null,candidates,info,member,_members,members:members$1},Symbol.toStringTag,{value:"Module"}));const QUERY_OPTS={withDestination:!0,withLedger:!0,withNominations:!0,withPrefs:!0};function groupByEra(r){return r.reduce((e,{era:t,value:n})=>{const s=t.toString();return e[s]=(e[s]||BN_ZERO).add(n.unwrap()),e},{})}function calculateUnlocking(r,e,t){const n=Object.entries(groupByEra(((e==null?void 0:e.unlocking)||[]).filter(({era:s})=>s.unwrap().gt(t.activeEra)))).map(([s,i])=>({remainingEras:new BN(s).isub(t.activeEra),value:r.registry.createType("Balance",i)}));return n.length?n:void 0}function redeemableSum(r,e,t){return r.registry.createType("Balance",((e==null?void 0:e.unlocking)||[]).reduce((n,{era:s,value:i})=>t.activeEra.gte(s.unwrap())?n.iadd(i.unwrap()):n,new BN(0)))}function parseResult$1(r,e,t,n){return Je(Ce(Ce({},t),n),{redeemable:redeemableSum(r,n.stakingLedger,e),unlocking:calculateUnlocking(r,n.stakingLedger,e)})}function accounts(r,e){return memo(r,t=>e.derive.session.info().pipe(switchMap(n=>combineLatest([e.derive.staking.keysMulti(t),e.derive.staking.queryMulti(t,QUERY_OPTS)]).pipe(map(([s,i])=>i.map((a,o)=>parseResult$1(e,n,s[o],a)))))))}const account=firstMemo((r,e)=>r.derive.staking.accounts([e]));function currentPoints(r,e){return memo(r,()=>e.derive.session.indexes().pipe(switchMap(({activeEra:t})=>e.query.staking.erasRewardPoints(t))))}function getEraCache(r,e,t){const n=`${r}-${e.toString()}`;return[n,t?void 0:deriveCache.get(n)]}function getEraMultiCache(r,e,t){return t?[]:e.map(s=>deriveCache.get(`${r}-${s.toString()}`)).filter(s=>!!s)}function setEraCache(r,e,t){return!e&&deriveCache.set(r,t),t}function setEraMultiCache(r,e,t){return!e&&t.forEach(n=>deriveCache.set(`${r}-${n.era.toString()}`,n)),t}function filterCachedEras(r,e,t){return r.map(n=>e.find(({era:s})=>n.eq(s))||t.find(({era:s})=>n.eq(s)))}const ERA_CHUNK_SIZE=14;function chunkEras(r,e){const t=arrayChunk(r,ERA_CHUNK_SIZE);let n=0;const s=new BehaviorSubject(t[n]);return s.pipe(switchMap(e),tap(()=>{setTimeout(()=>{n++,n===t.length?s.complete():s.next(t[n])},0)}),toArray(),map(arrayFlatten))}function filterEras(r,e){return r.filter(t=>!e.some(({era:n})=>t.eq(n)))}function erasHistoricApply(r){return(e,t)=>memo(e,(n=!1)=>t.derive.staking.erasHistoric(n).pipe(switchMap(s=>t.derive.staking[r](s,n))))}function erasHistoricApplyAccount(r){return(e,t)=>memo(e,(n,s=!1)=>t.derive.staking.erasHistoric(s).pipe(switchMap(i=>t.derive.staking[r](n,i,s))))}function singleEra(r){return(e,t)=>memo(e,n=>t.derive.staking[r](n,!0))}function combineEras(r){return(e,t)=>memo(e,(n,s)=>n.length?chunkEras(n,i=>combineLatest(i.map(a=>t.derive.staking[r](a,s)))):of([]))}const CACHE_KEY$4="eraExposure";function mapStakers(r,e){const t={},n={};return e.forEach(([s,i])=>{const a=s.args[1].toString();n[a]=i,i.others.forEach(({who:o},c)=>{const h=o.toString();t[h]=t[h]||[],t[h].push({validatorId:a,validatorIndex:c})})}),{era:r,nominators:t,validators:n}}function _eraExposure(r,e){return memo(r,(t,n=!1)=>{const[s,i]=getEraCache(CACHE_KEY$4,t,n);return i?of(i):e.query.staking.erasStakersClipped.entries(t).pipe(map(a=>setEraCache(s,n,mapStakers(t,a))))})}const eraExposure=singleEra("_eraExposure"),_erasExposure=combineEras("_eraExposure"),erasExposure=erasHistoricApply("_erasExposure");function erasHistoric(r,e){return memo(r,t=>e.queryMulti([e.query.staking.activeEra,e.query.staking.historyDepth]).pipe(map(([n,s])=>{const i=[],a=s.toNumber(),o=n.unwrapOrDefault().index;let c=o;for(;c.gte(BN_ZERO)&&i.length<a;)(c!==o||t===!0)&&i.push(e.registry.createType("EraIndex",c)),c=c.sub(BN_ONE);return i.reverse()})))}const CACHE_KEY$3="eraPoints";function mapValidators({individual:r}){return[...r.entries()].filter(([,e])=>e.gt(BN_ZERO)).reduce((e,[t,n])=>(e[t.toString()]=n,e),{})}function mapPoints(r,e){return r.map((t,n)=>({era:t,eraPoints:e[n].total,validators:mapValidators(e[n])}))}function _erasPoints(r,e){return memo(r,(t,n)=>{if(!t.length)return of([]);const s=getEraMultiCache(CACHE_KEY$3,t,n),i=filterEras(t,s);return i.length?e.query.staking.erasRewardPoints.multi(i).pipe(map(a=>filterCachedEras(t,s,setEraMultiCache(CACHE_KEY$3,n,mapPoints(i,a))))):of(s)})}const erasPoints=erasHistoricApply("_erasPoints"),CACHE_KEY$2="eraPrefs";function mapPrefs(r,e){const t={};return e.forEach(([n,s])=>{t[n.args[1].toString()]=s}),{era:r,validators:t}}function _eraPrefs(r,e){return memo(r,(t,n)=>{const[s,i]=getEraCache(CACHE_KEY$2,t,n);return i?of(i):e.query.staking.erasValidatorPrefs.entries(t).pipe(map(a=>setEraCache(s,n,mapPrefs(t,a))))})}const eraPrefs=singleEra("_eraPrefs"),_erasPrefs=combineEras("_eraPrefs"),erasPrefs=erasHistoricApply("_erasPrefs"),CACHE_KEY$1="eraRewards";function mapRewards(r,e){return r.map((t,n)=>({era:t,eraReward:e[n].unwrapOrDefault()}))}function _erasRewards(r,e){return memo(r,(t,n)=>{if(!t.length)return of([]);const s=getEraMultiCache(CACHE_KEY$1,t,n),i=filterEras(t,s);return i.length?e.query.staking.erasValidatorReward.multi(i).pipe(map(a=>filterCachedEras(t,s,setEraMultiCache(CACHE_KEY$1,n,mapRewards(i,a))))):of(s)})}const erasRewards=erasHistoricApply("_erasRewards"),CACHE_KEY="eraSlashes";function mapSlashes(r,e,t){const n={},s={};return e.forEach(([i,a])=>{n[i.args[1].toString()]=a.unwrap()}),t.forEach(([i,a])=>{s[i.args[1].toString()]=a.unwrapOrDefault()[1]}),{era:r,nominators:n,validators:s}}function _eraSlashes(r,e){return memo(r,(t,n)=>{const[s,i]=getEraCache(CACHE_KEY,t,n);return i?of(i):combineLatest([e.query.staking.nominatorSlashInEra.entries(t),e.query.staking.validatorSlashInEra.entries(t)]).pipe(map(([a,o])=>setEraCache(s,n,mapSlashes(t,a,o))))})}const eraSlashes=singleEra("_eraSlashes"),_erasSlashes=combineEras("_eraSlashes"),erasSlashes=erasHistoricApply("_erasSlashes"),DEFAULT_FLAGS$1={withController:!0,withExposure:!0,withPrefs:!0};function combineAccounts(r,e){return arrayFlatten([r,e.filter(t=>!r.find(n=>n.eq(t)))])}function electedInfo(r,e){return memo(r,(t=DEFAULT_FLAGS$1)=>e.derive.staking.validators().pipe(switchMap(({nextElected:n,validators:s})=>e.derive.staking.queryMulti(combineAccounts(n,s),t).pipe(map(i=>({info:i,nextElected:n,validators:s}))))))}function extractsIds(r,e,t){const n=(e.find(([i])=>i.eq(r))||[void 0,[]])[1],s=t.unwrapOr([]);return{nextSessionIds:Array.isArray(s)?s:[...s.values()],sessionIds:Array.isArray(n)?n:[...n.values()]}}const keys=firstMemo((r,e)=>r.derive.staking.keysMulti([e]));function keysMulti(r,e){return memo(r,t=>t.length?e.query.session.queuedKeys().pipe(switchMap(n=>{var s;return combineLatest([of(n),(s=e.consts.session)!==null&&s!==void 0&&s.dedupKeyPrefix?e.query.session.nextKeys.multi(t.map(i=>[e.consts.session.dedupKeyPrefix,i])):e.query.session.nextKeys.multi(t)])}),map(([n,s])=>t.map((i,a)=>extractsIds(i,n,s[a])))):of([]))}function overview(r,e){return memo(r,()=>combineLatest([e.derive.session.indexes(),e.derive.staking.validators()]).pipe(map(([t,{nextElected:n,validators:s}])=>Je(Ce({},t),{nextElected:n,validators:s}))))}function _ownExposures(r,e){return memo(r,(t,n,s)=>n.length?e.queryMulti([...n.map(i=>[e.query.staking.erasStakersClipped,[i,t]]),...n.map(i=>[e.query.staking.erasStakers,[i,t]])]).pipe(map(i=>n.map((a,o)=>({clipped:i[o],era:a,exposure:i[n.length+o]})))):of([]))}const ownExposure=firstMemo((r,e,t)=>r.derive.staking._ownExposures(e,[t],!0)),ownExposures=erasHistoricApplyAccount("_ownExposures");function _ownSlashes(r,e){return memo(r,(t,n,s)=>n.length?e.queryMulti([...n.map(i=>[e.query.staking.validatorSlashInEra,[i,t]]),...n.map(i=>[e.query.staking.nominatorSlashInEra,[i,t]])]).pipe(map(i=>n.map((a,o)=>({era:a,total:i[o].isSome?i[o].unwrap()[1]:i[o+n.length].unwrapOrDefault()})))):of([]))}const ownSlash=firstMemo((r,e,t)=>r.derive.staking._ownSlashes(e,[t],!0)),ownSlashes=erasHistoricApplyAccount("_ownSlashes");function parseDetails(r,e,t,n,s,i,a){return{accountId:r,controllerId:e&&e.unwrapOr(null),exposure:i,nominators:t.isSome?t.unwrap().targets:[],rewardDestination:n,stakingLedger:a.unwrapOrDefault(),stashId:r,validatorPrefs:s}}function getLedgers(r,e,{withLedger:t=!1}){const n=e.filter(i=>t&&!!i&&i.isSome).map(i=>i.unwrap()),s=r.registry.createType("Option<StakingLedger>");return(n.length?r.query.staking.ledger.multi(n):of([])).pipe(map(i=>{let a=-1;return e.map(o=>o&&o.isSome&&i[++a]||s)}))}function getStashInfo(r,e,t,{withController:n,withDestination:s,withExposure:i,withLedger:a,withNominations:o,withPrefs:c}){const h=r.registry.createType("Option<Nominations>"),y=r.registry.createType("RewardDestination"),x=r.registry.createType("Exposure"),E=r.registry.createType("ValidatorPrefs");return combineLatest([n||a?r.query.staking.bonded.multi(e):of(e.map(()=>null)),o?r.query.staking.nominators.multi(e):of(e.map(()=>h)),s?r.query.staking.payee.multi(e):of(e.map(()=>y)),c?r.query.staking.validators.multi(e):of(e.map(()=>E)),i?r.query.staking.erasStakers.multi(e.map(V=>[t,V])):of(e.map(()=>x))])}function getBatch(r,e,t,n){return getStashInfo(r,t,e,n).pipe(switchMap(([s,i,a,o,c])=>getLedgers(r,s,n).pipe(map(h=>t.map((y,x)=>parseDetails(y,s[x],i[x],a[x],o[x],c[x],h[x]))))))}const query=firstMemo((r,e,t)=>r.derive.staking.queryMulti([e],t));function queryMulti(r,e){return memo(r,(t,n)=>t.length?e.derive.session.indexes().pipe(switchMap(({activeEra:s})=>{const i=t.map(a=>e.registry.createType("AccountId",a));return getBatch(e,s,i,n)})):of([]))}function _stakerExposures(r,e){return memo(r,(t,n,s=!1)=>{const i=t.map(a=>e.registry.createType("AccountId",a).toString());return e.derive.staking._erasExposure(n,s).pipe(map(a=>i.map(o=>a.map(({era:c,nominators:h,validators:y})=>{const x=!!y[o],E={},V=h[o]||[];return x?E[o]=y[o]:V&&V.forEach(({validatorId:F})=>{E[F]=y[F]}),{era:c,isEmpty:!Object.keys(E).length,isValidator:x,nominating:V,validators:E}}))))})}function stakerExposures(r,e){return memo(r,(t,n=!1)=>e.derive.staking.erasHistoric(n).pipe(switchMap(s=>e.derive.staking._stakerExposures(t,s,n))))}const stakerExposure=firstMemo((r,e,t)=>r.derive.staking.stakerExposures([e],t));function _stakerPoints(r,e){return memo(r,(t,n,s)=>{const i=e.registry.createType("AccountId",t).toString();return e.derive.staking._erasPoints(n,s).pipe(map(a=>a.map(({era:o,eraPoints:c,validators:h})=>({era:o,eraPoints:c,points:h[i]||e.registry.createType("RewardPoint")}))))})}const stakerPoints=erasHistoricApplyAccount("_stakerPoints");function _stakerPrefs(r,e){return memo(r,(t,n,s)=>e.query.staking.erasValidatorPrefs.multi(n.map(i=>[i,t])).pipe(map(i=>i.map((a,o)=>({era:n[o],validatorPrefs:a})))))}const stakerPrefs=erasHistoricApplyAccount("_stakerPrefs");function parseRewards(r,e,[t,n,s],i){return i.map(({era:a,isEmpty:o,isValidator:c,nominating:h,validators:y})=>{const{eraPoints:x,validators:E}=t.find(Y=>Y.era.eq(a))||{eraPoints:BN_ZERO,validators:{}},{eraReward:V}=s.find(Y=>Y.era.eq(a))||{eraReward:r.registry.createType("Balance")},{validators:F}=n.find(Y=>Y.era.eq(a))||{validators:{}},q={},X=e.toString();return Object.entries(y).forEach(([Y,oe])=>{var Q,le;const fe=E[Y]||BN_ZERO,ve=((Q=F[Y])===null||Q===void 0?void 0:Q.commission.unwrap())||BN_ZERO,ke=((le=oe.total)===null||le===void 0?void 0:le.unwrap())||BN_ZERO;let Ve=BN_ZERO,Re;if(!(ke.isZero()||fe.isZero()||x.isZero())){Ve=V.mul(fe).div(x);const re=ve.mul(Ve).div(BN_BILLION);let R;if(Y===X)R=oe.own.unwrap();else{const H=oe.others.find(({who:b})=>b.eq(X));R=H?H.value.unwrap():BN_ZERO}Re=Ve.sub(re).imul(R).div(ke).iadd(Y===X?re:BN_ZERO)}q[Y]={total:r.registry.createType("Balance",Ve),value:r.registry.createType("Balance",Re)}}),{era:a,eraReward:V,isEmpty:o,isValidator:c,nominating:h,validators:q}})}function allUniqValidators(r){return r.reduce(([e,t],n)=>{const s=[];return t.push(s),n.forEach(({validators:i})=>Object.keys(i).forEach(a=>{s.includes(a)||(s.push(a),e.includes(a)||e.push(a))})),[e,t]},[[],[]])}function removeClaimed(r,e,t){const n=[];Object.keys(t.validators).forEach(s=>{const i=r.indexOf(s);if(i!==-1){const a=e[i].stakingLedger;a!=null&&a.claimedRewards.some(o=>t.era.eq(o))&&n.push(s)}}),n.forEach(s=>{delete t.validators[s]})}function filterRewards(r,e,{rewards:t,stakingLedger:n}){const s=r.filter(o=>!n.claimedRewards.some(c=>c.eq(o))),i=e.map(([o])=>o),a=e.map(([,o])=>o);return t.filter(({isEmpty:o})=>!o).filter(o=>s.some(c=>o.era.eq(c))?(removeClaimed(i,a,o),!0):!1).filter(({validators:o})=>Object.keys(o).length!==0).map(o=>Je(Ce({},o),{nominators:o.nominating.filter(c=>o.validators[c.validatorId])}))}function _stakerRewardsEras(r,e){return memo(r,(t,n=!1)=>combineLatest([e.derive.staking._erasPoints(t,n),e.derive.staking._erasPrefs(t,n),e.derive.staking._erasRewards(t,n)]))}function _stakerRewards(r,e){return memo(r,(t,n,s=!1)=>combineLatest([e.derive.staking.queryMulti(t,{withLedger:!0}),e.derive.staking._stakerExposures(t,n,s),e.derive.staking._stakerRewardsEras(n,s)]).pipe(switchMap(([i,a,o])=>{const c=i.map(({stakingLedger:x,stashId:E},V)=>!E||!x?[]:parseRewards(e,E,o,a[V]));if(s)return of(c);const[h,y]=allUniqValidators(c);return e.derive.staking.queryMulti(h,{withLedger:!0}).pipe(map(x=>i.map(({stakingLedger:E},V)=>filterRewards(n,y[V].map(F=>[F,x.find(q=>q.accountId.eq(F))]),{rewards:c[V],stakingLedger:E}))))})))}const stakerRewards=firstMemo((r,e,t)=>r.derive.staking.erasHistoric(t).pipe(switchMap(n=>r.derive.staking._stakerRewards([e],n,t))));function stakerRewardsMultiEras(r,e){return memo(r,(t,n)=>t.length&&n.length?e.derive.staking._stakerRewards(t,n,!1):of([]))}function stakerRewardsMulti(r,e){return memo(r,(t,n=!1)=>e.derive.staking.erasHistoric(n).pipe(switchMap(s=>e.derive.staking.stakerRewardsMultiEras(t,s))))}function _stakerSlashes(r,e){return memo(r,(t,n,s)=>{const i=e.registry.createType("AccountId",t).toString();return e.derive.staking._erasSlashes(n,s).pipe(map(a=>a.map(({era:o,nominators:c,validators:h})=>({era:o,total:c[i]||h[i]||e.registry.createType("Balance")}))))})}const stakerSlashes=erasHistoricApplyAccount("_stakerSlashes");function onBondedEvent(r){let e=Date.now();return r.query.system.events().pipe(map(t=>(e=t.filter(({event:n,phase:s})=>{try{return s.isApplyExtrinsic&&n.section==="staking"&&n.method==="Bonded"}catch{return!1}})?Date.now():e,e)),startWith(e),drr({skipTimeout:!0}))}function stashes(r,e){return memo(r,()=>onBondedEvent(e).pipe(switchMap(()=>e.query.staking.validators.keys()),map(t=>t.map(({args:[n]})=>n).filter(n=>n))))}function nextElected(r,e){return memo(r,()=>e.query.staking.erasStakers?e.derive.session.indexes().pipe(switchMap(({currentEra:t})=>e.query.staking.erasStakers.keys(t)),map(t=>t.map(({args:[,n]})=>n))):e.query.staking.currentElected())}function validators(r,e){return memo(r,()=>combineLatest([e.query.session?e.query.session.validators():of([]),e.query.staking?e.derive.staking.nextElected():of([])]).pipe(map(([t,n])=>({nextElected:n.length?n:t,validators:t}))))}const DEFAULT_FLAGS={withController:!0,withPrefs:!0};function waitingInfo(r,e){return memo(r,(t=DEFAULT_FLAGS)=>combineLatest([e.derive.staking.validators(),e.derive.staking.stashes()]).pipe(switchMap(([{nextElected:n},s])=>{const i=n.map(o=>o.toString()),a=s.filter(o=>!i.includes(o.toString()));return e.derive.staking.queryMulti(a,t).pipe(map(o=>({info:o,waiting:a})))})))}var staking=Object.freeze(Object.defineProperty({__proto__:null,accounts,account,currentPoints,_eraExposure,eraExposure,_erasExposure,erasExposure,erasHistoric,_erasPoints,erasPoints,_eraPrefs,eraPrefs,_erasPrefs,erasPrefs,_erasRewards,erasRewards,_eraSlashes,eraSlashes,_erasSlashes,erasSlashes,electedInfo,keys,keysMulti,overview,_ownExposures,ownExposure,ownExposures,_ownSlashes,ownSlash,ownSlashes,query,queryMulti,_stakerExposures,stakerExposures,stakerExposure,_stakerPoints,stakerPoints,_stakerPrefs,stakerPrefs,_stakerRewardsEras,_stakerRewards,stakerRewards,stakerRewardsMultiEras,stakerRewardsMulti,_stakerSlashes,stakerSlashes,stashes,nextElected,validators,waitingInfo},Symbol.toStringTag,{value:"Module"}));const members=members$4("technicalCommittee"),hasProposals=hasProposals$3("technicalCommittee"),proposal=proposal$3("technicalCommittee"),proposalCount=proposalCount$3("technicalCommittee"),proposalHashes=proposalHashes$3("technicalCommittee"),proposals$1=proposals$5("technicalCommittee"),prime=prime$3("technicalCommittee");var technicalCommittee=Object.freeze(Object.defineProperty({__proto__:null,members,hasProposals,proposal,proposalCount,proposalHashes,proposals:proposals$1,prime},Symbol.toStringTag,{value:"Module"}));function parseResult(r,{allIds:e,allProposals:t,approvalIds:n,councilProposals:s,proposalCount:i}){const a=[],o=[],c=s.filter(({proposal:h})=>r.tx.treasury.approveProposal.is(h)||r.tx.treasury.rejectProposal.is(h));return e.forEach((h,y)=>{if(t[y].isSome){const x=c.filter(({proposal:F})=>h.eq(F.args[0])).sort((F,q)=>F.proposal.method.localeCompare(q.proposal.method)),E=n.some(F=>F.eq(h)),V={council:x,id:h,proposal:t[y].unwrap()};E?a.push(V):o.push(V)}}),{approvals:a,proposalCount:i,proposals:o}}function retrieveProposals(r,e,t){const n=[],s=e.toNumber();for(let a=0;a<s;a++)t.some(o=>o.eqn(a))||n.push(r.registry.createType("ProposalIndex",a));const i=[...n,...t];return combineLatest([r.query.treasury.proposals.multi(i),r.derive.council?r.derive.council.proposals():of([])]).pipe(map(([a,o])=>parseResult(r,{allIds:i,allProposals:a,approvalIds:t,councilProposals:o,proposalCount:e})))}function proposals(r,e){return memo(r,()=>e.query.treasury?combineLatest([e.query.treasury.proposalCount(),e.query.treasury.approvals()]).pipe(switchMap(([t,n])=>retrieveProposals(e,t,n))):of({approvals:[],proposalCount:e.registry.createType("ProposalIndex"),proposals:[]}))}var treasury=Object.freeze(Object.defineProperty({__proto__:null,proposals},Symbol.toStringTag,{value:"Module"}));function events(r,e){return memo(r,t=>combineLatest([e.rpc.chain.getBlock(t),e.queryAt(t).pipe(switchMap(n=>n.system.events()))]).pipe(map(([n,s])=>({block:n,events:s}))))}const FALLBACK_MAX_HASH_COUNT=250,FALLBACK_PERIOD=new BN(6*1e3),MAX_FINALITY_LAG=new BN(5),MORTAL_PERIOD=new BN(5*60*1e3);function latestNonce(r,e){return r.derive.balances.account(e).pipe(map(({accountNonce:t})=>t))}function nextNonce(r,e){var t;return(t=r.rpc.system)!==null&&t!==void 0&&t.accountNextIndex?r.rpc.system.accountNextIndex(e):latestNonce(r,e)}function signingHeader(r){return combineLatest([r.rpc.chain.getHeader().pipe(switchMap(e=>e.parentHash.isEmpty?of(e):r.rpc.chain.getHeader(e.parentHash))),r.rpc.chain.getFinalizedHead().pipe(switchMap(e=>r.rpc.chain.getHeader(e)))]).pipe(map(([e,t])=>e.number.unwrap().sub(t.number.unwrap()).gt(MAX_FINALITY_LAG)?e:t))}function signingInfo(r,e){return(t,n,s)=>combineLatest([isUndefined(n)?latestNonce(e,t):n===-1?nextNonce(e,t):of(e.registry.createType("Index",n)),isUndefined(s)||isNumber(s)&&s>0?signingHeader(e):of(null)]).pipe(map(([i,a])=>{var o,c,h,y;return{header:a,mortalLength:Math.min(((o=e.consts.system)===null||o===void 0||(c=o.blockHashCount)===null||c===void 0?void 0:c.toNumber())||FALLBACK_MAX_HASH_COUNT,MORTAL_PERIOD.div(((h=e.consts.babe)===null||h===void 0?void 0:h.expectedBlockTime)||((y=e.consts.timestamp)===null||y===void 0?void 0:y.minimumPeriod.muln(2))||FALLBACK_PERIOD).iadd(MAX_FINALITY_LAG).toNumber()),nonce:i}}))}var tx=Object.freeze(Object.defineProperty({__proto__:null,events,signingInfo},Symbol.toStringTag,{value:"Module"}));const derive={accounts:accounts$1,bagsList,balances,bounties,chain,contracts,council,crowdloan,democracy,elections,imOnline,membership,parachains,session,society,staking,technicalCommittee,treasury,tx},checks={bagsList:{instances:["bagsList"],methods:[]},contracts:{instances:["contracts"],methods:[]},council:{instances:["council"],methods:[],withDetect:!0},crowdloan:{instances:["crowdloan"],methods:[]},democracy:{instances:["democracy"],methods:[]},elections:{instances:["phragmenElection","electionsPhragmen","elections","council"],methods:[],withDetect:!0},imOnline:{instances:["imOnline"],methods:[]},membership:{instances:["membership"],methods:[]},parachains:{instances:["parachains","registrar"],methods:[]},session:{instances:["session"],methods:[]},society:{instances:["society"],methods:[]},staking:{instances:["staking"],methods:["erasRewardPoints"]},technicalCommittee:{instances:["technicalCommittee"],methods:[],withDetect:!0},treasury:{instances:["treasury"],methods:[]}};function getModuleInstances(r,e,t){return r.registry.getModuleInstances(e,t)||[]}function injectFunctions(r,e,t){const n={},s=Object.keys(t),i=Object.keys(e.query),a=e.runtimeVersion.specName.toString(),o=V=>i.includes(V),c=V=>getModuleInstances(e,a,V).some(o),h=V=>F=>V.some(q=>i.includes(q)&&e.query[q][F]),y=V=>Object.keys(t[V]),x=(V,F)=>t[V][F](r,e),E=V=>!checks[V]||checks[V].instances.some(o)&&(!checks[V].methods.length||checks[V].methods.every(h(checks[V].instances)))||checks[V].withDetect&&checks[V].instances.some(c);for(let V=0;V<s.length;V++){const F=s[V];E(F)&&lazyDeriveSection(n,F,y,x)}return n}function getAvailableDerives(r,e,t={}){return Ce(Ce({},injectFunctions(r,e,derive)),injectFunctions(r,e,t))}function decorateDeriveSections(r,e){const t=a=>Object.keys(e[a]),n=(a,o)=>r(e[a][o]),s={},i=Object.keys(e);for(let a=0;a<i.length;a++)lazyDeriveSection(s,i[a],t,n);return s}const l$4=logger("api/util");function filterEvents(r,{block:{extrinsics:e,header:t}},n,s){for(const[i,a]of e.entries())if(a.hash.eq(r))return{events:n.filter(({phase:o})=>o.isApplyExtrinsic&&o.asApplyExtrinsic.eqn(i)),txIndex:i};if(s.isInBlock){const i=e.map(a=>a.hash.toHex());l$4.warn(`block ${t.hash.toHex()}: Unable to find extrinsic ${r.toHex()} inside ${i.join(", ")}`)}return{}}function isKeyringPair(r){return isFunction$3(r.sign)}const recordIdentity=r=>r;function filterAndApply(r,e,t,n){return r.filter(({event:s})=>e===s.section&&t.includes(s.method)).map(s=>n(s))}function getDispatchError({event:{data:[r]}}){return r}function getDispatchInfo({event:{data:r,method:e}}){return e==="ExtrinsicSuccess"?r[0]:r[1]}function extractError(r=[]){return filterAndApply(r,"system",["ExtrinsicFailed"],getDispatchError)[0]}function extractInfo(r=[]){return filterAndApply(r,"system",["ExtrinsicFailed","ExtrinsicSuccess"],getDispatchInfo)[0]}class SubmittableResult{constructor({dispatchError:e,dispatchInfo:t,events:n,internalError:s,status:i,txHash:a,txIndex:o}){this.dispatchError=e||extractError(n),this.dispatchInfo=t||extractInfo(n),this.events=n||[],this.internalError=s,this.status=i,this.txHash=a,this.txIndex=o}get isCompleted(){return this.isError||this.status.isInBlock||this.status.isFinalized}get isError(){return this.status.isDropped||this.status.isFinalityTimeout||this.status.isInvalid||this.status.isUsurped}get isFinalized(){return this.status.isFinalized}get isInBlock(){return this.status.isInBlock}get isWarning(){return this.status.isRetracted}filterRecords(e,t){return filterAndApply(this.events,e,Array.isArray(t)?t:[t],recordIdentity)}findRecord(e,t){return this.filterRecords(e,t)[0]}toHuman(e){var t,n,s;return{dispatchError:(t=this.dispatchError)===null||t===void 0?void 0:t.toHuman(),dispatchInfo:(n=this.dispatchInfo)===null||n===void 0?void 0:n.toHuman(),events:this.events.map(i=>i.toHuman(e)),internalError:(s=this.internalError)===null||s===void 0?void 0:s.message.toString(),status:this.status.toHuman(e)}}}const identity=r=>r;function makeEraOptions(r,e,t,{header:n,mortalLength:s,nonce:i}){return n?makeSignOptions(r,t,{blockHash:n.hash,era:e.createTypeUnsafe("ExtrinsicEra",[{current:n.number,period:t.era||s}]),nonce:i}):(isNumber(t.era)&&(delete t.era,delete t.blockHash),makeSignOptions(r,t,{nonce:i}))}function makeSignAndSendOptions(r,e){let t={};return isFunction$3(r)?e=r:t=objectSpread({},r),[t,e]}function makeSignOptions(r,e,t){return objectSpread({blockHash:r.genesisHash,genesisHash:r.genesisHash},e,t,{runtimeVersion:r.runtimeVersion,signedExtensions:r.registry.signedExtensions,version:r.extrinsicType})}function optionsOrNonce(r={}){return isBn(r)||isNumber(r)?{nonce:r}:r}function createClass({api:r,apiType:e,blockHash:t,decorateMethod:n}){var a,o,c,h,y,x,E,V;const s=r.registry.createClass("Extrinsic");class i extends s{constructor(X,Y){super(X,Y,{version:r.extrinsicType});G(this,a,void 0);G(this,o,identity);G(this,c,(X,Y)=>{const oe=isKeyringPair(X)?X.address:X.toString(),Q=optionsOrNonce(Y);return r.derive.tx.signingInfo(oe,Q.nonce,Q.era).pipe(first(),mergeMap(async le=>{const fe=makeEraOptions(r,this.registry,Q,le);let ve=-1;return isKeyringPair(X)?this.sign(X,fe):ve=await T(this,E).call(this,oe,fe,le.header),{options:fe,updateId:ve}}))});G(this,h,(X,Y)=>{if(!Y.isFinalized&&!Y.isInBlock)return of(T(this,o).call(this,new SubmittableResult({status:Y,txHash:X})));const oe=Y.isInBlock?Y.asInBlock:Y.asFinalized;return r.derive.tx.events(oe).pipe(map(({block:Q,events:le})=>T(this,o).call(this,new SubmittableResult(Je(Ce({},filterEvents(X,Q,le,Y)),{status:Y,txHash:X})))),catchError(Q=>of(T(this,o).call(this,new SubmittableResult({internalError:Q,status:Y,txHash:X})))))});G(this,y,X=>r.rpc.author.submitExtrinsic(this).pipe(tap(Y=>{T(this,V).call(this,Y,X)})));G(this,x,X=>{const Y=this.hash;return r.rpc.author.submitAndWatchExtrinsic(this).pipe(switchMap(oe=>T(this,h).call(this,Y,oe)),tap(oe=>{T(this,V).call(this,oe,X)}))});G(this,E,async(X,Y,oe)=>{const Q=Y.signer||r.signer;assert(Q,"No signer specified, either via api.setSigner or via sign options. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.");const le=this.registry.createTypeUnsafe("SignerPayload",[objectSpread({},Y,{address:X,blockNumber:oe?oe.number:0,method:this.method})]);let fe;if(isFunction$3(Q.signPayload))fe=await Q.signPayload(le.toPayload());else if(isFunction$3(Q.signRaw))fe=await Q.signRaw(le.toRaw());else throw new Error("Invalid signer interface, it should implement either signPayload or signRaw (or both)");return super.addSignature(X,fe.signature,le.toPayload()),fe.id});G(this,V,(X,Y)=>{if(Y&&Y.updateId!==-1){const{options:oe,updateId:Q}=Y,le=oe.signer||r.signer;le&&isFunction$3(le.update)&&le.update(Q,X)}});te(this,a,e==="rxjs")}dryRun(X,Y){return t||isString(Y)||isU8a(Y)?n(()=>r.rpc.system.dryRun(this.toHex(),t||Y)):n(()=>T(this,c).call(this,X,Y).pipe(switchMap(()=>r.rpc.system.dryRun(this.toHex()))))()}paymentInfo(X,Y){if(t||isString(Y)||isU8a(Y))return n(()=>r.rpc.payment.queryInfo(this.toHex(),t||Y));const[oe]=makeSignAndSendOptions(Y),Q=isKeyringPair(X)?X.address:X.toString();return n(()=>r.derive.tx.signingInfo(Q,oe.nonce,oe.era).pipe(first(),switchMap(le=>{const fe=makeEraOptions(r,this.registry,oe,le),ve=makeSignOptions(r,fe,{});return r.rpc.payment.queryInfo(this.isSigned?r.tx(this).signFake(Q,ve).toHex():this.signFake(Q,ve).toHex())})))()}send(X){const Y=r.hasSubscriptions&&(T(this,a)||!!X);return n(Y?T(this,x):T(this,y))(X)}sign(X,Y){return super.sign(X,makeSignOptions(r,optionsOrNonce(Y),{})),this}signAsync(X,Y){return n(()=>T(this,c).call(this,X,Y).pipe(mapTo(this)))()}signAndSend(X,Y,oe){const[Q,le]=makeSignAndSendOptions(Y,oe),fe=r.hasSubscriptions&&(T(this,a)||!!le);return n(()=>T(this,c).call(this,X,Q).pipe(switchMap(ve=>fe?T(this,x).call(this,ve):T(this,y).call(this,ve))))(le)}withResultTransform(X){return te(this,o,X),this}}return a=new WeakMap,o=new WeakMap,c=new WeakMap,h=new WeakMap,y=new WeakMap,x=new WeakMap,E=new WeakMap,V=new WeakMap,i}function createSubmittable(r,e,t,n,s){const i=createClass({api:e,apiType:r,blockHash:s,decorateMethod:t});return a=>new i(n||e.registry,a)}function findCall(r,e){return r.findMetaCall(u8aToU8a(e))}function findError(r,e){return r.findMetaError(u8aToU8a(e))}const typesChain={};var typesChain$1=typesChain;const sharedTypes$5={AnchorData:{anchoredBlock:"u64",docRoot:"H256",id:"H256"},PreCommitData:{expirationBlock:"u64",identity:"H256",signingRoot:"H256"},Fee:{key:"Hash",price:"Balance"},MultiAccountData:{deposit:"Balance",depositor:"AccountId",signatories:"Vec<AccountId>",threshold:"u16"},ChainId:"u8",DepositNonce:"u64",ResourceId:"[u8; 32]","chainbridge::ChainId":"u8",RegistryId:"H160",TokenId:"U256",AssetId:{registryId:"RegistryId",tokenId:"TokenId"},AssetInfo:{metadata:"Bytes"},MintInfo:{anchorId:"Hash",proofs:"Vec<ProofMint>",staticHashes:"[Hash; 3]"},Proof:{leafHash:"H256",sortedHashes:"H256"},ProofMint:{hashes:"Vec<Hash>",property:"Bytes",salt:"[u8; 32]",value:"Bytes"},RegistryInfo:{fields:"Vec<Bytes>",ownerCanBurn:"bool"},ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","NonProxy"]}},standaloneTypes=objectSpread({},sharedTypes$5,{AccountInfo:"AccountInfoWithRefCount",Address:"LookupSource",LookupSource:"IndicesLookupSource",Multiplier:"Fixed64",RefCount:"RefCountTo259"}),versioned$8=[{minmax:[240,243],types:objectSpread({},standaloneTypes,{ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","Vesting"]}})},{minmax:[244,999],types:objectSpread({},standaloneTypes)},{minmax:[1e3,void 0],types:objectSpread({},sharedTypes$5)}];var centrifugeChain=versioned$8;const sharedTypes$4={CompactAssignments:"CompactAssignmentsWith24",RawSolution:"RawSolutionWith24",Keys:"SessionKeys6",ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","IdentityJudgement","CancelProxy","Auction"]}},addrIndicesTypes={AccountInfo:"AccountInfoWithRefCount",Address:"LookupSource",CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16",Keys:"SessionKeys5",LookupSource:"IndicesLookupSource",ValidatorPrefs:"ValidatorPrefsWithCommission"},addrAccountIdTypes$2={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16",Keys:"SessionKeys5",LookupSource:"AccountId",ValidatorPrefs:"ValidatorPrefsWithCommission"},versioned$7=[{minmax:[1019,1031],types:objectSpread({},addrIndicesTypes,{BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchError:"DispatchErrorTo198",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",IdentityInfo:"IdentityInfoTo198",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",SlashingSpans:"SlashingSpansTo204",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"})},{minmax:[1032,1042],types:objectSpread({},addrIndicesTypes,{BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",SlashingSpans:"SlashingSpansTo204",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"})},{minmax:[1043,1045],types:objectSpread({},addrIndicesTypes,{BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"})},{minmax:[1046,1054],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",StakingLedger:"StakingLedgerTo240",Weight:"u32"})},{minmax:[1055,1056],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",StakingLedger:"StakingLedgerTo240",Weight:"u32"})},{minmax:[1057,1061],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"})},{minmax:[1062,2012],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2,{CompactAssignments:"CompactAssignmentsTo257",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"})},{minmax:[2013,2022],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2,{CompactAssignments:"CompactAssignmentsTo257",RefCount:"RefCountTo259"})},{minmax:[2023,2024],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2,{RefCount:"RefCountTo259"})},{minmax:[2025,2027],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2)},{minmax:[2028,2029],types:objectSpread({},sharedTypes$4,{AccountInfo:"AccountInfoWithDualRefCount",CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16"})},{minmax:[2030,9e3],types:objectSpread({},sharedTypes$4,{CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16"})},{minmax:[9010,9099],types:objectSpread({},sharedTypes$4,mapXcmTypes("V0"))},{minmax:[9100,9105],types:objectSpread({},sharedTypes$4,mapXcmTypes("V1"))},{minmax:[9106,void 0],types:{}}];var kusama$1=versioned$7;const versioned$6=[{minmax:[0,void 0],types:{}}];var node=versioned$6;const versioned$5=[{minmax:[0,void 0],types:{}}];var nodeTemplate=versioned$5;const sharedTypes$3={CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16",Keys:"SessionKeys6",ProxyType:{_enum:{Any:0,NonTransfer:1,Governance:2,Staking:3,UnusedSudoBalances:4,IdentityJudgement:5,CancelProxy:6,Auction:7}}},addrAccountIdTypes$1={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",Keys:"SessionKeys5",LookupSource:"AccountId",ValidatorPrefs:"ValidatorPrefsWithCommission"},versioned$4=[{minmax:[0,12],types:objectSpread({},sharedTypes$3,addrAccountIdTypes$1,{CompactAssignments:"CompactAssignmentsTo257",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"})},{minmax:[13,22],types:objectSpread({},sharedTypes$3,addrAccountIdTypes$1,{CompactAssignments:"CompactAssignmentsTo257",RefCount:"RefCountTo259"})},{minmax:[23,24],types:objectSpread({},sharedTypes$3,addrAccountIdTypes$1,{RefCount:"RefCountTo259"})},{minmax:[25,27],types:objectSpread({},sharedTypes$3,addrAccountIdTypes$1)},{minmax:[28,29],types:objectSpread({},sharedTypes$3,{AccountInfo:"AccountInfoWithDualRefCount"})},{minmax:[30,9109],types:objectSpread({},sharedTypes$3)},{minmax:[9110,void 0],types:{}}];var polkadot$1=versioned$4;const sharedTypes$2={FullIdentification:"()",Keys:"SessionKeys7B"},versioned$3=[{minmax:[0,200],types:objectSpread({},sharedTypes$2,{AccountInfo:"AccountInfoWithDualRefCount",Address:"AccountId",LookupSource:"AccountId"})},{minmax:[201,214],types:objectSpread({},sharedTypes$2,{AccountInfo:"AccountInfoWithDualRefCount"})},{minmax:[215,228],types:objectSpread({},sharedTypes$2,{Keys:"SessionKeys6"})},{minmax:[229,9099],types:objectSpread({},sharedTypes$2,mapXcmTypes("V0"))},{minmax:[9100,9105],types:objectSpread({},sharedTypes$2,mapXcmTypes("V1"))},{minmax:[9106,void 0],types:{}}];var rococo=versioned$3;const versioned$2=[{minmax:[0,void 0],types:{}}];var shell=versioned$2;const sharedTypes$1={TAssetBalance:"u128",ProxyType:{_enum:["Any","NonTransfer","CancelProxy","Assets","AssetOwner","AssetManager","Staking"]}},versioned$1=[{minmax:[0,3],types:objectSpread({},sharedTypes$1,mapXcmTypes("V0"))},{minmax:[4,5],types:objectSpread({},sharedTypes$1,mapXcmTypes("V1"))},{minmax:[500,void 0],types:{}}];var statemint=versioned$1;const sharedTypes={CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16",Keys:"SessionKeys6",ProxyType:{_enum:["Any","NonTransfer","Staking","SudoBalances","IdentityJudgement","CancelProxy"]}},addrAccountIdTypes={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",CompactAssignments:"CompactAssignmentsWith16",LookupSource:"AccountId",Keys:"SessionKeys5",RawSolution:"RawSolutionWith16",ValidatorPrefs:"ValidatorPrefsWithCommission"},versioned=[{minmax:[1,2],types:objectSpread({},sharedTypes,addrAccountIdTypes,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",Weight:"u32"})},{minmax:[3,22],types:objectSpread({},sharedTypes,addrAccountIdTypes,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"})},{minmax:[23,42],types:objectSpread({},sharedTypes,addrAccountIdTypes,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",RefCount:"RefCountTo259"})},{minmax:[43,44],types:objectSpread({},sharedTypes,addrAccountIdTypes,{DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",RefCount:"RefCountTo259"})},{minmax:[45,47],types:objectSpread({},sharedTypes,addrAccountIdTypes)},{minmax:[48,49],types:objectSpread({},sharedTypes,{AccountInfo:"AccountInfoWithDualRefCount"})},{minmax:[50,9099],types:objectSpread({},sharedTypes,mapXcmTypes("V0"))},{minmax:[9100,9105],types:objectSpread({},sharedTypes,mapXcmTypes("V1"))},{minmax:[9106,void 0],types:{}}];var westend$1=versioned;const typesSpec={"centrifuge-chain":centrifugeChain,kusama:kusama$1,node,"node-template":nodeTemplate,polkadot:polkadot$1,rococo,shell,statemine:statemint,statemint,westend:westend$1,westmint:statemint};var typesSpec$1=typesSpec;const upgrades$4=[[0,1020],[26669,1021],[38245,1022],[54248,1023],[59659,1024],[67651,1025],[82191,1027],[83238,1028],[101503,1029],[203466,1030],[295787,1031],[461692,1032],[504329,1033],[569327,1038],[587687,1039],[653183,1040],[693488,1042],[901442,1045],[1375086,1050],[1445458,1051],[1472960,1052],[1475648,1053],[1491596,1054],[1574408,1055],[2064961,1058],[2201991,1062],[2671528,2005],[2704202,2007],[2728002,2008],[2832534,2011],[2962294,2012],[324e4,2013],[3274408,2015],[3323565,2019],[3534175,2022],[3860281,2023],[4143129,2024],[4401242,2025],[4841367,2026],[5961600,2027],[6137912,2028],[6561855,2029],[7100891,2030],[7468792,9010],[7668600,9030],[7812476,9040],[8010981,9050],[8073833,9070],[8555825,9080],[8945245,9090],[9611377,9100],[9625129,9111],[9866422,9122],[10403784,9130],[10960765,9150],[11006614,9151],[11404482,9160],[11601803,9170],[12008022,9180],[12405451,9190]];var kusama=upgrades$4;const upgrades$3=[[0,0],[29231,1],[188836,5],[199405,6],[214264,7],[244358,8],[303079,9],[314201,10],[342400,11],[443963,12],[528470,13],[687751,14],[746085,15],[787923,16],[799302,17],[1205128,18],[1603423,23],[1733218,24],[2005673,25],[2436698,26],[3613564,27],[3899547,28],[4345767,29],[4876134,30],[5661442,9050],[6321619,9080],[6713249,9090],[7217907,9100],[7229126,9110],[7560558,9122],[8115869,9140],[8638103,9151],[9280179,9170],[9738717,9180]];var polkadot=upgrades$3;const upgrades$2=[[214356,4],[392764,7],[409740,8],[809976,20],[877581,24],[879238,25],[889472,26],[902937,27],[932751,28],[991142,29],[1030162,31],[1119657,32],[1199282,33],[1342534,34],[1392263,35],[1431703,36],[1433369,37],[1490972,41],[2087397,43],[2316688,44],[2549864,45],[3925782,46],[3925843,47],[4207800,48],[4627944,49],[5124076,50],[5478664,900],[5482450,9e3],[5584305,9010],[5784566,9030],[5879822,9031],[5896856,9032],[5897316,9033],[6117927,9050],[6210274,9070],[6379314,9080],[6979141,9090],[7568453,9100],[7766394,9111],[7911691,9120],[7968866,9121],[7982889,9122],[8514322,9130],[9091726,9140],[9091774,9150],[9406726,9160],[9921066,9170],[10007115,9180],[10480973,9190],[10578091,9200]];var westend=upgrades$2;const allKnown={kusama,polkadot,westend},NET_EXTRA={westend:{genesisHash:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"]}};function checkOrder(r,e){const t=e.filter((n,s)=>{const i=e[s-1];return s===0?!1:n[0]<=i[0]||n[1]<=i[1]});return assert(!t.length,()=>`${r}: Mismatched upgrade ordering: ${stringify(t)}`),e}function mapRaw([r,e]){const t=selectableNetworks.find(n=>n.network===r)||NET_EXTRA[r];return assert(t,()=>`Unable to find info for chain ${r}`),{genesisHash:hexToU8a(t.genesisHash[0]),network:r,versions:checkOrder(r,e).map(([n,s])=>({blockNumber:new BN(n),specVersion:new BN(s)}))}}const upgrades=Object.entries(allKnown).map(mapRaw);var upgrades$1=upgrades;function withNames(r,e,t){return t(r.toString(),e.toString())}function filterVersions(r=[],e){return r.filter(({minmax:[t,n]})=>(isUndefined(t)||isNull(t)||e>=t)&&(isUndefined(n)||isNull(n)||e<=n)).reduce((t,{types:n})=>objectSpread(t,n),{})}function getSpecExtensions({knownTypes:r},e,t){return withNames(e,t,(n,s)=>{var i,a,o,c,h,y;return objectSpread({},(i=r.typesBundle)===null||i===void 0||(a=i.spec)===null||a===void 0||(o=a[s])===null||o===void 0?void 0:o.signedExtensions,(c=r.typesBundle)===null||c===void 0||(h=c.chain)===null||h===void 0||(y=h[n])===null||y===void 0?void 0:y.signedExtensions)})}function getSpecTypes({knownTypes:r},e,t,n){const s=bnToBn(n).toNumber();return withNames(e,t,(i,a)=>{var o,c,h,y,x,E,V,F;return objectSpread({},filterVersions(typesSpec$1[a],s),filterVersions(typesChain$1[i],s),filterVersions((o=r.typesBundle)===null||o===void 0||(c=o.spec)===null||c===void 0||(h=c[a])===null||h===void 0?void 0:h.types,s),filterVersions((y=r.typesBundle)===null||y===void 0||(x=y.chain)===null||x===void 0||(E=x[i])===null||E===void 0?void 0:E.types,s),(V=r.typesSpec)===null||V===void 0?void 0:V[a],(F=r.typesChain)===null||F===void 0?void 0:F[i],r.types)})}function getSpecHasher({knownTypes:r},e,t){return withNames(e,t,(n,s)=>{var i,a,o,c,h,y;return r.hasher||((i=r.typesBundle)===null||i===void 0||(a=i.chain)===null||a===void 0||(o=a[n])===null||o===void 0?void 0:o.hasher)||((c=r.typesBundle)===null||c===void 0||(h=c.spec)===null||h===void 0||(y=h[s])===null||y===void 0?void 0:y.hasher)||null})}function getSpecRpc({knownTypes:r},e,t){return withNames(e,t,(n,s)=>{var i,a,o,c,h,y;return objectSpread({},(i=r.typesBundle)===null||i===void 0||(a=i.spec)===null||a===void 0||(o=a[s])===null||o===void 0?void 0:o.rpc,(c=r.typesBundle)===null||c===void 0||(h=c.chain)===null||h===void 0||(y=h[n])===null||y===void 0?void 0:y.rpc)})}function getSpecAlias({knownTypes:r},e,t){return withNames(e,t,(n,s)=>{var i,a,o,c,h,y;return objectSpread({},(i=r.typesBundle)===null||i===void 0||(a=i.spec)===null||a===void 0||(o=a[s])===null||o===void 0?void 0:o.alias,(c=r.typesBundle)===null||c===void 0||(h=c.chain)===null||h===void 0||(y=h[n])===null||y===void 0?void 0:y.alias,r.typesAlias)})}function getUpgradeVersion(r,e){const t=upgrades$1.find(n=>r.eq(n.genesisHash));return t?[t.versions.reduce((n,s)=>e.gt(s.blockNumber)?s:n,void 0),t.versions.find(n=>e.lte(n.blockNumber))]:[void 0,void 0]}const l$3=logger("api/augment");function logLength(r,e,t=[]){return e.length?` ${e.length} ${r}${t.length?" and":""}`:""}function logValues(r,e){return e.length?`
	${r.padStart(7)}: ${e.sort().join(", ")}`:""}function warn(r,e,[t,n]){(t.length||n.length)&&l$3.warn(`api.${r}: Found${logLength("added",t,n)}${logLength("removed",n)} ${e}:${logValues("added",t)}${logValues("removed",n)}`)}function findSectionExcludes(r,e){return r.filter(t=>!e.includes(t))}function findSectionIncludes(r,e){return r.filter(t=>e.includes(t))}function extractSections(r,e){const t=Object.keys(r),n=Object.keys(e);return[findSectionExcludes(t,n),findSectionExcludes(n,t)]}function findMethodExcludes(r,e){const t=Object.keys(r),n=findSectionIncludes(Object.keys(e),t),s=[];for(let i=0;i<n.length;i++){const a=n[i],o=Object.keys(r[a]),c=Object.keys(e[a]);s.push(...c.filter(h=>!o.includes(h)).map(h=>`${a}.${h}`))}return s}function extractMethods(r,e){return[findMethodExcludes(e,r),findMethodExcludes(r,e)]}function lazySection(r,e){const t=s=>r[s],n=Object.keys(r);for(let s=0;s<n.length;s++){const i=n[s];Object.prototype.hasOwnProperty.call(e,i)||lazyMethod(e,i,t)}}function augmentObject(r,e,t,n=!1){n&&objectClear(t),r&&Object.keys(t).length&&(warn(r,"modules",extractSections(e,t)),warn(r,"calls",extractMethods(e,t)));const s=Object.keys(e);for(let i=0;i<s.length;i++){const a=s[i];t[a]||(t[a]={}),lazySection(e[a],t[a])}return t}function sig({lookup:r},{method:e,section:t},n){return`${t}.${e}(${n.map(s=>r.getTypeDef(s).type).join(", ")})`}function extractStorageArgs(r,e,t){const n=t.filter(s=>!isUndefined(s));if(e.meta.type.isPlain)assert(n.length===0,()=>`${sig(r,e,[])} does not take any arguments, ${n.length} found`);else{const{hashers:s,key:i}=e.meta.type.asMap,a=s.length===1?[i]:r.lookup.getSiType(i).def.asTuple.map(o=>o);assert(n.length===a.length,()=>`${sig(r,e,a)} is a map, requiring ${a.length} arguments, ${n.length} found`)}return[e,n]}var yr;class Events{constructor(){G(this,yr,new EventEmitter)}emit(e,...t){return T(this,yr).emit(e,...t)}on(e,t){return T(this,yr).on(e,t),this}off(e,t){return T(this,yr).removeListener(e,t),this}once(e,t){return T(this,yr).once(e,t),this}}yr=new WeakMap;const PAGE_SIZE_K=1e3,PAGE_SIZE_V=250,l$2=logger("api/init");let instanceCounter=0;function getAtQueryFn(r,{method:e,section:t}){return assertReturn(r.rx.query[t]&&r.rx.query[t][e],()=>`query.${t}.${e} is not available in this version of the metadata`)}var Ot,Ht;class Decorate extends Events{constructor(t,n,s){var i;super();G(this,Ot,void 0);G(this,Ht,void 0);je(this,"__phantom",new BN(0));je(this,"_consts",{});je(this,"_errors",{});je(this,"_events",{});je(this,"_extrinsicType",4);je(this,"_isReady",!1);je(this,"_query",{});je(this,"_rx",{consts:{},query:{},tx:{}});je(this,"_rxDecorateMethod",t=>t);te(this,Ot,`${++instanceCounter}`),te(this,Ht,((i=t.source)===null||i===void 0?void 0:i.registry)||t.registry||new TypeRegistry),this._rx.queryAt=(o,c)=>from(this.at(o,c)).pipe(map(h=>h.rx.query)),this._rx.registry=T(this,Ht);const a=t.source?t.source._rpcCore.provider.clone():t.provider||new WsProvider;this._decorateMethod=s,this._options=t,this._type=n,this._rpcCore=new RpcCore(T(this,Ot),T(this,Ht),a,this._options.rpc),this._isConnected=new BehaviorSubject(this._rpcCore.provider.isConnected),this._rx.hasSubscriptions=this._rpcCore.provider.hasSubscriptions}get registry(){return T(this,Ht)}createType(t,...n){return T(this,Ht).createType(t,...n)}registerTypes(t){t&&T(this,Ht).register(t)}get hasSubscriptions(){return this._rpcCore.provider.hasSubscriptions}get supportMulti(){return this._rpcCore.provider.hasSubscriptions||!!this._rpcCore.state.queryStorageAt}_emptyDecorated(t,n){return{consts:{},errors:{},events:{},query:{},registry:t,rx:{query:{}},tx:createSubmittable(this._type,this._rx,this._decorateMethod,t,n)}}_createDecorated(t,n,s,i){s||(s=this._emptyDecorated(t.registry,i)),(n||!t.decoratedMeta)&&(t.decoratedMeta=expandMetadata(t.registry,t.metadata));const a=this._decorateStorage(t.decoratedMeta,this._decorateMethod,i),o=this._decorateStorage(t.decoratedMeta,this._rxDecorateMethod,i);return augmentObject("consts",t.decoratedMeta.consts,s.consts,n),augmentObject("errors",t.decoratedMeta.errors,s.errors,n),augmentObject("events",t.decoratedMeta.events,s.events,n),augmentObject("query",a,s.query,n),augmentObject("query",o,s.rx.query,n),s.findCall=c=>findCall(t.registry,c),s.findError=c=>findError(t.registry,c),s.queryMulti=i?this._decorateMultiAt(s,this._decorateMethod,i):this._decorateMulti(this._decorateMethod),{decoratedApi:s,decoratedMeta:t.decoratedMeta}}_injectMetadata(t,n=!1){(n||!t.decoratedApi)&&(t.decoratedApi=this._emptyDecorated(t.registry));const{decoratedApi:s,decoratedMeta:i}=this._createDecorated(t,n,t.decoratedApi);this._consts=s.consts,this._errors=s.errors,this._events=s.events,this._query=s.query,this._rx.query=s.rx.query;const a=this._decorateExtrinsics(i,this._decorateMethod),o=this._decorateExtrinsics(i,this._rxDecorateMethod);n||!this._extrinsics?(this._extrinsics=a,this._rx.tx=o):(augmentObject("tx",a,this._extrinsics,!1),augmentObject(null,o,this._rx.tx,!1)),augmentObject(null,i.consts,this._rx.consts,n),this.emit("decorated")}injectMetadata(t,n,s){this._injectMetadata({metadata:t,registry:s||T(this,Ht),specName:T(this,Ht).createType("Text"),specVersion:BN_ZERO},n)}_decorateFunctionMeta(t,n){return n.meta=t.meta,n.method=t.method,n.section=t.section,n.toJSON=t.toJSON,t.callIndex&&(n.callIndex=t.callIndex),n}_filterRpc(t,n){Object.keys(n).length!==0&&(this._rpcCore.addUserInterfaces(n),this._decorateRpc(this._rpcCore,this._decorateMethod,this._rpc),this._decorateRpc(this._rpcCore,this._rxDecorateMethod,this._rx.rpc)),this._filterRpcMethods(t)}_filterRpcMethods(t){const n=t.length!==0,s=[...this._rpcCore.mapping.entries()],i=[];for(let c=0;c<s.length;c++){const[,{alias:h,endpoint:y,method:x,pubsub:E,section:V}]=s[c];i.push(`${V}_${x}`),E&&(i.push(`${V}_${E[1]}`),i.push(`${V}_${E[2]}`)),h&&i.push(...h),y&&i.push(y)}const a=c=>!i.includes(c),o=t.filter(a);o.length&&l$2.warn(`RPC methods not decorated: ${o.join(", ")}`);for(let c=0;c<s.length;c++){const[h,{method:y,section:x}]=s[c];n&&!t.includes(h)&&h!=="rpc_methods"&&this._rpc[x]&&(delete this._rpc[x][y],delete this._rx.rpc[x][y])}}_decorateRpc(t,n,s={}){const i=s,a=(o,c)=>{const h=t[o][c],y=n(h,{methodName:c});return y.meta=h.meta,y.raw=n(h.raw,{methodName:c}),y};for(let o=0;o<t.sections.length;o++){const c=t.sections[o];if(!Object.prototype.hasOwnProperty.call(i,c)){const h=Object.keys(t[c]),y=x=>a(c,x);for(let x=0;x<h.length;x++){const E=h[x];(this.hasSubscriptions||!(E.startsWith("subscribe")||E.startsWith("unsubscribe")))&&(Object.prototype.hasOwnProperty.call(i,c)||(i[c]={}),lazyMethod(i[c],E,y))}}}return i}_decorateMulti(t){return t(n=>(this.hasSubscriptions?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt)(n.map(s=>Array.isArray(s)?s[0].creator.meta.type.isPlain?[s[0].creator]:s[0].creator.meta.type.asMap.hashers.length===1?[s[0].creator,s.slice(1)]:[s[0].creator,...s.slice(1)]:[s.creator])))}_decorateMultiAt(t,n,s){return n(i=>this._rpcCore.state.queryStorageAt(i.map(a=>{if(Array.isArray(a)){const{creator:o}=getAtQueryFn(t,a[0].creator);return o.meta.type.isPlain?[o]:o.meta.type.asMap.hashers.length===1?[o,a.slice(1)]:[o,...a.slice(1)]}return[getAtQueryFn(t,a.creator).creator]}),s))}_decorateExtrinsics({tx:t},n){const s=createSubmittable(this._type,this._rx,n),i=o=>lazyMethods({},Object.keys(t[o]),c=>this._decorateExtrinsicEntry(t[o][c],s)),a=Object.keys(t);for(let o=0;o<a.length;o++)lazyMethod(s,a[o],i);return s}_decorateExtrinsicEntry(t,n){const s=(...i)=>n(t(...i));return s.is=i=>t.is(i),this._decorateFunctionMeta(t,s)}_decorateStorage({query:t,registry:n},s,i){const a={},o=h=>lazyMethods({},Object.keys(t[h]),y=>i?this._decorateStorageEntryAt(n,t[h][y],s,i):this._decorateStorageEntry(t[h][y],s)),c=Object.keys(t);for(let h=0;h<c.length;h++)lazyMethod(a,c[h],o);return a}_decorateStorageEntry(t,n){const s=(o,c)=>extractStorageArgs(c||T(this,Ht),t,o),i=o=>from(this.at(o)).pipe(map(c=>getAtQueryFn(c,t))),a=this._decorateStorageCall(t,n);return a.creator=t,a.at=n((o,...c)=>i(o).pipe(switchMap(h=>h(...c)))),a.hash=n((...o)=>this._rpcCore.state.getStorageHash(s(o))),a.is=o=>o.section===t.section&&o.method===t.method,a.key=(...o)=>u8aToHex(compactStripLength(t(...o))[1]),a.keyPrefix=(...o)=>u8aToHex(t.keyPrefix(...o)),a.range=n((o,...c)=>this._decorateStorageRange(a,c,o)),a.size=n((...o)=>this._rpcCore.state.getStorageSize(s(o))),a.sizeAt=n((o,...c)=>i(o).pipe(switchMap(h=>this._rpcCore.state.getStorageSize(s(c,h.creator.meta.registry),o)))),t.iterKey&&t.meta.type.isMap&&(a.entries=n(memo(T(this,Ot),(...o)=>this._retrieveMapEntries(t,null,o))),a.entriesAt=n(memo(T(this,Ot),(o,...c)=>i(o).pipe(switchMap(h=>this._retrieveMapEntries(h.creator,o,c))))),a.entriesPaged=n(memo(T(this,Ot),o=>this._retrieveMapEntriesPaged(t,void 0,o))),a.keys=n(memo(T(this,Ot),(...o)=>this._retrieveMapKeys(t,null,o))),a.keysAt=n(memo(T(this,Ot),(o,...c)=>i(o).pipe(switchMap(h=>this._retrieveMapKeys(h.creator,o,c))))),a.keysPaged=n(memo(T(this,Ot),o=>this._retrieveMapKeysPaged(t,void 0,o)))),this.supportMulti&&t.meta.type.isMap&&(a.multi=n(o=>t.meta.type.asMap.hashers.length===1?this._retrieveMulti(o.map(c=>[t,[c]])):this._retrieveMulti(o.map(c=>[t,c])))),this._decorateFunctionMeta(t,a)}_decorateStorageEntryAt(t,n,s,i){const a=c=>extractStorageArgs(t,n,c),o=s((...c)=>this._rpcCore.state.getStorage(a(c),i));return o.creator=n,o.hash=s((...c)=>this._rpcCore.state.getStorageHash(a(c),i)),o.is=c=>c.section===n.section&&c.method===n.method,o.key=(...c)=>u8aToHex(compactStripLength(n(n.meta.type.isPlain?void 0:c))[1]),o.keyPrefix=(...c)=>u8aToHex(n.keyPrefix(...c)),o.size=s((...c)=>this._rpcCore.state.getStorageSize(a(c),i)),n.iterKey&&n.meta.type.isMap&&(o.entries=s(memo(T(this,Ot),(...c)=>this._retrieveMapEntries(n,i,c))),o.entriesPaged=s(memo(T(this,Ot),c=>this._retrieveMapEntriesPaged(n,i,c))),o.keys=s(memo(T(this,Ot),(...c)=>this._retrieveMapKeys(n,i,c))),o.keysPaged=s(memo(T(this,Ot),c=>this._retrieveMapKeysPaged(n,i,c)))),this.supportMulti&&n.meta.type.isMap&&(o.multi=s(c=>n.meta.type.asMap.hashers.length===1?this._retrieveMulti(c.map(h=>[n,[h]]),i):this._retrieveMulti(c.map(h=>[n,h]),i))),this._decorateFunctionMeta(n,o)}_decorateStorageCall(t,n){return n((...s)=>this.hasSubscriptions?this._rpcCore.state.subscribeStorage([extractStorageArgs(T(this,Ht),t,s)]).pipe(map(([i])=>i)):this._rpcCore.state.getStorage(extractStorageArgs(T(this,Ht),t,s)),{methodName:t.method,overrideNoSub:(...s)=>this._rpcCore.state.getStorage(extractStorageArgs(T(this,Ht),t,s))})}_decorateStorageRange(t,n,s){const i=unwrapStorageType(T(this,Ht),t.creator.meta.type,t.creator.meta.modifier.isOptional);return this._rpcCore.state.queryStorage([t.key(...n)],...s).pipe(map(a=>a.map(([o,[c]])=>[o,this.createType(i,c.isSome?c.unwrap().toHex():void 0)])))}_retrieveMulti(t,n){if(!t.length)return of([]);const s=this.hasSubscriptions&&!n?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt;return combineLatest(arrayChunk(t,PAGE_SIZE_V).map(i=>n?s(i,n):s(i))).pipe(map(arrayFlatten))}_retrieveMapKeys({iterKey:t,meta:n,method:s,section:i},a,o){assert(t&&n.type.isMap,"keys can only be retrieved on maps");const c=t(...o).toHex(),h=new BehaviorSubject(c),y=a?E=>this._rpcCore.state.getKeysPaged(c,PAGE_SIZE_K,E,a):E=>this._rpcCore.state.getKeysPaged(c,PAGE_SIZE_K,E),x=E=>E.setMeta(n,i,s);return h.pipe(switchMap(y),map(E=>E.map(x)),tap(E=>{setTimeout(()=>{E.length===PAGE_SIZE_K?h.next(E[PAGE_SIZE_K-1].toHex()):h.complete()},0)}),toArray(),map(arrayFlatten))}_retrieveMapKeysPaged({iterKey:t,meta:n,method:s,section:i},a,o){assert(t&&n.type.isMap,"keys can only be retrieved on maps");const c=y=>y.setMeta(n,i,s);return(a?y=>this._rpcCore.state.getKeysPaged(y,o.pageSize,o.startKey||y,a):y=>this._rpcCore.state.getKeysPaged(y,o.pageSize,o.startKey||y))(t(...o.args).toHex()).pipe(map(y=>y.map(c)))}_retrieveMapEntries(t,n,s){const i=n?a=>this._rpcCore.state.queryStorageAt(a,n):a=>this._rpcCore.state.queryStorageAt(a);return this._retrieveMapKeys(t,n,s).pipe(switchMap(a=>a.length?combineLatest(arrayChunk(a,PAGE_SIZE_V).map(i)).pipe(map(o=>arrayFlatten(o).map((c,h)=>[a[h],c]))):of([])))}_retrieveMapEntriesPaged(t,n,s){const i=n?a=>this._rpcCore.state.queryStorageAt(a,n):a=>this._rpcCore.state.queryStorageAt(a);return this._retrieveMapKeysPaged(t,n,s).pipe(switchMap(a=>a.length?i(a).pipe(map(o=>o.map((c,h)=>[a[h],c]))):of([])))}_decorateDeriveRx(t){var n,s,i,a;const o=(n=this._runtimeVersion)===null||n===void 0?void 0:n.specName.toString(),c=getAvailableDerives(T(this,Ot),this._rx,objectSpread({},this._options.derives,(s=this._options.typesBundle)===null||s===void 0||(i=s.spec)===null||i===void 0||(a=i[o||""])===null||a===void 0?void 0:a.derives));return decorateDeriveSections(t,c)}_decorateDerive(t){return decorateDeriveSections(t,this._rx.derive)}}Ot=new WeakMap,Ht=new WeakMap;const KEEPALIVE_INTERVAL=1e4,l$1=logger("api/init");function textToString(r){return r.toString()}var _healthTimer=_classPrivateFieldKey("healthTimer"),_registries=_classPrivateFieldKey("registries"),_updateSub=_classPrivateFieldKey("updateSub"),_waitingRegistries=_classPrivateFieldKey("waitingRegistries"),_onProviderConnect=_classPrivateFieldKey("onProviderConnect"),_onProviderDisconnect=_classPrivateFieldKey("onProviderDisconnect"),_onProviderError=_classPrivateFieldKey("onProviderError");class Init extends Decorate{constructor(e,t,n){super(e,t,n),Object.defineProperty(this,_onProviderError,{value:_onProviderError2}),Object.defineProperty(this,_onProviderDisconnect,{value:_onProviderDisconnect2}),Object.defineProperty(this,_onProviderConnect,{value:_onProviderConnect2}),Object.defineProperty(this,_healthTimer,{writable:!0,value:null}),Object.defineProperty(this,_registries,{writable:!0,value:[]}),Object.defineProperty(this,_updateSub,{writable:!0,value:null}),Object.defineProperty(this,_waitingRegistries,{writable:!0,value:{}}),this.registry.setKnownTypes(e),e.source?_classPrivateFieldBase(this,_registries)[_registries]=_classPrivateFieldBase(e.source,_registries)[_registries]:this.registerTypes(e.types),this._rpc=this._decorateRpc(this._rpcCore,this._decorateMethod),this._rx.rpc=this._decorateRpc(this._rpcCore,this._rxDecorateMethod),this.supportMulti&&(this._queryMulti=this._decorateMulti(this._decorateMethod),this._rx.queryMulti=this._decorateMulti(this._rxDecorateMethod)),this._rx.signer=e.signer,this._rpcCore.setRegistrySwap(s=>this.getBlockRegistry(s)),this._rpcCore.setResolveBlockHash(s=>firstValueFrom(this._rpcCore.chain.getBlockHash(s))),this.hasSubscriptions?(this._rpcCore.provider.on("disconnected",()=>_classPrivateFieldBase(this,_onProviderDisconnect)[_onProviderDisconnect]()),this._rpcCore.provider.on("error",s=>_classPrivateFieldBase(this,_onProviderError)[_onProviderError](s)),this._rpcCore.provider.on("connected",()=>_classPrivateFieldBase(this,_onProviderConnect)[_onProviderConnect]())):l$1.warn("Api will be available in a limited mode since the provider does not support subscriptions"),this._rpcCore.provider.isConnected&&_classPrivateFieldBase(this,_onProviderConnect)[_onProviderConnect]()}_initRegistry(e,t,n,s,i){e.clearCache(),e.setChainProperties(i||this.registry.getChainProperties()),e.setKnownTypes(this._options),e.register(getSpecTypes(e,t,n.specName,n.specVersion)),e.setHasher(getSpecHasher(e,t,n.specName)),e.knownTypes.typesBundle&&(e.knownTypes.typesAlias=getSpecAlias(e,t,n.specName)),e.setMetadata(s,void 0,objectSpread({},getSpecExtensions(e,t,n.specName),this._options.signedExtensions))}_getDefaultRegistry(){return assertReturn(_classPrivateFieldBase(this,_registries)[_registries].find(({isDefault:e})=>e),"Initialization error, cannot find the default registry")}async at(e,t){const n=u8aToU8a(e),s=await this.getBlockRegistry(n,t);return this._createDecorated(s,!0,null,n).decoratedApi}async _createBlockRegistry(e,t,n){const s=new TypeRegistry(e),i=new Metadata(s,await firstValueFrom(this._rpcCore.state.getMetadata.raw(t.parentHash)));this._initRegistry(s,this._runtimeChain,n,i);const a={lastBlockHash:e,metadata:i,registry:s,specName:n.specName,specVersion:n.specVersion};return _classPrivateFieldBase(this,_registries)[_registries].push(a),a}_cacheBlockRegistryProgress(e,t){let n=_classPrivateFieldBase(this,_waitingRegistries)[_waitingRegistries][e];return isUndefined(n)&&(n=_classPrivateFieldBase(this,_waitingRegistries)[_waitingRegistries][e]=new Promise((s,i)=>{t().then(a=>{delete _classPrivateFieldBase(this,_waitingRegistries)[_waitingRegistries][e],s(a)}).catch(a=>{delete _classPrivateFieldBase(this,_waitingRegistries)[_waitingRegistries][e],i(a)})})),n}_getBlockRegistryViaVersion(e,t){if(t){const n=_classPrivateFieldBase(this,_registries)[_registries].find(({specName:s,specVersion:i})=>s.eq(t.specName)&&i.eq(t.specVersion));if(n)return n.lastBlockHash=e,n}return null}async _getBlockRegistryViaHash(e){assert(this._genesisHash&&this._runtimeVersion,"Cannot retrieve data on an uninitialized chain");const t=this.registry.createType("HeaderPartial",this._genesisHash.eq(e)?{number:BN_ZERO,parentHash:this._genesisHash}:await firstValueFrom(this._rpcCore.chain.getHeader.raw(e)));assert(!t.parentHash.isEmpty,"Unable to retrieve header and parent from supplied hash");const[n,s]=getUpgradeVersion(this._genesisHash,t.number),i=this.registry.createType("RuntimeVersionPartial",n&&(s||n.specVersion.eq(this._runtimeVersion.specVersion))?{specName:this._runtimeVersion.specName,specVersion:n.specVersion}:await firstValueFrom(this._rpcCore.state.getRuntimeVersion.raw(t.parentHash)));return this._getBlockRegistryViaVersion(e,i)||await this._cacheBlockRegistryProgress(i.toHex(),()=>this._createBlockRegistry(e,t,i))}async getBlockRegistry(e,t){return _classPrivateFieldBase(this,_registries)[_registries].find(({lastBlockHash:n})=>n&&u8aEq(n,e))||this._getBlockRegistryViaVersion(e,t)||await this._cacheBlockRegistryProgress(u8aToHex(e),()=>this._getBlockRegistryViaHash(e))}async _loadMeta(){var e;return this._isReady?!0:(this._unsubscribeUpdates(),[this._genesisHash,this._runtimeMetadata]=(e=this._options.source)!==null&&e!==void 0&&e._isReady?await this._metaFromSource(this._options.source):await this._metaFromChain(this._options.metadata),this._initFromMeta(this._runtimeMetadata))}async _metaFromSource(e){this._extrinsicType=e.extrinsicVersion,this._runtimeChain=e.runtimeChain,this._runtimeVersion=e.runtimeVersion;const t=Object.keys(e.rpc),n=[];for(let s=0;s<t.length;s++){const i=t[s],a=Object.keys(e.rpc[i]);for(let o=0;o<a.length;o++)n.push(`${i}_${a[o]}`)}return this._filterRpc(n,getSpecRpc(this.registry,e.runtimeChain,e.runtimeVersion.specName)),[e.genesisHash,e.runtimeMetadata]}_subscribeUpdates(){_classPrivateFieldBase(this,_updateSub)[_updateSub]||!this.hasSubscriptions||(_classPrivateFieldBase(this,_updateSub)[_updateSub]=this._rpcCore.state.subscribeRuntimeVersion().pipe(switchMap(e=>{var t;return(t=this._runtimeVersion)!==null&&t!==void 0&&t.specVersion.eq(e.specVersion)?of(!1):this._rpcCore.state.getMetadata().pipe(map(n=>{l$1.log(`Runtime version updated to spec=${e.specVersion.toString()}, tx=${e.transactionVersion.toString()}`),this._runtimeMetadata=n,this._runtimeVersion=e,this._rx.runtimeVersion=e;const s=this._getDefaultRegistry();return s.metadata=n,s.specVersion=e.specVersion,this._initRegistry(this.registry,this._runtimeChain,e,n),this._injectMetadata(s,!0),!0}))})).subscribe())}async _metaFromChain(e){const[t,n,s,i,a,o]=await Promise.all([firstValueFrom(this._rpcCore.chain.getBlockHash(0)),firstValueFrom(this._rpcCore.state.getRuntimeVersion()),firstValueFrom(this._rpcCore.system.chain()),firstValueFrom(this._rpcCore.system.properties()),firstValueFrom(this._rpcCore.rpc.methods()),e?Promise.resolve(null):firstValueFrom(this._rpcCore.state.getMetadata())]);this._runtimeChain=s,this._runtimeVersion=n,this._rx.runtimeVersion=n;const c=`${t.toHex()||"0x"}-${n.specVersion.toString()}`,h=o||(e&&e[c]?new Metadata(this.registry,e[c]):await firstValueFrom(this._rpcCore.state.getMetadata()));return this._initRegistry(this.registry,s,n,h,i),this._filterRpc(a.methods.map(textToString),getSpecRpc(this.registry,s,n.specName)),this._subscribeUpdates(),_classPrivateFieldBase(this,_registries)[_registries].length||_classPrivateFieldBase(this,_registries)[_registries].push({isDefault:!0,metadata:h,registry:this.registry,specName:n.specName,specVersion:n.specVersion}),h.getUniqTypes(this._options.throwOnUnknown||!1),[t,h]}_initFromMeta(e){return this._extrinsicType=e.asLatest.extrinsic.version.toNumber(),this._rx.extrinsicType=this._extrinsicType,this._rx.genesisHash=this._genesisHash,this._rx.runtimeVersion=this._runtimeVersion,this._injectMetadata(this._getDefaultRegistry(),!0),this._rx.derive=this._decorateDeriveRx(this._rxDecorateMethod),this._derive=this._decorateDerive(this._decorateMethod),!0}_subscribeHealth(){_classPrivateFieldBase(this,_healthTimer)[_healthTimer]=this.hasSubscriptions?setInterval(()=>{firstValueFrom(this._rpcCore.system.health()).catch(()=>{})},KEEPALIVE_INTERVAL):null}_unsubscribeHealth(){_classPrivateFieldBase(this,_healthTimer)[_healthTimer]&&(clearInterval(_classPrivateFieldBase(this,_healthTimer)[_healthTimer]),_classPrivateFieldBase(this,_healthTimer)[_healthTimer]=null)}_unsubscribeUpdates(){_classPrivateFieldBase(this,_updateSub)[_updateSub]&&(_classPrivateFieldBase(this,_updateSub)[_updateSub].unsubscribe(),_classPrivateFieldBase(this,_updateSub)[_updateSub]=null)}_unsubscribe(){this._unsubscribeHealth(),this._unsubscribeUpdates()}}async function _onProviderConnect2(){this._isConnected.next(!0),this.emit("connected");try{const r=this._options.initWasm===!1?!0:await cryptoWaitReady(),e=await this._loadMeta();this._subscribeHealth(),e&&!this._isReady&&r&&(this._isReady=!0,this.emit("ready",this))}catch(r){const e=new Error(`FATAL: Unable to initialize the API: ${r.message}`);l$1.error(e),this.emit("error",e)}}function _onProviderDisconnect2(){this._isConnected.next(!1),this._unsubscribeHealth(),this.emit("disconnected")}function _onProviderError2(r){this.emit("error",r)}function assertResult(r){return assertReturn(r,"Api needs to be initialized before using, listen on 'ready'")}class Getters extends Init{get consts(){return assertResult(this._consts)}get derive(){return assertResult(this._derive)}get errors(){return assertResult(this._errors)}get events(){return assertResult(this._events)}get extrinsicVersion(){return this._extrinsicType}get genesisHash(){return assertResult(this._genesisHash)}get isConnected(){return this._isConnected.getValue()}get libraryInfo(){return`${packageInfo.name} v${packageInfo.version}`}get query(){return assertResult(this._query)}get queryMulti(){return assertResult(this._queryMulti)}get rpc(){return assertResult(this._rpc)}get runtimeChain(){return assertResult(this._runtimeChain)}get runtimeMetadata(){return assertResult(this._runtimeMetadata)}get runtimeVersion(){return assertResult(this._runtimeVersion)}get rx(){return assertResult(this._rx)}get type(){return this._type}get tx(){return assertResult(this._extrinsics)}findCall(e){return findCall(this.registry,e)}findError(e){return findError(this.registry,e)}}class ApiBase extends Getters{constructor(e={},t,n){super(e,t,n)}connect(){return this._rpcCore.connect()}disconnect(){return this._unsubscribe(),this._rpcCore.disconnect()}setSigner(e){this._rx.signer=e}async sign(e,t,{signer:n}={}){if(isString(e)){const s=n||this._rx.signer;return assert(s==null?void 0:s.signRaw,"No signer exists with a signRaw interface. You possibly need to pass through an explicit keypair for the origin so it can be used for signing."),(await s.signRaw(objectSpread({type:"bytes"},t,{address:e}))).signature}return u8aToHex(e.sign(u8aToU8a(t.data)))}}var Zr,Yr,Jr,rs,Qr,jn,qn;class Combinator{constructor(e,t){G(this,Zr,!1);G(this,Yr,void 0);G(this,Jr,[]);G(this,rs,[]);G(this,Qr,!0);G(this,jn,[]);G(this,qn,[]);te(this,Yr,t),te(this,qn,e.map(async(n,s)=>{const[i,...a]=Array.isArray(n)?n:[n];return T(this,Jr).push(!1),T(this,rs).push(i),i(...a,this._createCallback(s))}))}_allHasFired(){return T(this,Zr)||te(this,Zr,T(this,Jr).filter(e=>!e).length===0),T(this,Zr)}_createCallback(e){return t=>{T(this,Jr)[e]=!0,T(this,jn)[e]=t,this._triggerUpdate()}}_triggerUpdate(){if(!(!T(this,Qr)||!isFunction$3(T(this,Yr))||!this._allHasFired()))try{T(this,Yr).call(this,T(this,jn))}catch{}}unsubscribe(){!T(this,Qr)||(te(this,Qr,!1),T(this,qn).forEach(async e=>{try{const t=await e;isFunction$3(t)&&t()}catch{}}))}}Zr=new WeakMap,Yr=new WeakMap,Jr=new WeakMap,rs=new WeakMap,Qr=new WeakMap,jn=new WeakMap,qn=new WeakMap;function promiseTracker(r,e){let t=!1;return{reject:n=>(t||(t=!0,e(n)),EMPTY),resolve:n=>{t||(t=!0,r(n))}}}function extractArgs(r,e){const t=r.slice(),n=r.length&&isFunction$3(r[r.length-1])?t.pop():void 0;return assert(!e||isFunction$3(n),"Expected a callback to be passed with subscriptions"),[t,n]}function decorateCall(r,e){return new Promise((t,n)=>{const s=promiseTracker(t,n),i=r(...e).pipe(catchError(a=>s.reject(a))).subscribe(a=>{s.resolve(a),setTimeout(()=>i.unsubscribe(),0)})})}function decorateSubscribe(r,e,t){return new Promise((n,s)=>{const i=promiseTracker(n,s),a=r(...e).pipe(catchError(o=>i.reject(o)),tap(()=>i.resolve(()=>a.unsubscribe()))).subscribe(o=>{setTimeout(()=>t(o),0)})})}function toPromiseMethod(r,e){const t=!!(e&&e.methodName&&e.methodName.includes("subscribe"));return function(...n){const[s,i]=extractArgs(n,t);return i?decorateSubscribe(r,s,i):decorateCall((e==null?void 0:e.overrideNoSub)||r,s)}}var Xn,Wn;const ns=class extends ApiBase{constructor(t){super(t,"promise",toPromiseMethod);G(this,Xn,void 0);G(this,Wn,void 0);te(this,Xn,new Promise(n=>{super.once("ready",()=>n(this))})),te(this,Wn,new Promise((n,s)=>{const i=promiseTracker(n,s);super.once("ready",()=>i.resolve(this)),super.once("error",a=>i.reject(a))}))}static create(t){const n=new ns(t);return t&&t.throwOnConnect?n.isReadyOrError:(n.isReadyOrError.catch(()=>{}),n.isReady)}get isReady(){return T(this,Xn)}get isReadyOrError(){return T(this,Wn)}clone(){return new ns(objectSpread({},this._options,{source:this}))}async combineLatest(t,n){const s=new Combinator(t,n);return()=>{s.unsubscribe()}}};let ApiPromise=ns;Xn=new WeakMap,Wn=new WeakMap;function applyOnEvent(r,e,t){if(r.isInBlock||r.isFinalized){const n=r.filterRecords("contracts",e);if(n.length)return t(n)}}function isOptions(r){return!(isBn(r)||isBigInt(r)||isNumber(r)||isString(r))}function extractOptions(r,e){return[{gasLimit:e.shift(),value:r},e]}class Base{constructor(e,t,n){this.abi=t instanceof Abi?t:new Abi(t,e.registry.getChainProperties()),this.api=e,this._decorateMethod=n,assert(!!(e&&e.isConnected&&e.tx),"Your API has not been initialized correctly and is not connected to a chain"),assert(!!(e.tx.contracts&&Object.keys(e.tx.contracts).length),"You need to connect to a chain with a runtime that supports contracts"),assert(isFunction$3(e.tx.contracts.instantiateWithCode),"You need to connect to a chain with a runtime with a V3 contracts module. The runtime does not expose api.tx.contracts.instantiateWithCode")}get registry(){return this.api.registry}}const EMPTY_SALT=new Uint8Array;function withMeta(r,e){return e.meta=r,e}function createBluePrintTx(r,e){return withMeta(r,(t,...n)=>isOptions(t)?e(t,n):e(...extractOptions(t,n)))}function encodeSalt(r=randomAsU8a()){return r instanceof Bytes?r:r&&r.length?compactAddLength(u8aToU8a(r)):EMPTY_SALT}const MAX_CALL_GAS=new BN(5e12).isub(BN_ONE),ERROR_NO_CALL="Your node does not expose the contracts.call RPC. This is most probably due to a runtime configuration.",l=logger("Contract");function createQuery(r,e){return withMeta(r,(t,n,...s)=>isOptions(n)?e(t,n,s):e(t,...extractOptions(n,s)))}function createTx(r,e){return withMeta(r,(t,...n)=>isOptions(t)?e(t,n):e(...extractOptions(t,n)))}class ContractSubmittableResult extends SubmittableResult{constructor(e,t){super(e),this.contractEvents=t}}var $r,en,tn,ss,is;class Contract extends Base{constructor(t,n,s,i){super(t,n,i);G(this,$r,{});G(this,en,{});G(this,tn,(t,n=!1)=>{const s=bnToBn(t);return s.lte(BN_ZERO)?n?MAX_CALL_GAS:(this.api.consts.system.blockWeights?this.api.consts.system.blockWeights.maxBlock:this.api.consts.system.maximumBlockWeight).muln(64).div(BN_HUNDRED):s});G(this,ss,(t,{gasLimit:n=BN_ZERO,storageDepositLimit:s=null,value:i=BN_ZERO},a)=>{const o=this.api.tx.contracts.call.meta.args.length===5,c=T(this,tn).call(this,n),h=this.abi.findMessage(t).toU8a(a);return(o?this.api.tx.contracts.call(this.address,i,c,s,h):this.api.tx.contracts.call(this.address,i,c,h)).withResultTransform(x=>new ContractSubmittableResult(x,applyOnEvent(x,["ContractEmitted","ContractExecution"],E=>E.map(({event:{data:[,V]}})=>{try{return this.abi.decodeEvent(V)}catch(F){return l.error(`Unable to decode contract event: ${F.message}`),null}}).filter(V=>!!V))))});G(this,is,(t,{gasLimit:n=BN_ZERO,storageDepositLimit:s=null,value:i=BN_ZERO},a)=>{assert(this.hasRpcContractsCall,ERROR_NO_CALL);const o=this.abi.findMessage(t);return{send:this._decorateMethod(c=>{const h=this.api.tx.contracts.call.meta.args.length===5,y=o.toU8a(a),x=h?this.api.rx.rpc.contracts.call({dest:this.address,gasLimit:T(this,tn).call(this,n,!0),inputData:y,origin:c,storageDepositLimit:s,value:i}):this.api.rx.rpc.contracts.call({dest:this.address,gasLimit:T(this,tn).call(this,n,!0),inputData:y,origin:c,value:i}),E=({debugMessage:V,gasConsumed:F,gasRequired:q,result:X,storageDeposit:Y})=>({debugMessage:V,gasConsumed:F,gasRequired:q&&!q.isZero()?q:F,output:X.isOk&&o.returnType?this.abi.registry.createTypeUnsafe(o.returnType.lookupName||o.returnType.type,[X.asOk.data.toU8a(!0)],{isPedantic:!0}):null,result:X,storageDeposit:Y});return x.pipe(map(E))})}});this.address=this.registry.createType("AccountId",s),this.abi.messages.forEach(a=>{isUndefined(T(this,en)[a.method])&&(T(this,en)[a.method]=createTx(a,(o,c)=>T(this,ss).call(this,a,o,c))),isUndefined(T(this,$r)[a.method])&&(T(this,$r)[a.method]=createQuery(a,(o,c,h)=>T(this,is).call(this,a,c,h).send(o)))})}get hasRpcContractsCall(){var t;return isFunction$3((t=this.api.rx.rpc.contracts)===null||t===void 0?void 0:t.call)}get query(){return assert(this.hasRpcContractsCall,ERROR_NO_CALL),T(this,$r)}get tx(){return T(this,en)}}$r=new WeakMap,en=new WeakMap,tn=new WeakMap,ss=new WeakMap,is=new WeakMap;class BlueprintSubmittableResult extends SubmittableResult{constructor(e,t){super(e),this.contract=t}}var rn,as;class Blueprint extends Base{constructor(t,n,s,i){super(t,n,i);G(this,rn,{});G(this,as,(t,{gasLimit:n=BN_ZERO,salt:s,storageDepositLimit:i=null,value:a=BN_ZERO},o)=>{const c=this.api.tx.contracts.instantiate.meta.args.length===6,h=this.abi.findConstructor(t).toU8a(o),y=encodeSalt(s);return(c?this.api.tx.contracts.instantiate(a,n,i,this.codeHash,h,y):this.api.tx.contracts.instantiate(a,n,this.codeHash,h,y)).withResultTransform(E=>new BlueprintSubmittableResult(E,applyOnEvent(E,["Instantiated"],([V])=>new Contract(this.api,this.abi,V.event.data[1],this._decorateMethod))))});this.codeHash=this.registry.createType("Hash",s),this.abi.constructors.forEach(a=>{isUndefined(T(this,rn)[a.method])&&(T(this,rn)[a.method]=createBluePrintTx(a,(o,c)=>T(this,as).call(this,a,o,c)))})}get tx(){return T(this,rn)}}rn=new WeakMap,as=new WeakMap;class CodeSubmittableResult extends SubmittableResult{constructor(e,t,n){super(e),this.blueprint=t,this.contract=n}}var nn,os;class Code extends Base{constructor(t,n,s,i){super(t,n,i);G(this,nn,{});G(this,os,(t,{gasLimit:n=BN_ZERO,salt:s,storageDepositLimit:i=null,value:a=BN_ZERO},o)=>{const c=this.api.tx.contracts.instantiateWithCode.meta.args.length===6,h=compactAddLength(this.code),y=this.abi.findConstructor(t).toU8a(o),x=encodeSalt(s);return(c?this.api.tx.contracts.instantiateWithCode(a,n,i,h,y,x):this.api.tx.contracts.instantiateWithCode(a,n,h,y,x)).withResultTransform(V=>new CodeSubmittableResult(V,...applyOnEvent(V,["CodeStored","Instantiated"],F=>F.reduce(([q,X],{event:Y})=>this.api.events.contracts.Instantiated.is(Y)?[q,new Contract(this.api,this.abi,Y.data[1],this._decorateMethod)]:this.api.events.contracts.CodeStored.is(Y)?[new Blueprint(this.api,this.abi,Y.data[0],this._decorateMethod),X]:[q,X],[]))||[]))});this.code=isWasm(this.abi.info.source.wasm)?this.abi.info.source.wasm:u8aToU8a(s),assert(isWasm(this.code),"No WASM code provided"),this.abi.constructors.forEach(a=>{isUndefined(T(this,nn)[a.method])&&(T(this,nn)[a.method]=createBluePrintTx(a,(o,c)=>T(this,os).call(this,a,o,c)))})}get tx(){return T(this,nn)}}nn=new WeakMap,os=new WeakMap;class BlueprintPromise extends Blueprint{constructor(e,t,n){super(e,t,n,toPromiseMethod)}}class CodePromise extends Code{constructor(e,t,n){super(e,t,n,toPromiseMethod)}}class ContractPromise extends Contract{constructor(e,t,n){super(e,t,n,toPromiseMethod)}}function documentReadyPromise(r){return new Promise(e=>{document.readyState==="complete"?e(r()):window.addEventListener("load",()=>e(r()))})}const win=window;win.injectedWeb3=win.injectedWeb3||{};function web3IsInjected(){return Object.keys(win.injectedWeb3).length!==0}function throwError(r){throw new Error(`${r}: web3Enable(originName) needs to be called before ${r}`)}function mapAccounts(r,e,t){return e.map(({address:n,genesisHash:s,name:i,type:a})=>({address:n.length===42?n:encodeAddress(decodeAddress(n),t),meta:{genesisHash:s,name:i,source:r},type:a}))}web3IsInjected();let web3EnablePromise=null;function getWindowExtensions(r){return Promise.all(Object.entries(win.injectedWeb3).map(([e,{enable:t,version:n}])=>Promise.all([Promise.resolve({name:e,version:n}),t(r).catch(s=>{console.error(`Error initializing ${e}: ${s.message}`)})])))}function web3Enable(r,e=[]){if(!r)throw new Error("You must pass a name for your app to the web3Enable function");const t=e.length?Promise.all(e.map(n=>n().catch(()=>!1))):Promise.resolve([!0]);return web3EnablePromise=documentReadyPromise(()=>t.then(()=>getWindowExtensions(r).then(n=>n.filter(s=>!!s[1]).map(([s,i])=>(i.accounts.subscribe||(i.accounts.subscribe=a=>(i.accounts.get().then(a).catch(console.error),()=>{})),Ce(Ce({},s),i)))).catch(()=>[]).then(n=>{const s=n.map(({name:i,version:a})=>`${i}/${a}`);return web3IsInjected(),console.log(`web3Enable: Enabled ${n.length} extension${n.length!==1?"s":""}: ${s.join(", ")}`),n}))),web3EnablePromise}async function web3Accounts({accountType:r,ss58Format:e}={}){if(!web3EnablePromise)return throwError("web3Accounts");const t=[],n=await web3EnablePromise;(await Promise.all(n.map(async({accounts:a,name:o})=>{try{const c=await a.get();return mapAccounts(o,c.filter(({type:h})=>h&&r?r.includes(h):!0),e)}catch{return[]}}))).forEach(a=>{t.push(...a)});const i=t.map(({address:a})=>a);return console.log(`web3Accounts: Found ${t.length} address${t.length!==1?"es":""}: ${i.join(", ")}`),t}async function web3FromSource(r){if(!web3EnablePromise)return throwError("web3FromSource");const e=await web3EnablePromise,t=r&&e.find(({name:n})=>n===r);if(!t)throw new Error(`web3FromSource: Unable to find an injected ${r}`);return t}async function web3FromAddress(r){if(!web3EnablePromise)return throwError("web3FromAddress");const e=await web3Accounts();let t;if(r){const n=decodeAddress(r);t=e.find(s=>u8aEq(decodeAddress(s.address),n))}if(!t)throw new Error(`web3FromAddress: Unable to find injected ${r}`);return web3FromSource(t.meta.source)}export{ApiPromise as A,BN_ZERO as B,CodePromise as C,BN_MILLION as D,BN_ONE as E,isNull as F,ContractPromise as G,BN_TWO as H,bnToBn as I,extractTime as J,isUndefined as K,formatBalance as L,formatNumber as M,randomAsHex as N,TypeDefInfo as T,WsProvider as W,BN as a,commonjsGlobal as b,commonjsRequire as c,isNumber as d,BN_TEN as e,Bytes as f,getTypeDef as g,compactAddLength as h,isBn as i,BlueprintPromise as j,keyring as k,web3Accounts as l,isTestChain as m,TypeRegistry as n,BN_THOUSAND as o,polkadotIcon as p,web3FromAddress as q,randomAsU8a as r,encodeTypeDef as s,u8aToString as t,u8aToU8a as u,Abi as v,web3Enable as w,isWasm as x,isHex as y,hexToU8a as z};
